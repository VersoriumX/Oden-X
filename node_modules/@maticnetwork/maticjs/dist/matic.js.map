{"version":3,"file":"matic.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,QAAS,GAAIH,GACM,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,GACjB,CATD,CASGK,MAAM,IACT,sCCRAJ,EAAQK,WAuCR,SAAqBC,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CAV,EAAQW,YAiDR,SAAsBL,GACpB,IAAIM,EAcAC,EAbAN,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBO,EAAM,IAAIC,EAVhB,SAAsBT,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBM,CAAYV,EAAKG,EAAUC,IAEzCO,EAAU,EAGVC,EAAMR,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKI,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EACxBD,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,GACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACrCM,EAAUb,EAAIc,WAAWP,EAAI,IAC/BC,EAAIG,KAAcL,GAAO,GAAM,IAC/BE,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,EAmBnB,OAhBwB,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,EAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAmB,IAANL,GAGK,IAApBF,IACFE,EACGO,EAAUb,EAAIc,WAAWP,KAAO,GAChCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACpCM,EAAUb,EAAIc,WAAWP,EAAI,KAAO,EACvCC,EAAIG,KAAcL,GAAO,EAAK,IAC9BE,EAAIG,KAAmB,IAANL,GAGZE,CACT,EA5FAd,EAAQqB,cAkHR,SAAwBC,GAQtB,IAPA,IAAIV,EACAM,EAAMI,EAAMC,OACZC,EAAaN,EAAM,EACnBO,EAAQ,GACRC,EAAiB,MAGZb,EAAI,EAAGc,EAAOT,EAAMM,EAAYX,EAAIc,EAAMd,GAAKa,EACtDD,EAAMG,KAAKC,EAAYP,EAAOT,EAAIA,EAAIa,EAAkBC,EAAOA,EAAQd,EAAIa,IAqB7E,OAjBmB,IAAfF,GACFZ,EAAMU,EAAMJ,EAAM,GAClBO,EAAMG,KACJE,EAAOlB,GAAO,GACdkB,EAAQlB,GAAO,EAAK,IACpB,OAEsB,IAAfY,IACTZ,GAAOU,EAAMJ,EAAM,IAAM,GAAKI,EAAMJ,EAAM,GAC1CO,EAAMG,KACJE,EAAOlB,GAAO,IACdkB,EAAQlB,GAAO,EAAK,IACpBkB,EAAQlB,GAAO,EAAK,IACpB,MAIGa,EAAMM,KAAK,GACpB,EA1IA,IALA,IAAID,EAAS,GACTX,EAAY,GACZJ,EAA4B,oBAAfiB,WAA6BA,WAAaC,MAEvDC,EAAO,mEACFrB,EAAI,EAAsBA,EAAbqB,KAAwBrB,EAC5CiB,EAAOjB,GAAKqB,EAAKrB,GACjBM,EAAUe,EAAKd,WAAWP,IAAMA,EAQlC,SAASL,EAASF,GAChB,IAAIY,EAAMZ,EAAIiB,OAEd,GAAIL,EAAM,EAAI,EACZ,MAAM,IAAIiB,MAAM,kDAKlB,IAAI1B,EAAWH,EAAI8B,QAAQ,KAO3B,OANkB,IAAd3B,IAAiBA,EAAWS,GAMzB,CAACT,EAJcA,IAAaS,EAC/B,EACA,EAAKT,EAAW,EAGtB,CAmEA,SAASoB,EAAaP,EAAOe,EAAOC,GAGlC,IAFA,IAAI1B,EARoB2B,EASpBC,EAAS,GACJ3B,EAAIwB,EAAOxB,EAAIyB,EAAKzB,GAAK,EAChCD,GACIU,EAAMT,IAAM,GAAM,WAClBS,EAAMT,EAAI,IAAM,EAAK,QACP,IAAfS,EAAMT,EAAI,IACb2B,EAAOZ,KAdFE,GADiBS,EAeM3B,IAdT,GAAK,IACxBkB,EAAOS,GAAO,GAAK,IACnBT,EAAOS,GAAO,EAAI,IAClBT,EAAa,GAANS,IAaT,OAAOC,EAAOT,KAAK,GACrB,CAlGAZ,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,yBCnB/B,SAAWnB,EAAQD,GACjB,aAGA,SAASyC,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAIP,MAAMQ,GAAO,mBACnC,CAIA,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAASC,UAAYH,EAAUG,UAC/BJ,EAAKI,UAAY,IAAID,EACrBH,EAAKI,UAAUC,YAAcL,CAC/B,CAIA,SAASM,EAAIC,EAAQC,EAAMC,GACzB,GAAIH,EAAGI,KAAKH,GACV,OAAOA,EAGTI,KAAKC,SAAW,EAChBD,KAAKE,MAAQ,KACbF,KAAKjC,OAAS,EAGdiC,KAAKG,IAAM,KAEI,OAAXP,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTG,KAAKI,MAAMR,GAAU,EAAGC,GAAQ,GAAIC,GAAU,MAElD,CAUA,IAAIO,EATkB,iBAAX5D,EACTA,EAAOD,QAAUmD,EAEjBnD,EAAQmD,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGW,SAAW,GAGd,IAEID,EADoB,oBAAXE,aAAmD,IAAlBA,OAAOF,OACxCE,OAAOF,OAEP,aAEb,CAAE,MAAOG,GACT,CA+HA,SAASC,EAAeC,EAAQC,GAC9B,IAAIC,EAAIF,EAAO9C,WAAW+C,GAE1B,OAAIC,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEX3B,GAAO,EAAO,wBAA0ByB,EAE5C,CAEA,SAASG,EAAcH,EAAQI,EAAYH,GACzC,IAAII,EAAIN,EAAcC,EAAQC,GAI9B,OAHIA,EAAQ,GAAKG,IACfC,GAAKN,EAAcC,EAAQC,EAAQ,IAAM,GAEpCI,CACT,CA6CA,SAASC,EAAWC,EAAKpC,EAAOC,EAAKoC,GAInC,IAHA,IAAIH,EAAI,EACJI,EAAI,EACJzD,EAAM0D,KAAKC,IAAIJ,EAAIlD,OAAQe,GACtBzB,EAAIwB,EAAOxB,EAAIK,EAAKL,IAAK,CAChC,IAAIuD,EAAIK,EAAIrD,WAAWP,GAAK,GAE5B0D,GAAKG,EAIHC,EADEP,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAEN3B,EAAO2B,GAAK,GAAKO,EAAID,EAAK,qBAC1BH,GAAKI,CACP,CACA,OAAOJ,CACT,CA2DA,SAASO,EAAMC,EAAMC,GACnBD,EAAKrB,MAAQsB,EAAItB,MACjBqB,EAAKxD,OAASyD,EAAIzD,OAClBwD,EAAKtB,SAAWuB,EAAIvB,SACpBsB,EAAKpB,IAAMqB,EAAIrB,GACjB,CAqCA,GA9TAR,EAAGI,KAAO,SAAehB,GACvB,OAAIA,aAAeY,GAIJ,OAARZ,GAA+B,iBAARA,GAC5BA,EAAIW,YAAYY,WAAaX,EAAGW,UAAY7B,MAAMgD,QAAQ1C,EAAImB,MAClE,EAEAP,EAAG+B,IAAM,SAAcC,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEAjC,EAAG0B,IAAM,SAAcM,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEAjC,EAAGF,UAAUW,MAAQ,SAAeR,EAAQC,EAAMC,GAChD,GAAsB,iBAAXF,EACT,OAAOI,KAAK8B,YAAYlC,EAAQC,EAAMC,GAGxC,GAAsB,iBAAXF,EACT,OAAOI,KAAK+B,WAAWnC,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETZ,EAAOY,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIhB,EAAQ,EACM,OAFlBe,EAASA,EAAOoC,WAAWC,QAAQ,OAAQ,KAEhC,KACTpD,IACAmB,KAAKC,SAAW,GAGdpB,EAAQe,EAAO7B,SACJ,KAAT8B,EACFG,KAAKkC,UAAUtC,EAAQf,EAAOiB,IAE9BE,KAAKmC,WAAWvC,EAAQC,EAAMhB,GACf,OAAXiB,GACFE,KAAK+B,WAAW/B,KAAKoC,UAAWvC,EAAMC,IAI9C,EAEAH,EAAGF,UAAUqC,YAAc,SAAsBlC,EAAQC,EAAMC,GACzDF,EAAS,IACXI,KAAKC,SAAW,EAChBL,GAAUA,GAERA,EAAS,UACXI,KAAKE,MAAQ,CAAU,SAATN,GACdI,KAAKjC,OAAS,GACL6B,EAAS,kBAClBI,KAAKE,MAAQ,CACF,SAATN,EACCA,EAAS,SAAa,UAEzBI,KAAKjC,OAAS,IAEdkB,EAAOW,EAAS,kBAChBI,KAAKE,MAAQ,CACF,SAATN,EACCA,EAAS,SAAa,SACvB,GAEFI,KAAKjC,OAAS,GAGD,OAAX+B,GAGJE,KAAK+B,WAAW/B,KAAKoC,UAAWvC,EAAMC,EACxC,EAEAH,EAAGF,UAAUsC,WAAa,SAAqBnC,EAAQC,EAAMC,GAG3D,GADAb,EAAgC,iBAAlBW,EAAO7B,QACjB6B,EAAO7B,QAAU,EAGnB,OAFAiC,KAAKE,MAAQ,CAAC,GACdF,KAAKjC,OAAS,EACPiC,KAGTA,KAAKjC,OAASqD,KAAKiB,KAAKzC,EAAO7B,OAAS,GACxCiC,KAAKE,MAAQ,IAAIzB,MAAMuB,KAAKjC,QAC5B,IAAK,IAAIV,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAC/B2C,KAAKE,MAAM7C,GAAK,EAGlB,IAAIiF,EAAGC,EACHC,EAAM,EACV,GAAe,OAAX1C,EACF,IAAKzC,EAAIuC,EAAO7B,OAAS,EAAGuE,EAAI,EAAGjF,GAAK,EAAGA,GAAK,EAC9CkF,EAAI3C,EAAOvC,GAAMuC,EAAOvC,EAAI,IAAM,EAAMuC,EAAOvC,EAAI,IAAM,GACzD2C,KAAKE,MAAMoC,IAAOC,GAAKC,EAAO,SAC9BxC,KAAKE,MAAMoC,EAAI,GAAMC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPF,UAGC,GAAe,OAAXxC,EACT,IAAKzC,EAAI,EAAGiF,EAAI,EAAGjF,EAAIuC,EAAO7B,OAAQV,GAAK,EACzCkF,EAAI3C,EAAOvC,GAAMuC,EAAOvC,EAAI,IAAM,EAAMuC,EAAOvC,EAAI,IAAM,GACzD2C,KAAKE,MAAMoC,IAAOC,GAAKC,EAAO,SAC9BxC,KAAKE,MAAMoC,EAAI,GAAMC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPF,KAIN,OAAOtC,KAAKyC,QACd,EA0BA9C,EAAGF,UAAUyC,UAAY,SAAoBtC,EAAQf,EAAOiB,GAE1DE,KAAKjC,OAASqD,KAAKiB,MAAMzC,EAAO7B,OAASc,GAAS,GAClDmB,KAAKE,MAAQ,IAAIzB,MAAMuB,KAAKjC,QAC5B,IAAK,IAAIV,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAC/B2C,KAAKE,MAAM7C,GAAK,EAIlB,IAGIkF,EAHAC,EAAM,EACNF,EAAI,EAGR,GAAe,OAAXxC,EACF,IAAKzC,EAAIuC,EAAO7B,OAAS,EAAGV,GAAKwB,EAAOxB,GAAK,EAC3CkF,EAAI1B,EAAajB,EAAQf,EAAOxB,IAAMmF,EACtCxC,KAAKE,MAAMoC,IAAU,SAAJC,EACbC,GAAO,IACTA,GAAO,GACPF,GAAK,EACLtC,KAAKE,MAAMoC,IAAMC,IAAM,IAEvBC,GAAO,OAKX,IAAKnF,GADauC,EAAO7B,OAASc,GACX,GAAM,EAAIA,EAAQ,EAAIA,EAAOxB,EAAIuC,EAAO7B,OAAQV,GAAK,EAC1EkF,EAAI1B,EAAajB,EAAQf,EAAOxB,IAAMmF,EACtCxC,KAAKE,MAAMoC,IAAU,SAAJC,EACbC,GAAO,IACTA,GAAO,GACPF,GAAK,EACLtC,KAAKE,MAAMoC,IAAMC,IAAM,IAEvBC,GAAO,EAKbxC,KAAKyC,QACP,EA6BA9C,EAAGF,UAAU0C,WAAa,SAAqBvC,EAAQC,EAAMhB,GAE3DmB,KAAKE,MAAQ,CAAC,GACdF,KAAKjC,OAAS,EAGd,IAAK,IAAI2E,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW9C,EAClE6C,IAEFA,IACAC,EAAWA,EAAU9C,EAAQ,EAO7B,IALA,IAAI+C,EAAQhD,EAAO7B,OAASc,EACxBgE,EAAMD,EAAQF,EACd5D,EAAMsC,KAAKC,IAAIuB,EAAOA,EAAQC,GAAOhE,EAErCiE,EAAO,EACFzF,EAAIwB,EAAOxB,EAAIyB,EAAKzB,GAAKqF,EAChCI,EAAO9B,EAAUpB,EAAQvC,EAAGA,EAAIqF,EAAS7C,GAEzCG,KAAK+C,MAAMJ,GACP3C,KAAKE,MAAM,GAAK4C,EAAO,SACzB9C,KAAKE,MAAM,IAAM4C,EAEjB9C,KAAKgD,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAII,EAAM,EAGV,IAFAH,EAAO9B,EAAUpB,EAAQvC,EAAGuC,EAAO7B,OAAQ8B,GAEtCxC,EAAI,EAAGA,EAAIwF,EAAKxF,IACnB4F,GAAOpD,EAGTG,KAAK+C,MAAME,GACPjD,KAAKE,MAAM,GAAK4C,EAAO,SACzB9C,KAAKE,MAAM,IAAM4C,EAEjB9C,KAAKgD,OAAOF,EAEhB,CAEA9C,KAAKyC,QACP,EAEA9C,EAAGF,UAAUyD,KAAO,SAAe3B,GACjCA,EAAKrB,MAAQ,IAAIzB,MAAMuB,KAAKjC,QAC5B,IAAK,IAAIV,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAC/BkE,EAAKrB,MAAM7C,GAAK2C,KAAKE,MAAM7C,GAE7BkE,EAAKxD,OAASiC,KAAKjC,OACnBwD,EAAKtB,SAAWD,KAAKC,SACrBsB,EAAKpB,IAAMH,KAAKG,GAClB,EASAR,EAAGF,UAAU0D,MAAQ,SAAgB5B,GACnCD,EAAKC,EAAMvB,KACb,EAEAL,EAAGF,UAAU2D,MAAQ,WACnB,IAAIrC,EAAI,IAAIpB,EAAG,MAEf,OADAK,KAAKkD,KAAKnC,GACHA,CACT,EAEApB,EAAGF,UAAU4D,QAAU,SAAkBC,GACvC,KAAOtD,KAAKjC,OAASuF,GACnBtD,KAAKE,MAAMF,KAAKjC,UAAY,EAE9B,OAAOiC,IACT,EAGAL,EAAGF,UAAUgD,OAAS,WACpB,KAAOzC,KAAKjC,OAAS,GAAqC,IAAhCiC,KAAKE,MAAMF,KAAKjC,OAAS,IACjDiC,KAAKjC,SAEP,OAAOiC,KAAKuD,WACd,EAEA5D,EAAGF,UAAU8D,UAAY,WAKvB,OAHoB,IAAhBvD,KAAKjC,QAAkC,IAAlBiC,KAAKE,MAAM,KAClCF,KAAKC,SAAW,GAEXD,IACT,EAIsB,oBAAXwD,QAAgD,mBAAfA,OAAOC,IACjD,IACE9D,EAAGF,UAAU+D,OAAOC,IAAI,+BAAiCC,CAC3D,CAAE,MAAOlD,GACPb,EAAGF,UAAUiE,QAAUA,CACzB,MAEA/D,EAAGF,UAAUiE,QAAUA,EAGzB,SAASA,IACP,OAAQ1D,KAAKG,IAAM,UAAY,SAAWH,KAAKgC,SAAS,IAAM,GAChE,CAgCA,IAAI2B,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UA4mB9D,SAASC,EAAYlH,EAAMmC,EAAKgF,GAC9BA,EAAI9D,SAAWlB,EAAIkB,SAAWrD,EAAKqD,SACnC,IAAIvC,EAAOd,EAAKmB,OAASgB,EAAIhB,OAAU,EACvCgG,EAAIhG,OAASL,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIsG,EAAoB,EAAhBpH,EAAKsD,MAAM,GACfiB,EAAmB,EAAfpC,EAAImB,MAAM,GACda,EAAIiD,EAAI7C,EAER8C,EAAS,SAAJlD,EACLmD,EAASnD,EAAI,SAAa,EAC9BgD,EAAI7D,MAAM,GAAK+D,EAEf,IAAK,IAAIE,EAAI,EAAGA,EAAIzG,EAAKyG,IAAK,CAM5B,IAHA,IAAIC,EAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAOlD,KAAKC,IAAI8C,EAAGpF,EAAIhB,OAAS,GAC3BuE,EAAIlB,KAAKM,IAAI,EAAGyC,EAAIvH,EAAKmB,OAAS,GAAIuE,GAAKgC,EAAMhC,IAAK,CAC7D,IAAIjF,EAAK8G,EAAI7B,EAAK,EAIlB8B,IADArD,GAFAiD,EAAoB,EAAhBpH,EAAKsD,MAAM7C,KACf8D,EAAmB,EAAfpC,EAAImB,MAAMoC,IACF+B,GACG,SAAa,EAC5BA,EAAY,SAAJtD,CACV,CACAgD,EAAI7D,MAAMiE,GAAa,EAARE,EACfH,EAAiB,EAATE,CACV,CAOA,OANc,IAAVF,EACFH,EAAI7D,MAAMiE,GAAa,EAARD,EAEfH,EAAIhG,SAGCgG,EAAItB,QACb,CAhpBA9C,EAAGF,UAAUuC,SAAW,SAAmBnC,EAAM0E,GAI/C,IAAIR,EACJ,GAHAQ,EAAoB,EAAVA,GAAe,EAGZ,MAJb1E,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCkE,EAAM,GAGN,IAFA,IAAIvB,EAAM,EACN0B,EAAQ,EACH7G,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAAK,CACpC,IAAIkF,EAAIvC,KAAKE,MAAM7C,GACfyF,GAA+B,UAArBP,GAAKC,EAAO0B,IAAmBlC,SAAS,IACtDkC,EAAS3B,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACPnF,KAGA0G,EADY,IAAVG,GAAe7G,IAAM2C,KAAKjC,OAAS,EAC/B4F,EAAM,EAAIb,EAAK/E,QAAU+E,EAAOiB,EAEhCjB,EAAOiB,CAEjB,CAIA,IAHc,IAAVG,IACFH,EAAMG,EAAMlC,SAAS,IAAM+B,GAEtBA,EAAIhG,OAASwG,GAAY,GAC9BR,EAAM,IAAMA,EAKd,OAHsB,IAAlB/D,KAAKC,WACP8D,EAAM,IAAMA,GAEPA,CACT,CAEA,GAAIlE,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI2E,EAAYZ,EAAW/D,GAEvB4E,EAAYZ,EAAWhE,GAC3BkE,EAAM,GACN,IAAInD,EAAIZ,KAAKoD,QAEb,IADAxC,EAAEX,SAAW,GACLW,EAAE8D,UAAU,CAClB,IAAI3D,EAAIH,EAAE+D,MAAMF,GAAWzC,SAASnC,GAMlCkE,GALFnD,EAAIA,EAAEgE,MAAMH,IAELC,SAGC3D,EAAIgD,EAFJJ,EAAMa,EAAYzD,EAAEhD,QAAUgD,EAAIgD,CAI5C,CAIA,IAHI/D,KAAK0E,WACPX,EAAM,IAAMA,GAEPA,EAAIhG,OAASwG,GAAY,GAC9BR,EAAM,IAAMA,EAKd,OAHsB,IAAlB/D,KAAKC,WACP8D,EAAM,IAAMA,GAEPA,CACT,CAEA9E,GAAO,EAAO,kCAChB,EAEAU,EAAGF,UAAUoF,SAAW,WACtB,IAAIC,EAAM9E,KAAKE,MAAM,GASrB,OARoB,IAAhBF,KAAKjC,OACP+G,GAAuB,SAAhB9E,KAAKE,MAAM,GACO,IAAhBF,KAAKjC,QAAkC,IAAlBiC,KAAKE,MAAM,GAEzC4E,GAAO,iBAAoC,SAAhB9E,KAAKE,MAAM,GAC7BF,KAAKjC,OAAS,GACvBkB,GAAO,EAAO,8CAEU,IAAlBe,KAAKC,UAAmB6E,EAAMA,CACxC,EAEAnF,EAAGF,UAAUsF,OAAS,WACpB,OAAO/E,KAAKgC,SAAS,GAAI,EAC3B,EAEI3B,IACFV,EAAGF,UAAUuF,SAAW,SAAmBlF,EAAQ/B,GACjD,OAAOiC,KAAKiF,YAAY5E,EAAQP,EAAQ/B,EAC1C,GAGF4B,EAAGF,UAAU2C,QAAU,SAAkBtC,EAAQ/B,GAC/C,OAAOiC,KAAKiF,YAAYxG,MAAOqB,EAAQ/B,EACzC,EASA4B,EAAGF,UAAUwF,YAAc,SAAsBC,EAAWpF,EAAQ/B,GAClEiC,KAAKyC,SAEL,IAAI5F,EAAamD,KAAKnD,aAClBsI,EAAYpH,GAAUqD,KAAKM,IAAI,EAAG7E,GACtCoC,EAAOpC,GAAcsI,EAAW,yCAChClG,EAAOkG,EAAY,EAAG,+BAEtB,IAAIC,EAfS,SAAmBF,EAAW5B,GAC3C,OAAI4B,EAAUG,YACLH,EAAUG,YAAY/B,GAExB,IAAI4B,EAAU5B,EACvB,CAUYgC,CAASJ,EAAWC,GAG9B,OADAnF,KAAK,gBADoB,OAAXF,EAAkB,KAAO,OACRsF,EAAKvI,GAC7BuI,CACT,EAEAzF,EAAGF,UAAU8F,eAAiB,SAAyBH,EAAKvI,GAI1D,IAHA,IAAI2I,EAAW,EACXtB,EAAQ,EAEH7G,EAAI,EAAGoI,EAAQ,EAAGpI,EAAI2C,KAAKjC,OAAQV,IAAK,CAC/C,IAAIyF,EAAQ9C,KAAKE,MAAM7C,IAAMoI,EAASvB,EAEtCkB,EAAII,KAAqB,IAAP1C,EACd0C,EAAWJ,EAAIrH,SACjBqH,EAAII,KAAe1C,GAAQ,EAAK,KAE9B0C,EAAWJ,EAAIrH,SACjBqH,EAAII,KAAe1C,GAAQ,GAAM,KAGrB,IAAV2C,GACED,EAAWJ,EAAIrH,SACjBqH,EAAII,KAAe1C,GAAQ,GAAM,KAEnCoB,EAAQ,EACRuB,EAAQ,IAERvB,EAAQpB,IAAS,GACjB2C,GAAS,EAEb,CAEA,GAAID,EAAWJ,EAAIrH,OAGjB,IAFAqH,EAAII,KAActB,EAEXsB,EAAWJ,EAAIrH,QACpBqH,EAAII,KAAc,CAGxB,EAEA7F,EAAGF,UAAUiG,eAAiB,SAAyBN,EAAKvI,GAI1D,IAHA,IAAI2I,EAAWJ,EAAIrH,OAAS,EACxBmG,EAAQ,EAEH7G,EAAI,EAAGoI,EAAQ,EAAGpI,EAAI2C,KAAKjC,OAAQV,IAAK,CAC/C,IAAIyF,EAAQ9C,KAAKE,MAAM7C,IAAMoI,EAASvB,EAEtCkB,EAAII,KAAqB,IAAP1C,EACd0C,GAAY,IACdJ,EAAII,KAAe1C,GAAQ,EAAK,KAE9B0C,GAAY,IACdJ,EAAII,KAAe1C,GAAQ,GAAM,KAGrB,IAAV2C,GACED,GAAY,IACdJ,EAAII,KAAe1C,GAAQ,GAAM,KAEnCoB,EAAQ,EACRuB,EAAQ,IAERvB,EAAQpB,IAAS,GACjB2C,GAAS,EAEb,CAEA,GAAID,GAAY,EAGd,IAFAJ,EAAII,KAActB,EAEXsB,GAAY,GACjBJ,EAAII,KAAc,CAGxB,EAEIpE,KAAKuE,MACPhG,EAAGF,UAAUmG,WAAa,SAAqBrD,GAC7C,OAAO,GAAKnB,KAAKuE,MAAMpD,EACzB,EAEA5C,EAAGF,UAAUmG,WAAa,SAAqBrD,GAC7C,IAAIsD,EAAItD,EACJxB,EAAI,EAiBR,OAhBI8E,GAAK,OACP9E,GAAK,GACL8E,KAAO,IAELA,GAAK,KACP9E,GAAK,EACL8E,KAAO,GAELA,GAAK,IACP9E,GAAK,EACL8E,KAAO,GAELA,GAAK,IACP9E,GAAK,EACL8E,KAAO,GAEF9E,EAAI8E,CACb,EAGFlG,EAAGF,UAAUqG,UAAY,SAAoBvD,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIsD,EAAItD,EACJxB,EAAI,EAoBR,OAnBS,KAAJ8E,IACH9E,GAAK,GACL8E,KAAO,IAEA,IAAJA,IACH9E,GAAK,EACL8E,KAAO,GAEA,GAAJA,IACH9E,GAAK,EACL8E,KAAO,GAEA,EAAJA,IACH9E,GAAK,EACL8E,KAAO,GAEA,EAAJA,GACH9E,IAEKA,CACT,EAGApB,EAAGF,UAAUsG,UAAY,WACvB,IAAIxD,EAAIvC,KAAKE,MAAMF,KAAKjC,OAAS,GAC7BiI,EAAKhG,KAAK4F,WAAWrD,GACzB,OAA2B,IAAnBvC,KAAKjC,OAAS,GAAUiI,CAClC,EAgBArG,EAAGF,UAAUwG,SAAW,WACtB,GAAIjG,KAAK0E,SAAU,OAAO,EAG1B,IADA,IAAI3D,EAAI,EACC1D,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAAK,CACpC,IAAI8D,EAAInB,KAAK8F,UAAU9F,KAAKE,MAAM7C,IAElC,GADA0D,GAAKI,EACK,KAANA,EAAU,KAChB,CACA,OAAOJ,CACT,EAEApB,EAAGF,UAAU5C,WAAa,WACxB,OAAOuE,KAAKiB,KAAKrC,KAAK+F,YAAc,EACtC,EAEApG,EAAGF,UAAUyG,OAAS,SAAiBC,GACrC,OAAsB,IAAlBnG,KAAKC,SACAD,KAAKoG,MAAMC,MAAMF,GAAOG,MAAM,GAEhCtG,KAAKoD,OACd,EAEAzD,EAAGF,UAAU8G,SAAW,SAAmBJ,GACzC,OAAInG,KAAKwG,MAAML,EAAQ,GACdnG,KAAKyG,KAAKN,GAAOG,MAAM,GAAGI,OAE5B1G,KAAKoD,OACd,EAEAzD,EAAGF,UAAUkH,MAAQ,WACnB,OAAyB,IAAlB3G,KAAKC,QACd,EAGAN,EAAGF,UAAUmH,IAAM,WACjB,OAAO5G,KAAKoD,QAAQsD,MACtB,EAEA/G,EAAGF,UAAUiH,KAAO,WAKlB,OAJK1G,KAAK0E,WACR1E,KAAKC,UAAY,GAGZD,IACT,EAGAL,EAAGF,UAAUoH,KAAO,SAAe9H,GACjC,KAAOiB,KAAKjC,OAASgB,EAAIhB,QACvBiC,KAAKE,MAAMF,KAAKjC,UAAY,EAG9B,IAAK,IAAIV,EAAI,EAAGA,EAAI0B,EAAIhB,OAAQV,IAC9B2C,KAAKE,MAAM7C,GAAK2C,KAAKE,MAAM7C,GAAK0B,EAAImB,MAAM7C,GAG5C,OAAO2C,KAAKyC,QACd,EAEA9C,EAAGF,UAAUqH,IAAM,SAAc/H,GAE/B,OADAE,IAAQe,KAAKC,SAAWlB,EAAIkB,WACrBD,KAAK6G,KAAK9H,EACnB,EAGAY,EAAGF,UAAUsH,GAAK,SAAahI,GAC7B,OAAIiB,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQ0D,IAAI/H,GAC/CA,EAAIqE,QAAQ0D,IAAI9G,KACzB,EAEAL,EAAGF,UAAUuH,IAAM,SAAcjI,GAC/B,OAAIiB,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQyD,KAAK9H,GAChDA,EAAIqE,QAAQyD,KAAK7G,KAC1B,EAGAL,EAAGF,UAAUwH,MAAQ,SAAgBlI,GAEnC,IAAIoC,EAEFA,EADEnB,KAAKjC,OAASgB,EAAIhB,OAChBgB,EAEAiB,KAGN,IAAK,IAAI3C,EAAI,EAAGA,EAAI8D,EAAEpD,OAAQV,IAC5B2C,KAAKE,MAAM7C,GAAK2C,KAAKE,MAAM7C,GAAK0B,EAAImB,MAAM7C,GAK5C,OAFA2C,KAAKjC,OAASoD,EAAEpD,OAETiC,KAAKyC,QACd,EAEA9C,EAAGF,UAAUyH,KAAO,SAAenI,GAEjC,OADAE,IAAQe,KAAKC,SAAWlB,EAAIkB,WACrBD,KAAKiH,MAAMlI,EACpB,EAGAY,EAAGF,UAAU0H,IAAM,SAAcpI,GAC/B,OAAIiB,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQ8D,KAAKnI,GAChDA,EAAIqE,QAAQ8D,KAAKlH,KAC1B,EAEAL,EAAGF,UAAU2H,KAAO,SAAerI,GACjC,OAAIiB,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQ6D,MAAMlI,GACjDA,EAAIqE,QAAQ6D,MAAMjH,KAC3B,EAGAL,EAAGF,UAAU4H,MAAQ,SAAgBtI,GAEnC,IAAIiF,EACA7C,EACAnB,KAAKjC,OAASgB,EAAIhB,QACpBiG,EAAIhE,KACJmB,EAAIpC,IAEJiF,EAAIjF,EACJoC,EAAInB,MAGN,IAAK,IAAI3C,EAAI,EAAGA,EAAI8D,EAAEpD,OAAQV,IAC5B2C,KAAKE,MAAM7C,GAAK2G,EAAE9D,MAAM7C,GAAK8D,EAAEjB,MAAM7C,GAGvC,GAAI2C,OAASgE,EACX,KAAO3G,EAAI2G,EAAEjG,OAAQV,IACnB2C,KAAKE,MAAM7C,GAAK2G,EAAE9D,MAAM7C,GAM5B,OAFA2C,KAAKjC,OAASiG,EAAEjG,OAETiC,KAAKyC,QACd,EAEA9C,EAAGF,UAAU6H,KAAO,SAAevI,GAEjC,OADAE,IAAQe,KAAKC,SAAWlB,EAAIkB,WACrBD,KAAKqH,MAAMtI,EACpB,EAGAY,EAAGF,UAAU8H,IAAM,SAAcxI,GAC/B,OAAIiB,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQkE,KAAKvI,GAChDA,EAAIqE,QAAQkE,KAAKtH,KAC1B,EAEAL,EAAGF,UAAU+H,KAAO,SAAezI,GACjC,OAAIiB,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQiE,MAAMtI,GACjDA,EAAIqE,QAAQiE,MAAMrH,KAC3B,EAGAL,EAAGF,UAAU4G,MAAQ,SAAgBF,GACnClH,EAAwB,iBAAVkH,GAAsBA,GAAS,GAE7C,IAAIsB,EAAsC,EAAxBrG,KAAKiB,KAAK8D,EAAQ,IAChCuB,EAAWvB,EAAQ,GAGvBnG,KAAKqD,QAAQoE,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIpK,EAAI,EAAGA,EAAIoK,EAAapK,IAC/B2C,KAAKE,MAAM7C,GAAsB,UAAhB2C,KAAKE,MAAM7C,GAS9B,OALIqK,EAAW,IACb1H,KAAKE,MAAM7C,IAAM2C,KAAKE,MAAM7C,GAAM,UAAc,GAAKqK,GAIhD1H,KAAKyC,QACd,EAEA9C,EAAGF,UAAUgH,KAAO,SAAeN,GACjC,OAAOnG,KAAKoD,QAAQiD,MAAMF,EAC5B,EAGAxG,EAAGF,UAAUkI,KAAO,SAAeC,EAAK1I,GACtCD,EAAsB,iBAAR2I,GAAoBA,GAAO,GAEzC,IAAIpF,EAAOoF,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA5H,KAAKqD,QAAQb,EAAM,GAGjBxC,KAAKE,MAAMsC,GADTtD,EACgBc,KAAKE,MAAMsC,GAAQ,GAAKqF,EAExB7H,KAAKE,MAAMsC,KAAS,GAAKqF,GAGtC7H,KAAKyC,QACd,EAGA9C,EAAGF,UAAUqI,KAAO,SAAe/I,GACjC,IAAIgC,EAkBAiD,EAAG7C,EAfP,GAAsB,IAAlBnB,KAAKC,UAAmC,IAAjBlB,EAAIkB,SAI7B,OAHAD,KAAKC,SAAW,EAChBc,EAAIf,KAAK+H,KAAKhJ,GACdiB,KAAKC,UAAY,EACVD,KAAKuD,YAGP,GAAsB,IAAlBvD,KAAKC,UAAmC,IAAjBlB,EAAIkB,SAIpC,OAHAlB,EAAIkB,SAAW,EACfc,EAAIf,KAAK+H,KAAKhJ,GACdA,EAAIkB,SAAW,EACRc,EAAEwC,YAKPvD,KAAKjC,OAASgB,EAAIhB,QACpBiG,EAAIhE,KACJmB,EAAIpC,IAEJiF,EAAIjF,EACJoC,EAAInB,MAIN,IADA,IAAIkE,EAAQ,EACH7G,EAAI,EAAGA,EAAI8D,EAAEpD,OAAQV,IAC5B0D,GAAkB,EAAbiD,EAAE9D,MAAM7C,KAAwB,EAAb8D,EAAEjB,MAAM7C,IAAU6G,EAC1ClE,KAAKE,MAAM7C,GAAS,SAAJ0D,EAChBmD,EAAQnD,IAAM,GAEhB,KAAiB,IAAVmD,GAAe7G,EAAI2G,EAAEjG,OAAQV,IAClC0D,GAAkB,EAAbiD,EAAE9D,MAAM7C,IAAU6G,EACvBlE,KAAKE,MAAM7C,GAAS,SAAJ0D,EAChBmD,EAAQnD,IAAM,GAIhB,GADAf,KAAKjC,OAASiG,EAAEjG,OACF,IAAVmG,EACFlE,KAAKE,MAAMF,KAAKjC,QAAUmG,EAC1BlE,KAAKjC,cAEA,GAAIiG,IAAMhE,KACf,KAAO3C,EAAI2G,EAAEjG,OAAQV,IACnB2C,KAAKE,MAAM7C,GAAK2G,EAAE9D,MAAM7C,GAI5B,OAAO2C,IACT,EAGAL,EAAGF,UAAUuI,IAAM,SAAcjJ,GAC/B,IAAIqG,EACJ,OAAqB,IAAjBrG,EAAIkB,UAAoC,IAAlBD,KAAKC,UAC7BlB,EAAIkB,SAAW,EACfmF,EAAMpF,KAAKiI,IAAIlJ,GACfA,EAAIkB,UAAY,EACTmF,GACmB,IAAjBrG,EAAIkB,UAAoC,IAAlBD,KAAKC,UACpCD,KAAKC,SAAW,EAChBmF,EAAMrG,EAAIkJ,IAAIjI,MACdA,KAAKC,SAAW,EACTmF,GAGLpF,KAAKjC,OAASgB,EAAIhB,OAAeiC,KAAKoD,QAAQ0E,KAAK/I,GAEhDA,EAAIqE,QAAQ0E,KAAK9H,KAC1B,EAGAL,EAAGF,UAAUsI,KAAO,SAAehJ,GAEjC,GAAqB,IAAjBA,EAAIkB,SAAgB,CACtBlB,EAAIkB,SAAW,EACf,IAAIc,EAAIf,KAAK8H,KAAK/I,GAElB,OADAA,EAAIkB,SAAW,EACRc,EAAEwC,WAGX,CAAO,GAAsB,IAAlBvD,KAAKC,SAId,OAHAD,KAAKC,SAAW,EAChBD,KAAK8H,KAAK/I,GACViB,KAAKC,SAAW,EACTD,KAAKuD,YAId,IAWIS,EAAG7C,EAXHU,EAAM7B,KAAK6B,IAAI9C,GAGnB,GAAY,IAAR8C,EAIF,OAHA7B,KAAKC,SAAW,EAChBD,KAAKjC,OAAS,EACdiC,KAAKE,MAAM,GAAK,EACTF,KAKL6B,EAAM,GACRmC,EAAIhE,KACJmB,EAAIpC,IAEJiF,EAAIjF,EACJoC,EAAInB,MAIN,IADA,IAAIkE,EAAQ,EACH7G,EAAI,EAAGA,EAAI8D,EAAEpD,OAAQV,IAE5B6G,GADAnD,GAAkB,EAAbiD,EAAE9D,MAAM7C,KAAwB,EAAb8D,EAAEjB,MAAM7C,IAAU6G,IAC7B,GACblE,KAAKE,MAAM7C,GAAS,SAAJ0D,EAElB,KAAiB,IAAVmD,GAAe7G,EAAI2G,EAAEjG,OAAQV,IAElC6G,GADAnD,GAAkB,EAAbiD,EAAE9D,MAAM7C,IAAU6G,IACV,GACblE,KAAKE,MAAM7C,GAAS,SAAJ0D,EAIlB,GAAc,IAAVmD,GAAe7G,EAAI2G,EAAEjG,QAAUiG,IAAMhE,KACvC,KAAO3C,EAAI2G,EAAEjG,OAAQV,IACnB2C,KAAKE,MAAM7C,GAAK2G,EAAE9D,MAAM7C,GAU5B,OANA2C,KAAKjC,OAASqD,KAAKM,IAAI1B,KAAKjC,OAAQV,GAEhC2G,IAAMhE,OACRA,KAAKC,SAAW,GAGXD,KAAKyC,QACd,EAGA9C,EAAGF,UAAUwI,IAAM,SAAclJ,GAC/B,OAAOiB,KAAKoD,QAAQ2E,KAAKhJ,EAC3B,EA8CA,IAAImJ,EAAc,SAAsBtL,EAAMmC,EAAKgF,GACjD,IAIIE,EACAkE,EACAnC,EANAhC,EAAIpH,EAAKsD,MACTiB,EAAIpC,EAAImB,MACRkI,EAAIrE,EAAI7D,MACRU,EAAI,EAIJyH,EAAY,EAAPrE,EAAE,GACPsE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxE,EAAE,GACPyE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3E,EAAE,GACP4E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9E,EAAE,GACP+E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjF,EAAE,GACPkF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpF,EAAE,GACPqF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvF,EAAE,GACPwF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1F,EAAE,GACP2F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7F,EAAE,GACP8F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhG,EAAE,GACPiG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhJ,EAAE,GACPiJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnJ,EAAE,GACPoJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtJ,EAAE,GACPuJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzJ,EAAE,GACP0J,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5J,EAAE,GACP6J,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP/J,EAAE,GACPgK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPlK,EAAE,GACPmK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPrK,EAAE,GACPsK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPxK,EAAE,GACPyK,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP3K,EAAE,GACP4K,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjB/H,EAAI9D,SAAWrD,EAAKqD,SAAWlB,EAAIkB,SACnC8D,EAAIhG,OAAS,GAMb,IAAIkO,IAAQrL,GAJZqD,EAAK7C,KAAK8K,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAM/G,KAAK8K,KAAK5D,EAAK+B,IACRjJ,KAAK8K,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDxJ,IAFAoF,EAAK5E,KAAK8K,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENhI,EAAK7C,KAAK8K,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKzD,EAAK4B,IACRjJ,KAAK8K,KAAKxD,EAAK0B,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQvL,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAKkC,GAAQ,GACvBpJ,KAAK8K,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrD3J,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENlI,EAAK7C,KAAK8K,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKtD,EAAKyB,IACRjJ,KAAK8K,KAAKrD,EAAKuB,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKrD,EAAKwB,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAK+B,GAAQ,GACvBpJ,KAAK8K,KAAKxD,EAAK6B,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQxL,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAKqC,GAAQ,GACvBvJ,KAAK8K,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrD9J,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENnI,EAAK7C,KAAK8K,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKnD,EAAKsB,IACRjJ,KAAK8K,KAAKlD,EAAKoB,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKlD,EAAKqB,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAK4B,GAAQ,GACvBpJ,KAAK8K,KAAKrD,EAAK0B,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAK2B,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAKkC,GAAQ,GACvBvJ,KAAK8K,KAAKxD,EAAKgC,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQzL,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAKwC,GAAQ,GACvB1J,KAAK8K,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrDjK,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENpI,EAAK7C,KAAK8K,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKhD,EAAKmB,IACRjJ,KAAK8K,KAAK/C,EAAKiB,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAK/C,EAAKkB,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAKyB,GAAQ,GACvBpJ,KAAK8K,KAAKlD,EAAKuB,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAKwB,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAK+B,GAAQ,GACvBvJ,KAAK8K,KAAKrD,EAAK6B,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAK8B,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAKqC,GAAQ,GACvB1J,KAAK8K,KAAKxD,EAAKmC,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQ1L,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAK2C,IAAQ,GACvB7J,KAAK8K,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrDpK,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENrI,EAAK7C,KAAK8K,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAK7C,EAAKgB,IACRjJ,KAAK8K,KAAK5C,EAAKc,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAK5C,EAAKe,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAKsB,GAAQ,GACvBpJ,KAAK8K,KAAK/C,EAAKoB,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAKqB,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAK4B,GAAQ,GACvBvJ,KAAK8K,KAAKlD,EAAK0B,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAK2B,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAKkC,GAAQ,GACvB1J,KAAK8K,KAAKrD,EAAKgC,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAKiC,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAKwC,IAAQ,GACvB7J,KAAK8K,KAAKxD,EAAKsC,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQ3L,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAK8C,IAAQ,GACvBhK,KAAK8K,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDvK,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAENtI,EAAK7C,KAAK8K,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAK1C,EAAKa,IACRjJ,KAAK8K,KAAKzC,EAAKW,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKzC,EAAKY,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAKmB,GAAQ,GACvBpJ,KAAK8K,KAAK5C,EAAKiB,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAKkB,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAKyB,GAAQ,GACvBvJ,KAAK8K,KAAK/C,EAAKuB,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAKwB,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAK+B,GAAQ,GACvB1J,KAAK8K,KAAKlD,EAAK6B,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAK8B,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAKqC,IAAQ,GACvB7J,KAAK8K,KAAKrD,EAAKmC,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAKoC,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAK2C,IAAQ,GACvBhK,KAAK8K,KAAKxD,EAAKyC,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQ5L,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAKiD,IAAQ,GACvBnK,KAAK8K,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrD1K,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENvI,EAAK7C,KAAK8K,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKvC,EAAKU,IACRjJ,KAAK8K,KAAKtC,EAAKQ,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKtC,EAAKS,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKgB,GAAQ,GACvBpJ,KAAK8K,KAAKzC,EAAKc,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKe,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAKsB,GAAQ,GACvBvJ,KAAK8K,KAAK5C,EAAKoB,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAKqB,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAK4B,GAAQ,GACvB1J,KAAK8K,KAAK/C,EAAK0B,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAK2B,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAKkC,IAAQ,GACvB7J,KAAK8K,KAAKlD,EAAKgC,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAKiC,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAKwC,IAAQ,GACvBhK,KAAK8K,KAAKrD,EAAKsC,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAKuC,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAK8C,IAAQ,GACvBnK,KAAK8K,KAAKxD,EAAK4C,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQ7L,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAKoD,IAAQ,GACvBtK,KAAK8K,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrD7K,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENxI,EAAK7C,KAAK8K,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKpC,EAAKO,IACRjJ,KAAK8K,KAAKnC,EAAKK,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKnC,EAAKM,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKa,GAAQ,GACvBpJ,KAAK8K,KAAKtC,EAAKW,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKY,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKmB,GAAQ,GACvBvJ,KAAK8K,KAAKzC,EAAKiB,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKkB,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAKyB,GAAQ,GACvB1J,KAAK8K,KAAK5C,EAAKuB,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAKwB,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAK+B,IAAQ,GACvB7J,KAAK8K,KAAK/C,EAAK6B,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAK8B,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAKqC,IAAQ,GACvBhK,KAAK8K,KAAKlD,EAAKmC,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAKoC,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAK2C,IAAQ,GACvBnK,KAAK8K,KAAKrD,EAAKyC,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAK0C,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAKiD,IAAQ,GACvBtK,KAAK8K,KAAKxD,EAAK+C,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQ9L,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAKuD,IAAQ,GACvBzK,KAAK8K,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDhL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENzI,EAAK7C,KAAK8K,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKI,IACRjJ,KAAK8K,KAAKhC,EAAKE,GAAQ,EACpCpE,EAAK5E,KAAK8K,KAAKhC,EAAKG,GACpBpG,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKU,GAAQ,GACvBpJ,KAAK8K,KAAKnC,EAAKQ,GAAQ,EACpCvE,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKS,GAAQ,EAClCvG,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKgB,GAAQ,GACvBvJ,KAAK8K,KAAKtC,EAAKc,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKe,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKsB,GAAQ,GACvB1J,KAAK8K,KAAKzC,EAAKoB,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKqB,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAK4B,IAAQ,GACvB7J,KAAK8K,KAAK5C,EAAK0B,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAK2B,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAKkC,IAAQ,GACvBhK,KAAK8K,KAAK/C,EAAKgC,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAKiC,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAKwC,IAAQ,GACvBnK,KAAK8K,KAAKlD,EAAKsC,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAKuC,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAK8C,IAAQ,GACvBtK,KAAK8K,KAAKrD,EAAK4C,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAK6C,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAKoD,IAAQ,GACvBzK,KAAK8K,KAAKxD,EAAKkD,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQ/L,GAJZqD,EAAMA,EAAK7C,KAAK8K,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK5D,EAAK0D,IAAQ,GACvB5K,KAAK8K,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAEN1I,EAAK7C,KAAK8K,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKO,IACRpJ,KAAK8K,KAAKhC,EAAKK,GAAQ,EACpCvE,EAAK5E,KAAK8K,KAAKhC,EAAKM,GACpBvG,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKa,GAAQ,GACvBvJ,KAAK8K,KAAKnC,EAAKW,GAAQ,EACpC1E,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKY,GAAQ,EAClC1G,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKmB,GAAQ,GACvB1J,KAAK8K,KAAKtC,EAAKiB,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKkB,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKyB,IAAQ,GACvB7J,KAAK8K,KAAKzC,EAAKuB,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKwB,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAK+B,IAAQ,GACvBhK,KAAK8K,KAAK5C,EAAK6B,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAK8B,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAKqC,IAAQ,GACvBnK,KAAK8K,KAAK/C,EAAKmC,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAKoC,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAK2C,IAAQ,GACvBtK,KAAK8K,KAAKlD,EAAKyC,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAK0C,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAKiD,IAAQ,GACvBzK,KAAK8K,KAAKrD,EAAK+C,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAAShM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKzD,EAAKuD,IAAQ,GACvB5K,KAAK8K,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEP3I,EAAK7C,KAAK8K,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKU,IACRvJ,KAAK8K,KAAKhC,EAAKQ,GAAQ,EACpC1E,EAAK5E,KAAK8K,KAAKhC,EAAKS,GACpB1G,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKgB,GAAQ,GACvB1J,KAAK8K,KAAKnC,EAAKc,GAAQ,EACpC7E,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKe,GAAQ,EAClC7G,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKsB,IAAQ,GACvB7J,KAAK8K,KAAKtC,EAAKoB,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKqB,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAK4B,IAAQ,GACvBhK,KAAK8K,KAAKzC,EAAK0B,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAK2B,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAKkC,IAAQ,GACvBnK,KAAK8K,KAAK5C,EAAKgC,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAKiC,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAKwC,IAAQ,GACvBtK,KAAK8K,KAAK/C,EAAKsC,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAKuC,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAK8C,IAAQ,GACvBzK,KAAK8K,KAAKlD,EAAK4C,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAASjM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKtD,EAAKoD,IAAQ,GACvB5K,KAAK8K,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEP5I,EAAK7C,KAAK8K,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKa,IACR1J,KAAK8K,KAAKhC,EAAKW,GAAQ,EACpC7E,EAAK5E,KAAK8K,KAAKhC,EAAKY,GACpB7G,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKmB,IAAQ,GACvB7J,KAAK8K,KAAKnC,EAAKiB,GAAQ,EACpChF,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKkB,IAAQ,EAClChH,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKyB,IAAQ,GACvBhK,KAAK8K,KAAKtC,EAAKuB,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKwB,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAK+B,IAAQ,GACvBnK,KAAK8K,KAAKzC,EAAK6B,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAK8B,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAKqC,IAAQ,GACvBtK,KAAK8K,KAAK5C,EAAKmC,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAKoC,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAK2C,IAAQ,GACvBzK,KAAK8K,KAAK/C,EAAKyC,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAASlM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKnD,EAAKiD,IAAQ,GACvB5K,KAAK8K,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEP7I,EAAK7C,KAAK8K,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKgB,KACR7J,KAAK8K,KAAKhC,EAAKc,GAAQ,EACpChF,EAAK5E,KAAK8K,KAAKhC,EAAKe,IACpBhH,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKsB,IAAQ,GACvBhK,KAAK8K,KAAKnC,EAAKoB,IAAQ,EACpCnF,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKqB,IAAQ,EAClCnH,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAK4B,IAAQ,GACvBnK,KAAK8K,KAAKtC,EAAK0B,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAK2B,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKkC,IAAQ,GACvBtK,KAAK8K,KAAKzC,EAAKgC,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKiC,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAKwC,IAAQ,GACvBzK,KAAK8K,KAAK5C,EAAKsC,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAASnM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKhD,EAAK8C,IAAQ,GACvB5K,KAAK8K,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEP9I,EAAK7C,KAAK8K,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKmB,KACRhK,KAAK8K,KAAKhC,EAAKiB,IAAQ,EACpCnF,EAAK5E,KAAK8K,KAAKhC,EAAKkB,IACpBnH,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKyB,IAAQ,GACvBnK,KAAK8K,KAAKnC,EAAKuB,IAAQ,EACpCtF,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKwB,IAAQ,EAClCtH,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAK+B,IAAQ,GACvBtK,KAAK8K,KAAKtC,EAAK6B,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAK8B,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKqC,IAAQ,GACvBzK,KAAK8K,KAAKzC,EAAKmC,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAASpM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK7C,EAAK2C,IAAQ,GACvB5K,KAAK8K,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEP/I,EAAK7C,KAAK8K,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKsB,KACRnK,KAAK8K,KAAKhC,EAAKoB,IAAQ,EACpCtF,EAAK5E,KAAK8K,KAAKhC,EAAKqB,IACpBtH,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAK4B,IAAQ,GACvBtK,KAAK8K,KAAKnC,EAAK0B,IAAQ,EACpCzF,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAK2B,IAAQ,EAClCzH,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKkC,IAAQ,GACvBzK,KAAK8K,KAAKtC,EAAKgC,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAASrM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAK1C,EAAKwC,IAAQ,GACvB5K,KAAK8K,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPhJ,EAAK7C,KAAK8K,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAKyB,KACRtK,KAAK8K,KAAKhC,EAAKuB,IAAQ,EACpCzF,EAAK5E,KAAK8K,KAAKhC,EAAKwB,IACpBzH,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAK+B,IAAQ,GACvBzK,KAAK8K,KAAKnC,EAAK6B,IAAQ,EACpC5F,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAAStM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKvC,EAAKqC,IAAQ,GACvB5K,KAAK8K,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPjJ,EAAK7C,KAAK8K,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAK4B,KACRzK,KAAK8K,KAAKhC,EAAK0B,IAAQ,EACpC5F,EAAK5E,KAAK8K,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASvM,GAJbqD,EAAMA,EAAK7C,KAAK8K,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAM/G,KAAK8K,KAAKpC,EAAKkC,IAAQ,GACvB5K,KAAK8K,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtDnL,IAFAoF,EAAMA,EAAK5E,KAAK8K,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASxM,GAJbqD,EAAK7C,KAAK8K,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAM/G,KAAK8K,KAAKjC,EAAK+B,KACR5K,KAAK8K,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBAnL,IAFAoF,EAAK5E,KAAK8K,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANxM,IACFwH,EAAE,IAAMxH,EACRmD,EAAIhG,UAECgG,CACT,EAOA,SAASsJ,EAAUzQ,EAAMmC,EAAKgF,GAC5BA,EAAI9D,SAAWlB,EAAIkB,SAAWrD,EAAKqD,SACnC8D,EAAIhG,OAASnB,EAAKmB,OAASgB,EAAIhB,OAI/B,IAFA,IAAImG,EAAQ,EACRoJ,EAAU,EACLnJ,EAAI,EAAGA,EAAIJ,EAAIhG,OAAS,EAAGoG,IAAK,CAGvC,IAAIC,EAASkJ,EACbA,EAAU,EAGV,IAFA,IAAIjJ,EAAgB,SAARH,EACRI,EAAOlD,KAAKC,IAAI8C,EAAGpF,EAAIhB,OAAS,GAC3BuE,EAAIlB,KAAKM,IAAI,EAAGyC,EAAIvH,EAAKmB,OAAS,GAAIuE,GAAKgC,EAAMhC,IAAK,CAC7D,IAAIjF,EAAI8G,EAAI7B,EAGRvB,GAFoB,EAAhBnE,EAAKsD,MAAM7C,KACI,EAAf0B,EAAImB,MAAMoC,IAGd2B,EAAS,SAAJlD,EAGTsD,EAAa,UADbJ,EAAMA,EAAKI,EAAS,GAIpBiJ,IAFAlJ,GAHAA,EAAUA,GAAWrD,EAAI,SAAa,GAAM,IAGxBkD,IAAO,IAAO,KAEZ,GACtBG,GAAU,QACZ,CACAL,EAAI7D,MAAMiE,GAAKE,EACfH,EAAQE,EACRA,EAASkJ,CACX,CAOA,OANc,IAAVpJ,EACFH,EAAI7D,MAAMiE,GAAKD,EAEfH,EAAIhG,SAGCgG,EAAItB,QACb,CAEA,SAAS8K,EAAY3Q,EAAMmC,EAAKgF,GAI9B,OAAOsJ,EAASzQ,EAAMmC,EAAKgF,EAC7B,CAqBA,SAASyJ,EAAMC,EAAGC,GAChB1N,KAAKyN,EAAIA,EACTzN,KAAK0N,EAAIA,CACX,CA1EKtM,KAAK8K,OACRhE,EAAcpE,GAmDhBnE,EAAGF,UAAUkO,MAAQ,SAAgB5O,EAAKgF,GACxC,IACIrG,EAAMsC,KAAKjC,OAASgB,EAAIhB,OAW5B,OAVoB,KAAhBiC,KAAKjC,QAAgC,KAAfgB,EAAIhB,OACtBmK,EAAYlI,KAAMjB,EAAKgF,GACpBrG,EAAM,GACToG,EAAW9D,KAAMjB,EAAKgF,GACnBrG,EAAM,KACT2P,EAASrN,KAAMjB,EAAKgF,GAEpBwJ,EAAWvN,KAAMjB,EAAKgF,EAIhC,EAUAyJ,EAAK/N,UAAUmO,QAAU,SAAkBC,GAGzC,IAFA,IAAIhI,EAAI,IAAIpH,MAAMoP,GACdC,EAAInO,EAAGF,UAAUmG,WAAWiI,GAAK,EAC5BxQ,EAAI,EAAGA,EAAIwQ,EAAGxQ,IACrBwI,EAAExI,GAAK2C,KAAK+N,OAAO1Q,EAAGyQ,EAAGD,GAG3B,OAAOhI,CACT,EAGA2H,EAAK/N,UAAUsO,OAAS,SAAiBN,EAAGK,EAAGD,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIO,EAAK,EACA3Q,EAAI,EAAGA,EAAIyQ,EAAGzQ,IACrB2Q,IAAW,EAAJP,IAAWK,EAAIzQ,EAAI,EAC1BoQ,IAAM,EAGR,OAAOO,CACT,EAIAR,EAAK/N,UAAUwO,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GACpE,IAAK,IAAIxQ,EAAI,EAAGA,EAAIwQ,EAAGxQ,IACrBgR,EAAKhR,GAAK8Q,EAAID,EAAI7Q,IAClBiR,EAAKjR,GAAK+Q,EAAIF,EAAI7Q,GAEtB,EAEAmQ,EAAK/N,UAAU8O,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMT,EAAGK,GACtElO,KAAKiO,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GAExC,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAGW,IAAM,EAM3B,IALA,IAAIV,EAAIU,GAAK,EAETC,EAAQrN,KAAKsN,IAAI,EAAItN,KAAKuN,GAAKb,GAC/Bc,EAAQxN,KAAKyN,IAAI,EAAIzN,KAAKuN,GAAKb,GAE1BgB,EAAI,EAAGA,EAAIjB,EAAGiB,GAAKhB,EAI1B,IAHA,IAAIiB,EAASN,EACTO,EAASJ,EAEJtM,EAAI,EAAGA,EAAIkM,EAAGlM,IAAK,CAC1B,IAAI2M,EAAKZ,EAAKS,EAAIxM,GACd4M,EAAKZ,EAAKQ,EAAIxM,GAEd6M,EAAKd,EAAKS,EAAIxM,EAAIkM,GAClBY,EAAKd,EAAKQ,EAAIxM,EAAIkM,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAIxM,GAAK2M,EAAKE,EACnBb,EAAKQ,EAAIxM,GAAK4M,EAAKE,EAEnBf,EAAKS,EAAIxM,EAAIkM,GAAKS,EAAKE,EACvBb,EAAKQ,EAAIxM,EAAIkM,GAAKU,EAAKE,EAGnB9M,IAAMwL,IACRuB,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,EAEb,CAGN,EAEA7B,EAAK/N,UAAU6P,YAAc,SAAsBC,EAAGC,GACpD,IAAI3B,EAAqB,EAAjBzM,KAAKM,IAAI8N,EAAGD,GAChBE,EAAU,EAAJ5B,EACNxQ,EAAI,EACR,IAAKwQ,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/BxQ,IAGF,OAAO,GAAKA,EAAI,EAAIoS,CACtB,EAEAjC,EAAK/N,UAAUiQ,UAAY,SAAoBvB,EAAKC,EAAKP,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIxQ,EAAI,EAAGA,EAAIwQ,EAAI,EAAGxQ,IAAK,CAC9B,IAAIwI,EAAIsI,EAAI9Q,GAEZ8Q,EAAI9Q,GAAK8Q,EAAIN,EAAIxQ,EAAI,GACrB8Q,EAAIN,EAAIxQ,EAAI,GAAKwI,EAEjBA,EAAIuI,EAAI/Q,GAER+Q,EAAI/Q,IAAM+Q,EAAIP,EAAIxQ,EAAI,GACtB+Q,EAAIP,EAAIxQ,EAAI,IAAMwI,CACpB,CACF,EAEA2H,EAAK/N,UAAUkQ,aAAe,SAAuBC,EAAI/B,GAEvD,IADA,IAAI3J,EAAQ,EACH7G,EAAI,EAAGA,EAAIwQ,EAAI,EAAGxQ,IAAK,CAC9B,IAAIkF,EAAoC,KAAhCnB,KAAKyO,MAAMD,EAAG,EAAIvS,EAAI,GAAKwQ,GACjCzM,KAAKyO,MAAMD,EAAG,EAAIvS,GAAKwQ,GACvB3J,EAEF0L,EAAGvS,GAAS,SAAJkF,EAGN2B,EADE3B,EAAI,SACE,EAEAA,EAAI,SAAY,CAE5B,CAEA,OAAOqN,CACT,EAEApC,EAAK/N,UAAUqQ,WAAa,SAAqBF,EAAIlS,EAAKyQ,EAAKN,GAE7D,IADA,IAAI3J,EAAQ,EACH7G,EAAI,EAAGA,EAAIK,EAAKL,IACvB6G,GAAyB,EAAR0L,EAAGvS,GAEpB8Q,EAAI,EAAI9Q,GAAa,KAAR6G,EAAgBA,KAAkB,GAC/CiK,EAAI,EAAI9Q,EAAI,GAAa,KAAR6G,EAAgBA,KAAkB,GAIrD,IAAK7G,EAAI,EAAIK,EAAKL,EAAIwQ,IAAKxQ,EACzB8Q,EAAI9Q,GAAK,EAGX4B,EAAiB,IAAViF,GACPjF,KAAgB,KAARiF,GACV,EAEAsJ,EAAK/N,UAAUsQ,KAAO,SAAelC,GAEnC,IADA,IAAImC,EAAK,IAAIvR,MAAMoP,GACVxQ,EAAI,EAAGA,EAAIwQ,EAAGxQ,IACrB2S,EAAG3S,GAAK,EAGV,OAAO2S,CACT,EAEAxC,EAAK/N,UAAUwQ,KAAO,SAAexC,EAAGC,EAAG3J,GACzC,IAAI8J,EAAI,EAAI7N,KAAKsP,YAAY7B,EAAE1P,OAAQ2P,EAAE3P,QAErCmQ,EAAMlO,KAAK4N,QAAQC,GAEnBqC,EAAIlQ,KAAK+P,KAAKlC,GAEdM,EAAM,IAAI1P,MAAMoP,GAChBsC,EAAO,IAAI1R,MAAMoP,GACjBuC,EAAO,IAAI3R,MAAMoP,GAEjBwC,EAAO,IAAI5R,MAAMoP,GACjByC,EAAQ,IAAI7R,MAAMoP,GAClB0C,EAAQ,IAAI9R,MAAMoP,GAElB2C,EAAOzM,EAAI7D,MACfsQ,EAAKzS,OAAS8P,EAEd7N,KAAK8P,WAAWrC,EAAEvN,MAAOuN,EAAE1P,OAAQoQ,EAAKN,GACxC7N,KAAK8P,WAAWpC,EAAExN,MAAOwN,EAAE3P,OAAQsS,EAAMxC,GAEzC7N,KAAKuO,UAAUJ,EAAK+B,EAAGC,EAAMC,EAAMvC,EAAGK,GACtClO,KAAKuO,UAAU8B,EAAMH,EAAGI,EAAOC,EAAO1C,EAAGK,GAEzC,IAAK,IAAI7Q,EAAI,EAAGA,EAAIwQ,EAAGxQ,IAAK,CAC1B,IAAIgS,EAAKc,EAAK9S,GAAKiT,EAAMjT,GAAK+S,EAAK/S,GAAKkT,EAAMlT,GAC9C+S,EAAK/S,GAAK8S,EAAK9S,GAAKkT,EAAMlT,GAAK+S,EAAK/S,GAAKiT,EAAMjT,GAC/C8S,EAAK9S,GAAKgS,CACZ,CASA,OAPArP,KAAK0P,UAAUS,EAAMC,EAAMvC,GAC3B7N,KAAKuO,UAAU4B,EAAMC,EAAMI,EAAMN,EAAGrC,EAAGK,GACvClO,KAAK0P,UAAUc,EAAMN,EAAGrC,GACxB7N,KAAK2P,aAAaa,EAAM3C,GAExB9J,EAAI9D,SAAWwN,EAAExN,SAAWyN,EAAEzN,SAC9B8D,EAAIhG,OAAS0P,EAAE1P,OAAS2P,EAAE3P,OACnBgG,EAAItB,QACb,EAGA9C,EAAGF,UAAUyB,IAAM,SAAcnC,GAC/B,IAAIgF,EAAM,IAAIpE,EAAG,MAEjB,OADAoE,EAAI7D,MAAQ,IAAIzB,MAAMuB,KAAKjC,OAASgB,EAAIhB,QACjCiC,KAAK2N,MAAM5O,EAAKgF,EACzB,EAGApE,EAAGF,UAAUgR,KAAO,SAAe1R,GACjC,IAAIgF,EAAM,IAAIpE,EAAG,MAEjB,OADAoE,EAAI7D,MAAQ,IAAIzB,MAAMuB,KAAKjC,OAASgB,EAAIhB,QACjCwP,EAAWvN,KAAMjB,EAAKgF,EAC/B,EAGApE,EAAGF,UAAUyM,KAAO,SAAenN,GACjC,OAAOiB,KAAKoD,QAAQuK,MAAM5O,EAAKiB,KACjC,EAEAL,EAAGF,UAAUsD,MAAQ,SAAgBhE,GACnC,IAAI2R,EAAW3R,EAAM,EACjB2R,IAAU3R,GAAOA,GAErBE,EAAsB,iBAARF,GACdE,EAAOF,EAAM,UAIb,IADA,IAAImF,EAAQ,EACH7G,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAAK,CACpC,IAAIkF,GAAqB,EAAhBvC,KAAKE,MAAM7C,IAAU0B,EAC1BkF,GAAU,SAAJ1B,IAA0B,SAAR2B,GAC5BA,IAAU,GACVA,GAAU3B,EAAI,SAAa,EAE3B2B,GAASD,IAAO,GAChBjE,KAAKE,MAAM7C,GAAU,SAAL4G,CAClB,CAOA,OALc,IAAVC,IACFlE,KAAKE,MAAM7C,GAAK6G,EAChBlE,KAAKjC,UAGA2S,EAAW1Q,KAAK0G,OAAS1G,IAClC,EAEAL,EAAGF,UAAUkR,KAAO,SAAe5R,GACjC,OAAOiB,KAAKoD,QAAQL,MAAMhE,EAC5B,EAGAY,EAAGF,UAAUmR,IAAM,WACjB,OAAO5Q,KAAKkB,IAAIlB,KAClB,EAGAL,EAAGF,UAAUoR,KAAO,WAClB,OAAO7Q,KAAKkM,KAAKlM,KAAKoD,QACxB,EAGAzD,EAAGF,UAAUwD,IAAM,SAAclE,GAC/B,IAAIwD,EA7xCN,SAAqBxD,GAGnB,IAFA,IAAIwD,EAAI,IAAI9D,MAAMM,EAAIgH,aAEb6B,EAAM,EAAGA,EAAMrF,EAAExE,OAAQ6J,IAAO,CACvC,IAAIpF,EAAOoF,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBrF,EAAEqF,GAAQ7I,EAAImB,MAAMsC,KAASqF,EAAQ,CACvC,CAEA,OAAOtF,CACT,CAkxCUuO,CAAW/R,GACnB,GAAiB,IAAbwD,EAAExE,OAAc,OAAO,IAAI4B,EAAG,GAIlC,IADA,IAAIyF,EAAMpF,KACD3C,EAAI,EAAGA,EAAIkF,EAAExE,QACP,IAATwE,EAAElF,GADsBA,IAAK+H,EAAMA,EAAIwL,OAI7C,KAAMvT,EAAIkF,EAAExE,OACV,IAAK,IAAIgT,EAAI3L,EAAIwL,MAAOvT,EAAIkF,EAAExE,OAAQV,IAAK0T,EAAIA,EAAEH,MAClC,IAATrO,EAAElF,KAEN+H,EAAMA,EAAIlE,IAAI6P,IAIlB,OAAO3L,CACT,EAGAzF,EAAGF,UAAUuR,OAAS,SAAiBC,GACrChS,EAAuB,iBAATgS,GAAqBA,GAAQ,GAC3C,IAGI5T,EAHA0D,EAAIkQ,EAAO,GACXzC,GAAKyC,EAAOlQ,GAAK,GACjBmQ,EAAa,WAAe,GAAKnQ,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAImD,EAAQ,EAEZ,IAAK7G,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAAK,CAChC,IAAI8T,EAAWnR,KAAKE,MAAM7C,GAAK6T,EAC3BtQ,GAAsB,EAAhBZ,KAAKE,MAAM7C,IAAU8T,GAAapQ,EAC5Cf,KAAKE,MAAM7C,GAAKuD,EAAIsD,EACpBA,EAAQiN,IAAc,GAAKpQ,CAC7B,CAEImD,IACFlE,KAAKE,MAAM7C,GAAK6G,EAChBlE,KAAKjC,SAET,CAEA,GAAU,IAANyQ,EAAS,CACX,IAAKnR,EAAI2C,KAAKjC,OAAS,EAAGV,GAAK,EAAGA,IAChC2C,KAAKE,MAAM7C,EAAImR,GAAKxO,KAAKE,MAAM7C,GAGjC,IAAKA,EAAI,EAAGA,EAAImR,EAAGnR,IACjB2C,KAAKE,MAAM7C,GAAK,EAGlB2C,KAAKjC,QAAUyQ,CACjB,CAEA,OAAOxO,KAAKyC,QACd,EAEA9C,EAAGF,UAAU2R,MAAQ,SAAgBH,GAGnC,OADAhS,EAAyB,IAAlBe,KAAKC,UACLD,KAAKgR,OAAOC,EACrB,EAKAtR,EAAGF,UAAU4R,OAAS,SAAiBJ,EAAMK,EAAMC,GAEjD,IAAIC,EADJvS,EAAuB,iBAATgS,GAAqBA,GAAQ,GAGzCO,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIvQ,EAAIkQ,EAAO,GACXzC,EAAIpN,KAAKC,KAAK4P,EAAOlQ,GAAK,GAAIf,KAAKjC,QACnC0T,EAAO,SAAc,WAAc1Q,GAAMA,EACzC2Q,EAAcH,EAMlB,GAJAC,GAAKhD,EACLgD,EAAIpQ,KAAKM,IAAI,EAAG8P,GAGZE,EAAa,CACf,IAAK,IAAIrU,EAAI,EAAGA,EAAImR,EAAGnR,IACrBqU,EAAYxR,MAAM7C,GAAK2C,KAAKE,MAAM7C,GAEpCqU,EAAY3T,OAASyQ,CACvB,CAEA,GAAU,IAANA,QAEG,GAAIxO,KAAKjC,OAASyQ,EAEvB,IADAxO,KAAKjC,QAAUyQ,EACVnR,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAC3B2C,KAAKE,MAAM7C,GAAK2C,KAAKE,MAAM7C,EAAImR,QAGjCxO,KAAKE,MAAM,GAAK,EAChBF,KAAKjC,OAAS,EAGhB,IAAImG,EAAQ,EACZ,IAAK7G,EAAI2C,KAAKjC,OAAS,EAAGV,GAAK,IAAgB,IAAV6G,GAAe7G,GAAKmU,GAAInU,IAAK,CAChE,IAAIyF,EAAuB,EAAhB9C,KAAKE,MAAM7C,GACtB2C,KAAKE,MAAM7C,GAAM6G,GAAU,GAAKnD,EAAO+B,IAAS/B,EAChDmD,EAAQpB,EAAO2O,CACjB,CAYA,OATIC,GAAyB,IAAVxN,IACjBwN,EAAYxR,MAAMwR,EAAY3T,UAAYmG,GAGxB,IAAhBlE,KAAKjC,SACPiC,KAAKE,MAAM,GAAK,EAChBF,KAAKjC,OAAS,GAGTiC,KAAKyC,QACd,EAEA9C,EAAGF,UAAUkS,MAAQ,SAAgBV,EAAMK,EAAMC,GAG/C,OADAtS,EAAyB,IAAlBe,KAAKC,UACLD,KAAKqR,OAAOJ,EAAMK,EAAMC,EACjC,EAGA5R,EAAGF,UAAUmS,KAAO,SAAeX,GACjC,OAAOjR,KAAKoD,QAAQgO,MAAMH,EAC5B,EAEAtR,EAAGF,UAAUoS,MAAQ,SAAgBZ,GACnC,OAAOjR,KAAKoD,QAAQ4N,OAAOC,EAC7B,EAGAtR,EAAGF,UAAUqS,KAAO,SAAeb,GACjC,OAAOjR,KAAKoD,QAAQuO,MAAMV,EAC5B,EAEAtR,EAAGF,UAAUsS,MAAQ,SAAgBd,GACnC,OAAOjR,KAAKoD,QAAQiO,OAAOJ,EAC7B,EAGAtR,EAAGF,UAAU+G,MAAQ,SAAgBoB,GACnC3I,EAAsB,iBAAR2I,GAAoBA,GAAO,GACzC,IAAI7G,EAAI6G,EAAM,GACV4G,GAAK5G,EAAM7G,GAAK,GAChBgQ,EAAI,GAAKhQ,EAGb,QAAIf,KAAKjC,QAAUyQ,KAGXxO,KAAKE,MAAMsO,GAELuC,GAChB,EAGApR,EAAGF,UAAUuS,OAAS,SAAiBf,GACrChS,EAAuB,iBAATgS,GAAqBA,GAAQ,GAC3C,IAAIlQ,EAAIkQ,EAAO,GACXzC,GAAKyC,EAAOlQ,GAAK,GAIrB,GAFA9B,EAAyB,IAAlBe,KAAKC,SAAgB,2CAExBD,KAAKjC,QAAUyQ,EACjB,OAAOxO,KAQT,GALU,IAANe,GACFyN,IAEFxO,KAAKjC,OAASqD,KAAKC,IAAImN,EAAGxO,KAAKjC,QAErB,IAANgD,EAAS,CACX,IAAI0Q,EAAO,SAAc,WAAc1Q,GAAMA,EAC7Cf,KAAKE,MAAMF,KAAKjC,OAAS,IAAM0T,CACjC,CAEA,OAAOzR,KAAKyC,QACd,EAGA9C,EAAGF,UAAUwS,MAAQ,SAAgBhB,GACnC,OAAOjR,KAAKoD,QAAQ4O,OAAOf,EAC7B,EAGAtR,EAAGF,UAAU6G,MAAQ,SAAgBvH,GAGnC,OAFAE,EAAsB,iBAARF,GACdE,EAAOF,EAAM,UACTA,EAAM,EAAUiB,KAAKkS,OAAOnT,GAGV,IAAlBiB,KAAKC,SACa,IAAhBD,KAAKjC,SAAiC,EAAhBiC,KAAKE,MAAM,KAAWnB,GAC9CiB,KAAKE,MAAM,GAAKnB,GAAuB,EAAhBiB,KAAKE,MAAM,IAClCF,KAAKC,SAAW,EACTD,OAGTA,KAAKC,SAAW,EAChBD,KAAKkS,MAAMnT,GACXiB,KAAKC,SAAW,EACTD,MAIFA,KAAKgD,OAAOjE,EACrB,EAEAY,EAAGF,UAAUuD,OAAS,SAAiBjE,GACrCiB,KAAKE,MAAM,IAAMnB,EAGjB,IAAK,IAAI1B,EAAI,EAAGA,EAAI2C,KAAKjC,QAAUiC,KAAKE,MAAM7C,IAAM,SAAWA,IAC7D2C,KAAKE,MAAM7C,IAAM,SACbA,IAAM2C,KAAKjC,OAAS,EACtBiC,KAAKE,MAAM7C,EAAI,GAAK,EAEpB2C,KAAKE,MAAM7C,EAAI,KAKnB,OAFA2C,KAAKjC,OAASqD,KAAKM,IAAI1B,KAAKjC,OAAQV,EAAI,GAEjC2C,IACT,EAGAL,EAAGF,UAAUyS,MAAQ,SAAgBnT,GAGnC,GAFAE,EAAsB,iBAARF,GACdE,EAAOF,EAAM,UACTA,EAAM,EAAG,OAAOiB,KAAKsG,OAAOvH,GAEhC,GAAsB,IAAlBiB,KAAKC,SAIP,OAHAD,KAAKC,SAAW,EAChBD,KAAKsG,MAAMvH,GACXiB,KAAKC,SAAW,EACTD,KAKT,GAFAA,KAAKE,MAAM,IAAMnB,EAEG,IAAhBiB,KAAKjC,QAAgBiC,KAAKE,MAAM,GAAK,EACvCF,KAAKE,MAAM,IAAMF,KAAKE,MAAM,GAC5BF,KAAKC,SAAW,OAGhB,IAAK,IAAI5C,EAAI,EAAGA,EAAI2C,KAAKjC,QAAUiC,KAAKE,MAAM7C,GAAK,EAAGA,IACpD2C,KAAKE,MAAM7C,IAAM,SACjB2C,KAAKE,MAAM7C,EAAI,IAAM,EAIzB,OAAO2C,KAAKyC,QACd,EAEA9C,EAAGF,UAAU0S,KAAO,SAAepT,GACjC,OAAOiB,KAAKoD,QAAQkD,MAAMvH,EAC5B,EAEAY,EAAGF,UAAU2S,KAAO,SAAerT,GACjC,OAAOiB,KAAKoD,QAAQ8O,MAAMnT,EAC5B,EAEAY,EAAGF,UAAU4S,KAAO,WAGlB,OAFArS,KAAKC,SAAW,EAETD,IACT,EAEAL,EAAGF,UAAU2G,IAAM,WACjB,OAAOpG,KAAKoD,QAAQiP,MACtB,EAEA1S,EAAGF,UAAU6S,aAAe,SAAuBvT,EAAKmC,EAAKuE,GAC3D,IACIpI,EAIAkF,EALA7E,EAAMqB,EAAIhB,OAAS0H,EAGvBzF,KAAKqD,QAAQ3F,GAGb,IAAIwG,EAAQ,EACZ,IAAK7G,EAAI,EAAGA,EAAI0B,EAAIhB,OAAQV,IAAK,CAC/BkF,GAA6B,EAAxBvC,KAAKE,MAAM7C,EAAIoI,IAAcvB,EAClC,IAAItC,GAAwB,EAAf7C,EAAImB,MAAM7C,IAAU6D,EAEjCgD,IADA3B,GAAa,SAARX,IACS,KAAQA,EAAQ,SAAa,GAC3C5B,KAAKE,MAAM7C,EAAIoI,GAAa,SAAJlD,CAC1B,CACA,KAAOlF,EAAI2C,KAAKjC,OAAS0H,EAAOpI,IAE9B6G,GADA3B,GAA6B,EAAxBvC,KAAKE,MAAM7C,EAAIoI,IAAcvB,IACrB,GACblE,KAAKE,MAAM7C,EAAIoI,GAAa,SAAJlD,EAG1B,GAAc,IAAV2B,EAAa,OAAOlE,KAAKyC,SAK7B,IAFAxD,GAAkB,IAAXiF,GACPA,EAAQ,EACH7G,EAAI,EAAGA,EAAI2C,KAAKjC,OAAQV,IAE3B6G,GADA3B,IAAsB,EAAhBvC,KAAKE,MAAM7C,IAAU6G,IACd,GACblE,KAAKE,MAAM7C,GAAS,SAAJkF,EAIlB,OAFAvC,KAAKC,SAAW,EAETD,KAAKyC,QACd,EAEA9C,EAAGF,UAAU8S,SAAW,SAAmBxT,EAAKyT,GAC9C,IAAI/M,GAAQzF,KAAKjC,OAASgB,EAAIhB,QAE1BiG,EAAIhE,KAAKoD,QACTjC,EAAIpC,EAGJ0T,EAA8B,EAAxBtR,EAAEjB,MAAMiB,EAAEpD,OAAS,GAGf,IADd0H,EAAQ,GADMzF,KAAK4F,WAAW6M,MAG5BtR,EAAIA,EAAE0Q,MAAMpM,GACZzB,EAAEgN,OAAOvL,GACTgN,EAA8B,EAAxBtR,EAAEjB,MAAMiB,EAAEpD,OAAS,IAI3B,IACIgT,EADAvB,EAAIxL,EAAEjG,OAASoD,EAAEpD,OAGrB,GAAa,QAATyU,EAAgB,EAClBzB,EAAI,IAAIpR,EAAG,OACT5B,OAASyR,EAAI,EACfuB,EAAE7Q,MAAQ,IAAIzB,MAAMsS,EAAEhT,QACtB,IAAK,IAAIV,EAAI,EAAGA,EAAI0T,EAAEhT,OAAQV,IAC5B0T,EAAE7Q,MAAM7C,GAAK,CAEjB,CAEA,IAAIqV,EAAO1O,EAAEZ,QAAQkP,aAAanR,EAAG,EAAGqO,GAClB,IAAlBkD,EAAKzS,WACP+D,EAAI0O,EACA3B,IACFA,EAAE7Q,MAAMsP,GAAK,IAIjB,IAAK,IAAIlN,EAAIkN,EAAI,EAAGlN,GAAK,EAAGA,IAAK,CAC/B,IAAIqQ,EAAmC,UAAL,EAAxB3O,EAAE9D,MAAMiB,EAAEpD,OAASuE,KACE,EAA5B0B,EAAE9D,MAAMiB,EAAEpD,OAASuE,EAAI,IAO1B,IAHAqQ,EAAKvR,KAAKC,IAAKsR,EAAKF,EAAO,EAAG,UAE9BzO,EAAEsO,aAAanR,EAAGwR,EAAIrQ,GACA,IAAf0B,EAAE/D,UACP0S,IACA3O,EAAE/D,SAAW,EACb+D,EAAEsO,aAAanR,EAAG,EAAGmB,GAChB0B,EAAEU,WACLV,EAAE/D,UAAY,GAGd8Q,IACFA,EAAE7Q,MAAMoC,GAAKqQ,EAEjB,CAWA,OAVI5B,GACFA,EAAEtO,SAEJuB,EAAEvB,SAGW,QAAT+P,GAA4B,IAAV/M,GACpBzB,EAAEqN,OAAO5L,GAGJ,CACLmN,IAAK7B,GAAK,KACVlO,IAAKmB,EAET,EAMArE,EAAGF,UAAUoT,OAAS,SAAiB9T,EAAKyT,EAAMM,GAGhD,OAFA7T,GAAQF,EAAI2F,UAER1E,KAAK0E,SACA,CACLkO,IAAK,IAAIjT,EAAG,GACZkD,IAAK,IAAIlD,EAAG,IAKM,IAAlBK,KAAKC,UAAmC,IAAjBlB,EAAIkB,UAC7BmF,EAAMpF,KAAK4G,MAAMiM,OAAO9T,EAAKyT,GAEhB,QAATA,IACFI,EAAMxN,EAAIwN,IAAIhM,OAGH,QAAT4L,IACF3P,EAAMuC,EAAIvC,IAAI+D,MACVkM,GAA6B,IAAjBjQ,EAAI5C,UAClB4C,EAAIiF,KAAK/I,IAIN,CACL6T,IAAKA,EACL/P,IAAKA,IAIa,IAAlB7C,KAAKC,UAAmC,IAAjBlB,EAAIkB,UAC7BmF,EAAMpF,KAAK6S,OAAO9T,EAAI6H,MAAO4L,GAEhB,QAATA,IACFI,EAAMxN,EAAIwN,IAAIhM,OAGT,CACLgM,IAAKA,EACL/P,IAAKuC,EAAIvC,MAIR7C,KAAKC,SAAWlB,EAAIkB,UACvBmF,EAAMpF,KAAK4G,MAAMiM,OAAO9T,EAAI6H,MAAO4L,GAEtB,QAATA,IACF3P,EAAMuC,EAAIvC,IAAI+D,MACVkM,GAA6B,IAAjBjQ,EAAI5C,UAClB4C,EAAIkF,KAAKhJ,IAIN,CACL6T,IAAKxN,EAAIwN,IACT/P,IAAKA,IAOL9D,EAAIhB,OAASiC,KAAKjC,QAAUiC,KAAK6B,IAAI9C,GAAO,EACvC,CACL6T,IAAK,IAAIjT,EAAG,GACZkD,IAAK7C,MAKU,IAAfjB,EAAIhB,OACO,QAATyU,EACK,CACLI,IAAK5S,KAAK+S,KAAKhU,EAAImB,MAAM,IACzB2C,IAAK,MAII,QAAT2P,EACK,CACLI,IAAK,KACL/P,IAAK,IAAIlD,EAAGK,KAAK2E,MAAM5F,EAAImB,MAAM,MAI9B,CACL0S,IAAK5S,KAAK+S,KAAKhU,EAAImB,MAAM,IACzB2C,IAAK,IAAIlD,EAAGK,KAAK2E,MAAM5F,EAAImB,MAAM,MAI9BF,KAAKuS,SAASxT,EAAKyT,GAlF1B,IAAII,EAAK/P,EAAKuC,CAmFhB,EAGAzF,EAAGF,UAAUmT,IAAM,SAAc7T,GAC/B,OAAOiB,KAAK6S,OAAO9T,EAAK,OAAO,GAAO6T,GACxC,EAGAjT,EAAGF,UAAUoD,IAAM,SAAc9D,GAC/B,OAAOiB,KAAK6S,OAAO9T,EAAK,OAAO,GAAO8D,GACxC,EAEAlD,EAAGF,UAAUuT,KAAO,SAAejU,GACjC,OAAOiB,KAAK6S,OAAO9T,EAAK,OAAO,GAAM8D,GACvC,EAGAlD,EAAGF,UAAUwT,SAAW,SAAmBlU,GACzC,IAAImU,EAAKlT,KAAK6S,OAAO9T,GAGrB,GAAImU,EAAGrQ,IAAI6B,SAAU,OAAOwO,EAAGN,IAE/B,IAAI/P,EAA0B,IAApBqQ,EAAGN,IAAI3S,SAAiBiT,EAAGrQ,IAAIkF,KAAKhJ,GAAOmU,EAAGrQ,IAEpDsQ,EAAOpU,EAAIgT,MAAM,GACjBqB,EAAKrU,EAAIsU,MAAM,GACfxR,EAAMgB,EAAIhB,IAAIsR,GAGlB,OAAItR,EAAM,GAAa,IAAPuR,GAAoB,IAARvR,EAAmBqR,EAAGN,IAGvB,IAApBM,EAAGN,IAAI3S,SAAiBiT,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAItM,MAAM,EAChE,EAEA3G,EAAGF,UAAUkF,MAAQ,SAAgB5F,GACnC,IAAI2R,EAAW3R,EAAM,EACjB2R,IAAU3R,GAAOA,GAErBE,EAAOF,GAAO,UAId,IAHA,IAAI+P,GAAK,GAAK,IAAM/P,EAEhBuU,EAAM,EACDjW,EAAI2C,KAAKjC,OAAS,EAAGV,GAAK,EAAGA,IACpCiW,GAAOxE,EAAIwE,GAAuB,EAAhBtT,KAAKE,MAAM7C,KAAW0B,EAG1C,OAAO2R,GAAY4C,EAAMA,CAC3B,EAGA3T,EAAGF,UAAU8T,KAAO,SAAexU,GACjC,OAAOiB,KAAK2E,MAAM5F,EACpB,EAGAY,EAAGF,UAAUmF,MAAQ,SAAgB7F,GACnC,IAAI2R,EAAW3R,EAAM,EACjB2R,IAAU3R,GAAOA,GAErBE,EAAOF,GAAO,UAGd,IADA,IAAImF,EAAQ,EACH7G,EAAI2C,KAAKjC,OAAS,EAAGV,GAAK,EAAGA,IAAK,CACzC,IAAIkF,GAAqB,EAAhBvC,KAAKE,MAAM7C,IAAkB,SAAR6G,EAC9BlE,KAAKE,MAAM7C,GAAMkF,EAAIxD,EAAO,EAC5BmF,EAAQ3B,EAAIxD,CACd,CAGA,OADAiB,KAAKyC,SACEiO,EAAW1Q,KAAK0G,OAAS1G,IAClC,EAEAL,EAAGF,UAAUsT,KAAO,SAAehU,GACjC,OAAOiB,KAAKoD,QAAQwB,MAAM7F,EAC5B,EAEAY,EAAGF,UAAU+T,KAAO,SAAe1E,GACjC7P,EAAsB,IAAf6P,EAAE7O,UACThB,GAAQ6P,EAAEpK,UAEV,IAAI+I,EAAIzN,KACJ0N,EAAIoB,EAAE1L,QAGRqK,EADiB,IAAfA,EAAExN,SACAwN,EAAEuF,KAAKlE,GAEPrB,EAAErK,QAaR,IATA,IAAIqQ,EAAI,IAAI9T,EAAG,GACX+T,EAAI,IAAI/T,EAAG,GAGXgU,EAAI,IAAIhU,EAAG,GACXiU,EAAI,IAAIjU,EAAG,GAEXkU,EAAI,EAEDpG,EAAEqG,UAAYpG,EAAEoG,UACrBrG,EAAE4D,OAAO,GACT3D,EAAE2D,OAAO,KACPwC,EAMJ,IAHA,IAAIE,EAAKrG,EAAEtK,QACP4Q,EAAKvG,EAAErK,SAEHqK,EAAE/I,UAAU,CAClB,IAAK,IAAIrH,EAAI,EAAG4W,EAAK,IAAIxG,EAAEvN,MAAM,GAAK+T,IAAa5W,EAAI,KAAMA,EAAG4W,IAAO,GACvE,GAAI5W,EAAI,EAEN,IADAoQ,EAAE4D,OAAOhU,GACFA,KAAM,IACPoW,EAAES,SAAWR,EAAEQ,WACjBT,EAAE3L,KAAKiM,GACPL,EAAE3L,KAAKiM,IAGTP,EAAEpC,OAAO,GACTqC,EAAErC,OAAO,GAIb,IAAK,IAAI/O,EAAI,EAAG6R,EAAK,IAAIzG,EAAExN,MAAM,GAAKiU,IAAa7R,EAAI,KAAMA,EAAG6R,IAAO,GACvE,GAAI7R,EAAI,EAEN,IADAoL,EAAE2D,OAAO/O,GACFA,KAAM,IACPqR,EAAEO,SAAWN,EAAEM,WACjBP,EAAE7L,KAAKiM,GACPH,EAAE7L,KAAKiM,IAGTL,EAAEtC,OAAO,GACTuC,EAAEvC,OAAO,GAIT5D,EAAE5L,IAAI6L,IAAM,GACdD,EAAE1F,KAAK2F,GACP+F,EAAE1L,KAAK4L,GACPD,EAAE3L,KAAK6L,KAEPlG,EAAE3F,KAAK0F,GACPkG,EAAE5L,KAAK0L,GACPG,EAAE7L,KAAK2L,GAEX,CAEA,MAAO,CACL1P,EACA7C,EAAGyS,EACHQ,IAAK1G,EAAEsD,OAAO6C,GAElB,EAKAlU,EAAGF,UAAU4U,OAAS,SAAiBvF,GACrC7P,EAAsB,IAAf6P,EAAE7O,UACThB,GAAQ6P,EAAEpK,UAEV,IAAIV,EAAIhE,KACJmB,EAAI2N,EAAE1L,QAGRY,EADiB,IAAfA,EAAE/D,SACA+D,EAAEgP,KAAKlE,GAEP9K,EAAEZ,QAQR,IALA,IAuCIgC,EAvCAkP,EAAK,IAAI3U,EAAG,GACZ4U,EAAK,IAAI5U,EAAG,GAEZ6U,EAAQrT,EAAEiC,QAEPY,EAAEyQ,KAAK,GAAK,GAAKtT,EAAEsT,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIpX,EAAI,EAAG4W,EAAK,IAAIjQ,EAAE9D,MAAM,GAAK+T,IAAa5W,EAAI,KAAMA,EAAG4W,IAAO,GACvE,GAAI5W,EAAI,EAEN,IADA2G,EAAEqN,OAAOhU,GACFA,KAAM,GACPiX,EAAGJ,SACLI,EAAGxM,KAAK0M,GAGVF,EAAGjD,OAAO,GAId,IAAK,IAAI/O,EAAI,EAAG6R,EAAK,IAAIhT,EAAEjB,MAAM,GAAKiU,IAAa7R,EAAI,KAAMA,EAAG6R,IAAO,GACvE,GAAI7R,EAAI,EAEN,IADAnB,EAAEkQ,OAAO/O,GACFA,KAAM,GACPiS,EAAGL,SACLK,EAAGzM,KAAK0M,GAGVD,EAAGlD,OAAO,GAIVrN,EAAEnC,IAAIV,IAAM,GACd6C,EAAE+D,KAAK5G,GACPmT,EAAGvM,KAAKwM,KAERpT,EAAE4G,KAAK/D,GACPuQ,EAAGxM,KAAKuM,GAEZ,CAaA,OATElP,EADgB,IAAdpB,EAAEyQ,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBrP,EAAI0C,KAAKgH,GAGJ1J,CACT,EAEAzF,EAAGF,UAAU2U,IAAM,SAAcrV,GAC/B,GAAIiB,KAAK0E,SAAU,OAAO3F,EAAIqH,MAC9B,GAAIrH,EAAI2F,SAAU,OAAO1E,KAAKoG,MAE9B,IAAIpC,EAAIhE,KAAKoD,QACTjC,EAAIpC,EAAIqE,QACZY,EAAE/D,SAAW,EACbkB,EAAElB,SAAW,EAGb,IAAK,IAAIwF,EAAQ,EAAGzB,EAAE8P,UAAY3S,EAAE2S,SAAUrO,IAC5CzB,EAAEqN,OAAO,GACTlQ,EAAEkQ,OAAO,GAGX,OAAG,CACD,KAAOrN,EAAE8P,UACP9P,EAAEqN,OAAO,GAEX,KAAOlQ,EAAE2S,UACP3S,EAAEkQ,OAAO,GAGX,IAAItQ,EAAIiD,EAAEnC,IAAIV,GACd,GAAIJ,EAAI,EAAG,CAET,IAAI8E,EAAI7B,EACRA,EAAI7C,EACJA,EAAI0E,CACN,MAAO,GAAU,IAAN9E,GAAyB,IAAdI,EAAEsT,KAAK,GAC3B,MAGFzQ,EAAE+D,KAAK5G,EACT,CAEA,OAAOA,EAAE6P,OAAOvL,EAClB,EAGA9F,EAAGF,UAAUiV,KAAO,SAAe3V,GACjC,OAAOiB,KAAKwT,KAAKzU,GAAKiF,EAAEgP,KAAKjU,EAC/B,EAEAY,EAAGF,UAAUqU,OAAS,WACpB,QAAwB,EAAhB9T,KAAKE,MAAM,GACrB,EAEAP,EAAGF,UAAUyU,MAAQ,WACnB,QAA+B,GAAvBlU,KAAKE,MAAM,GACrB,EAGAP,EAAGF,UAAU4T,MAAQ,SAAgBtU,GACnC,OAAOiB,KAAKE,MAAM,GAAKnB,CACzB,EAGAY,EAAGF,UAAUkV,MAAQ,SAAgB/M,GACnC3I,EAAsB,iBAAR2I,GACd,IAAI7G,EAAI6G,EAAM,GACV4G,GAAK5G,EAAM7G,GAAK,GAChBgQ,EAAI,GAAKhQ,EAGb,GAAIf,KAAKjC,QAAUyQ,EAGjB,OAFAxO,KAAKqD,QAAQmL,EAAI,GACjBxO,KAAKE,MAAMsO,IAAMuC,EACV/Q,KAKT,IADA,IAAIkE,EAAQ6M,EACH1T,EAAImR,EAAa,IAAVtK,GAAe7G,EAAI2C,KAAKjC,OAAQV,IAAK,CACnD,IAAIkF,EAAoB,EAAhBvC,KAAKE,MAAM7C,GAEnB6G,GADA3B,GAAK2B,KACS,GACd3B,GAAK,SACLvC,KAAKE,MAAM7C,GAAKkF,CAClB,CAKA,OAJc,IAAV2B,IACFlE,KAAKE,MAAM7C,GAAK6G,EAChBlE,KAAKjC,UAEAiC,IACT,EAEAL,EAAGF,UAAUiF,OAAS,WACpB,OAAuB,IAAhB1E,KAAKjC,QAAkC,IAAlBiC,KAAKE,MAAM,EACzC,EAEAP,EAAGF,UAAUgV,KAAO,SAAe1V,GACjC,IAOIqG,EAPAnF,EAAWlB,EAAM,EAErB,GAAsB,IAAlBiB,KAAKC,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBD,KAAKC,UAAkBA,EAAU,OAAO,EAK5C,GAHAD,KAAKyC,SAGDzC,KAAKjC,OAAS,EAChBqH,EAAM,MACD,CACDnF,IACFlB,GAAOA,GAGTE,EAAOF,GAAO,SAAW,qBAEzB,IAAIwD,EAAoB,EAAhBvC,KAAKE,MAAM,GACnBkF,EAAM7C,IAAMxD,EAAM,EAAIwD,EAAIxD,GAAO,EAAI,CACvC,CACA,OAAsB,IAAlBiB,KAAKC,SAA8B,GAANmF,EAC1BA,CACT,EAMAzF,EAAGF,UAAUoC,IAAM,SAAc9C,GAC/B,GAAsB,IAAlBiB,KAAKC,UAAmC,IAAjBlB,EAAIkB,SAAgB,OAAQ,EACvD,GAAsB,IAAlBD,KAAKC,UAAmC,IAAjBlB,EAAIkB,SAAgB,OAAO,EAEtD,IAAImF,EAAMpF,KAAK4U,KAAK7V,GACpB,OAAsB,IAAlBiB,KAAKC,SAA8B,GAANmF,EAC1BA,CACT,EAGAzF,EAAGF,UAAUmV,KAAO,SAAe7V,GAEjC,GAAIiB,KAAKjC,OAASgB,EAAIhB,OAAQ,OAAO,EACrC,GAAIiC,KAAKjC,OAASgB,EAAIhB,OAAQ,OAAQ,EAGtC,IADA,IAAIqH,EAAM,EACD/H,EAAI2C,KAAKjC,OAAS,EAAGV,GAAK,EAAGA,IAAK,CACzC,IAAI2G,EAAoB,EAAhBhE,KAAKE,MAAM7C,GACf8D,EAAmB,EAAfpC,EAAImB,MAAM7C,GAElB,GAAI2G,IAAM7C,EAAV,CACI6C,EAAI7C,EACNiE,GAAO,EACEpB,EAAI7C,IACbiE,EAAM,GAER,KANqB,CAOvB,CACA,OAAOA,CACT,EAEAzF,EAAGF,UAAUoV,IAAM,SAAc9V,GAC/B,OAA0B,IAAnBiB,KAAKyU,KAAK1V,EACnB,EAEAY,EAAGF,UAAUqV,GAAK,SAAa/V,GAC7B,OAAyB,IAAlBiB,KAAK6B,IAAI9C,EAClB,EAEAY,EAAGF,UAAUsV,KAAO,SAAehW,GACjC,OAAOiB,KAAKyU,KAAK1V,IAAQ,CAC3B,EAEAY,EAAGF,UAAUuV,IAAM,SAAcjW,GAC/B,OAAOiB,KAAK6B,IAAI9C,IAAQ,CAC1B,EAEAY,EAAGF,UAAUwV,IAAM,SAAclW,GAC/B,OAA2B,IAApBiB,KAAKyU,KAAK1V,EACnB,EAEAY,EAAGF,UAAUyV,GAAK,SAAanW,GAC7B,OAA0B,IAAnBiB,KAAK6B,IAAI9C,EAClB,EAEAY,EAAGF,UAAU0V,KAAO,SAAepW,GACjC,OAAOiB,KAAKyU,KAAK1V,IAAQ,CAC3B,EAEAY,EAAGF,UAAU2V,IAAM,SAAcrW,GAC/B,OAAOiB,KAAK6B,IAAI9C,IAAQ,CAC1B,EAEAY,EAAGF,UAAU4V,IAAM,SAActW,GAC/B,OAA0B,IAAnBiB,KAAKyU,KAAK1V,EACnB,EAEAY,EAAGF,UAAU6V,GAAK,SAAavW,GAC7B,OAAyB,IAAlBiB,KAAK6B,IAAI9C,EAClB,EAMAY,EAAGQ,IAAM,SAAcpB,GACrB,OAAO,IAAIwW,EAAIxW,EACjB,EAEAY,EAAGF,UAAU+V,MAAQ,SAAgBC,GAGnC,OAFAxW,GAAQe,KAAKG,IAAK,yCAClBlB,EAAyB,IAAlBe,KAAKC,SAAgB,iCACrBwV,EAAIC,UAAU1V,MAAM2V,UAAUF,EACvC,EAEA9V,EAAGF,UAAUmW,QAAU,WAErB,OADA3W,EAAOe,KAAKG,IAAK,wDACVH,KAAKG,IAAI0V,YAAY7V,KAC9B,EAEAL,EAAGF,UAAUkW,UAAY,SAAoBF,GAE3C,OADAzV,KAAKG,IAAMsV,EACJzV,IACT,EAEAL,EAAGF,UAAUqW,SAAW,SAAmBL,GAEzC,OADAxW,GAAQe,KAAKG,IAAK,yCACXH,KAAK2V,UAAUF,EACxB,EAEA9V,EAAGF,UAAUsW,OAAS,SAAiBhX,GAErC,OADAE,EAAOe,KAAKG,IAAK,sCACVH,KAAKG,IAAI6H,IAAIhI,KAAMjB,EAC5B,EAEAY,EAAGF,UAAUuW,QAAU,SAAkBjX,GAEvC,OADAE,EAAOe,KAAKG,IAAK,uCACVH,KAAKG,IAAI2H,KAAK9H,KAAMjB,EAC7B,EAEAY,EAAGF,UAAUwW,OAAS,SAAiBlX,GAErC,OADAE,EAAOe,KAAKG,IAAK,sCACVH,KAAKG,IAAI8H,IAAIjI,KAAMjB,EAC5B,EAEAY,EAAGF,UAAUyW,QAAU,SAAkBnX,GAEvC,OADAE,EAAOe,KAAKG,IAAK,uCACVH,KAAKG,IAAI4H,KAAK/H,KAAMjB,EAC7B,EAEAY,EAAGF,UAAU0W,OAAS,SAAiBpX,GAErC,OADAE,EAAOe,KAAKG,IAAK,sCACVH,KAAKG,IAAIiW,IAAIpW,KAAMjB,EAC5B,EAEAY,EAAGF,UAAU4W,OAAS,SAAiBtX,GAGrC,OAFAE,EAAOe,KAAKG,IAAK,sCACjBH,KAAKG,IAAImW,SAAStW,KAAMjB,GACjBiB,KAAKG,IAAIe,IAAIlB,KAAMjB,EAC5B,EAEAY,EAAGF,UAAU8W,QAAU,SAAkBxX,GAGvC,OAFAE,EAAOe,KAAKG,IAAK,sCACjBH,KAAKG,IAAImW,SAAStW,KAAMjB,GACjBiB,KAAKG,IAAI+L,KAAKlM,KAAMjB,EAC7B,EAEAY,EAAGF,UAAU+W,OAAS,WAGpB,OAFAvX,EAAOe,KAAKG,IAAK,sCACjBH,KAAKG,IAAIsW,SAASzW,MACXA,KAAKG,IAAIyQ,IAAI5Q,KACtB,EAEAL,EAAGF,UAAUiX,QAAU,WAGrB,OAFAzX,EAAOe,KAAKG,IAAK,uCACjBH,KAAKG,IAAIsW,SAASzW,MACXA,KAAKG,IAAI0Q,KAAK7Q,KACvB,EAGAL,EAAGF,UAAUkX,QAAU,WAGrB,OAFA1X,EAAOe,KAAKG,IAAK,uCACjBH,KAAKG,IAAIsW,SAASzW,MACXA,KAAKG,IAAIyW,KAAK5W,KACvB,EAEAL,EAAGF,UAAUoX,QAAU,WAGrB,OAFA5X,EAAOe,KAAKG,IAAK,uCACjBH,KAAKG,IAAIsW,SAASzW,MACXA,KAAKG,IAAIuU,KAAK1U,KACvB,EAGAL,EAAGF,UAAUqX,OAAS,WAGpB,OAFA7X,EAAOe,KAAKG,IAAK,sCACjBH,KAAKG,IAAIsW,SAASzW,MACXA,KAAKG,IAAIyG,IAAI5G,KACtB,EAEAL,EAAGF,UAAUsX,OAAS,SAAiBhY,GAGrC,OAFAE,EAAOe,KAAKG,MAAQpB,EAAIoB,IAAK,qBAC7BH,KAAKG,IAAIsW,SAASzW,MACXA,KAAKG,IAAI8C,IAAIjD,KAAMjB,EAC5B,EAGA,IAAIiY,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQC,EAAMxI,GAErB9O,KAAKsX,KAAOA,EACZtX,KAAK8O,EAAI,IAAInP,EAAGmP,EAAG,IACnB9O,KAAKuP,EAAIvP,KAAK8O,EAAE/I,YAChB/F,KAAKmE,EAAI,IAAIxE,EAAG,GAAGqR,OAAOhR,KAAKuP,GAAGxH,KAAK/H,KAAK8O,GAE5C9O,KAAK5C,IAAM4C,KAAKuX,MAClB,CAgDA,SAASC,IACPH,EAAOI,KACLzX,KACA,OACA,0EACJ,CA8DA,SAAS0X,IACPL,EAAOI,KACLzX,KACA,OACA,iEACJ,CAGA,SAAS2X,IACPN,EAAOI,KACLzX,KACA,OACA,wDACJ,CAGA,SAAS4X,IAEPP,EAAOI,KACLzX,KACA,QACA,sEACJ,CA6CA,SAASuV,EAAK/F,GACZ,GAAiB,iBAANA,EAAgB,CACzB,IAAIqI,EAAQlY,EAAGmY,OAAOtI,GACtBxP,KAAKwP,EAAIqI,EAAM/I,EACf9O,KAAK6X,MAAQA,CACf,MACE5Y,EAAOuQ,EAAEqF,IAAI,GAAI,kCACjB7U,KAAKwP,EAAIA,EACTxP,KAAK6X,MAAQ,IAEjB,CAkOA,SAASE,EAAMvI,GACb+F,EAAIkC,KAAKzX,KAAMwP,GAEfxP,KAAKyF,MAAQzF,KAAKwP,EAAEzJ,YAChB/F,KAAKyF,MAAQ,IAAO,IACtBzF,KAAKyF,OAAS,GAAMzF,KAAKyF,MAAQ,IAGnCzF,KAAKe,EAAI,IAAIpB,EAAG,GAAGqR,OAAOhR,KAAKyF,OAC/BzF,KAAKoT,GAAKpT,KAAKgY,KAAKhY,KAAKe,EAAE6P,OAC3B5Q,KAAKiY,KAAOjY,KAAKe,EAAEsT,OAAOrU,KAAKwP,GAE/BxP,KAAKkY,KAAOlY,KAAKiY,KAAK/W,IAAIlB,KAAKe,GAAGmR,MAAM,GAAGU,IAAI5S,KAAKwP,GACpDxP,KAAKkY,KAAOlY,KAAKkY,KAAKlF,KAAKhT,KAAKe,GAChCf,KAAKkY,KAAOlY,KAAKe,EAAEkH,IAAIjI,KAAKkY,KAC9B,CA/aAb,EAAO5X,UAAU8X,KAAO,WACtB,IAAIna,EAAM,IAAIuC,EAAG,MAEjB,OADAvC,EAAI8C,MAAQ,IAAIzB,MAAM2C,KAAKiB,KAAKrC,KAAKuP,EAAI,KAClCnS,CACT,EAEAia,EAAO5X,UAAU0Y,QAAU,SAAkBpZ,GAG3C,IACIqZ,EADArX,EAAIhC,EAGR,GACEiB,KAAKqY,MAAMtX,EAAGf,KAAK5C,KAGnBgb,GADArX,GADAA,EAAIf,KAAKsY,MAAMvX,IACT+G,KAAK9H,KAAK5C,MACP2I,kBACFqS,EAAOpY,KAAKuP,GAErB,IAAI1N,EAAMuW,EAAOpY,KAAKuP,GAAK,EAAIxO,EAAE6T,KAAK5U,KAAK8O,GAgB3C,OAfY,IAARjN,GACFd,EAAEb,MAAM,GAAK,EACba,EAAEhD,OAAS,GACF8D,EAAM,EACfd,EAAEgH,KAAK/H,KAAK8O,QAEIyJ,IAAZxX,EAAEyX,MAEJzX,EAAEyX,QAGFzX,EAAE0B,SAIC1B,CACT,EAEAsW,EAAO5X,UAAU4Y,MAAQ,SAAgBI,EAAO1U,GAC9C0U,EAAMpH,OAAOrR,KAAKuP,EAAG,EAAGxL,EAC1B,EAEAsT,EAAO5X,UAAU6Y,MAAQ,SAAgBvZ,GACvC,OAAOA,EAAImN,KAAKlM,KAAKmE,EACvB,EAQA/E,EAASoY,EAAMH,GAEfG,EAAK/X,UAAU4Y,MAAQ,SAAgBI,EAAOzZ,GAK5C,IAHA,IAAIyS,EAAO,QAEPiH,EAAStX,KAAKC,IAAIoX,EAAM1a,OAAQ,GAC3BV,EAAI,EAAGA,EAAIqb,EAAQrb,IAC1B2B,EAAOkB,MAAM7C,GAAKob,EAAMvY,MAAM7C,GAIhC,GAFA2B,EAAOjB,OAAS2a,EAEZD,EAAM1a,QAAU,EAGlB,OAFA0a,EAAMvY,MAAM,GAAK,OACjBuY,EAAM1a,OAAS,GAKjB,IAAI4a,EAAOF,EAAMvY,MAAM,GAGvB,IAFAlB,EAAOkB,MAAMlB,EAAOjB,UAAY4a,EAAOlH,EAElCpU,EAAI,GAAIA,EAAIob,EAAM1a,OAAQV,IAAK,CAClC,IAAIub,EAAwB,EAAjBH,EAAMvY,MAAM7C,GACvBob,EAAMvY,MAAM7C,EAAI,KAAQub,EAAOnH,IAAS,EAAMkH,IAAS,GACvDA,EAAOC,CACT,CACAD,KAAU,GACVF,EAAMvY,MAAM7C,EAAI,IAAMsb,EACT,IAATA,GAAcF,EAAM1a,OAAS,GAC/B0a,EAAM1a,QAAU,GAEhB0a,EAAM1a,QAAU,CAEpB,EAEAyZ,EAAK/X,UAAU6Y,MAAQ,SAAgBvZ,GAErCA,EAAImB,MAAMnB,EAAIhB,QAAU,EACxBgB,EAAImB,MAAMnB,EAAIhB,OAAS,GAAK,EAC5BgB,EAAIhB,QAAU,EAId,IADA,IAAIkG,EAAK,EACA5G,EAAI,EAAGA,EAAI0B,EAAIhB,OAAQV,IAAK,CACnC,IAAIkF,EAAmB,EAAfxD,EAAImB,MAAM7C,GAClB4G,GAAU,IAAJ1B,EACNxD,EAAImB,MAAM7C,GAAU,SAAL4G,EACfA,EAAS,GAAJ1B,GAAa0B,EAAK,SAAa,EACtC,CASA,OANkC,IAA9BlF,EAAImB,MAAMnB,EAAIhB,OAAS,KACzBgB,EAAIhB,SAC8B,IAA9BgB,EAAImB,MAAMnB,EAAIhB,OAAS,IACzBgB,EAAIhB,UAGDgB,CACT,EAQAK,EAASsY,EAAML,GAQfjY,EAASuY,EAAMN,GASfjY,EAASwY,EAAQP,GAEjBO,EAAOnY,UAAU6Y,MAAQ,SAAgBvZ,GAGvC,IADA,IAAImF,EAAQ,EACH7G,EAAI,EAAGA,EAAI0B,EAAIhB,OAAQV,IAAK,CACnC,IAAI2I,EAA0B,IAAL,EAAfjH,EAAImB,MAAM7C,IAAiB6G,EACjCD,EAAU,SAAL+B,EACTA,KAAQ,GAERjH,EAAImB,MAAM7C,GAAK4G,EACfC,EAAQ8B,CACV,CAIA,OAHc,IAAV9B,IACFnF,EAAImB,MAAMnB,EAAIhB,UAAYmG,GAErBnF,CACT,EAGAY,EAAGmY,OAAS,SAAgBR,GAE1B,GAAIN,EAAOM,GAAO,OAAON,EAAOM,GAEhC,IAAIO,EACJ,GAAa,SAATP,EACFO,EAAQ,IAAIL,OACP,GAAa,SAATF,EACTO,EAAQ,IAAIH,OACP,GAAa,SAATJ,EACTO,EAAQ,IAAIF,MACP,IAAa,WAATL,EAGT,MAAM,IAAI3Y,MAAM,iBAAmB2Y,GAFnCO,EAAQ,IAAID,CAGd,CAGA,OAFAZ,EAAOM,GAAQO,EAERA,CACT,EAiBAtC,EAAI9V,UAAUgX,SAAW,SAAmBzS,GAC1C/E,EAAsB,IAAf+E,EAAE/D,SAAgB,iCACzBhB,EAAO+E,EAAE7D,IAAK,kCAChB,EAEAoV,EAAI9V,UAAU6W,SAAW,SAAmBtS,EAAG7C,GAC7ClC,IAAQ+E,EAAE/D,SAAWkB,EAAElB,UAAiB,iCACxChB,EAAO+E,EAAE7D,KAAO6D,EAAE7D,MAAQgB,EAAEhB,IAC1B,kCACJ,EAEAoV,EAAI9V,UAAUuY,KAAO,SAAehU,GAClC,OAAIhE,KAAK6X,MAAc7X,KAAK6X,MAAMM,QAAQnU,GAAG2R,UAAU3V,OAEvDsB,EAAK0C,EAAGA,EAAEgP,KAAKhT,KAAKwP,GAAGmG,UAAU3V,OAC1BgE,EACT,EAEAuR,EAAI9V,UAAUmH,IAAM,SAAc5C,GAChC,OAAIA,EAAEU,SACGV,EAAEZ,QAGJpD,KAAKwP,EAAEvH,IAAIjE,GAAG2R,UAAU3V,KACjC,EAEAuV,EAAI9V,UAAUuI,IAAM,SAAchE,EAAG7C,GACnCnB,KAAKsW,SAAStS,EAAG7C,GAEjB,IAAIiE,EAAMpB,EAAEgE,IAAI7G,GAIhB,OAHIiE,EAAIvD,IAAI7B,KAAKwP,IAAM,GACrBpK,EAAI2C,KAAK/H,KAAKwP,GAETpK,EAAIuQ,UAAU3V,KACvB,EAEAuV,EAAI9V,UAAUqI,KAAO,SAAe9D,EAAG7C,GACrCnB,KAAKsW,SAAStS,EAAG7C,GAEjB,IAAIiE,EAAMpB,EAAE8D,KAAK3G,GAIjB,OAHIiE,EAAIvD,IAAI7B,KAAKwP,IAAM,GACrBpK,EAAI2C,KAAK/H,KAAKwP,GAETpK,CACT,EAEAmQ,EAAI9V,UAAUwI,IAAM,SAAcjE,EAAG7C,GACnCnB,KAAKsW,SAAStS,EAAG7C,GAEjB,IAAIiE,EAAMpB,EAAEiE,IAAI9G,GAIhB,OAHIiE,EAAIqP,KAAK,GAAK,GAChBrP,EAAI0C,KAAK9H,KAAKwP,GAETpK,EAAIuQ,UAAU3V,KACvB,EAEAuV,EAAI9V,UAAUsI,KAAO,SAAe/D,EAAG7C,GACrCnB,KAAKsW,SAAStS,EAAG7C,GAEjB,IAAIiE,EAAMpB,EAAE+D,KAAK5G,GAIjB,OAHIiE,EAAIqP,KAAK,GAAK,GAChBrP,EAAI0C,KAAK9H,KAAKwP,GAETpK,CACT,EAEAmQ,EAAI9V,UAAU2W,IAAM,SAAcpS,EAAGjF,GAEnC,OADAiB,KAAKyW,SAASzS,GACPhE,KAAKgY,KAAKhU,EAAE6N,MAAM9S,GAC3B,EAEAwW,EAAI9V,UAAUyM,KAAO,SAAelI,EAAG7C,GAErC,OADAnB,KAAKsW,SAAStS,EAAG7C,GACVnB,KAAKgY,KAAKhU,EAAEkI,KAAK/K,GAC1B,EAEAoU,EAAI9V,UAAUyB,IAAM,SAAc8C,EAAG7C,GAEnC,OADAnB,KAAKsW,SAAStS,EAAG7C,GACVnB,KAAKgY,KAAKhU,EAAE9C,IAAIC,GACzB,EAEAoU,EAAI9V,UAAUoR,KAAO,SAAe7M,GAClC,OAAOhE,KAAKkM,KAAKlI,EAAGA,EAAEZ,QACxB,EAEAmS,EAAI9V,UAAUmR,IAAM,SAAc5M,GAChC,OAAOhE,KAAKkB,IAAI8C,EAAGA,EACrB,EAEAuR,EAAI9V,UAAUmX,KAAO,SAAe5S,GAClC,GAAIA,EAAEU,SAAU,OAAOV,EAAEZ,QAEzB,IAAIyV,EAAO7Y,KAAKwP,EAAE6D,MAAM,GAIxB,GAHApU,EAAO4Z,EAAO,GAAM,GAGP,IAATA,EAAY,CACd,IAAI5V,EAAMjD,KAAKwP,EAAExH,IAAI,IAAIrI,EAAG,IAAI0R,OAAO,GACvC,OAAOrR,KAAKiD,IAAIe,EAAGf,EACrB,CAOA,IAFA,IAAI8N,EAAI/Q,KAAKwP,EAAE4C,KAAK,GAChB5D,EAAI,GACAuC,EAAErM,UAA2B,IAAfqM,EAAEsC,MAAM,IAC5B7E,IACAuC,EAAEM,OAAO,GAEXpS,GAAQ8R,EAAErM,UAEV,IAAIoU,EAAM,IAAInZ,EAAG,GAAG6V,MAAMxV,MACtB+Y,EAAOD,EAAIhC,SAIXkC,EAAOhZ,KAAKwP,EAAE4C,KAAK,GAAGf,OAAO,GAC7B4H,EAAIjZ,KAAKwP,EAAEzJ,YAGf,IAFAkT,EAAI,IAAItZ,EAAG,EAAIsZ,EAAIA,GAAGzD,MAAMxV,MAEW,IAAhCA,KAAKiD,IAAIgW,EAAGD,GAAMnX,IAAIkX,IAC3BE,EAAEjD,QAAQ+C,GAOZ,IAJA,IAAInY,EAAIZ,KAAKiD,IAAIgW,EAAGlI,GAChBhQ,EAAIf,KAAKiD,IAAIe,EAAG+M,EAAEoB,KAAK,GAAGd,OAAO,IACjCxL,EAAI7F,KAAKiD,IAAIe,EAAG+M,GAChBvB,EAAIhB,EACc,IAAf3I,EAAEhE,IAAIiX,IAAY,CAEvB,IADA,IAAI1b,EAAMyI,EACDxI,EAAI,EAAoB,IAAjBD,EAAIyE,IAAIiX,GAAYzb,IAClCD,EAAMA,EAAIoZ,SAEZvX,EAAO5B,EAAImS,GACX,IAAIrO,EAAInB,KAAKiD,IAAIrC,EAAG,IAAIjB,EAAG,GAAGqR,OAAOxB,EAAInS,EAAI,IAE7C0D,EAAIA,EAAEsV,OAAOlV,GACbP,EAAIO,EAAEqV,SACN3Q,EAAIA,EAAEwQ,OAAOzV,GACb4O,EAAInS,CACN,CAEA,OAAO0D,CACT,EAEAwU,EAAI9V,UAAUiV,KAAO,SAAe1Q,GAClC,IAAIkV,EAAMlV,EAAEqQ,OAAOrU,KAAKwP,GACxB,OAAqB,IAAjB0J,EAAIjZ,UACNiZ,EAAIjZ,SAAW,EACRD,KAAKgY,KAAKkB,GAAKpC,UAEf9W,KAAKgY,KAAKkB,EAErB,EAEA3D,EAAI9V,UAAUwD,IAAM,SAAce,EAAGjF,GACnC,GAAIA,EAAI2F,SAAU,OAAO,IAAI/E,EAAG,GAAG6V,MAAMxV,MACzC,GAAoB,IAAhBjB,EAAI0V,KAAK,GAAU,OAAOzQ,EAAEZ,QAEhC,IACI+V,EAAM,IAAI1a,MAAM,IACpB0a,EAAI,GAAK,IAAIxZ,EAAG,GAAG6V,MAAMxV,MACzBmZ,EAAI,GAAKnV,EACT,IAAK,IAAI3G,EAAI,EAAGA,EAAI8b,EAAIpb,OAAQV,IAC9B8b,EAAI9b,GAAK2C,KAAKkB,IAAIiY,EAAI9b,EAAI,GAAI2G,GAGhC,IAAIoB,EAAM+T,EAAI,GACVC,EAAU,EACVC,EAAa,EACbxa,EAAQE,EAAIgH,YAAc,GAK9B,IAJc,IAAVlH,IACFA,EAAQ,IAGLxB,EAAI0B,EAAIhB,OAAS,EAAGV,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIyF,EAAO/D,EAAImB,MAAM7C,GACZiF,EAAIzD,EAAQ,EAAGyD,GAAK,EAAGA,IAAK,CACnC,IAAIsF,EAAO9E,GAAQR,EAAK,EACpB8C,IAAQ+T,EAAI,KACd/T,EAAMpF,KAAK4Q,IAAIxL,IAGL,IAARwC,GAAyB,IAAZwR,GAKjBA,IAAY,EACZA,GAAWxR,GA9BE,KA+BbyR,GACwC,IAANhc,GAAiB,IAANiF,KAE7C8C,EAAMpF,KAAKkB,IAAIkE,EAAK+T,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYjB,CACAxa,EAAQ,EACV,CAEA,OAAOuG,CACT,EAEAmQ,EAAI9V,UAAUiW,UAAY,SAAoB3W,GAC5C,IAAIgC,EAAIhC,EAAIiU,KAAKhT,KAAKwP,GAEtB,OAAOzO,IAAMhC,EAAMgC,EAAEqC,QAAUrC,CACjC,EAEAwU,EAAI9V,UAAUoW,YAAc,SAAsB9W,GAChD,IAAIqG,EAAMrG,EAAIqE,QAEd,OADAgC,EAAIjF,IAAM,KACHiF,CACT,EAMAzF,EAAG2Z,KAAO,SAAeva,GACvB,OAAO,IAAIgZ,EAAKhZ,EAClB,EAkBAK,EAAS2Y,EAAMxC,GAEfwC,EAAKtY,UAAUiW,UAAY,SAAoB3W,GAC7C,OAAOiB,KAAKgY,KAAKjZ,EAAI8S,MAAM7R,KAAKyF,OAClC,EAEAsS,EAAKtY,UAAUoW,YAAc,SAAsB9W,GACjD,IAAIgC,EAAIf,KAAKgY,KAAKjZ,EAAImC,IAAIlB,KAAKiY,OAE/B,OADAlX,EAAEZ,IAAM,KACDY,CACT,EAEAgX,EAAKtY,UAAUyM,KAAO,SAAelI,EAAG7C,GACtC,GAAI6C,EAAEU,UAAYvD,EAAEuD,SAGlB,OAFAV,EAAE9D,MAAM,GAAK,EACb8D,EAAEjG,OAAS,EACJiG,EAGT,IAAI6B,EAAI7B,EAAEkI,KAAK/K,GACXP,EAAIiF,EAAEoM,MAAMjS,KAAKyF,OAAOvE,IAAIlB,KAAKkY,MAAMlG,OAAOhS,KAAKyF,OAAOvE,IAAIlB,KAAKwP,GACnE+J,EAAI1T,EAAEkC,KAAKnH,GAAGyQ,OAAOrR,KAAKyF,OAC1BL,EAAMmU,EAQV,OANIA,EAAE1X,IAAI7B,KAAKwP,IAAM,EACnBpK,EAAMmU,EAAExR,KAAK/H,KAAKwP,GACT+J,EAAE9E,KAAK,GAAK,IACrBrP,EAAMmU,EAAEzR,KAAK9H,KAAKwP,IAGbpK,EAAIuQ,UAAU3V,KACvB,EAEA+X,EAAKtY,UAAUyB,IAAM,SAAc8C,EAAG7C,GACpC,GAAI6C,EAAEU,UAAYvD,EAAEuD,SAAU,OAAO,IAAI/E,EAAG,GAAGgW,UAAU3V,MAEzD,IAAI6F,EAAI7B,EAAE9C,IAAIC,GACVP,EAAIiF,EAAEoM,MAAMjS,KAAKyF,OAAOvE,IAAIlB,KAAKkY,MAAMlG,OAAOhS,KAAKyF,OAAOvE,IAAIlB,KAAKwP,GACnE+J,EAAI1T,EAAEkC,KAAKnH,GAAGyQ,OAAOrR,KAAKyF,OAC1BL,EAAMmU,EAOV,OANIA,EAAE1X,IAAI7B,KAAKwP,IAAM,EACnBpK,EAAMmU,EAAExR,KAAK/H,KAAKwP,GACT+J,EAAE9E,KAAK,GAAK,IACrBrP,EAAMmU,EAAEzR,KAAK9H,KAAKwP,IAGbpK,EAAIuQ,UAAU3V,KACvB,EAEA+X,EAAKtY,UAAUiV,KAAO,SAAe1Q,GAGnC,OADUhE,KAAKgY,KAAKhU,EAAEqQ,OAAOrU,KAAKwP,GAAGtO,IAAIlB,KAAKoT,KACnCuC,UAAU3V,KACvB,CACD,CA19GD,YA09G4CA,kCCh9G5C,MAAMwZ,EAAS,EAAQ,KACjBC,EAAU,EAAQ,KAClBC,EACe,mBAAXlW,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENhH,EAAQ6D,OAASA,EACjB7D,EAAQmd,WAyTR,SAAqB5b,GAInB,OAHKA,GAAUA,IACbA,EAAS,GAEJsC,EAAOuZ,OAAO7b,EACvB,EA7TAvB,EAAQqd,kBAAoB,GAE5B,MAAMC,EAAe,WAwDrB,SAASC,EAAchc,GACrB,GAAIA,EAAS+b,EACX,MAAM,IAAIE,WAAW,cAAgBjc,EAAS,kCAGhD,MAAMkc,EAAM,IAAIzb,WAAWT,GAE3B,OADAmc,OAAOC,eAAeF,EAAK5Z,EAAOZ,WAC3Bwa,CACT,CAYA,SAAS5Z,EAAQ+Z,EAAKC,EAAkBtc,GAEtC,GAAmB,iBAARqc,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOjV,EAAY+U,EACrB,CACA,OAAOG,EAAKH,EAAKC,EAAkBtc,EACrC,CAIA,SAASwc,EAAMC,EAAOH,EAAkBtc,GACtC,GAAqB,iBAAVyc,EACT,OAqHJ,SAAqB9Z,EAAQ+Z,GAK3B,GAJwB,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRpa,EAAOqa,WAAWD,GACrB,MAAM,IAAIH,UAAU,qBAAuBG,GAG7C,MAAM1c,EAAwC,EAA/BlB,EAAW6D,EAAQ+Z,GAClC,IAAIR,EAAMF,EAAahc,GAEvB,MAAM4c,EAASV,EAAIW,MAAMla,EAAQ+Z,GASjC,OAPIE,IAAW5c,IAIbkc,EAAMA,EAAIY,MAAM,EAAGF,IAGdV,CACT,CA3IWa,CAAWN,EAAOH,GAG3B,GAAIU,YAAYC,OAAOR,GACrB,OAkJJ,SAAwBS,GACtB,GAAIC,EAAWD,EAAWzc,YAAa,CACrC,MAAM0E,EAAO,IAAI1E,WAAWyc,GAC5B,OAAOE,EAAgBjY,EAAKkY,OAAQlY,EAAKmY,WAAYnY,EAAKrG,WAC5D,CACA,OAAOye,EAAcL,EACvB,CAxJWM,CAAcf,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIF,UACR,yHACiDE,GAIrD,GAAIU,EAAWV,EAAOO,cACjBP,GAASU,EAAWV,EAAMY,OAAQL,aACrC,OAAOI,EAAgBX,EAAOH,EAAkBtc,GAGlD,GAAiC,oBAAtByd,oBACNN,EAAWV,EAAOgB,oBAClBhB,GAASU,EAAWV,EAAMY,OAAQI,oBACrC,OAAOL,EAAgBX,EAAOH,EAAkBtc,GAGlD,GAAqB,iBAAVyc,EACT,MAAM,IAAIF,UACR,yEAIJ,MAAMmB,EAAUjB,EAAMiB,SAAWjB,EAAMiB,UACvC,GAAe,MAAXA,GAAmBA,IAAYjB,EACjC,OAAOna,EAAOka,KAAKkB,EAASpB,EAAkBtc,GAGhD,MAAMoD,EAkJR,SAAqBua,GACnB,GAAIrb,EAAOsb,SAASD,GAAM,CACxB,MAAMhe,EAA4B,EAAtBke,EAAQF,EAAI3d,QAClBkc,EAAMF,EAAarc,GAEzB,OAAmB,IAAfuc,EAAIlc,QAIR2d,EAAIxY,KAAK+W,EAAK,EAAG,EAAGvc,GAHXuc,CAKX,CAEA,YAAmB1B,IAAfmD,EAAI3d,OACoB,iBAAf2d,EAAI3d,QAAuB8d,EAAYH,EAAI3d,QAC7Cgc,EAAa,GAEfuB,EAAcI,GAGN,WAAbA,EAAII,MAAqBrd,MAAMgD,QAAQia,EAAIK,MACtCT,EAAcI,EAAIK,WAD3B,CAGF,CAzKYC,CAAWxB,GACrB,GAAIrZ,EAAG,OAAOA,EAEd,GAAsB,oBAAXqC,QAAgD,MAAtBA,OAAOyY,aACH,mBAA9BzB,EAAMhX,OAAOyY,aACtB,OAAO5b,EAAOka,KAAKC,EAAMhX,OAAOyY,aAAa,UAAW5B,EAAkBtc,GAG5E,MAAM,IAAIuc,UACR,yHACiDE,EAErD,CAmBA,SAAS0B,EAAY5Y,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIgX,UAAU,0CACf,GAAIhX,EAAO,EAChB,MAAM,IAAI0W,WAAW,cAAgB1W,EAAO,iCAEhD,CA0BA,SAAS+B,EAAa/B,GAEpB,OADA4Y,EAAW5Y,GACJyW,EAAazW,EAAO,EAAI,EAAoB,EAAhBsY,EAAQtY,GAC7C,CAuCA,SAASgY,EAAea,GACtB,MAAMpe,EAASoe,EAAMpe,OAAS,EAAI,EAA4B,EAAxB6d,EAAQO,EAAMpe,QAC9Ckc,EAAMF,EAAahc,GACzB,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAQV,GAAK,EAC/B4c,EAAI5c,GAAgB,IAAX8e,EAAM9e,GAEjB,OAAO4c,CACT,CAUA,SAASkB,EAAiBgB,EAAOd,EAAYtd,GAC3C,GAAIsd,EAAa,GAAKc,EAAMtf,WAAawe,EACvC,MAAM,IAAIrB,WAAW,wCAGvB,GAAImC,EAAMtf,WAAawe,GAActd,GAAU,GAC7C,MAAM,IAAIic,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiB1B,IAAf8C,QAAuC9C,IAAXxa,EACxB,IAAIS,WAAW2d,QACD5D,IAAXxa,EACH,IAAIS,WAAW2d,EAAOd,GAEtB,IAAI7c,WAAW2d,EAAOd,EAAYtd,GAI1Cmc,OAAOC,eAAeF,EAAK5Z,EAAOZ,WAE3Bwa,CACT,CA2BA,SAAS2B,EAAS7d,GAGhB,GAAIA,GAAU+b,EACZ,MAAM,IAAIE,WAAW,0DACaF,EAAa9X,SAAS,IAAM,UAEhE,OAAgB,EAATjE,CACT,CAsGA,SAASlB,EAAY6D,EAAQ+Z,GAC3B,GAAIpa,EAAOsb,SAASjb,GAClB,OAAOA,EAAO3C,OAEhB,GAAIgd,YAAYC,OAAOta,IAAWwa,EAAWxa,EAAQqa,aACnD,OAAOra,EAAO7D,WAEhB,GAAsB,iBAAX6D,EACT,MAAM,IAAI4Z,UACR,kGAC0B5Z,GAI9B,MAAMhD,EAAMgD,EAAO3C,OACbqe,EAAaC,UAAUte,OAAS,IAAsB,IAAjBse,UAAU,GACrD,IAAKD,GAAqB,IAAR1e,EAAW,OAAO,EAGpC,IAAI4e,GAAc,EAClB,OACE,OAAQ7B,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO/c,EACT,IAAK,OACL,IAAK,QACH,OAAO6e,EAAY7b,GAAQ3C,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANL,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO8e,EAAc9b,GAAQ3C,OAC/B,QACE,GAAIue,EACF,OAAOF,GAAa,EAAIG,EAAY7b,GAAQ3C,OAE9C0c,GAAY,GAAKA,GAAUgC,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAcjC,EAAU5b,EAAOC,GACtC,IAAIwd,GAAc,EAclB,SALc/D,IAAV1Z,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQmB,KAAKjC,OACf,MAAO,GAOT,SAJYwa,IAARzZ,GAAqBA,EAAMkB,KAAKjC,UAClCe,EAAMkB,KAAKjC,QAGTe,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFK4b,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOkC,EAAS3c,KAAMnB,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAO8d,EAAU5c,KAAMnB,EAAOC,GAEhC,IAAK,QACH,OAAO+d,EAAW7c,KAAMnB,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOge,EAAY9c,KAAMnB,EAAOC,GAElC,IAAK,SACH,OAAOie,EAAY/c,KAAMnB,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOke,EAAahd,KAAMnB,EAAOC,GAEnC,QACE,GAAIwd,EAAa,MAAM,IAAIhC,UAAU,qBAAuBG,GAC5DA,GAAYA,EAAW,IAAIgC,cAC3BH,GAAc,EAGtB,CAUA,SAASW,EAAM9b,EAAGoO,EAAGC,GACnB,MAAMnS,EAAI8D,EAAEoO,GACZpO,EAAEoO,GAAKpO,EAAEqO,GACTrO,EAAEqO,GAAKnS,CACT,CA2IA,SAAS6f,EAAsB9B,EAAQlc,EAAKmc,EAAYZ,EAAU0C,GAEhE,GAAsB,IAAlB/B,EAAOrd,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfsd,GACTZ,EAAWY,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZQ,EADJR,GAAcA,KAGZA,EAAa8B,EAAM,EAAK/B,EAAOrd,OAAS,GAItCsd,EAAa,IAAGA,EAAaD,EAAOrd,OAASsd,GAC7CA,GAAcD,EAAOrd,OAAQ,CAC/B,GAAIof,EAAK,OAAQ,EACZ9B,EAAaD,EAAOrd,OAAS,CACpC,MAAO,GAAIsd,EAAa,EAAG,CACzB,IAAI8B,EACC,OAAQ,EADJ9B,EAAa,CAExB,CAQA,GALmB,iBAARnc,IACTA,EAAMmB,EAAOka,KAAKrb,EAAKub,IAIrBpa,EAAOsb,SAASzc,GAElB,OAAmB,IAAfA,EAAInB,QACE,EAEHqf,EAAahC,EAAQlc,EAAKmc,EAAYZ,EAAU0C,GAClD,GAAmB,iBAARje,EAEhB,OADAA,GAAY,IACgC,mBAAjCV,WAAWiB,UAAUb,QAC1Bue,EACK3e,WAAWiB,UAAUb,QAAQ6Y,KAAK2D,EAAQlc,EAAKmc,GAE/C7c,WAAWiB,UAAU4d,YAAY5F,KAAK2D,EAAQlc,EAAKmc,GAGvD+B,EAAahC,EAAQ,CAAClc,GAAMmc,EAAYZ,EAAU0C,GAG3D,MAAM,IAAI7C,UAAU,uCACtB,CAEA,SAAS8C,EAAc9f,EAAK4B,EAAKmc,EAAYZ,EAAU0C,GACrD,IA0BI9f,EA1BAigB,EAAY,EACZC,EAAYjgB,EAAIS,OAChByf,EAAYte,EAAInB,OAEpB,QAAiBwa,IAAbkC,IAEe,UADjBA,EAAWgD,OAAOhD,GAAUgC,gBACY,UAAbhC,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAInd,EAAIS,OAAS,GAAKmB,EAAInB,OAAS,EACjC,OAAQ,EAEVuf,EAAY,EACZC,GAAa,EACbC,GAAa,EACbnC,GAAc,CAChB,CAGF,SAASqC,EAAMzD,EAAK5c,GAClB,OAAkB,IAAdigB,EACKrD,EAAI5c,GAEJ4c,EAAI0D,aAAatgB,EAAIigB,EAEhC,CAGA,GAAIH,EAAK,CACP,IAAIS,GAAc,EAClB,IAAKvgB,EAAIge,EAAYhe,EAAIkgB,EAAWlgB,IAClC,GAAIqgB,EAAKpgB,EAAKD,KAAOqgB,EAAKxe,GAAqB,IAAhB0e,EAAoB,EAAIvgB,EAAIugB,IAEzD,IADoB,IAAhBA,IAAmBA,EAAavgB,GAChCA,EAAIugB,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmBvgB,GAAKA,EAAIugB,GAChCA,GAAc,CAGpB,MAEE,IADIvC,EAAamC,EAAYD,IAAWlC,EAAakC,EAAYC,GAC5DngB,EAAIge,EAAYhe,GAAK,EAAGA,IAAK,CAChC,IAAIwgB,GAAQ,EACZ,IAAK,IAAIvb,EAAI,EAAGA,EAAIkb,EAAWlb,IAC7B,GAAIob,EAAKpgB,EAAKD,EAAIiF,KAAOob,EAAKxe,EAAKoD,GAAI,CACrCub,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAOxgB,CACpB,CAGF,OAAQ,CACV,CAcA,SAASygB,EAAU7D,EAAKvZ,EAAQqd,EAAQhgB,GACtCggB,EAASC,OAAOD,IAAW,EAC3B,MAAME,EAAYhE,EAAIlc,OAASggB,EAC1BhgB,GAGHA,EAASigB,OAAOjgB,IACHkgB,IACXlgB,EAASkgB,GAJXlgB,EAASkgB,EAQX,MAAMC,EAASxd,EAAO3C,OAKtB,IAAIV,EACJ,IAJIU,EAASmgB,EAAS,IACpBngB,EAASmgB,EAAS,GAGf7gB,EAAI,EAAGA,EAAIU,IAAUV,EAAG,CAC3B,MAAM8gB,EAASC,SAAS1d,EAAO2d,OAAW,EAAJhhB,EAAO,GAAI,IACjD,GAAIwe,EAAYsC,GAAS,OAAO9gB,EAChC4c,EAAI8D,EAAS1gB,GAAK8gB,CACpB,CACA,OAAO9gB,CACT,CAEA,SAASihB,EAAWrE,EAAKvZ,EAAQqd,EAAQhgB,GACvC,OAAOwgB,EAAWhC,EAAY7b,EAAQuZ,EAAIlc,OAASggB,GAAS9D,EAAK8D,EAAQhgB,EAC3E,CAEA,SAASygB,EAAYvE,EAAKvZ,EAAQqd,EAAQhgB,GACxC,OAAOwgB,EAypCT,SAAuBtd,GACrB,MAAMwd,EAAY,GAClB,IAAK,IAAIphB,EAAI,EAAGA,EAAI4D,EAAIlD,SAAUV,EAEhCohB,EAAUrgB,KAAyB,IAApB6C,EAAIrD,WAAWP,IAEhC,OAAOohB,CACT,CAhqCoBC,CAAahe,GAASuZ,EAAK8D,EAAQhgB,EACvD,CAEA,SAAS4gB,EAAa1E,EAAKvZ,EAAQqd,EAAQhgB,GACzC,OAAOwgB,EAAW/B,EAAc9b,GAASuZ,EAAK8D,EAAQhgB,EACxD,CAEA,SAAS6gB,EAAW3E,EAAKvZ,EAAQqd,EAAQhgB,GACvC,OAAOwgB,EA0pCT,SAAyBtd,EAAK4d,GAC5B,IAAIje,EAAGoF,EAAI/B,EACX,MAAMwa,EAAY,GAClB,IAAK,IAAIphB,EAAI,EAAGA,EAAI4D,EAAIlD,WACjB8gB,GAAS,GAAK,KADaxhB,EAGhCuD,EAAIK,EAAIrD,WAAWP,GACnB2I,EAAKpF,GAAK,EACVqD,EAAKrD,EAAI,IACT6d,EAAUrgB,KAAK6F,GACfwa,EAAUrgB,KAAK4H,GAGjB,OAAOyY,CACT,CAxqCoBK,CAAepe,EAAQuZ,EAAIlc,OAASggB,GAAS9D,EAAK8D,EAAQhgB,EAC9E,CA8EA,SAASgf,EAAa9C,EAAKpb,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQmb,EAAIlc,OACtByb,EAAO3b,cAAcoc,GAErBT,EAAO3b,cAAcoc,EAAIY,MAAMhc,EAAOC,GAEjD,CAEA,SAAS8d,EAAW3C,EAAKpb,EAAOC,GAC9BA,EAAMsC,KAAKC,IAAI4Y,EAAIlc,OAAQe,GAC3B,MAAMsG,EAAM,GAEZ,IAAI/H,EAAIwB,EACR,KAAOxB,EAAIyB,GAAK,CACd,MAAMigB,EAAY9E,EAAI5c,GACtB,IAAI2hB,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI1hB,EAAI4hB,GAAoBngB,EAAK,CAC/B,IAAIogB,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAajF,EAAI5c,EAAI,GACO,MAAV,IAAb6hB,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAajF,EAAI5c,EAAI,GACrB8hB,EAAYlF,EAAI5c,EAAI,GACQ,MAAV,IAAb6hB,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAajF,EAAI5c,EAAI,GACrB8hB,EAAYlF,EAAI5c,EAAI,GACpB+hB,EAAanF,EAAI5c,EAAI,GACO,MAAV,IAAb6hB,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACb5Z,EAAIhH,KAAK4gB,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvB5Z,EAAIhH,KAAK4gB,GACT3hB,GAAK4hB,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAM5hB,EAAM4hB,EAAWvhB,OACvB,GAAIL,GAAO6hB,EACT,OAAO9B,OAAO+B,aAAaC,MAAMhC,OAAQ6B,GAI3C,IAAIla,EAAM,GACN/H,EAAI,EACR,KAAOA,EAAIK,GACT0H,GAAOqY,OAAO+B,aAAaC,MACzBhC,OACA6B,EAAWzE,MAAMxd,EAAGA,GAAKkiB,IAG7B,OAAOna,CACT,CAxBSsa,CAAsBta,EAC/B,CA3+BA5I,EAAQmjB,WAAa7F,EAgBrBzZ,EAAOuf,oBAUP,WAEE,IACE,MAAMtiB,EAAM,IAAIkB,WAAW,GACrBqhB,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFA5F,OAAOC,eAAe0F,EAAOrhB,WAAWiB,WACxCya,OAAOC,eAAe7c,EAAKuiB,GACN,KAAdviB,EAAIwiB,KACb,CAAE,MAAOtf,GACP,OAAO,CACT,CACF,CArB6Buf,GAExB1f,EAAOuf,qBAA0C,oBAAZI,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJ/F,OAAOgG,eAAe7f,EAAOZ,UAAW,SAAU,CAChD0gB,YAAY,EACZC,IAAK,WACH,GAAK/f,EAAOsb,SAAS3b,MACrB,OAAOA,KAAKob,MACd,IAGFlB,OAAOgG,eAAe7f,EAAOZ,UAAW,SAAU,CAChD0gB,YAAY,EACZC,IAAK,WACH,GAAK/f,EAAOsb,SAAS3b,MACrB,OAAOA,KAAKqb,UACd,IAoCFhb,EAAOggB,SAAW,KA8DlBhgB,EAAOka,KAAO,SAAUC,EAAOH,EAAkBtc,GAC/C,OAAOwc,EAAKC,EAAOH,EAAkBtc,EACvC,EAIAmc,OAAOC,eAAe9Z,EAAOZ,UAAWjB,WAAWiB,WACnDya,OAAOC,eAAe9Z,EAAQ7B,YA8B9B6B,EAAOuZ,MAAQ,SAAUtW,EAAMgd,EAAM7F,GACnC,OArBF,SAAgBnX,EAAMgd,EAAM7F,GAE1B,OADAyB,EAAW5Y,GACPA,GAAQ,EACHyW,EAAazW,QAETiV,IAAT+H,EAIyB,iBAAb7F,EACVV,EAAazW,GAAMgd,KAAKA,EAAM7F,GAC9BV,EAAazW,GAAMgd,KAAKA,GAEvBvG,EAAazW,EACtB,CAOSsW,CAAMtW,EAAMgd,EAAM7F,EAC3B,EAUApa,EAAOgF,YAAc,SAAU/B,GAC7B,OAAO+B,EAAY/B,EACrB,EAIAjD,EAAOkgB,gBAAkB,SAAUjd,GACjC,OAAO+B,EAAY/B,EACrB,EA6GAjD,EAAOsb,SAAW,SAAmBxa,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEqf,WACpBrf,IAAMd,EAAOZ,SACjB,EAEAY,EAAOogB,QAAU,SAAkBzc,EAAG7C,GAGpC,GAFI+Z,EAAWlX,EAAGxF,cAAawF,EAAI3D,EAAOka,KAAKvW,EAAGA,EAAE+Z,OAAQ/Z,EAAEnH,aAC1Dqe,EAAW/Z,EAAG3C,cAAa2C,EAAId,EAAOka,KAAKpZ,EAAGA,EAAE4c,OAAQ5c,EAAEtE,cACzDwD,EAAOsb,SAAS3X,KAAO3D,EAAOsb,SAASxa,GAC1C,MAAM,IAAImZ,UACR,yEAIJ,GAAItW,IAAM7C,EAAG,OAAO,EAEpB,IAAIsM,EAAIzJ,EAAEjG,OACN2P,EAAIvM,EAAEpD,OAEV,IAAK,IAAIV,EAAI,EAAGK,EAAM0D,KAAKC,IAAIoM,EAAGC,GAAIrQ,EAAIK,IAAOL,EAC/C,GAAI2G,EAAE3G,KAAO8D,EAAE9D,GAAI,CACjBoQ,EAAIzJ,EAAE3G,GACNqQ,EAAIvM,EAAE9D,GACN,KACF,CAGF,OAAIoQ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEApN,EAAOqa,WAAa,SAAqBD,GACvC,OAAQgD,OAAOhD,GAAUgC,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEApc,EAAOqgB,OAAS,SAAiBC,EAAM5iB,GACrC,IAAKU,MAAMgD,QAAQkf,GACjB,MAAM,IAAIrG,UAAU,+CAGtB,GAAoB,IAAhBqG,EAAK5iB,OACP,OAAOsC,EAAOuZ,MAAM,GAGtB,IAAIvc,EACJ,QAAekb,IAAXxa,EAEF,IADAA,EAAS,EACJV,EAAI,EAAGA,EAAIsjB,EAAK5iB,SAAUV,EAC7BU,GAAU4iB,EAAKtjB,GAAGU,OAItB,MAAMqd,EAAS/a,EAAOgF,YAAYtH,GAClC,IAAI6iB,EAAM,EACV,IAAKvjB,EAAI,EAAGA,EAAIsjB,EAAK5iB,SAAUV,EAAG,CAChC,IAAI4c,EAAM0G,EAAKtjB,GACf,GAAI6d,EAAWjB,EAAKzb,YACdoiB,EAAM3G,EAAIlc,OAASqd,EAAOrd,QACvBsC,EAAOsb,SAAS1B,KAAMA,EAAM5Z,EAAOka,KAAKN,IAC7CA,EAAI/W,KAAKkY,EAAQwF,IAEjBpiB,WAAWiB,UAAUohB,IAAIpJ,KACvB2D,EACAnB,EACA2G,OAGC,KAAKvgB,EAAOsb,SAAS1B,GAC1B,MAAM,IAAIK,UAAU,+CAEpBL,EAAI/W,KAAKkY,EAAQwF,EACnB,CACAA,GAAO3G,EAAIlc,MACb,CACA,OAAOqd,CACT,EAiDA/a,EAAOxD,WAAaA,EA8EpBwD,EAAOZ,UAAU+gB,WAAY,EAQ7BngB,EAAOZ,UAAUqhB,OAAS,WACxB,MAAMpjB,EAAMsC,KAAKjC,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAIsc,WAAW,6CAEvB,IAAK,IAAI3c,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B4f,EAAKjd,KAAM3C,EAAGA,EAAI,GAEpB,OAAO2C,IACT,EAEAK,EAAOZ,UAAUshB,OAAS,WACxB,MAAMrjB,EAAMsC,KAAKjC,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAIsc,WAAW,6CAEvB,IAAK,IAAI3c,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B4f,EAAKjd,KAAM3C,EAAGA,EAAI,GAClB4f,EAAKjd,KAAM3C,EAAI,EAAGA,EAAI,GAExB,OAAO2C,IACT,EAEAK,EAAOZ,UAAUuhB,OAAS,WACxB,MAAMtjB,EAAMsC,KAAKjC,OACjB,GAAIL,EAAM,GAAM,EACd,MAAM,IAAIsc,WAAW,6CAEvB,IAAK,IAAI3c,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EAC5B4f,EAAKjd,KAAM3C,EAAGA,EAAI,GAClB4f,EAAKjd,KAAM3C,EAAI,EAAGA,EAAI,GACtB4f,EAAKjd,KAAM3C,EAAI,EAAGA,EAAI,GACtB4f,EAAKjd,KAAM3C,EAAI,EAAGA,EAAI,GAExB,OAAO2C,IACT,EAEAK,EAAOZ,UAAUuC,SAAW,WAC1B,MAAMjE,EAASiC,KAAKjC,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBse,UAAUte,OAAqB6e,EAAU5c,KAAM,EAAGjC,GAC/C2e,EAAa+C,MAAMzf,KAAMqc,UAClC,EAEAhc,EAAOZ,UAAUwhB,eAAiB5gB,EAAOZ,UAAUuC,SAEnD3B,EAAOZ,UAAUyhB,OAAS,SAAiB/f,GACzC,IAAKd,EAAOsb,SAASxa,GAAI,MAAM,IAAImZ,UAAU,6BAC7C,OAAIta,OAASmB,GACsB,IAA5Bd,EAAOogB,QAAQzgB,KAAMmB,EAC9B,EAEAd,EAAOZ,UAAUiE,QAAU,WACzB,IAAIzC,EAAM,GACV,MAAMS,EAAMlF,EAAQqd,kBAGpB,OAFA5Y,EAAMjB,KAAKgC,SAAS,MAAO,EAAGN,GAAKO,QAAQ,UAAW,OAAOkf,OACzDnhB,KAAKjC,OAAS2D,IAAKT,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACIyY,IACFrZ,EAAOZ,UAAUia,GAAuBrZ,EAAOZ,UAAUiE,SAG3DrD,EAAOZ,UAAUghB,QAAU,SAAkBW,EAAQviB,EAAOC,EAAKuiB,EAAWC,GAI1E,GAHIpG,EAAWkG,EAAQ5iB,cACrB4iB,EAAS/gB,EAAOka,KAAK6G,EAAQA,EAAOrD,OAAQqD,EAAOvkB,cAEhDwD,EAAOsb,SAASyF,GACnB,MAAM,IAAI9G,UACR,wFAC2B8G,GAiB/B,QAbc7I,IAAV1Z,IACFA,EAAQ,QAEE0Z,IAARzZ,IACFA,EAAMsiB,EAASA,EAAOrjB,OAAS,QAEfwa,IAAd8I,IACFA,EAAY,QAEE9I,IAAZ+I,IACFA,EAAUthB,KAAKjC,QAGbc,EAAQ,GAAKC,EAAMsiB,EAAOrjB,QAAUsjB,EAAY,GAAKC,EAAUthB,KAAKjC,OACtE,MAAM,IAAIic,WAAW,sBAGvB,GAAIqH,GAAaC,GAAWziB,GAASC,EACnC,OAAO,EAET,GAAIuiB,GAAaC,EACf,OAAQ,EAEV,GAAIziB,GAASC,EACX,OAAO,EAQT,GAAIkB,OAASohB,EAAQ,OAAO,EAE5B,IAAI3T,GAJJ6T,KAAa,IADbD,KAAe,GAMX3T,GAPJ5O,KAAS,IADTD,KAAW,GASX,MAAMnB,EAAM0D,KAAKC,IAAIoM,EAAGC,GAElB6T,EAAWvhB,KAAK6a,MAAMwG,EAAWC,GACjCE,EAAaJ,EAAOvG,MAAMhc,EAAOC,GAEvC,IAAK,IAAIzB,EAAI,EAAGA,EAAIK,IAAOL,EACzB,GAAIkkB,EAASlkB,KAAOmkB,EAAWnkB,GAAI,CACjCoQ,EAAI8T,EAASlkB,GACbqQ,EAAI8T,EAAWnkB,GACf,KACF,CAGF,OAAIoQ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HApN,EAAOZ,UAAUgiB,SAAW,SAAmBviB,EAAKmc,EAAYZ,GAC9D,OAAoD,IAA7Cza,KAAKpB,QAAQM,EAAKmc,EAAYZ,EACvC,EAEApa,EAAOZ,UAAUb,QAAU,SAAkBM,EAAKmc,EAAYZ,GAC5D,OAAOyC,EAAqBld,KAAMd,EAAKmc,EAAYZ,GAAU,EAC/D,EAEApa,EAAOZ,UAAU4d,YAAc,SAAsBne,EAAKmc,EAAYZ,GACpE,OAAOyC,EAAqBld,KAAMd,EAAKmc,EAAYZ,GAAU,EAC/D,EA4CApa,EAAOZ,UAAUmb,MAAQ,SAAgBla,EAAQqd,EAAQhgB,EAAQ0c,GAE/D,QAAelC,IAAXwF,EACFtD,EAAW,OACX1c,EAASiC,KAAKjC,OACdggB,EAAS,OAEJ,QAAexF,IAAXxa,GAA0C,iBAAXggB,EACxCtD,EAAWsD,EACXhgB,EAASiC,KAAKjC,OACdggB,EAAS,MAEJ,KAAI2D,SAAS3D,GAUlB,MAAM,IAAIpf,MACR,2EAVFof,KAAoB,EAChB2D,SAAS3jB,IACXA,KAAoB,OACHwa,IAAbkC,IAAwBA,EAAW,UAEvCA,EAAW1c,EACXA,OAASwa,EAMb,CAEA,MAAM0F,EAAYje,KAAKjC,OAASggB,EAGhC,SAFexF,IAAXxa,GAAwBA,EAASkgB,KAAWlgB,EAASkgB,GAEpDvd,EAAO3C,OAAS,IAAMA,EAAS,GAAKggB,EAAS,IAAOA,EAAS/d,KAAKjC,OACrE,MAAM,IAAIic,WAAW,0CAGlBS,IAAUA,EAAW,QAE1B,IAAI6B,GAAc,EAClB,OACE,OAAQ7B,GACN,IAAK,MACH,OAAOqD,EAAS9d,KAAMU,EAAQqd,EAAQhgB,GAExC,IAAK,OACL,IAAK,QACH,OAAOugB,EAAUte,KAAMU,EAAQqd,EAAQhgB,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOygB,EAAWxe,KAAMU,EAAQqd,EAAQhgB,GAE1C,IAAK,SAEH,OAAO4gB,EAAY3e,KAAMU,EAAQqd,EAAQhgB,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO6gB,EAAU5e,KAAMU,EAAQqd,EAAQhgB,GAEzC,QACE,GAAIue,EAAa,MAAM,IAAIhC,UAAU,qBAAuBG,GAC5DA,GAAY,GAAKA,GAAUgC,cAC3BH,GAAc,EAGtB,EAEAjc,EAAOZ,UAAUsF,OAAS,WACxB,MAAO,CACL+W,KAAM,SACNC,KAAMtd,MAAMgB,UAAUob,MAAMpD,KAAKzX,KAAK2hB,MAAQ3hB,KAAM,GAExD,EAyFA,MAAMuf,EAAuB,KAoB7B,SAAS1C,EAAY5C,EAAKpb,EAAOC,GAC/B,IAAIgG,EAAM,GACVhG,EAAMsC,KAAKC,IAAI4Y,EAAIlc,OAAQe,GAE3B,IAAK,IAAIzB,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7ByH,GAAO2Y,OAAO+B,aAAsB,IAATvF,EAAI5c,IAEjC,OAAOyH,CACT,CAEA,SAASgY,EAAa7C,EAAKpb,EAAOC,GAChC,IAAIgG,EAAM,GACVhG,EAAMsC,KAAKC,IAAI4Y,EAAIlc,OAAQe,GAE3B,IAAK,IAAIzB,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7ByH,GAAO2Y,OAAO+B,aAAavF,EAAI5c,IAEjC,OAAOyH,CACT,CAEA,SAAS6X,EAAU1C,EAAKpb,EAAOC,GAC7B,MAAMpB,EAAMuc,EAAIlc,SAEXc,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMpB,KAAKoB,EAAMpB,GAExC,IAAIqG,EAAM,GACV,IAAK,IAAI1G,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EAC7B0G,GAAO6d,EAAoB3H,EAAI5c,IAEjC,OAAO0G,CACT,CAEA,SAASiZ,EAAc/C,EAAKpb,EAAOC,GACjC,MAAM+iB,EAAQ5H,EAAIY,MAAMhc,EAAOC,GAC/B,IAAIsG,EAAM,GAEV,IAAK,IAAI/H,EAAI,EAAGA,EAAIwkB,EAAM9jB,OAAS,EAAGV,GAAK,EACzC+H,GAAOqY,OAAO+B,aAAaqC,EAAMxkB,GAAqB,IAAfwkB,EAAMxkB,EAAI,IAEnD,OAAO+H,CACT,CAiCA,SAAS0c,EAAa/D,EAAQgE,EAAKhkB,GACjC,GAAKggB,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAI/D,WAAW,sBAC3D,GAAI+D,EAASgE,EAAMhkB,EAAQ,MAAM,IAAIic,WAAW,wCAClD,CAyQA,SAASgI,EAAU/H,EAAKO,EAAOuD,EAAQgE,EAAKrgB,EAAKL,GAC/C,IAAKhB,EAAOsb,SAAS1B,GAAM,MAAM,IAAIK,UAAU,+CAC/C,GAAIE,EAAQ9Y,GAAO8Y,EAAQnZ,EAAK,MAAM,IAAI2Y,WAAW,qCACrD,GAAI+D,EAASgE,EAAM9H,EAAIlc,OAAQ,MAAM,IAAIic,WAAW,qBACtD,CA+FA,SAASiI,EAAgBhI,EAAKO,EAAOuD,EAAQ1c,EAAKK,GAChDwgB,EAAW1H,EAAOnZ,EAAKK,EAAKuY,EAAK8D,EAAQ,GAEzC,IAAI9Z,EAAK+Z,OAAOxD,EAAQ2H,OAAO,aAC/BlI,EAAI8D,KAAY9Z,EAChBA,IAAW,EACXgW,EAAI8D,KAAY9Z,EAChBA,IAAW,EACXgW,EAAI8D,KAAY9Z,EAChBA,IAAW,EACXgW,EAAI8D,KAAY9Z,EAChB,IAAI+B,EAAKgY,OAAOxD,GAAS2H,OAAO,IAAMA,OAAO,aAQ7C,OAPAlI,EAAI8D,KAAY/X,EAChBA,IAAW,EACXiU,EAAI8D,KAAY/X,EAChBA,IAAW,EACXiU,EAAI8D,KAAY/X,EAChBA,IAAW,EACXiU,EAAI8D,KAAY/X,EACT+X,CACT,CAEA,SAASqE,EAAgBnI,EAAKO,EAAOuD,EAAQ1c,EAAKK,GAChDwgB,EAAW1H,EAAOnZ,EAAKK,EAAKuY,EAAK8D,EAAQ,GAEzC,IAAI9Z,EAAK+Z,OAAOxD,EAAQ2H,OAAO,aAC/BlI,EAAI8D,EAAS,GAAK9Z,EAClBA,IAAW,EACXgW,EAAI8D,EAAS,GAAK9Z,EAClBA,IAAW,EACXgW,EAAI8D,EAAS,GAAK9Z,EAClBA,IAAW,EACXgW,EAAI8D,EAAS,GAAK9Z,EAClB,IAAI+B,EAAKgY,OAAOxD,GAAS2H,OAAO,IAAMA,OAAO,aAQ7C,OAPAlI,EAAI8D,EAAS,GAAK/X,EAClBA,IAAW,EACXiU,EAAI8D,EAAS,GAAK/X,EAClBA,IAAW,EACXiU,EAAI8D,EAAS,GAAK/X,EAClBA,IAAW,EACXiU,EAAI8D,GAAU/X,EACP+X,EAAS,CAClB,CAkHA,SAASsE,EAAcpI,EAAKO,EAAOuD,EAAQgE,EAAKrgB,EAAKL,GACnD,GAAI0c,EAASgE,EAAM9H,EAAIlc,OAAQ,MAAM,IAAIic,WAAW,sBACpD,GAAI+D,EAAS,EAAG,MAAM,IAAI/D,WAAW,qBACvC,CAEA,SAASsI,EAAYrI,EAAKO,EAAOuD,EAAQwE,EAAcC,GAOrD,OANAhI,GAASA,EACTuD,KAAoB,EACfyE,GACHH,EAAapI,EAAKO,EAAOuD,EAAQ,GAEnCtE,EAAQmB,MAAMX,EAAKO,EAAOuD,EAAQwE,EAAc,GAAI,GAC7CxE,EAAS,CAClB,CAUA,SAAS0E,EAAaxI,EAAKO,EAAOuD,EAAQwE,EAAcC,GAOtD,OANAhI,GAASA,EACTuD,KAAoB,EACfyE,GACHH,EAAapI,EAAKO,EAAOuD,EAAQ,GAEnCtE,EAAQmB,MAAMX,EAAKO,EAAOuD,EAAQwE,EAAc,GAAI,GAC7CxE,EAAS,CAClB,CAzkBA1d,EAAOZ,UAAUob,MAAQ,SAAgBhc,EAAOC,GAC9C,MAAMpB,EAAMsC,KAAKjC,QACjBc,IAAUA,GAGE,GACVA,GAASnB,GACG,IAAGmB,EAAQ,GACdA,EAAQnB,IACjBmB,EAAQnB,IANVoB,OAAcyZ,IAARzZ,EAAoBpB,IAAQoB,GASxB,GACRA,GAAOpB,GACG,IAAGoB,EAAM,GACVA,EAAMpB,IACfoB,EAAMpB,GAGJoB,EAAMD,IAAOC,EAAMD,GAEvB,MAAM6jB,EAAS1iB,KAAK2iB,SAAS9jB,EAAOC,GAIpC,OAFAob,OAAOC,eAAeuI,EAAQriB,EAAOZ,WAE9BijB,CACT,EAUAriB,EAAOZ,UAAUmjB,WACjBviB,EAAOZ,UAAUojB,WAAa,SAAqB9E,EAAQlhB,EAAY2lB,GACrEzE,KAAoB,EACpBlhB,KAA4B,EACvB2lB,GAAUV,EAAY/D,EAAQlhB,EAAYmD,KAAKjC,QAEpD,IAAImB,EAAMc,KAAK+d,GACX7c,EAAM,EACN7D,EAAI,EACR,OAASA,EAAIR,IAAeqE,GAAO,MACjChC,GAAOc,KAAK+d,EAAS1gB,GAAK6D,EAG5B,OAAOhC,CACT,EAEAmB,EAAOZ,UAAUqjB,WACjBziB,EAAOZ,UAAUsjB,WAAa,SAAqBhF,EAAQlhB,EAAY2lB,GACrEzE,KAAoB,EACpBlhB,KAA4B,EACvB2lB,GACHV,EAAY/D,EAAQlhB,EAAYmD,KAAKjC,QAGvC,IAAImB,EAAMc,KAAK+d,IAAWlhB,GACtBqE,EAAM,EACV,KAAOrE,EAAa,IAAMqE,GAAO,MAC/BhC,GAAOc,KAAK+d,IAAWlhB,GAAcqE,EAGvC,OAAOhC,CACT,EAEAmB,EAAOZ,UAAUujB,UACjB3iB,EAAOZ,UAAUwjB,UAAY,SAAoBlF,EAAQyE,GAGvD,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACpCiC,KAAK+d,EACd,EAEA1d,EAAOZ,UAAUyjB,aACjB7iB,EAAOZ,UAAU0jB,aAAe,SAAuBpF,EAAQyE,GAG7D,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACpCiC,KAAK+d,GAAW/d,KAAK+d,EAAS,IAAM,CAC7C,EAEA1d,EAAOZ,UAAU2jB,aACjB/iB,EAAOZ,UAAUke,aAAe,SAAuBI,EAAQyE,GAG7D,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACnCiC,KAAK+d,IAAW,EAAK/d,KAAK+d,EAAS,EAC7C,EAEA1d,EAAOZ,UAAU4jB,aACjBhjB,EAAOZ,UAAU6jB,aAAe,SAAuBvF,EAAQyE,GAI7D,OAHAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,SAElCiC,KAAK+d,GACT/d,KAAK+d,EAAS,IAAM,EACpB/d,KAAK+d,EAAS,IAAM,IACD,SAAnB/d,KAAK+d,EAAS,EACrB,EAEA1d,EAAOZ,UAAU8jB,aACjBljB,EAAOZ,UAAU+jB,aAAe,SAAuBzF,EAAQyE,GAI7D,OAHAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QAEpB,SAAfiC,KAAK+d,IACT/d,KAAK+d,EAAS,IAAM,GACrB/d,KAAK+d,EAAS,IAAM,EACrB/d,KAAK+d,EAAS,GAClB,EAEA1d,EAAOZ,UAAUgkB,gBAAkBC,GAAmB,SAA0B3F,GAE9E4F,EADA5F,KAAoB,EACG,UACvB,MAAM6F,EAAQ5jB,KAAK+d,GACb8F,EAAO7jB,KAAK+d,EAAS,QACbxF,IAAVqL,QAAgCrL,IAATsL,GACzBC,EAAY/F,EAAQ/d,KAAKjC,OAAS,GAGpC,MAAMkG,EAAK2f,EACQ,IAAjB5jB,OAAO+d,GACU,MAAjB/d,OAAO+d,GACP/d,OAAO+d,GAAU,GAAK,GAElB/X,EAAKhG,OAAO+d,GACC,IAAjB/d,OAAO+d,GACU,MAAjB/d,OAAO+d,GACP8F,EAAO,GAAK,GAEd,OAAO1B,OAAOle,IAAOke,OAAOnc,IAAOmc,OAAO,IAC5C,IAEA9hB,EAAOZ,UAAUskB,gBAAkBL,GAAmB,SAA0B3F,GAE9E4F,EADA5F,KAAoB,EACG,UACvB,MAAM6F,EAAQ5jB,KAAK+d,GACb8F,EAAO7jB,KAAK+d,EAAS,QACbxF,IAAVqL,QAAgCrL,IAATsL,GACzBC,EAAY/F,EAAQ/d,KAAKjC,OAAS,GAGpC,MAAMiI,EAAK4d,EAAQ,GAAK,GACL,MAAjB5jB,OAAO+d,GACU,IAAjB/d,OAAO+d,GACP/d,OAAO+d,GAEH9Z,EAAKjE,OAAO+d,GAAU,GAAK,GACd,MAAjB/d,OAAO+d,GACU,IAAjB/d,OAAO+d,GACP8F,EAEF,OAAQ1B,OAAOnc,IAAOmc,OAAO,KAAOA,OAAOle,EAC7C,IAEA5D,EAAOZ,UAAUukB,UAAY,SAAoBjG,EAAQlhB,EAAY2lB,GACnEzE,KAAoB,EACpBlhB,KAA4B,EACvB2lB,GAAUV,EAAY/D,EAAQlhB,EAAYmD,KAAKjC,QAEpD,IAAImB,EAAMc,KAAK+d,GACX7c,EAAM,EACN7D,EAAI,EACR,OAASA,EAAIR,IAAeqE,GAAO,MACjChC,GAAOc,KAAK+d,EAAS1gB,GAAK6D,EAM5B,OAJAA,GAAO,IAEHhC,GAAOgC,IAAKhC,GAAOkC,KAAK6B,IAAI,EAAG,EAAIpG,IAEhCqC,CACT,EAEAmB,EAAOZ,UAAUwkB,UAAY,SAAoBlG,EAAQlhB,EAAY2lB,GACnEzE,KAAoB,EACpBlhB,KAA4B,EACvB2lB,GAAUV,EAAY/D,EAAQlhB,EAAYmD,KAAKjC,QAEpD,IAAIV,EAAIR,EACJqE,EAAM,EACNhC,EAAMc,KAAK+d,IAAW1gB,GAC1B,KAAOA,EAAI,IAAM6D,GAAO,MACtBhC,GAAOc,KAAK+d,IAAW1gB,GAAK6D,EAM9B,OAJAA,GAAO,IAEHhC,GAAOgC,IAAKhC,GAAOkC,KAAK6B,IAAI,EAAG,EAAIpG,IAEhCqC,CACT,EAEAmB,EAAOZ,UAAUykB,SAAW,SAAmBnG,EAAQyE,GAGrD,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACtB,IAAfiC,KAAK+d,IAC0B,GAA5B,IAAO/d,KAAK+d,GAAU,GADK/d,KAAK+d,EAE3C,EAEA1d,EAAOZ,UAAU0kB,YAAc,SAAsBpG,EAAQyE,GAC3DzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QAC3C,MAAMmB,EAAMc,KAAK+d,GAAW/d,KAAK+d,EAAS,IAAM,EAChD,OAAc,MAAN7e,EAAsB,WAANA,EAAmBA,CAC7C,EAEAmB,EAAOZ,UAAU2kB,YAAc,SAAsBrG,EAAQyE,GAC3DzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QAC3C,MAAMmB,EAAMc,KAAK+d,EAAS,GAAM/d,KAAK+d,IAAW,EAChD,OAAc,MAAN7e,EAAsB,WAANA,EAAmBA,CAC7C,EAEAmB,EAAOZ,UAAU4kB,YAAc,SAAsBtG,EAAQyE,GAI3D,OAHAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QAEnCiC,KAAK+d,GACV/d,KAAK+d,EAAS,IAAM,EACpB/d,KAAK+d,EAAS,IAAM,GACpB/d,KAAK+d,EAAS,IAAM,EACzB,EAEA1d,EAAOZ,UAAU6kB,YAAc,SAAsBvG,EAAQyE,GAI3D,OAHAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QAEnCiC,KAAK+d,IAAW,GACrB/d,KAAK+d,EAAS,IAAM,GACpB/d,KAAK+d,EAAS,IAAM,EACpB/d,KAAK+d,EAAS,EACnB,EAEA1d,EAAOZ,UAAU8kB,eAAiBb,GAAmB,SAAyB3F,GAE5E4F,EADA5F,KAAoB,EACG,UACvB,MAAM6F,EAAQ5jB,KAAK+d,GACb8F,EAAO7jB,KAAK+d,EAAS,QACbxF,IAAVqL,QAAgCrL,IAATsL,GACzBC,EAAY/F,EAAQ/d,KAAKjC,OAAS,GAGpC,MAAMmB,EAAMc,KAAK+d,EAAS,GACL,IAAnB/d,KAAK+d,EAAS,GACK,MAAnB/d,KAAK+d,EAAS,IACb8F,GAAQ,IAEX,OAAQ1B,OAAOjjB,IAAQijB,OAAO,KAC5BA,OAAOyB,EACU,IAAjB5jB,OAAO+d,GACU,MAAjB/d,OAAO+d,GACP/d,OAAO+d,GAAU,GAAK,GAC1B,IAEA1d,EAAOZ,UAAU+kB,eAAiBd,GAAmB,SAAyB3F,GAE5E4F,EADA5F,KAAoB,EACG,UACvB,MAAM6F,EAAQ5jB,KAAK+d,GACb8F,EAAO7jB,KAAK+d,EAAS,QACbxF,IAAVqL,QAAgCrL,IAATsL,GACzBC,EAAY/F,EAAQ/d,KAAKjC,OAAS,GAGpC,MAAMmB,GAAO0kB,GAAS,IACH,MAAjB5jB,OAAO+d,GACU,IAAjB/d,OAAO+d,GACP/d,OAAO+d,GAET,OAAQoE,OAAOjjB,IAAQijB,OAAO,KAC5BA,OAAOniB,OAAO+d,GAAU,GAAK,GACZ,MAAjB/d,OAAO+d,GACU,IAAjB/d,OAAO+d,GACP8F,EACJ,IAEAxjB,EAAOZ,UAAUglB,YAAc,SAAsB1G,EAAQyE,GAG3D,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACpC0b,EAAQiE,KAAK1d,KAAM+d,GAAQ,EAAM,GAAI,EAC9C,EAEA1d,EAAOZ,UAAUilB,YAAc,SAAsB3G,EAAQyE,GAG3D,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACpC0b,EAAQiE,KAAK1d,KAAM+d,GAAQ,EAAO,GAAI,EAC/C,EAEA1d,EAAOZ,UAAUklB,aAAe,SAAuB5G,EAAQyE,GAG7D,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACpC0b,EAAQiE,KAAK1d,KAAM+d,GAAQ,EAAM,GAAI,EAC9C,EAEA1d,EAAOZ,UAAUmlB,aAAe,SAAuB7G,EAAQyE,GAG7D,OAFAzE,KAAoB,EACfyE,GAAUV,EAAY/D,EAAQ,EAAG/d,KAAKjC,QACpC0b,EAAQiE,KAAK1d,KAAM+d,GAAQ,EAAO,GAAI,EAC/C,EAQA1d,EAAOZ,UAAUolB,YACjBxkB,EAAOZ,UAAUqlB,YAAc,SAAsBtK,EAAOuD,EAAQlhB,EAAY2lB,GAC9EhI,GAASA,EACTuD,KAAoB,EACpBlhB,KAA4B,EACvB2lB,GAEHR,EAAShiB,KAAMwa,EAAOuD,EAAQlhB,EADbuE,KAAK6B,IAAI,EAAG,EAAIpG,GAAc,EACK,GAGtD,IAAIqE,EAAM,EACN7D,EAAI,EAER,IADA2C,KAAK+d,GAAkB,IAARvD,IACNnd,EAAIR,IAAeqE,GAAO,MACjClB,KAAK+d,EAAS1gB,GAAMmd,EAAQtZ,EAAO,IAGrC,OAAO6c,EAASlhB,CAClB,EAEAwD,EAAOZ,UAAUslB,YACjB1kB,EAAOZ,UAAUulB,YAAc,SAAsBxK,EAAOuD,EAAQlhB,EAAY2lB,GAC9EhI,GAASA,EACTuD,KAAoB,EACpBlhB,KAA4B,EACvB2lB,GAEHR,EAAShiB,KAAMwa,EAAOuD,EAAQlhB,EADbuE,KAAK6B,IAAI,EAAG,EAAIpG,GAAc,EACK,GAGtD,IAAIQ,EAAIR,EAAa,EACjBqE,EAAM,EAEV,IADAlB,KAAK+d,EAAS1gB,GAAa,IAARmd,IACVnd,GAAK,IAAM6D,GAAO,MACzBlB,KAAK+d,EAAS1gB,GAAMmd,EAAQtZ,EAAO,IAGrC,OAAO6c,EAASlhB,CAClB,EAEAwD,EAAOZ,UAAUwlB,WACjB5kB,EAAOZ,UAAUylB,WAAa,SAAqB1K,EAAOuD,EAAQyE,GAKhE,OAJAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,IAAM,GACtD/d,KAAK+d,GAAmB,IAARvD,EACTuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAU0lB,cACjB9kB,EAAOZ,UAAU2lB,cAAgB,SAAwB5K,EAAOuD,EAAQyE,GAMtE,OALAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,MAAQ,GACxD/d,KAAK+d,GAAmB,IAARvD,EAChBxa,KAAK+d,EAAS,GAAMvD,IAAU,EACvBuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAU4lB,cACjBhlB,EAAOZ,UAAU6lB,cAAgB,SAAwB9K,EAAOuD,EAAQyE,GAMtE,OALAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,MAAQ,GACxD/d,KAAK+d,GAAWvD,IAAU,EAC1Bxa,KAAK+d,EAAS,GAAc,IAARvD,EACbuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAU8lB,cACjBllB,EAAOZ,UAAU+lB,cAAgB,SAAwBhL,EAAOuD,EAAQyE,GAQtE,OAPAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,WAAY,GAC5D/d,KAAK+d,EAAS,GAAMvD,IAAU,GAC9Bxa,KAAK+d,EAAS,GAAMvD,IAAU,GAC9Bxa,KAAK+d,EAAS,GAAMvD,IAAU,EAC9Bxa,KAAK+d,GAAmB,IAARvD,EACTuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAUgmB,cACjBplB,EAAOZ,UAAUimB,cAAgB,SAAwBlL,EAAOuD,EAAQyE,GAQtE,OAPAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,WAAY,GAC5D/d,KAAK+d,GAAWvD,IAAU,GAC1Bxa,KAAK+d,EAAS,GAAMvD,IAAU,GAC9Bxa,KAAK+d,EAAS,GAAMvD,IAAU,EAC9Bxa,KAAK+d,EAAS,GAAc,IAARvD,EACbuD,EAAS,CAClB,EA8CA1d,EAAOZ,UAAUkmB,iBAAmBjC,GAAmB,SAA2BlJ,EAAOuD,EAAS,GAChG,OAAOkE,EAAejiB,KAAMwa,EAAOuD,EAAQoE,OAAO,GAAIA,OAAO,sBAC/D,IAEA9hB,EAAOZ,UAAUmmB,iBAAmBlC,GAAmB,SAA2BlJ,EAAOuD,EAAS,GAChG,OAAOqE,EAAepiB,KAAMwa,EAAOuD,EAAQoE,OAAO,GAAIA,OAAO,sBAC/D,IAEA9hB,EAAOZ,UAAUomB,WAAa,SAAqBrL,EAAOuD,EAAQlhB,EAAY2lB,GAG5E,GAFAhI,GAASA,EACTuD,KAAoB,GACfyE,EAAU,CACb,MAAMsD,EAAQ1kB,KAAK6B,IAAI,EAAI,EAAIpG,EAAc,GAE7CmlB,EAAShiB,KAAMwa,EAAOuD,EAAQlhB,EAAYipB,EAAQ,GAAIA,EACxD,CAEA,IAAIzoB,EAAI,EACJ6D,EAAM,EACN+G,EAAM,EAEV,IADAjI,KAAK+d,GAAkB,IAARvD,IACNnd,EAAIR,IAAeqE,GAAO,MAC7BsZ,EAAQ,GAAa,IAARvS,GAAsC,IAAzBjI,KAAK+d,EAAS1gB,EAAI,KAC9C4K,EAAM,GAERjI,KAAK+d,EAAS1gB,IAAOmd,EAAQtZ,EAAQ,GAAK+G,EAAM,IAGlD,OAAO8V,EAASlhB,CAClB,EAEAwD,EAAOZ,UAAUsmB,WAAa,SAAqBvL,EAAOuD,EAAQlhB,EAAY2lB,GAG5E,GAFAhI,GAASA,EACTuD,KAAoB,GACfyE,EAAU,CACb,MAAMsD,EAAQ1kB,KAAK6B,IAAI,EAAI,EAAIpG,EAAc,GAE7CmlB,EAAShiB,KAAMwa,EAAOuD,EAAQlhB,EAAYipB,EAAQ,GAAIA,EACxD,CAEA,IAAIzoB,EAAIR,EAAa,EACjBqE,EAAM,EACN+G,EAAM,EAEV,IADAjI,KAAK+d,EAAS1gB,GAAa,IAARmd,IACVnd,GAAK,IAAM6D,GAAO,MACrBsZ,EAAQ,GAAa,IAARvS,GAAsC,IAAzBjI,KAAK+d,EAAS1gB,EAAI,KAC9C4K,EAAM,GAERjI,KAAK+d,EAAS1gB,IAAOmd,EAAQtZ,EAAQ,GAAK+G,EAAM,IAGlD,OAAO8V,EAASlhB,CAClB,EAEAwD,EAAOZ,UAAUumB,UAAY,SAAoBxL,EAAOuD,EAAQyE,GAM9D,OALAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,KAAO,KACnDvD,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCxa,KAAK+d,GAAmB,IAARvD,EACTuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAUwmB,aAAe,SAAuBzL,EAAOuD,EAAQyE,GAMpE,OALAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,OAAS,OACzD/d,KAAK+d,GAAmB,IAARvD,EAChBxa,KAAK+d,EAAS,GAAMvD,IAAU,EACvBuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAUymB,aAAe,SAAuB1L,EAAOuD,EAAQyE,GAMpE,OALAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,OAAS,OACzD/d,KAAK+d,GAAWvD,IAAU,EAC1Bxa,KAAK+d,EAAS,GAAc,IAARvD,EACbuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAU0mB,aAAe,SAAuB3L,EAAOuD,EAAQyE,GAQpE,OAPAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,YAAa,YAC7D/d,KAAK+d,GAAmB,IAARvD,EAChBxa,KAAK+d,EAAS,GAAMvD,IAAU,EAC9Bxa,KAAK+d,EAAS,GAAMvD,IAAU,GAC9Bxa,KAAK+d,EAAS,GAAMvD,IAAU,GACvBuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAU2mB,aAAe,SAAuB5L,EAAOuD,EAAQyE,GASpE,OARAhI,GAASA,EACTuD,KAAoB,EACfyE,GAAUR,EAAShiB,KAAMwa,EAAOuD,EAAQ,EAAG,YAAa,YACzDvD,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5Cxa,KAAK+d,GAAWvD,IAAU,GAC1Bxa,KAAK+d,EAAS,GAAMvD,IAAU,GAC9Bxa,KAAK+d,EAAS,GAAMvD,IAAU,EAC9Bxa,KAAK+d,EAAS,GAAc,IAARvD,EACbuD,EAAS,CAClB,EAEA1d,EAAOZ,UAAU4mB,gBAAkB3C,GAAmB,SAA0BlJ,EAAOuD,EAAS,GAC9F,OAAOkE,EAAejiB,KAAMwa,EAAOuD,GAASoE,OAAO,sBAAuBA,OAAO,sBACnF,IAEA9hB,EAAOZ,UAAU6mB,gBAAkB5C,GAAmB,SAA0BlJ,EAAOuD,EAAS,GAC9F,OAAOqE,EAAepiB,KAAMwa,EAAOuD,GAASoE,OAAO,sBAAuBA,OAAO,sBACnF,IAiBA9hB,EAAOZ,UAAU8mB,aAAe,SAAuB/L,EAAOuD,EAAQyE,GACpE,OAAOF,EAAWtiB,KAAMwa,EAAOuD,GAAQ,EAAMyE,EAC/C,EAEAniB,EAAOZ,UAAU+mB,aAAe,SAAuBhM,EAAOuD,EAAQyE,GACpE,OAAOF,EAAWtiB,KAAMwa,EAAOuD,GAAQ,EAAOyE,EAChD,EAYAniB,EAAOZ,UAAUgnB,cAAgB,SAAwBjM,EAAOuD,EAAQyE,GACtE,OAAOC,EAAYziB,KAAMwa,EAAOuD,GAAQ,EAAMyE,EAChD,EAEAniB,EAAOZ,UAAUinB,cAAgB,SAAwBlM,EAAOuD,EAAQyE,GACtE,OAAOC,EAAYziB,KAAMwa,EAAOuD,GAAQ,EAAOyE,EACjD,EAGAniB,EAAOZ,UAAUyD,KAAO,SAAeke,EAAQuF,EAAa9nB,EAAOC,GACjE,IAAKuB,EAAOsb,SAASyF,GAAS,MAAM,IAAI9G,UAAU,+BAQlD,GAPKzb,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMkB,KAAKjC,QAC9B4oB,GAAevF,EAAOrjB,SAAQ4oB,EAAcvF,EAAOrjB,QAClD4oB,IAAaA,EAAc,GAC5B7nB,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBuiB,EAAOrjB,QAAgC,IAAhBiC,KAAKjC,OAAc,OAAO,EAGrD,GAAI4oB,EAAc,EAChB,MAAM,IAAI3M,WAAW,6BAEvB,GAAInb,EAAQ,GAAKA,GAASmB,KAAKjC,OAAQ,MAAM,IAAIic,WAAW,sBAC5D,GAAIlb,EAAM,EAAG,MAAM,IAAIkb,WAAW,2BAG9Blb,EAAMkB,KAAKjC,SAAQe,EAAMkB,KAAKjC,QAC9BqjB,EAAOrjB,OAAS4oB,EAAc7nB,EAAMD,IACtCC,EAAMsiB,EAAOrjB,OAAS4oB,EAAc9nB,GAGtC,MAAMnB,EAAMoB,EAAMD,EAalB,OAXImB,OAASohB,GAAqD,mBAApC5iB,WAAWiB,UAAUmnB,WAEjD5mB,KAAK4mB,WAAWD,EAAa9nB,EAAOC,GAEpCN,WAAWiB,UAAUohB,IAAIpJ,KACvB2J,EACAphB,KAAK2iB,SAAS9jB,EAAOC,GACrB6nB,GAIGjpB,CACT,EAMA2C,EAAOZ,UAAU6gB,KAAO,SAAephB,EAAKL,EAAOC,EAAK2b,GAEtD,GAAmB,iBAARvb,EAAkB,CAS3B,GARqB,iBAAVL,GACT4b,EAAW5b,EACXA,EAAQ,EACRC,EAAMkB,KAAKjC,QACa,iBAARe,IAChB2b,EAAW3b,EACXA,EAAMkB,KAAKjC,aAEIwa,IAAbkC,GAA8C,iBAAbA,EACnC,MAAM,IAAIH,UAAU,6BAEtB,GAAwB,iBAAbG,IAA0Bpa,EAAOqa,WAAWD,GACrD,MAAM,IAAIH,UAAU,qBAAuBG,GAE7C,GAAmB,IAAfvb,EAAInB,OAAc,CACpB,MAAMW,EAAOQ,EAAItB,WAAW,IACV,SAAb6c,GAAuB/b,EAAO,KAClB,WAAb+b,KAEFvb,EAAMR,EAEV,CACF,KAA0B,iBAARQ,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAM8e,OAAO9e,IAIf,GAAIL,EAAQ,GAAKmB,KAAKjC,OAASc,GAASmB,KAAKjC,OAASe,EACpD,MAAM,IAAIkb,WAAW,sBAGvB,GAAIlb,GAAOD,EACT,OAAOmB,KAQT,IAAI3C,EACJ,GANAwB,KAAkB,EAClBC,OAAcyZ,IAARzZ,EAAoBkB,KAAKjC,OAASe,IAAQ,EAE3CI,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAK7B,EAAIwB,EAAOxB,EAAIyB,IAAOzB,EACzB2C,KAAK3C,GAAK6B,MAEP,CACL,MAAM2iB,EAAQxhB,EAAOsb,SAASzc,GAC1BA,EACAmB,EAAOka,KAAKrb,EAAKub,GACf/c,EAAMmkB,EAAM9jB,OAClB,GAAY,IAARL,EACF,MAAM,IAAI4c,UAAU,cAAgBpb,EAClC,qCAEJ,IAAK7B,EAAI,EAAGA,EAAIyB,EAAMD,IAASxB,EAC7B2C,KAAK3C,EAAIwB,GAASgjB,EAAMxkB,EAAIK,EAEhC,CAEA,OAAOsC,IACT,EAMA,MAAM6mB,EAAS,CAAC,EAChB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpC,WAAAvnB,GACEwnB,QAEAhN,OAAOgG,eAAelgB,KAAM,UAAW,CACrCwa,MAAOwM,EAAWvH,MAAMzf,KAAMqc,WAC9B8K,UAAU,EACVC,cAAc,IAIhBpnB,KAAKsX,KAAO,GAAGtX,KAAKsX,SAASyP,KAG7B/mB,KAAKqnB,aAEErnB,KAAKsX,IACd,CAEA,QAAI5Y,GACF,OAAOqoB,CACT,CAEA,QAAIroB,CAAM8b,GACRN,OAAOgG,eAAelgB,KAAM,OAAQ,CAClConB,cAAc,EACdjH,YAAY,EACZ3F,QACA2M,UAAU,GAEd,CAEA,QAAAnlB,GACE,MAAO,GAAGhC,KAAKsX,SAASyP,OAAS/mB,KAAKsnB,SACxC,EAEJ,CA+BA,SAASC,EAAuBroB,GAC9B,IAAIkG,EAAM,GACN/H,EAAI6B,EAAInB,OACZ,MAAMc,EAAmB,MAAXK,EAAI,GAAa,EAAI,EACnC,KAAO7B,GAAKwB,EAAQ,EAAGxB,GAAK,EAC1B+H,EAAM,IAAIlG,EAAI2b,MAAMxd,EAAI,EAAGA,KAAK+H,IAElC,MAAO,GAAGlG,EAAI2b,MAAM,EAAGxd,KAAK+H,GAC9B,CAYA,SAAS8c,EAAY1H,EAAOnZ,EAAKK,EAAKuY,EAAK8D,EAAQlhB,GACjD,GAAI2d,EAAQ9Y,GAAO8Y,EAAQnZ,EAAK,CAC9B,MAAMkO,EAAmB,iBAARlO,EAAmB,IAAM,GAC1C,IAAImmB,EAWJ,MARIA,EAFA3qB,EAAa,EACH,IAARwE,GAAaA,IAAQ8gB,OAAO,GACtB,OAAO5S,YAAYA,QAA2B,GAAlB1S,EAAa,KAAS0S,IAElD,SAASA,QAA2B,GAAlB1S,EAAa,GAAS,IAAI0S,iBACtB,GAAlB1S,EAAa,GAAS,IAAI0S,IAGhC,MAAMlO,IAAMkO,YAAY7N,IAAM6N,IAElC,IAAIsX,EAAOY,iBAAiB,QAASD,EAAOhN,EACpD,EAtBF,SAAsBP,EAAK8D,EAAQlhB,GACjC8mB,EAAe5F,EAAQ,eACHxF,IAAhB0B,EAAI8D,SAAsDxF,IAA7B0B,EAAI8D,EAASlhB,IAC5CinB,EAAY/F,EAAQ9D,EAAIlc,QAAUlB,EAAa,GAEnD,CAkBE6qB,CAAYzN,EAAK8D,EAAQlhB,EAC3B,CAEA,SAAS8mB,EAAgBnJ,EAAOlD,GAC9B,GAAqB,iBAAVkD,EACT,MAAM,IAAIqM,EAAOc,qBAAqBrQ,EAAM,SAAUkD,EAE1D,CAEA,SAASsJ,EAAatJ,EAAOzc,EAAQ+d,GACnC,GAAI1a,KAAKwmB,MAAMpN,KAAWA,EAExB,MADAmJ,EAAenJ,EAAOsB,GAChB,IAAI+K,EAAOY,iBAAiB3L,GAAQ,SAAU,aAActB,GAGpE,GAAIzc,EAAS,EACX,MAAM,IAAI8oB,EAAOgB,yBAGnB,MAAM,IAAIhB,EAAOY,iBAAiB3L,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAY/d,IAC7Byc,EACpC,CAvFAsM,EAAE,4BACA,SAAUxP,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACT,GAAG0C,YACL8M,EAAE,wBACA,SAAUxP,EAAMqD,GACd,MAAO,QAAQrD,4DAA+DqD,GAChF,GAAGL,WACLwM,EAAE,oBACA,SAAU7lB,EAAKumB,EAAO/O,GACpB,IAAItZ,EAAM,iBAAiB8B,sBACvB6mB,EAAWrP,EAWf,OAVIuF,OAAO+J,UAAUtP,IAAUrX,KAAKgF,IAAIqS,GAAS,GAAK,GACpDqP,EAAWP,EAAsB9J,OAAOhF,IACd,iBAAVA,IAChBqP,EAAWrK,OAAOhF,IACdA,EAAQ0J,OAAO,IAAMA,OAAO,KAAO1J,IAAU0J,OAAO,IAAMA,OAAO,QACnE2F,EAAWP,EAAsBO,IAEnCA,GAAY,KAEd3oB,GAAO,eAAeqoB,eAAmBM,IAClC3oB,CACT,GAAG6a,YAiEL,MAAMgO,EAAoB,oBAgB1B,SAASzL,EAAa7b,EAAQme,GAE5B,IAAIG,EADJH,EAAQA,GAASoJ,IAEjB,MAAMlqB,EAAS2C,EAAO3C,OACtB,IAAImqB,EAAgB,KACpB,MAAMrG,EAAQ,GAEd,IAAK,IAAIxkB,EAAI,EAAGA,EAAIU,IAAUV,EAAG,CAI/B,GAHA2hB,EAAYte,EAAO9C,WAAWP,GAG1B2hB,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKkJ,EAAe,CAElB,GAAIlJ,EAAY,MAAQ,EAEjBH,GAAS,IAAM,GAAGgD,EAAMzjB,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAIf,EAAI,IAAMU,EAAQ,EAEtB8gB,GAAS,IAAM,GAAGgD,EAAMzjB,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA8pB,EAAgBlJ,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBH,GAAS,IAAM,GAAGgD,EAAMzjB,KAAK,IAAM,IAAM,KAC9C8pB,EAAgBlJ,EAChB,QACF,CAGAA,EAAkE,OAArDkJ,EAAgB,OAAU,GAAKlJ,EAAY,MAC1D,MAAWkJ,IAEJrJ,GAAS,IAAM,GAAGgD,EAAMzjB,KAAK,IAAM,IAAM,KAMhD,GAHA8pB,EAAgB,KAGZlJ,EAAY,IAAM,CACpB,IAAKH,GAAS,GAAK,EAAG,MACtBgD,EAAMzjB,KAAK4gB,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKH,GAAS,GAAK,EAAG,MACtBgD,EAAMzjB,KACJ4gB,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKH,GAAS,GAAK,EAAG,MACtBgD,EAAMzjB,KACJ4gB,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIrgB,MAAM,sBARhB,IAAKkgB,GAAS,GAAK,EAAG,MACtBgD,EAAMzjB,KACJ4gB,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAO6C,CACT,CA2BA,SAASrF,EAAevb,GACtB,OAAOuY,EAAOrc,YAxHhB,SAAsB8D,GAMpB,IAFAA,GAFAA,EAAMA,EAAIoX,MAAM,KAAK,IAEX8I,OAAOlf,QAAQ+lB,EAAmB,KAEpCjqB,OAAS,EAAG,MAAO,GAE3B,KAAOkD,EAAIlD,OAAS,GAAM,GACxBkD,GAAY,IAEd,OAAOA,CACT,CA4G4BknB,CAAYlnB,GACxC,CAEA,SAASsd,EAAY/c,EAAK4mB,EAAKrK,EAAQhgB,GACrC,IAAIV,EACJ,IAAKA,EAAI,EAAGA,EAAIU,KACTV,EAAI0gB,GAAUqK,EAAIrqB,QAAYV,GAAKmE,EAAIzD,UADpBV,EAExB+qB,EAAI/qB,EAAI0gB,GAAUvc,EAAInE,GAExB,OAAOA,CACT,CAKA,SAAS6d,EAAYQ,EAAKI,GACxB,OAAOJ,aAAeI,GACZ,MAAPJ,GAAkC,MAAnBA,EAAIhc,aAA+C,MAAxBgc,EAAIhc,YAAY4X,MACzDoE,EAAIhc,YAAY4X,OAASwE,EAAKxE,IACpC,CACA,SAASuE,EAAaH,GAEpB,OAAOA,GAAQA,CACjB,CAIA,MAAMkG,EAAsB,WAC1B,MAAMyG,EAAW,mBACXC,EAAQ,IAAI7pB,MAAM,KACxB,IAAK,IAAIpB,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMkrB,EAAU,GAAJlrB,EACZ,IAAK,IAAIiF,EAAI,EAAGA,EAAI,KAAMA,EACxBgmB,EAAMC,EAAMjmB,GAAK+lB,EAAShrB,GAAKgrB,EAAS/lB,EAE5C,CACA,OAAOgmB,CACR,CAV2B,GAa5B,SAAS5E,EAAoB8E,GAC3B,MAAyB,oBAAXrG,OAAyBsG,EAAyBD,CAClE,CAEA,SAASC,IACP,MAAM,IAAI9pB,MAAM,uBAClB,iBCnjEAnC,EAAQksB,WA6IR,SAAoBC,GAQnB,GAPAA,EAAK,IAAM3oB,KAAK4oB,UAAY,KAAO,IAClC5oB,KAAK6oB,WACJ7oB,KAAK4oB,UAAY,MAAQ,KAC1BD,EAAK,IACJ3oB,KAAK4oB,UAAY,MAAQ,KAC1B,IAAMnsB,EAAOD,QAAQssB,SAAS9oB,KAAK0S,OAE/B1S,KAAK4oB,UACT,OAGD,MAAMhoB,EAAI,UAAYZ,KAAK+oB,MAC3BJ,EAAKK,OAAO,EAAG,EAAGpoB,EAAG,kBAKrB,IAAID,EAAQ,EACRsoB,EAAQ,EACZN,EAAK,GAAG1mB,QAAQ,eAAeinB,IAChB,OAAVA,IAGJvoB,IACc,OAAVuoB,IAGHD,EAAQtoB,GACT,IAGDgoB,EAAKK,OAAOC,EAAO,EAAGroB,EACvB,EA7KApE,EAAQ2sB,KA+LR,SAAcC,GACb,IACKA,EACH5sB,EAAQ6sB,QAAQC,QAAQ,QAASF,GAEjC5sB,EAAQ6sB,QAAQE,WAAW,QAE7B,CAAE,MAAOtJ,GAGT,CACD,EAzMAzjB,EAAQgtB,KAiNR,WACC,IAAIzoB,EACJ,IACCA,EAAIvE,EAAQ6sB,QAAQI,QAAQ,QAC7B,CAAE,MAAOxJ,GAGT,CAOA,OAJKlf,GAAwB,oBAAZ2oB,SAA2B,QAASA,UACpD3oB,EAAI2oB,QAAQC,IAAIC,OAGV7oB,CACR,EA/NAvE,EAAQosB,UAyGR,WAIC,GAAsB,oBAAXroB,QAA0BA,OAAOmpB,UAAoC,aAAxBnpB,OAAOmpB,QAAQ5N,MAAuBvb,OAAOmpB,QAAQG,QAC5G,OAAO,EAIR,GAAyB,oBAAdC,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUtN,cAAcyM,MAAM,yBACtG,OAAO,EAGR,IAAI1Z,EAIJ,MAA4B,oBAAbwa,UAA4BA,SAASC,iBAAmBD,SAASC,gBAAgBC,OAASF,SAASC,gBAAgBC,MAAMC,kBAEpH,oBAAX5pB,QAA0BA,OAAOyf,UAAYzf,OAAOyf,QAAQoK,SAAY7pB,OAAOyf,QAAQqK,WAAa9pB,OAAOyf,QAAQsI,QAGrG,oBAAdwB,WAA6BA,UAAUC,YAAcva,EAAIsa,UAAUC,UAAUtN,cAAcyM,MAAM,oBAAsB9K,SAAS5O,EAAE,GAAI,KAAO,IAE/H,oBAAdsa,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUtN,cAAcyM,MAAM,qBACtG,EAjIA1sB,EAAQ6sB,QA2OR,WACC,IAGC,OAAOiB,YACR,CAAE,MAAOrK,GAGT,CACD,CApPkBsK,GAClB/tB,EAAQguB,QAAU,MACjB,IAAIC,GAAS,EAEb,MAAO,KACDA,IACJA,GAAS,EACTzK,QAAQ0K,KAAK,yIACd,CAED,EATiB,GAelBluB,EAAQmuB,OAAS,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAwFDnuB,EAAQouB,IAAM5K,QAAQ6K,OAAS7K,QAAQ4K,KAAO,MAAS,GAkEvDnuB,EAAOD,QAAU,EAAQ,IAAR,CAAoBA,GAErC,MAAM,WAACsuB,GAAcruB,EAAOD,QAM5BsuB,EAAWxoB,EAAI,SAAUyoB,GACxB,IACC,OAAOC,KAAKC,UAAUF,EACvB,CAAE,MAAO9K,GACR,MAAO,+BAAiCA,EAAMqH,OAC/C,CACD,iBCGA7qB,EAAOD,QA3QP,SAAemtB,GAqDd,SAASuB,EAAYrC,GACpB,IAAIsC,EAEAC,EACAC,EAFAC,EAAiB,KAIrB,SAAST,KAASlC,GAEjB,IAAKkC,EAAMU,QACV,OAGD,MAAM3uB,EAAOiuB,EAGPW,EAAOxN,OAAO,IAAIyN,MAClBC,EAAKF,GAAQL,GAAYK,GAC/B5uB,EAAK8V,KAAOgZ,EACZ9uB,EAAK+b,KAAOwS,EACZvuB,EAAK4uB,KAAOA,EACZL,EAAWK,EAEX7C,EAAK,GAAKuC,EAAYS,OAAOhD,EAAK,IAEX,iBAAZA,EAAK,IAEfA,EAAKiD,QAAQ,MAId,IAAIjrB,EAAQ,EACZgoB,EAAK,GAAKA,EAAK,GAAG1mB,QAAQ,iBAAiB,CAACinB,EAAO2C,KAElD,GAAc,OAAV3C,EACH,MAAO,IAERvoB,IACA,MAAMmrB,EAAYZ,EAAYJ,WAAWe,GACzC,GAAyB,mBAAdC,EAA0B,CACpC,MAAM5sB,EAAMypB,EAAKhoB,GACjBuoB,EAAQ4C,EAAUrU,KAAK7a,EAAMsC,GAG7BypB,EAAKK,OAAOroB,EAAO,GACnBA,GACD,CACA,OAAOuoB,CAAK,IAIbgC,EAAYxC,WAAWjR,KAAK7a,EAAM+rB,IAEpB/rB,EAAKguB,KAAOM,EAAYN,KAChCnL,MAAM7iB,EAAM+rB,EACnB,CAgCA,OA9BAkC,EAAMhC,UAAYA,EAClBgC,EAAMjC,UAAYsC,EAAYtC,YAC9BiC,EAAM9B,MAAQmC,EAAYa,YAAYlD,GACtCgC,EAAMmB,OAASA,EACfnB,EAAML,QAAUU,EAAYV,QAE5BtQ,OAAOgG,eAAe2K,EAAO,UAAW,CACvC1K,YAAY,EACZiH,cAAc,EACdhH,IAAK,IACmB,OAAnBkL,EACIA,GAEJF,IAAoBF,EAAY9B,aACnCgC,EAAkBF,EAAY9B,WAC9BiC,EAAeH,EAAYK,QAAQ1C,IAG7BwC,GAERxK,IAAKkK,IACJO,EAAiBP,CAAC,IAKY,mBAArBG,EAAYe,MACtBf,EAAYe,KAAKpB,GAGXA,CACR,CAEA,SAASmB,EAAOnD,EAAWqD,GAC1B,MAAMC,EAAWjB,EAAYlrB,KAAK6oB,gBAAkC,IAAdqD,EAA4B,IAAMA,GAAarD,GAErG,OADAsD,EAASvB,IAAM5qB,KAAK4qB,IACbuB,CACR,CAwFA,SAASC,EAAYC,GACpB,OAAOA,EAAOrqB,WACZsqB,UAAU,EAAGD,EAAOrqB,WAAWjE,OAAS,GACxCkE,QAAQ,UAAW,IACtB,CA0BA,OAvQAipB,EAAYL,MAAQK,EACpBA,EAAYqB,QAAUrB,EACtBA,EAAYS,OAoPZ,SAAgBzsB,GACf,OAAIA,aAAeP,MACXO,EAAImoB,OAASnoB,EAAIooB,QAElBpoB,CACR,EAxPAgsB,EAAYsB,QAwLZ,WACC,MAAMpD,EAAa,IACf8B,EAAYuB,MAAMC,IAAIN,MACtBlB,EAAYyB,MAAMD,IAAIN,GAAaM,KAAI7D,GAAa,IAAMA,KAC5DtqB,KAAK,KAEP,OADA2sB,EAAY0B,OAAO,IACZxD,CACR,EA9LA8B,EAAY0B,OAsJZ,SAAgBxD,GAOf,IAAI/rB,EANJ6tB,EAAY/B,KAAKC,GACjB8B,EAAY9B,WAAaA,EAEzB8B,EAAYuB,MAAQ,GACpBvB,EAAYyB,MAAQ,GAGpB,MAAMtU,GAA+B,iBAAf+Q,EAA0BA,EAAa,IAAI/Q,MAAM,UACjE3a,EAAM2a,EAAMta,OAElB,IAAKV,EAAI,EAAGA,EAAIK,EAAKL,IACfgb,EAAMhb,KAOW,OAFtB+rB,EAAa/Q,EAAMhb,GAAG4E,QAAQ,MAAO,QAEtB,GACdipB,EAAYyB,MAAMvuB,KAAK,IAAIyuB,OAAO,IAAMzD,EAAWvO,MAAM,GAAK,MAE9DqQ,EAAYuB,MAAMruB,KAAK,IAAIyuB,OAAO,IAAMzD,EAAa,MAGxD,EA9KA8B,EAAYK,QAsMZ,SAAiBjU,GAChB,GAA8B,MAA1BA,EAAKA,EAAKvZ,OAAS,GACtB,OAAO,EAGR,IAAIV,EACAK,EAEJ,IAAKL,EAAI,EAAGK,EAAMwtB,EAAYyB,MAAM5uB,OAAQV,EAAIK,EAAKL,IACpD,GAAI6tB,EAAYyB,MAAMtvB,GAAGyvB,KAAKxV,GAC7B,OAAO,EAIT,IAAKja,EAAI,EAAGK,EAAMwtB,EAAYuB,MAAM1uB,OAAQV,EAAIK,EAAKL,IACpD,GAAI6tB,EAAYuB,MAAMpvB,GAAGyvB,KAAKxV,GAC7B,OAAO,EAIT,OAAO,CACR,EA1NA4T,EAAYpC,SAAW,EAAQ,KAC/BoC,EAAYV,QA0PZ,WACCxK,QAAQ0K,KAAK,wIACd,EA1PAxQ,OAAO6S,KAAKpD,GAAKqD,SAAQC,IACxB/B,EAAY+B,GAAOtD,EAAIsD,EAAI,IAO5B/B,EAAYuB,MAAQ,GACpBvB,EAAYyB,MAAQ,GAOpBzB,EAAYJ,WAAa,CAAC,EAkB1BI,EAAYa,YAVZ,SAAqBlD,GACpB,IAAIqE,EAAO,EAEX,IAAK,IAAI7vB,EAAI,EAAGA,EAAIwrB,EAAU9qB,OAAQV,IACrC6vB,GAASA,GAAQ,GAAKA,EAAQrE,EAAUjrB,WAAWP,GACnD6vB,GAAQ,EAGT,OAAOhC,EAAYP,OAAOvpB,KAAKgF,IAAI8mB,GAAQhC,EAAYP,OAAO5sB,OAC/D,EA2NAmtB,EAAY0B,OAAO1B,EAAY1B,QAExB0B,CACR,sBCxPA,IAOIiC,EAPAC,EAAuB,iBAAZC,QAAuBA,QAAU,KAC5CC,EAAeF,GAAwB,mBAAZA,EAAE3N,MAC7B2N,EAAE3N,MACF,SAAsB2B,EAAQmM,EAAU5E,GACxC,OAAO6E,SAAS/tB,UAAUggB,MAAMhI,KAAK2J,EAAQmM,EAAU5E,EACzD,EAIAwE,EADEC,GAA0B,mBAAdA,EAAEK,QACCL,EAAEK,QACVvT,OAAOwT,sBACC,SAAwBtM,GACvC,OAAOlH,OAAOyT,oBAAoBvM,GAC/BV,OAAOxG,OAAOwT,sBAAsBtM,GACzC,EAEiB,SAAwBA,GACvC,OAAOlH,OAAOyT,oBAAoBvM,EACpC,EAOF,IAAIwM,EAAc5P,OAAO6P,OAAS,SAAqBrT,GACrD,OAAOA,GAAUA,CACnB,EAEA,SAASsT,IACPA,EAAa7B,KAAKxU,KAAKzX,KACzB,CACAvD,EAAOD,QAAUsxB,EACjBrxB,EAAOD,QAAQuxB,KAwYf,SAAcC,EAAS1W,GACrB,OAAO,IAAI2W,SAAQ,SAAUC,EAASC,GACpC,SAASC,EAAcC,GACrBL,EAAQM,eAAehX,EAAMiX,GAC7BJ,EAAOE,EACT,CAEA,SAASE,IAC+B,mBAA3BP,EAAQM,gBACjBN,EAAQM,eAAe,QAASF,GAElCF,EAAQ,GAAGrT,MAAMpD,KAAK4E,WACxB,CAEAmS,EAA+BR,EAAS1W,EAAMiX,EAAU,CAAER,MAAM,IACnD,UAATzW,GAMR,SAAuC0W,EAASS,GACpB,mBAAfT,EAAQU,IACjBF,EAA+BR,EAAS,QAASS,EAPO,CAAEV,MAAM,GASpE,CATMY,CAA8BX,EAASI,EAE3C,GACF,EAxZAN,EAAaA,aAAeA,EAE5BA,EAAaruB,UAAUmvB,aAAUrW,EACjCuV,EAAaruB,UAAUovB,aAAe,EACtCf,EAAaruB,UAAUqvB,mBAAgBvW,EAIvC,IAAIwW,EAAsB,GAE1B,SAASC,EAAcC,GACrB,GAAwB,mBAAbA,EACT,MAAM,IAAI3U,UAAU,0EAA4E2U,EAEpG,CAoCA,SAASC,EAAiBC,GACxB,YAA2B5W,IAAvB4W,EAAKL,cACAhB,EAAaiB,oBACfI,EAAKL,aACd,CAkDA,SAASM,EAAahO,EAAQtF,EAAMmT,EAAUI,GAC5C,IAAI7f,EACA8f,EACAC,EA1HsBC,EAgJ1B,GApBAR,EAAcC,QAGC1W,KADf+W,EAASlO,EAAOwN,UAEdU,EAASlO,EAAOwN,QAAU1U,OAAOuV,OAAO,MACxCrO,EAAOyN,aAAe,SAIKtW,IAAvB+W,EAAOI,cACTtO,EAAOuO,KAAK,cAAe7T,EACfmT,EAASA,SAAWA,EAASA,SAAWA,GAIpDK,EAASlO,EAAOwN,SAElBW,EAAWD,EAAOxT,SAGHvD,IAAbgX,EAEFA,EAAWD,EAAOxT,GAAQmT,IACxB7N,EAAOyN,kBAeT,GAbwB,mBAAbU,EAETA,EAAWD,EAAOxT,GAChBuT,EAAU,CAACJ,EAAUM,GAAY,CAACA,EAAUN,GAErCI,EACTE,EAAS3D,QAAQqD,GAEjBM,EAASnxB,KAAK6wB,IAIhBzf,EAAI0f,EAAiB9N,IACb,GAAKmO,EAASxxB,OAASyR,IAAM+f,EAAS9E,OAAQ,CACpD8E,EAAS9E,QAAS,EAGlB,IAAIloB,EAAI,IAAI5D,MAAM,+CACE4wB,EAASxxB,OAAS,IAAM0f,OAAO3B,GADjC,qEAIlBvZ,EAAE+U,KAAO,8BACT/U,EAAEyrB,QAAU5M,EACZ7e,EAAEuZ,KAAOA,EACTvZ,EAAEqtB,MAAQL,EAASxxB,OA7KGyxB,EA8KHjtB,EA7KnByd,SAAWA,QAAQ0K,MAAM1K,QAAQ0K,KAAK8E,EA8KxC,CAGF,OAAOpO,CACT,CAaA,SAASyO,IACP,IAAK7vB,KAAK8vB,MAGR,OAFA9vB,KAAKohB,OAAOkN,eAAetuB,KAAK8b,KAAM9b,KAAK+vB,QAC3C/vB,KAAK8vB,OAAQ,EACY,IAArBzT,UAAUte,OACLiC,KAAKivB,SAASxX,KAAKzX,KAAKohB,QAC1BphB,KAAKivB,SAASxP,MAAMzf,KAAKohB,OAAQ/E,UAE5C,CAEA,SAAS2T,EAAU5O,EAAQtF,EAAMmT,GAC/B,IAAIgB,EAAQ,CAAEH,OAAO,EAAOC,YAAQxX,EAAW6I,OAAQA,EAAQtF,KAAMA,EAAMmT,SAAUA,GACjFiB,EAAUL,EAAYM,KAAKF,GAG/B,OAFAC,EAAQjB,SAAWA,EACnBgB,EAAMF,OAASG,EACRA,CACT,CAyHA,SAASE,EAAWhP,EAAQtF,EAAMuU,GAChC,IAAIf,EAASlO,EAAOwN,QAEpB,QAAerW,IAAX+W,EACF,MAAO,GAET,IAAIgB,EAAahB,EAAOxT,GACxB,YAAmBvD,IAAf+X,EACK,GAEiB,mBAAfA,EACFD,EAAS,CAACC,EAAWrB,UAAYqB,GAAc,CAACA,GAElDD,EAsDT,SAAyB/yB,GAEvB,IADA,IAAIwH,EAAM,IAAIrG,MAAMnB,EAAIS,QACfV,EAAI,EAAGA,EAAIyH,EAAI/G,SAAUV,EAChCyH,EAAIzH,GAAKC,EAAID,GAAG4xB,UAAY3xB,EAAID,GAElC,OAAOyH,CACT,CA3DIyrB,CAAgBD,GAAcE,EAAWF,EAAYA,EAAWvyB,OACpE,CAmBA,SAAS0yB,EAAc3U,GACrB,IAAIwT,EAAStvB,KAAK4uB,QAElB,QAAerW,IAAX+W,EAAsB,CACxB,IAAIgB,EAAahB,EAAOxT,GAExB,GAA0B,mBAAfwU,EACT,OAAO,EACF,QAAmB/X,IAAf+X,EACT,OAAOA,EAAWvyB,MAEtB,CAEA,OAAO,CACT,CAMA,SAASyyB,EAAWlzB,EAAKiS,GAEvB,IADA,IAAIrM,EAAO,IAAIzE,MAAM8Q,GACZlS,EAAI,EAAGA,EAAIkS,IAAKlS,EACvB6F,EAAK7F,GAAKC,EAAID,GAChB,OAAO6F,CACT,CA2CA,SAASsrB,EAA+BR,EAAS1W,EAAM2X,EAAUyB,GAC/D,GAA0B,mBAAf1C,EAAQU,GACbgC,EAAM3C,KACRC,EAAQD,KAAKzW,EAAM2X,GAEnBjB,EAAQU,GAAGpX,EAAM2X,OAEd,IAAwC,mBAA7BjB,EAAQ2C,iBAYxB,MAAM,IAAIrW,UAAU,6EAA+E0T,GATnGA,EAAQ2C,iBAAiBrZ,GAAM,SAASsZ,EAAaxW,GAG/CsW,EAAM3C,MACRC,EAAQ6C,oBAAoBvZ,EAAMsZ,GAEpC3B,EAAS7U,EACX,GAGF,CACF,CAraAF,OAAOgG,eAAe4N,EAAc,sBAAuB,CACzD3N,YAAY,EACZC,IAAK,WACH,OAAO2O,CACT,EACAlO,IAAK,SAASzG,GACZ,GAAmB,iBAARA,GAAoBA,EAAM,GAAKwT,EAAYxT,GACpD,MAAM,IAAIJ,WAAW,kGAAoGI,EAAM,KAEjI2U,EAAsB3U,CACxB,IAGF0T,EAAa7B,KAAO,gBAEG1T,IAAjBvY,KAAK4uB,SACL5uB,KAAK4uB,UAAY1U,OAAO4W,eAAe9wB,MAAM4uB,UAC/C5uB,KAAK4uB,QAAU1U,OAAOuV,OAAO,MAC7BzvB,KAAK6uB,aAAe,GAGtB7uB,KAAK8uB,cAAgB9uB,KAAK8uB,oBAAiBvW,CAC7C,EAIAuV,EAAaruB,UAAUsxB,gBAAkB,SAAyBxhB,GAChE,GAAiB,iBAANA,GAAkBA,EAAI,GAAKqe,EAAYre,GAChD,MAAM,IAAIyK,WAAW,gFAAkFzK,EAAI,KAG7G,OADAvP,KAAK8uB,cAAgBvf,EACdvP,IACT,EAQA8tB,EAAaruB,UAAUuxB,gBAAkB,WACvC,OAAO9B,EAAiBlvB,KAC1B,EAEA8tB,EAAaruB,UAAUkwB,KAAO,SAAc7T,GAE1C,IADA,IAAI6M,EAAO,GACFtrB,EAAI,EAAGA,EAAIgf,UAAUte,OAAQV,IAAKsrB,EAAKvqB,KAAKie,UAAUhf,IAC/D,IAAI4zB,EAAoB,UAATnV,EAEXwT,EAAStvB,KAAK4uB,QAClB,QAAerW,IAAX+W,EACF2B,EAAWA,QAA4B1Y,IAAjB+W,EAAOrP,WAC1B,IAAKgR,EACR,OAAO,EAGT,GAAIA,EAAS,CACX,IAAIC,EAGJ,GAFIvI,EAAK5qB,OAAS,IAChBmzB,EAAKvI,EAAK,IACRuI,aAAcvyB,MAGhB,MAAMuyB,EAGR,IAAI7C,EAAM,IAAI1vB,MAAM,oBAAsBuyB,EAAK,KAAOA,EAAG5J,QAAU,IAAM,KAEzE,MADA+G,EAAI8C,QAAUD,EACR7C,CACR,CAEA,IAAII,EAAUa,EAAOxT,GAErB,QAAgBvD,IAAZkW,EACF,OAAO,EAET,GAAuB,mBAAZA,EACTnB,EAAamB,EAASzuB,KAAM2oB,OAE5B,KAAIjrB,EAAM+wB,EAAQ1wB,OACdqzB,EAAYZ,EAAW/B,EAAS/wB,GACpC,IAASL,EAAI,EAAGA,EAAIK,IAAOL,EACzBiwB,EAAa8D,EAAU/zB,GAAI2C,KAAM2oB,EAHX,CAM1B,OAAO,CACT,EAgEAmF,EAAaruB,UAAU4xB,YAAc,SAAqBvV,EAAMmT,GAC9D,OAAOG,EAAapvB,KAAM8b,EAAMmT,GAAU,EAC5C,EAEAnB,EAAaruB,UAAUivB,GAAKZ,EAAaruB,UAAU4xB,YAEnDvD,EAAaruB,UAAU6xB,gBACnB,SAAyBxV,EAAMmT,GAC7B,OAAOG,EAAapvB,KAAM8b,EAAMmT,GAAU,EAC5C,EAoBJnB,EAAaruB,UAAUsuB,KAAO,SAAcjS,EAAMmT,GAGhD,OAFAD,EAAcC,GACdjvB,KAAK0uB,GAAG5S,EAAMkU,EAAUhwB,KAAM8b,EAAMmT,IAC7BjvB,IACT,EAEA8tB,EAAaruB,UAAU8xB,oBACnB,SAA6BzV,EAAMmT,GAGjC,OAFAD,EAAcC,GACdjvB,KAAKsxB,gBAAgBxV,EAAMkU,EAAUhwB,KAAM8b,EAAMmT,IAC1CjvB,IACT,EAGJ8tB,EAAaruB,UAAU6uB,eACnB,SAAwBxS,EAAMmT,GAC5B,IAAItO,EAAM2O,EAAQ9pB,EAAUnI,EAAGm0B,EAK/B,GAHAxC,EAAcC,QAGC1W,KADf+W,EAAStvB,KAAK4uB,SAEZ,OAAO5uB,KAGT,QAAauY,KADboI,EAAO2O,EAAOxT,IAEZ,OAAO9b,KAET,GAAI2gB,IAASsO,GAAYtO,EAAKsO,WAAaA,EACb,KAAtBjvB,KAAK6uB,aACT7uB,KAAK4uB,QAAU1U,OAAOuV,OAAO,cAEtBH,EAAOxT,GACVwT,EAAOhB,gBACTtuB,KAAK2vB,KAAK,iBAAkB7T,EAAM6E,EAAKsO,UAAYA,SAElD,GAAoB,mBAATtO,EAAqB,CAGrC,IAFAnb,GAAY,EAEPnI,EAAIsjB,EAAK5iB,OAAS,EAAGV,GAAK,EAAGA,IAChC,GAAIsjB,EAAKtjB,KAAO4xB,GAAYtO,EAAKtjB,GAAG4xB,WAAaA,EAAU,CACzDuC,EAAmB7Q,EAAKtjB,GAAG4xB,SAC3BzpB,EAAWnI,EACX,KACF,CAGF,GAAImI,EAAW,EACb,OAAOxF,KAEQ,IAAbwF,EACFmb,EAAKlb,QAiIf,SAAmBkb,EAAMhgB,GACvB,KAAOA,EAAQ,EAAIggB,EAAK5iB,OAAQ4C,IAC9BggB,EAAKhgB,GAASggB,EAAKhgB,EAAQ,GAC7BggB,EAAK8Q,KACP,CAnIUC,CAAU/Q,EAAMnb,GAGE,IAAhBmb,EAAK5iB,SACPuxB,EAAOxT,GAAQ6E,EAAK,SAEQpI,IAA1B+W,EAAOhB,gBACTtuB,KAAK2vB,KAAK,iBAAkB7T,EAAM0V,GAAoBvC,EAC1D,CAEA,OAAOjvB,IACT,EAEJ8tB,EAAaruB,UAAU+C,IAAMsrB,EAAaruB,UAAU6uB,eAEpDR,EAAaruB,UAAUkyB,mBACnB,SAA4B7V,GAC1B,IAAIsV,EAAW9B,EAAQjyB,EAGvB,QAAekb,KADf+W,EAAStvB,KAAK4uB,SAEZ,OAAO5uB,KAGT,QAA8BuY,IAA1B+W,EAAOhB,eAUT,OATyB,IAArBjS,UAAUte,QACZiC,KAAK4uB,QAAU1U,OAAOuV,OAAO,MAC7BzvB,KAAK6uB,aAAe,QACMtW,IAAjB+W,EAAOxT,KACY,KAAtB9b,KAAK6uB,aACT7uB,KAAK4uB,QAAU1U,OAAOuV,OAAO,aAEtBH,EAAOxT,IAEX9b,KAIT,GAAyB,IAArBqc,UAAUte,OAAc,CAC1B,IACIkvB,EADAF,EAAO7S,OAAO6S,KAAKuC,GAEvB,IAAKjyB,EAAI,EAAGA,EAAI0vB,EAAKhvB,SAAUV,EAEjB,oBADZ4vB,EAAMF,EAAK1vB,KAEX2C,KAAK2xB,mBAAmB1E,GAK1B,OAHAjtB,KAAK2xB,mBAAmB,kBACxB3xB,KAAK4uB,QAAU1U,OAAOuV,OAAO,MAC7BzvB,KAAK6uB,aAAe,EACb7uB,IACT,CAIA,GAAyB,mBAFzBoxB,EAAY9B,EAAOxT,IAGjB9b,KAAKsuB,eAAexS,EAAMsV,QACrB,QAAkB7Y,IAAd6Y,EAET,IAAK/zB,EAAI+zB,EAAUrzB,OAAS,EAAGV,GAAK,EAAGA,IACrC2C,KAAKsuB,eAAexS,EAAMsV,EAAU/zB,IAIxC,OAAO2C,IACT,EAmBJ8tB,EAAaruB,UAAU2xB,UAAY,SAAmBtV,GACpD,OAAOsU,EAAWpwB,KAAM8b,GAAM,EAChC,EAEAgS,EAAaruB,UAAUmyB,aAAe,SAAsB9V,GAC1D,OAAOsU,EAAWpwB,KAAM8b,GAAM,EAChC,EAEAgS,EAAa2C,cAAgB,SAASzC,EAASlS,GAC7C,MAAqC,mBAA1BkS,EAAQyC,cACVzC,EAAQyC,cAAc3U,GAEtB2U,EAAchZ,KAAKuW,EAASlS,EAEvC,EAEAgS,EAAaruB,UAAUgxB,cAAgBA,EAiBvC3C,EAAaruB,UAAUoyB,WAAa,WAClC,OAAO7xB,KAAK6uB,aAAe,EAAI1B,EAAentB,KAAK4uB,SAAW,EAChE,eCxaApyB,EAAQkhB,KAAO,SAAUtC,EAAQ2C,EAAQ+T,EAAMC,EAAMC,GACnD,IAAIxxB,EAAGgP,EACHyiB,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT/0B,EAAIy0B,EAAQE,EAAS,EAAK,EAC1BK,EAAIP,GAAQ,EAAI,EAChBtjB,EAAI4M,EAAO2C,EAAS1gB,GAOxB,IALAA,GAAKg1B,EAEL7xB,EAAIgO,GAAM,IAAO4jB,GAAU,EAC3B5jB,KAAQ4jB,EACRA,GAASH,EACFG,EAAQ,EAAG5xB,EAAS,IAAJA,EAAW4a,EAAO2C,EAAS1gB,GAAIA,GAAKg1B,EAAGD,GAAS,GAKvE,IAHA5iB,EAAIhP,GAAM,IAAO4xB,GAAU,EAC3B5xB,KAAQ4xB,EACRA,GAASL,EACFK,EAAQ,EAAG5iB,EAAS,IAAJA,EAAW4L,EAAO2C,EAAS1gB,GAAIA,GAAKg1B,EAAGD,GAAS,GAEvE,GAAU,IAAN5xB,EACFA,EAAI,EAAI2xB,MACH,IAAI3xB,IAAM0xB,EACf,OAAO1iB,EAAI8iB,IAAsBrK,KAAdzZ,GAAK,EAAI,GAE5BgB,GAAQpO,KAAK6B,IAAI,EAAG8uB,GACpBvxB,GAAQ2xB,CACV,CACA,OAAQ3jB,GAAK,EAAI,GAAKgB,EAAIpO,KAAK6B,IAAI,EAAGzC,EAAIuxB,EAC5C,EAEAv1B,EAAQoe,MAAQ,SAAUQ,EAAQZ,EAAOuD,EAAQ+T,EAAMC,EAAMC,GAC3D,IAAIxxB,EAAGgP,EAAG5O,EACNqxB,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBK,EAAe,KAATR,EAAc3wB,KAAK6B,IAAI,GAAI,IAAM7B,KAAK6B,IAAI,GAAI,IAAM,EAC1D5F,EAAIy0B,EAAO,EAAKE,EAAS,EACzBK,EAAIP,EAAO,GAAK,EAChBtjB,EAAIgM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQpZ,KAAKgF,IAAIoU,GAEbqT,MAAMrT,IAAUA,IAAUyN,KAC5BzY,EAAIqe,MAAMrT,GAAS,EAAI,EACvBha,EAAI0xB,IAEJ1xB,EAAIY,KAAKwmB,MAAMxmB,KAAKwpB,IAAIpQ,GAASpZ,KAAKoxB,KAClChY,GAAS5Z,EAAIQ,KAAK6B,IAAI,GAAIzC,IAAM,IAClCA,IACAI,GAAK,IAGL4Z,GADEha,EAAI2xB,GAAS,EACNI,EAAK3xB,EAEL2xB,EAAKnxB,KAAK6B,IAAI,EAAG,EAAIkvB,IAEpBvxB,GAAK,IACfJ,IACAI,GAAK,GAGHJ,EAAI2xB,GAASD,GACf1iB,EAAI,EACJhP,EAAI0xB,GACK1xB,EAAI2xB,GAAS,GACtB3iB,GAAMgL,EAAQ5Z,EAAK,GAAKQ,KAAK6B,IAAI,EAAG8uB,GACpCvxB,GAAQ2xB,IAER3iB,EAAIgL,EAAQpZ,KAAK6B,IAAI,EAAGkvB,EAAQ,GAAK/wB,KAAK6B,IAAI,EAAG8uB,GACjDvxB,EAAI,IAIDuxB,GAAQ,EAAG3W,EAAO2C,EAAS1gB,GAAS,IAAJmS,EAAUnS,GAAKg1B,EAAG7iB,GAAK,IAAKuiB,GAAQ,GAI3E,IAFAvxB,EAAKA,GAAKuxB,EAAQviB,EAClByiB,GAAQF,EACDE,EAAO,EAAG7W,EAAO2C,EAAS1gB,GAAS,IAAJmD,EAAUnD,GAAKg1B,EAAG7xB,GAAK,IAAKyxB,GAAQ,GAE1E7W,EAAO2C,EAAS1gB,EAAIg1B,IAAU,IAAJ7jB,CAC5B,WCpF6B,mBAAlB0L,OAAOuV,OAEhBhzB,EAAOD,QAAU,SAAkB6C,EAAMC,GACnCA,IACFD,EAAKE,OAASD,EACdD,EAAKI,UAAYya,OAAOuV,OAAOnwB,EAAUG,UAAW,CAClDC,YAAa,CACX8a,MAAOnb,EACP8gB,YAAY,EACZgH,UAAU,EACVC,cAAc,KAItB,EAGA3qB,EAAOD,QAAU,SAAkB6C,EAAMC,GACvC,GAAIA,EAAW,CACbD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAASC,UAAYH,EAAUG,UAC/BJ,EAAKI,UAAY,IAAID,EACrBH,EAAKI,UAAUC,YAAcL,CAC/B,CACF,WCrBF,IAAImP,EAAI,IACJgB,EAAQ,GAAJhB,EACJgD,EAAQ,GAAJhC,EACJ6iB,EAAQ,GAAJ7gB,EACJjP,EAAQ,EAAJ8vB,EAsJR,SAASI,EAAO/G,EAAIgH,EAAOnjB,EAAG+H,GAC5B,IAAIqb,EAAWD,GAAa,IAAJnjB,EACxB,OAAOnO,KAAKyO,MAAM6b,EAAKnc,GAAK,IAAM+H,GAAQqb,EAAW,IAAM,GAC7D,CAxIAl2B,EAAOD,QAAU,SAAS0C,EAAK0zB,GAC7BA,EAAUA,GAAW,CAAC,EACtB,IA8GelH,EACXgH,EA/GA5W,SAAc5c,EAClB,GAAa,WAAT4c,GAAqB5c,EAAInB,OAAS,EACpC,OAkBJ,SAAekD,GAEb,MADAA,EAAMwc,OAAOxc,IACLlD,OAAS,KAAjB,CAGA,IAAImrB,EAAQ,mIAAmI2J,KAC7I5xB,GAEF,GAAKioB,EAAL,CAGA,IAAI3Z,EAAIujB,WAAW5J,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMzM,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAzDE4V,SAyDK9iB,EACT,IAAK,QACL,IAAK,OACL,IAAK,IACH,OAAOA,EAAIhN,EACb,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOgN,EAAI8iB,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAO9iB,EAAIiC,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOjC,EAAIC,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOD,EAAIf,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAOe,EACT,QACE,OA3CJ,CANA,CAmDF,CAzEWwjB,CAAM7zB,GACR,GAAa,WAAT4c,GAAqB4F,SAASxiB,GACvC,OAAO0zB,EAAQI,MA0GFtH,EA1GiBxsB,GA2G5BwzB,EAAQtxB,KAAKgF,IAAIslB,KACR2G,EACJI,EAAO/G,EAAIgH,EAAOL,EAAG,OAE1BK,GAASlhB,EACJihB,EAAO/G,EAAIgH,EAAOlhB,EAAG,QAE1BkhB,GAASljB,EACJijB,EAAO/G,EAAIgH,EAAOljB,EAAG,UAE1BkjB,GAASlkB,EACJikB,EAAO/G,EAAIgH,EAAOlkB,EAAG,UAEvBkd,EAAK,OAvCd,SAAkBA,GAChB,IAAIgH,EAAQtxB,KAAKgF,IAAIslB,GACrB,OAAIgH,GAASL,EACJjxB,KAAKyO,MAAM6b,EAAK2G,GAAK,IAE1BK,GAASlhB,EACJpQ,KAAKyO,MAAM6b,EAAKla,GAAK,IAE1BkhB,GAASljB,EACJpO,KAAKyO,MAAM6b,EAAKlc,GAAK,IAE1BkjB,GAASlkB,EACJpN,KAAKyO,MAAM6b,EAAKld,GAAK,IAEvBkd,EAAK,IACd,CAhGyCuH,CAAS/zB,GAEhD,MAAM,IAAIP,MACR,wDACEqsB,KAAKC,UAAU/rB,GAErB,6BClCA,IAUIg0B,EAVY,WAIf,GAAoB,oBAATt2B,KAAwB,OAAOA,KAC1C,GAAsB,oBAAX2D,OAA0B,OAAOA,OAC5C,QAAsB,IAAX,EAAAsT,EAA0B,OAAO,EAAAA,EAC5C,MAAM,IAAIlV,MAAM,iCACjB,CAEmBw0B,GAEnB12B,EAAOD,QAAUA,EAAU02B,EAAaE,MAGpCF,EAAaE,QAChB52B,EAAA,QAAkB02B,EAAaE,MAAMjD,KAAK+C,IAG3C12B,EAAQ62B,QAAUH,EAAaG,QAC/B72B,EAAQ82B,QAAUJ,EAAaI,QAC/B92B,EAAQ+2B,SAAWL,EAAaK,8BCpBhC,IAAIC,EAAQ,CAAC,EAEb,SAASC,EAAgB/0B,EAAM4oB,EAASL,GACjCA,IACHA,EAAOtoB,OAWT,IAAI+0B,EAEJ,SAAUC,GAnBZ,IAAwBC,EAAUC,EAsB9B,SAASH,EAAUI,EAAMC,EAAMC,GAC7B,OAAOL,EAAMlc,KAAKzX,KAdtB,SAAoB8zB,EAAMC,EAAMC,GAC9B,MAAuB,iBAAZ1M,EACFA,EAEAA,EAAQwM,EAAMC,EAAMC,EAE/B,CAQ4BhN,CAAW8M,EAAMC,EAAMC,KAAUh0B,IAC3D,CAEA,OA1B8B6zB,EAoBJF,GApBNC,EAoBLF,GApBsCj0B,UAAYya,OAAOuV,OAAOoE,EAAWp0B,WAAYm0B,EAASn0B,UAAUC,YAAck0B,EAAUA,EAASK,UAAYJ,EA0B/JH,CACT,CARA,CAQEzM,GAEFyM,EAAUj0B,UAAU6X,KAAO2P,EAAK3P,KAChCoc,EAAUj0B,UAAUf,KAAOA,EAC3B80B,EAAM90B,GAAQg1B,CAChB,CAGA,SAASQ,EAAMC,EAAUC,GACvB,GAAI31B,MAAMgD,QAAQ0yB,GAAW,CAC3B,IAAIz2B,EAAMy2B,EAASp2B,OAKnB,OAJAo2B,EAAWA,EAASzH,KAAI,SAAUrvB,GAChC,OAAOogB,OAAOpgB,EAChB,IAEIK,EAAM,EACD,UAAUgjB,OAAO0T,EAAO,KAAK1T,OAAOyT,EAAStZ,MAAM,EAAGnd,EAAM,GAAGa,KAAK,MAAO,SAAW41B,EAASz2B,EAAM,GAC3F,IAARA,EACF,UAAUgjB,OAAO0T,EAAO,KAAK1T,OAAOyT,EAAS,GAAI,QAAQzT,OAAOyT,EAAS,IAEzE,MAAMzT,OAAO0T,EAAO,KAAK1T,OAAOyT,EAAS,GAEpD,CACE,MAAO,MAAMzT,OAAO0T,EAAO,KAAK1T,OAAOjD,OAAO0W,GAElD,CA6BAV,EAAgB,yBAAyB,SAAUnc,EAAMkD,GACvD,MAAO,cAAgBA,EAAQ,4BAA8BlD,EAAO,GACtE,GAAGgD,WACHmZ,EAAgB,wBAAwB,SAAUnc,EAAM6c,EAAUxZ,GAEhE,IAAI0Z,EA/BmBC,EAwCnBn1B,EA1BY8B,EAAapC,EA4B7B,GATwB,iBAAbs1B,IAjCYG,EAiCkC,OAAVH,EAhCpC9V,OAAyB,EAAUiW,KAAmBA,IAiC/DD,EAAa,cACbF,EAAWA,EAASlyB,QAAQ,QAAS,KAErCoyB,EAAa,UAhCjB,SAAkBpzB,EAAKqzB,EAAQC,GAK7B,YAJiBhc,IAAbgc,GAA0BA,EAAWtzB,EAAIlD,UAC3Cw2B,EAAWtzB,EAAIlD,QAGVkD,EAAIqrB,UAAUiI,EAAWD,EAAeC,KAAcD,CAC/D,CA+BME,CAASld,EAAM,aAEjBnY,EAAM,OAAOuhB,OAAOpJ,EAAM,KAAKoJ,OAAO2T,EAAY,KAAK3T,OAAOwT,EAAMC,EAAU,aACzE,CACL,IAAIrY,GA/Be,iBAAVjd,IACTA,EAAQ,GAGNA,EAAQy1B,GALIrzB,EAgCMqW,GA3BUvZ,SAGS,IAAhCkD,EAAIrC,QAwBe,IAxBCC,GAwBmB,WAAb,YACjCM,EAAM,QAASuhB,OAAOpJ,EAAM,MAAOoJ,OAAO5E,EAAM,KAAK4E,OAAO2T,EAAY,KAAK3T,OAAOwT,EAAMC,EAAU,QACtG,CAGA,OADAh1B,EAAO,mBAAmBuhB,cAAc/F,EAE1C,GAAGL,WACHmZ,EAAgB,4BAA6B,2BAC7CA,EAAgB,8BAA8B,SAAUnc,GACtD,MAAO,OAASA,EAAO,4BACzB,IACAmc,EAAgB,6BAA8B,mBAC9CA,EAAgB,wBAAwB,SAAUnc,GAChD,MAAO,eAAiBA,EAAO,+BACjC,IACAmc,EAAgB,wBAAyB,kCACzCA,EAAgB,yBAA0B,6BAC1CA,EAAgB,6BAA8B,mBAC9CA,EAAgB,yBAA0B,sCAAuCnZ,WACjFmZ,EAAgB,wBAAwB,SAAUrZ,GAChD,MAAO,qBAAuBA,CAChC,GAAGE,WACHmZ,EAAgB,qCAAsC,oCACtDh3B,EAAOD,QAAQ,EAAQg3B,8BCjGvB,IAAIiB,EAAava,OAAO6S,MAAQ,SAAUrR,GACxC,IAAIqR,EAAO,GACX,IAAK,IAAIE,KAAOvR,EAAKqR,EAAK3uB,KAAK6uB,GAC/B,OAAOF,CACT,EAGAtwB,EAAOD,QAAUk4B,EACjB,IAAIC,EAAW,EAAQ,KACnBC,EAAW,EAAQ,KACvB,EAAQ,IAAR,CAAoBF,EAAQC,GAI1B,IADA,IAAI5H,EAAO0H,EAAWG,EAASn1B,WACtBsrB,EAAI,EAAGA,EAAIgC,EAAKhvB,OAAQgtB,IAAK,CACpC,IAAI8J,EAAS9H,EAAKhC,GACb2J,EAAOj1B,UAAUo1B,KAASH,EAAOj1B,UAAUo1B,GAAUD,EAASn1B,UAAUo1B,GAC/E,CAEF,SAASH,EAAO9B,GACd,KAAM5yB,gBAAgB00B,GAAS,OAAO,IAAIA,EAAO9B,GACjD+B,EAASld,KAAKzX,KAAM4yB,GACpBgC,EAASnd,KAAKzX,KAAM4yB,GACpB5yB,KAAK80B,eAAgB,EACjBlC,KACuB,IAArBA,EAAQmC,WAAoB/0B,KAAK+0B,UAAW,IACvB,IAArBnC,EAAQzL,WAAoBnnB,KAAKmnB,UAAW,IAClB,IAA1ByL,EAAQkC,gBACV90B,KAAK80B,eAAgB,EACrB90B,KAAK+tB,KAAK,MAAOiH,IAGvB,CA8BA,SAASA,IAEHh1B,KAAKi1B,eAAeC,OAIxBxL,QAAQyL,SAASC,EAASp1B,KAC5B,CACA,SAASo1B,EAAQx4B,GACfA,EAAKkC,KACP,CAvCAob,OAAOgG,eAAewU,EAAOj1B,UAAW,wBAAyB,CAI/D0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKi1B,eAAeI,aAC7B,IAEFnb,OAAOgG,eAAewU,EAAOj1B,UAAW,iBAAkB,CAIxD0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKi1B,gBAAkBj1B,KAAKi1B,eAAeK,WACpD,IAEFpb,OAAOgG,eAAewU,EAAOj1B,UAAW,iBAAkB,CAIxD0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKi1B,eAAel3B,MAC7B,IAeFmc,OAAOgG,eAAewU,EAAOj1B,UAAW,YAAa,CAInD0gB,YAAY,EACZC,IAAK,WACH,YAA4B7H,IAAxBvY,KAAKu1B,qBAAwDhd,IAAxBvY,KAAKi1B,gBAGvCj1B,KAAKu1B,eAAeC,WAAax1B,KAAKi1B,eAAeO,SAC9D,EACA3U,IAAK,SAAarG,QAGYjC,IAAxBvY,KAAKu1B,qBAAwDhd,IAAxBvY,KAAKi1B,iBAM9Cj1B,KAAKu1B,eAAeC,UAAYhb,EAChCxa,KAAKi1B,eAAeO,UAAYhb,EAClC,gCCjGF/d,EAAOD,QAAUi5B,EACjB,IAAIC,EAAY,EAAQ,KAExB,SAASD,EAAY7C,GACnB,KAAM5yB,gBAAgBy1B,GAAc,OAAO,IAAIA,EAAY7C,GAC3D8C,EAAUje,KAAKzX,KAAM4yB,EACvB,CAJA,EAAQ,IAAR,CAAoB6C,EAAaC,GAKjCD,EAAYh2B,UAAUk2B,WAAa,SAAUC,EAAOnb,EAAUob,GAC5DA,EAAG,KAAMD,EACX,8BCVA,IAAIlB,EAHJj4B,EAAOD,QAAUm4B,EAMjBA,EAASmB,cAAgBA,EAGhB,kBAAT,IAqBIjL,EApBAkL,EAAkB,SAAyB/H,EAASlS,GACtD,OAAOkS,EAAQoD,UAAUtV,GAAM/d,MACjC,EAIIi4B,EAAS,EAAQ,KAGjB31B,EAAS,cACT41B,QAAmC,IAAX,EAAApiB,EAAyB,EAAAA,EAA2B,oBAAXtT,OAAyBA,OAAyB,oBAAT3D,KAAuBA,KAAO,CAAC,GAAG4B,YAAc,WAAa,EASvK03B,EAAY,EAAQ,KAGtBrL,EADEqL,GAAaA,EAAUC,SACjBD,EAAUC,SAAS,UAEnB,WAAkB,EAI5B,IAWIC,EACAC,EACA9b,EAbA+b,EAAa,EAAQ,KACrBC,EAAc,EAAQ,KAExBC,EADa,EAAQ,KACOA,iBAC1BC,EAAiB,QACnB9O,EAAuB8O,EAAe9O,qBACtC+O,EAA4BD,EAAeC,0BAC3CC,EAA6BF,EAAeE,2BAC5CC,EAAqCH,EAAeG,mCAMtD,EAAQ,IAAR,CAAoBjC,EAAUqB,GAC9B,IAAIa,EAAiBN,EAAYM,eAC7BC,EAAe,CAAC,QAAS,QAAS,UAAW,QAAS,UAY1D,SAAShB,EAAclD,EAASmE,EAAQC,GACtCtC,EAASA,GAAU,EAAQ,KAC3B9B,EAAUA,GAAW,CAAC,EAOE,kBAAboE,IAAwBA,EAAWD,aAAkBrC,GAIhE10B,KAAKi3B,aAAerE,EAAQqE,WACxBD,IAAUh3B,KAAKi3B,WAAaj3B,KAAKi3B,cAAgBrE,EAAQsE,oBAI7Dl3B,KAAKq1B,cAAgBmB,EAAiBx2B,KAAM4yB,EAAS,wBAAyBoE,GAK9Eh3B,KAAKob,OAAS,IAAIkb,EAClBt2B,KAAKjC,OAAS,EACdiC,KAAKm3B,MAAQ,KACbn3B,KAAKo3B,WAAa,EAClBp3B,KAAKq3B,QAAU,KACfr3B,KAAKk1B,OAAQ,EACbl1B,KAAKs3B,YAAa,EAClBt3B,KAAKu3B,SAAU,EAMfv3B,KAAKw3B,MAAO,EAIZx3B,KAAKy3B,cAAe,EACpBz3B,KAAK03B,iBAAkB,EACvB13B,KAAK23B,mBAAoB,EACzB33B,KAAK43B,iBAAkB,EACvB53B,KAAK63B,QAAS,EAGd73B,KAAK83B,WAAkC,IAAtBlF,EAAQkF,UAGzB93B,KAAK+3B,cAAgBnF,EAAQmF,YAG7B/3B,KAAKw1B,WAAY,EAKjBx1B,KAAKg4B,gBAAkBpF,EAAQoF,iBAAmB,OAGlDh4B,KAAKi4B,WAAa,EAGlBj4B,KAAKk4B,aAAc,EACnBl4B,KAAKm4B,QAAU,KACfn4B,KAAKya,SAAW,KACZmY,EAAQnY,WACL2b,IAAeA,EAAgB,UACpCp2B,KAAKm4B,QAAU,IAAI/B,EAAcxD,EAAQnY,UACzCza,KAAKya,SAAWmY,EAAQnY,SAE5B,CACA,SAASka,EAAS/B,GAEhB,GADA8B,EAASA,GAAU,EAAQ,OACrB10B,gBAAgB20B,GAAW,OAAO,IAAIA,EAAS/B,GAIrD,IAAIoE,EAAWh3B,gBAAgB00B,EAC/B10B,KAAKu1B,eAAiB,IAAIO,EAAclD,EAAS5yB,KAAMg3B,GAGvDh3B,KAAK+0B,UAAW,EACZnC,IAC0B,mBAAjBA,EAAQlV,OAAqB1d,KAAKo4B,MAAQxF,EAAQlV,MAC9B,mBAApBkV,EAAQpI,UAAwBxqB,KAAKq4B,SAAWzF,EAAQpI,UAErEwL,EAAOve,KAAKzX,KACd,CAwDA,SAASs4B,EAAiBvB,EAAQnB,EAAOnb,EAAU8d,EAAYC,GAC7D3N,EAAM,mBAAoB+K,GAC1B,IAKM1E,EALFjB,EAAQ8G,EAAOxB,eACnB,GAAc,OAAVK,EACF3F,EAAMsH,SAAU,EAuNpB,SAAoBR,EAAQ9G,GAE1B,GADApF,EAAM,eACFoF,EAAMiF,MAAV,CACA,GAAIjF,EAAMkI,QAAS,CACjB,IAAIvC,EAAQ3F,EAAMkI,QAAQr5B,MACtB82B,GAASA,EAAM73B,SACjBkyB,EAAM7U,OAAOhd,KAAKw3B,GAClB3F,EAAMlyB,QAAUkyB,EAAMgH,WAAa,EAAIrB,EAAM73B,OAEjD,CACAkyB,EAAMiF,OAAQ,EACVjF,EAAMuH,KAIRiB,EAAa1B,IAGb9G,EAAMwH,cAAe,EAChBxH,EAAMyH,kBACTzH,EAAMyH,iBAAkB,EACxBgB,EAAc3B,IAnBK,CAsBzB,CA9OI4B,CAAW5B,EAAQ9G,QAInB,GADKuI,IAAgBtH,EA6CzB,SAAsBjB,EAAO2F,GAC3B,IAAI1E,EAjPiBxV,EAqPrB,OArPqBA,EAkPFka,EAjPZv1B,EAAOsb,SAASD,IAAQA,aAAeua,GAiPA,iBAAVL,QAAgCrd,IAAVqd,GAAwB3F,EAAMgH,aACtF/F,EAAK,IAAIvJ,EAAqB,QAAS,CAAC,SAAU,SAAU,cAAeiO,IAEtE1E,CACT,CAnD8B0H,CAAa3I,EAAO2F,IAC1C1E,EACF2F,EAAeE,EAAQ7F,QAClB,GAAIjB,EAAMgH,YAAcrB,GAASA,EAAM73B,OAAS,EAIrD,GAHqB,iBAAV63B,GAAuB3F,EAAMgH,YAAc/c,OAAO4W,eAAe8E,KAAWv1B,EAAOZ,YAC5Fm2B,EA3MR,SAA6BA,GAC3B,OAAOv1B,EAAOka,KAAKqb,EACrB,CAyMgBiD,CAAoBjD,IAE1B2C,EACEtI,EAAMqH,WAAYT,EAAeE,EAAQ,IAAIH,GAA2CkC,EAAS/B,EAAQ9G,EAAO2F,GAAO,QACtH,GAAI3F,EAAMiF,MACf2B,EAAeE,EAAQ,IAAIL,OACtB,IAAIzG,EAAMuF,UACf,OAAO,EAEPvF,EAAMsH,SAAU,EACZtH,EAAMkI,UAAY1d,GACpBmb,EAAQ3F,EAAMkI,QAAQvd,MAAMgb,GACxB3F,EAAMgH,YAA+B,IAAjBrB,EAAM73B,OAAc+6B,EAAS/B,EAAQ9G,EAAO2F,GAAO,GAAYmD,EAAchC,EAAQ9G,IAE7G6I,EAAS/B,EAAQ9G,EAAO2F,GAAO,EAEnC,MACU2C,IACVtI,EAAMsH,SAAU,EAChBwB,EAAchC,EAAQ9G,IAO1B,OAAQA,EAAMiF,QAAUjF,EAAMlyB,OAASkyB,EAAMoF,eAAkC,IAAjBpF,EAAMlyB,OACtE,CACA,SAAS+6B,EAAS/B,EAAQ9G,EAAO2F,EAAO2C,GAClCtI,EAAMoH,SAA4B,IAAjBpH,EAAMlyB,SAAiBkyB,EAAMuH,MAChDvH,EAAMgI,WAAa,EACnBlB,EAAOpH,KAAK,OAAQiG,KAGpB3F,EAAMlyB,QAAUkyB,EAAMgH,WAAa,EAAIrB,EAAM73B,OACzCw6B,EAAYtI,EAAM7U,OAAOwQ,QAAQgK,GAAY3F,EAAM7U,OAAOhd,KAAKw3B,GAC/D3F,EAAMwH,cAAcgB,EAAa1B,IAEvCgC,EAAchC,EAAQ9G,EACxB,CA3GA/V,OAAOgG,eAAeyU,EAASl1B,UAAW,YAAa,CAIrD0gB,YAAY,EACZC,IAAK,WACH,YAA4B7H,IAAxBvY,KAAKu1B,gBAGFv1B,KAAKu1B,eAAeC,SAC7B,EACA3U,IAAK,SAAarG,GAGXxa,KAAKu1B,iBAMVv1B,KAAKu1B,eAAeC,UAAYhb,EAClC,IAEFma,EAASl1B,UAAU+qB,QAAU+L,EAAY/L,QACzCmK,EAASl1B,UAAUu5B,WAAazC,EAAY0C,UAC5CtE,EAASl1B,UAAU44B,SAAW,SAAUhK,EAAKwH,GAC3CA,EAAGxH,EACL,EAMAsG,EAASl1B,UAAUrB,KAAO,SAAUw3B,EAAOnb,GACzC,IACI+d,EADAvI,EAAQjwB,KAAKu1B,eAcjB,OAZKtF,EAAMgH,WAUTuB,GAAiB,EATI,iBAAV5C,KACTnb,EAAWA,GAAYwV,EAAM+H,mBACZ/H,EAAMxV,WACrBmb,EAAQv1B,EAAOka,KAAKqb,EAAOnb,GAC3BA,EAAW,IAEb+d,GAAiB,GAKdF,EAAiBt4B,KAAM41B,EAAOnb,GAAU,EAAO+d,EACxD,EAGA7D,EAASl1B,UAAUmsB,QAAU,SAAUgK,GACrC,OAAO0C,EAAiBt4B,KAAM41B,EAAO,MAAM,GAAM,EACnD,EA6DAjB,EAASl1B,UAAUy5B,SAAW,WAC5B,OAAuC,IAAhCl5B,KAAKu1B,eAAe8B,OAC7B,EAGA1C,EAASl1B,UAAU05B,YAAc,SAAUC,GACpChD,IAAeA,EAAgB,UACpC,IAAI+B,EAAU,IAAI/B,EAAcgD,GAChCp5B,KAAKu1B,eAAe4C,QAAUA,EAE9Bn4B,KAAKu1B,eAAe9a,SAAWza,KAAKu1B,eAAe4C,QAAQ1d,SAK3D,IAFA,IAAI3L,EAAI9O,KAAKu1B,eAAena,OAAOie,KAC/BC,EAAU,GACD,OAANxqB,GACLwqB,GAAWnB,EAAQvd,MAAM9L,EAAEiN,MAC3BjN,EAAIA,EAAE8J,KAKR,OAHA5Y,KAAKu1B,eAAena,OAAOme,QACX,KAAZD,GAAgBt5B,KAAKu1B,eAAena,OAAOhd,KAAKk7B,GACpDt5B,KAAKu1B,eAAex3B,OAASu7B,EAAQv7B,OAC9BiC,IACT,EAGA,IAAIw5B,EAAU,WAqBd,SAASC,EAAclqB,EAAG0gB,GACxB,OAAI1gB,GAAK,GAAsB,IAAjB0gB,EAAMlyB,QAAgBkyB,EAAMiF,MAAc,EACpDjF,EAAMgH,WAAmB,EACzB1nB,GAAMA,EAEJ0gB,EAAMoH,SAAWpH,EAAMlyB,OAAekyB,EAAM7U,OAAOie,KAAKtd,KAAKhe,OAAmBkyB,EAAMlyB,QAGxFwR,EAAI0gB,EAAMoF,gBAAepF,EAAMoF,cA5BrC,SAAiC9lB,GAe/B,OAdIA,GAAKiqB,EAEPjqB,EAAIiqB,GAIJjqB,IACAA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,GACXA,KAEKA,CACT,CAYqDmqB,CAAwBnqB,IACvEA,GAAK0gB,EAAMlyB,OAAewR,EAEzB0gB,EAAMiF,MAIJjF,EAAMlyB,QAHXkyB,EAAMwH,cAAe,EACd,GAGX,CA6HA,SAASgB,EAAa1B,GACpB,IAAI9G,EAAQ8G,EAAOxB,eACnB1K,EAAM,eAAgBoF,EAAMwH,aAAcxH,EAAMyH,iBAChDzH,EAAMwH,cAAe,EAChBxH,EAAMyH,kBACT7M,EAAM,eAAgBoF,EAAMoH,SAC5BpH,EAAMyH,iBAAkB,EACxBhO,QAAQyL,SAASuD,EAAe3B,GAEpC,CACA,SAAS2B,EAAc3B,GACrB,IAAI9G,EAAQ8G,EAAOxB,eACnB1K,EAAM,gBAAiBoF,EAAMuF,UAAWvF,EAAMlyB,OAAQkyB,EAAMiF,OACvDjF,EAAMuF,YAAcvF,EAAMlyB,SAAUkyB,EAAMiF,QAC7C6B,EAAOpH,KAAK,YACZM,EAAMyH,iBAAkB,GAS1BzH,EAAMwH,cAAgBxH,EAAMoH,UAAYpH,EAAMiF,OAASjF,EAAMlyB,QAAUkyB,EAAMoF,cAC7EsE,EAAK5C,EACP,CAQA,SAASgC,EAAchC,EAAQ9G,GACxBA,EAAMiI,cACTjI,EAAMiI,aAAc,EACpBxO,QAAQyL,SAASyE,EAAgB7C,EAAQ9G,GAE7C,CACA,SAAS2J,EAAe7C,EAAQ9G,GAwB9B,MAAQA,EAAMsH,UAAYtH,EAAMiF,QAAUjF,EAAMlyB,OAASkyB,EAAMoF,eAAiBpF,EAAMoH,SAA4B,IAAjBpH,EAAMlyB,SAAe,CACpH,IAAIL,EAAMuyB,EAAMlyB,OAGhB,GAFA8sB,EAAM,wBACNkM,EAAOrZ,KAAK,GACRhgB,IAAQuyB,EAAMlyB,OAEhB,KACJ,CACAkyB,EAAMiI,aAAc,CACtB,CAgPA,SAAS2B,EAAwBj9B,GAC/B,IAAIqzB,EAAQrzB,EAAK24B,eACjBtF,EAAM0H,kBAAoB/6B,EAAK6zB,cAAc,YAAc,EACvDR,EAAM2H,kBAAoB3H,EAAM4H,OAGlC5H,EAAMoH,SAAU,EAGPz6B,EAAK6zB,cAAc,QAAU,GACtC7zB,EAAKk9B,QAET,CACA,SAASC,EAAiBn9B,GACxBiuB,EAAM,4BACNjuB,EAAK8gB,KAAK,EACZ,CAuBA,SAASsc,EAAQjD,EAAQ9G,GACvBpF,EAAM,SAAUoF,EAAMsH,SACjBtH,EAAMsH,SACTR,EAAOrZ,KAAK,GAEduS,EAAM2H,iBAAkB,EACxBb,EAAOpH,KAAK,UACZgK,EAAK5C,GACD9G,EAAMoH,UAAYpH,EAAMsH,SAASR,EAAOrZ,KAAK,EACnD,CAWA,SAASic,EAAK5C,GACZ,IAAI9G,EAAQ8G,EAAOxB,eAEnB,IADA1K,EAAM,OAAQoF,EAAMoH,SACbpH,EAAMoH,SAA6B,OAAlBN,EAAOrZ,SACjC,CAmHA,SAASuc,EAAS1qB,EAAG0gB,GAEnB,OAAqB,IAAjBA,EAAMlyB,OAAqB,MAE3BkyB,EAAMgH,WAAYnyB,EAAMmrB,EAAM7U,OAAO3V,SAAkB8J,GAAKA,GAAK0gB,EAAMlyB,QAEtD+G,EAAfmrB,EAAMkI,QAAelI,EAAM7U,OAAO7c,KAAK,IAAqC,IAAxB0xB,EAAM7U,OAAOrd,OAAoBkyB,EAAM7U,OAAOwI,QAAmBqM,EAAM7U,OAAOsF,OAAOuP,EAAMlyB,QACnJkyB,EAAM7U,OAAOme,SAGbz0B,EAAMmrB,EAAM7U,OAAO8e,QAAQ3qB,EAAG0gB,EAAMkI,SAE/BrzB,GATP,IAAIA,CAUN,CACA,SAASq1B,EAAYpD,GACnB,IAAI9G,EAAQ8G,EAAOxB,eACnB1K,EAAM,cAAeoF,EAAMqH,YACtBrH,EAAMqH,aACTrH,EAAMiF,OAAQ,EACdxL,QAAQyL,SAASiF,EAAenK,EAAO8G,GAE3C,CACA,SAASqD,EAAcnK,EAAO8G,GAI5B,GAHAlM,EAAM,gBAAiBoF,EAAMqH,WAAYrH,EAAMlyB,SAG1CkyB,EAAMqH,YAA+B,IAAjBrH,EAAMlyB,SAC7BkyB,EAAMqH,YAAa,EACnBP,EAAOhC,UAAW,EAClBgC,EAAOpH,KAAK,OACRM,EAAM8H,aAAa,CAGrB,IAAIsC,EAAStD,EAAO9B,iBACfoF,GAAUA,EAAOtC,aAAesC,EAAOC,WAC1CvD,EAAOvM,SAEX,CAEJ,CASA,SAAS5rB,EAAQ27B,EAAI9sB,GACnB,IAAK,IAAIpQ,EAAI,EAAGyQ,EAAIysB,EAAGx8B,OAAQV,EAAIyQ,EAAGzQ,IACpC,GAAIk9B,EAAGl9B,KAAOoQ,EAAG,OAAOpQ,EAE1B,OAAQ,CACV,CA1pBAs3B,EAASl1B,UAAUie,KAAO,SAAUnO,GAClCsb,EAAM,OAAQtb,GACdA,EAAI6O,SAAS7O,EAAG,IAChB,IAAI0gB,EAAQjwB,KAAKu1B,eACbiF,EAAQjrB,EAMZ,GALU,IAANA,IAAS0gB,EAAMyH,iBAAkB,GAK3B,IAANnoB,GAAW0gB,EAAMwH,gBAA0C,IAAxBxH,EAAMoF,cAAsBpF,EAAMlyB,QAAUkyB,EAAMoF,cAAgBpF,EAAMlyB,OAAS,IAAMkyB,EAAMiF,OAGlI,OAFArK,EAAM,qBAAsBoF,EAAMlyB,OAAQkyB,EAAMiF,OAC3B,IAAjBjF,EAAMlyB,QAAgBkyB,EAAMiF,MAAOiF,EAAYn6B,MAAWy4B,EAAaz4B,MACpE,KAKT,GAAU,KAHVuP,EAAIkqB,EAAclqB,EAAG0gB,KAGNA,EAAMiF,MAEnB,OADqB,IAAjBjF,EAAMlyB,QAAco8B,EAAYn6B,MAC7B,KA0BT,IA2BI8E,EA3BA21B,EAASxK,EAAMwH,aA6CnB,OA5CA5M,EAAM,gBAAiB4P,IAGF,IAAjBxK,EAAMlyB,QAAgBkyB,EAAMlyB,OAASwR,EAAI0gB,EAAMoF,gBAEjDxK,EAAM,6BADN4P,GAAS,GAMPxK,EAAMiF,OAASjF,EAAMsH,QAEvB1M,EAAM,mBADN4P,GAAS,GAEAA,IACT5P,EAAM,WACNoF,EAAMsH,SAAU,EAChBtH,EAAMuH,MAAO,EAEQ,IAAjBvH,EAAMlyB,SAAckyB,EAAMwH,cAAe,GAE7Cz3B,KAAKo4B,MAAMnI,EAAMoF,eACjBpF,EAAMuH,MAAO,EAGRvH,EAAMsH,UAAShoB,EAAIkqB,EAAce,EAAOvK,KAInC,QADDnrB,EAAPyK,EAAI,EAAS0qB,EAAS1qB,EAAG0gB,GAAkB,OAE7CA,EAAMwH,aAAexH,EAAMlyB,QAAUkyB,EAAMoF,cAC3C9lB,EAAI,IAEJ0gB,EAAMlyB,QAAUwR,EAChB0gB,EAAMgI,WAAa,GAEA,IAAjBhI,EAAMlyB,SAGHkyB,EAAMiF,QAAOjF,EAAMwH,cAAe,GAGnC+C,IAAUjrB,GAAK0gB,EAAMiF,OAAOiF,EAAYn6B,OAElC,OAAR8E,GAAc9E,KAAK2vB,KAAK,OAAQ7qB,GAC7BA,CACT,EA6GA6vB,EAASl1B,UAAU24B,MAAQ,SAAU7oB,GACnCsnB,EAAe72B,KAAM,IAAI22B,EAA2B,WACtD,EACAhC,EAASl1B,UAAUi7B,KAAO,SAAUn5B,EAAMo5B,GACxC,IAAIn5B,EAAMxB,KACNiwB,EAAQjwB,KAAKu1B,eACjB,OAAQtF,EAAMmH,YACZ,KAAK,EACHnH,EAAMkH,MAAQ51B,EACd,MACF,KAAK,EACH0uB,EAAMkH,MAAQ,CAAClH,EAAMkH,MAAO51B,GAC5B,MACF,QACE0uB,EAAMkH,MAAM/4B,KAAKmD,GAGrB0uB,EAAMmH,YAAc,EACpBvM,EAAM,wBAAyBoF,EAAMmH,WAAYuD,GACjD,IACIC,EADUD,IAA6B,IAAjBA,EAAS77B,KAAkByC,IAASmoB,QAAQmR,QAAUt5B,IAASmoB,QAAQoR,OACrEC,EAAR/F,EAYpB,SAASA,IACPnK,EAAM,SACNtpB,EAAKzC,KACP,CAdImxB,EAAMqH,WAAY5N,QAAQyL,SAASyF,GAAYp5B,EAAIusB,KAAK,MAAO6M,GACnEr5B,EAAKmtB,GAAG,UACR,SAASsM,EAASjG,EAAUkG,GAC1BpQ,EAAM,YACFkK,IAAavzB,GACXy5B,IAAwC,IAA1BA,EAAWC,aAC3BD,EAAWC,YAAa,EAkB5BrQ,EAAM,WAENtpB,EAAK+sB,eAAe,QAAS6M,GAC7B55B,EAAK+sB,eAAe,SAAU8M,GAC9B75B,EAAK+sB,eAAe,QAAS+M,GAC7B95B,EAAK+sB,eAAe,QAASgN,GAC7B/5B,EAAK+sB,eAAe,SAAU0M,GAC9Bx5B,EAAI8sB,eAAe,MAAO0G,GAC1BxzB,EAAI8sB,eAAe,MAAOyM,GAC1Bv5B,EAAI8sB,eAAe,OAAQiN,GAC3BC,GAAY,GAORvL,EAAMgI,YAAgB12B,EAAK0zB,iBAAkB1zB,EAAK0zB,eAAewG,WAAYJ,IA/BnF,IAUA,IAAIA,EAgFN,SAAqB75B,GACnB,OAAO,WACL,IAAIyuB,EAAQzuB,EAAI+zB,eAChB1K,EAAM,cAAeoF,EAAMgI,YACvBhI,EAAMgI,YAAYhI,EAAMgI,aACH,IAArBhI,EAAMgI,YAAoBlC,EAAgBv0B,EAAK,UACjDyuB,EAAMoH,SAAU,EAChBsC,EAAKn4B,GAET,CACF,CA1FgBk6B,CAAYl6B,GAC1BD,EAAKmtB,GAAG,QAAS2M,GACjB,IAAIG,GAAY,EAsBhB,SAASD,EAAO3F,GACd/K,EAAM,UACN,IAAI/lB,EAAMvD,EAAKqZ,MAAMgb,GACrB/K,EAAM,aAAc/lB,IACR,IAARA,KAKwB,IAArBmrB,EAAMmH,YAAoBnH,EAAMkH,QAAU51B,GAAQ0uB,EAAMmH,WAAa,IAAqC,IAAhCx4B,EAAQqxB,EAAMkH,MAAO51B,MAAkBi6B,IACpH3Q,EAAM,8BAA+BoF,EAAMgI,YAC3ChI,EAAMgI,cAERz2B,EAAIm6B,QAER,CAIA,SAASL,EAAQpK,GACfrG,EAAM,UAAWqG,GACjB6J,IACAx5B,EAAK+sB,eAAe,QAASgN,GACU,IAAnCvF,EAAgBx0B,EAAM,UAAgBs1B,EAAet1B,EAAM2vB,EACjE,CAMA,SAASiK,IACP55B,EAAK+sB,eAAe,SAAU8M,GAC9BL,GACF,CAEA,SAASK,IACPvQ,EAAM,YACNtpB,EAAK+sB,eAAe,QAAS6M,GAC7BJ,GACF,CAEA,SAASA,IACPlQ,EAAM,UACNrpB,EAAIu5B,OAAOx5B,EACb,CAUA,OAvDAC,EAAIktB,GAAG,OAAQ6M,GAniBjB,SAAyBvN,EAAS4N,EAAOpT,GAGvC,GAAuC,mBAA5BwF,EAAQsD,gBAAgC,OAAOtD,EAAQsD,gBAAgBsK,EAAOpT,GAMpFwF,EAAQY,SAAYZ,EAAQY,QAAQgN,GAAuCn9B,MAAMgD,QAAQusB,EAAQY,QAAQgN,IAAS5N,EAAQY,QAAQgN,GAAOhQ,QAAQpD,GAASwF,EAAQY,QAAQgN,GAAS,CAACpT,EAAIwF,EAAQY,QAAQgN,IAA5J5N,EAAQU,GAAGkN,EAAOpT,EACrE,CAqjBE8I,CAAgB/vB,EAAM,QAAS+5B,GAO/B/5B,EAAKwsB,KAAK,QAASoN,GAMnB55B,EAAKwsB,KAAK,SAAUqN,GAOpB75B,EAAKouB,KAAK,OAAQnuB,GAGbyuB,EAAMoH,UACTxM,EAAM,eACNrpB,EAAIs4B,UAECv4B,CACT,EAYAozB,EAASl1B,UAAUs7B,OAAS,SAAUx5B,GACpC,IAAI0uB,EAAQjwB,KAAKu1B,eACb0F,EAAa,CACfC,YAAY,GAId,GAAyB,IAArBjL,EAAMmH,WAAkB,OAAOp3B,KAGnC,GAAyB,IAArBiwB,EAAMmH,WAER,OAAI71B,GAAQA,IAAS0uB,EAAMkH,QACtB51B,IAAMA,EAAO0uB,EAAMkH,OAGxBlH,EAAMkH,MAAQ,KACdlH,EAAMmH,WAAa,EACnBnH,EAAMoH,SAAU,EACZ91B,GAAMA,EAAKouB,KAAK,SAAU3vB,KAAMi7B,IAPKj7B,KAa3C,IAAKuB,EAAM,CAET,IAAIs6B,EAAQ5L,EAAMkH,MACdz5B,EAAMuyB,EAAMmH,WAChBnH,EAAMkH,MAAQ,KACdlH,EAAMmH,WAAa,EACnBnH,EAAMoH,SAAU,EAChB,IAAK,IAAIh6B,EAAI,EAAGA,EAAIK,EAAKL,IAAKw+B,EAAMx+B,GAAGsyB,KAAK,SAAU3vB,KAAM,CAC1Dk7B,YAAY,IAEd,OAAOl7B,IACT,CAGA,IAAIW,EAAQ/B,EAAQqxB,EAAMkH,MAAO51B,GACjC,OAAe,IAAXZ,IACJsvB,EAAMkH,MAAMnO,OAAOroB,EAAO,GAC1BsvB,EAAMmH,YAAc,EACK,IAArBnH,EAAMmH,aAAkBnH,EAAMkH,MAAQlH,EAAMkH,MAAM,IACtD51B,EAAKouB,KAAK,SAAU3vB,KAAMi7B,IAJDj7B,IAM3B,EAIA20B,EAASl1B,UAAUivB,GAAK,SAAUoN,EAAItT,GACpC,IAAIpjB,EAAM4wB,EAAOv2B,UAAUivB,GAAGjX,KAAKzX,KAAM87B,EAAItT,GACzCyH,EAAQjwB,KAAKu1B,eAqBjB,MApBW,SAAPuG,GAGF7L,EAAM0H,kBAAoB33B,KAAKywB,cAAc,YAAc,GAGrC,IAAlBR,EAAMoH,SAAmBr3B,KAAK85B,UAClB,aAAPgC,IACJ7L,EAAMqH,YAAerH,EAAM0H,oBAC9B1H,EAAM0H,kBAAoB1H,EAAMwH,cAAe,EAC/CxH,EAAMoH,SAAU,EAChBpH,EAAMyH,iBAAkB,EACxB7M,EAAM,cAAeoF,EAAMlyB,OAAQkyB,EAAMsH,SACrCtH,EAAMlyB,OACR06B,EAAaz4B,MACHiwB,EAAMsH,SAChB7N,QAAQyL,SAAS4E,EAAkB/5B,QAIlCoF,CACT,EACAuvB,EAASl1B,UAAU4xB,YAAcsD,EAASl1B,UAAUivB,GACpDiG,EAASl1B,UAAU6uB,eAAiB,SAAUwN,EAAItT,GAChD,IAAIpjB,EAAM4wB,EAAOv2B,UAAU6uB,eAAe7W,KAAKzX,KAAM87B,EAAItT,GAUzD,MATW,aAAPsT,GAOFpS,QAAQyL,SAAS0E,EAAyB75B,MAErCoF,CACT,EACAuvB,EAASl1B,UAAUkyB,mBAAqB,SAAUmK,GAChD,IAAI12B,EAAM4wB,EAAOv2B,UAAUkyB,mBAAmBlS,MAAMzf,KAAMqc,WAU1D,MATW,aAAPyf,QAA4BvjB,IAAPujB,GAOvBpS,QAAQyL,SAAS0E,EAAyB75B,MAErCoF,CACT,EAqBAuvB,EAASl1B,UAAUq6B,OAAS,WAC1B,IAAI7J,EAAQjwB,KAAKu1B,eAUjB,OATKtF,EAAMoH,UACTxM,EAAM,UAINoF,EAAMoH,SAAWpH,EAAM0H,kBAM3B,SAAgBZ,EAAQ9G,GACjBA,EAAM2H,kBACT3H,EAAM2H,iBAAkB,EACxBlO,QAAQyL,SAAS6E,EAASjD,EAAQ9G,GAEtC,CAVI6J,CAAO95B,KAAMiwB,IAEfA,EAAM4H,QAAS,EACR73B,IACT,EAiBA20B,EAASl1B,UAAUk8B,MAAQ,WAQzB,OAPA9Q,EAAM,wBAAyB7qB,KAAKu1B,eAAe8B,UACf,IAAhCr3B,KAAKu1B,eAAe8B,UACtBxM,EAAM,SACN7qB,KAAKu1B,eAAe8B,SAAU,EAC9Br3B,KAAK2vB,KAAK,UAEZ3vB,KAAKu1B,eAAesC,QAAS,EACtB73B,IACT,EAUA20B,EAASl1B,UAAUs8B,KAAO,SAAUhF,GAClC,IAAIiF,EAAQh8B,KACRiwB,EAAQjwB,KAAKu1B,eACbsC,GAAS,EAwBb,IAAK,IAAIx6B,KAvBT05B,EAAOrI,GAAG,OAAO,WAEf,GADA7D,EAAM,eACFoF,EAAMkI,UAAYlI,EAAMiF,MAAO,CACjC,IAAIU,EAAQ3F,EAAMkI,QAAQr5B,MACtB82B,GAASA,EAAM73B,QAAQi+B,EAAM59B,KAAKw3B,EACxC,CACAoG,EAAM59B,KAAK,KACb,IACA24B,EAAOrI,GAAG,QAAQ,SAAUkH,GAC1B/K,EAAM,gBACFoF,EAAMkI,UAASvC,EAAQ3F,EAAMkI,QAAQvd,MAAMgb,IAG3C3F,EAAMgH,YAAc,MAACrB,IAAyD3F,EAAMgH,YAAgBrB,GAAUA,EAAM73B,UAC9Gi+B,EAAM59B,KAAKw3B,KAEnBiC,GAAS,EACTd,EAAO4E,SAEX,IAIc5E,OACIxe,IAAZvY,KAAK3C,IAAyC,mBAAd05B,EAAO15B,KACzC2C,KAAK3C,GAAK,SAAoBw3B,GAC5B,OAAO,WACL,OAAOkC,EAAOlC,GAAQpV,MAAMsX,EAAQ1a,UACtC,CACF,CAJU,CAIRhf,IAKN,IAAK,IAAIkS,EAAI,EAAGA,EAAIunB,EAAa/4B,OAAQwR,IACvCwnB,EAAOrI,GAAGoI,EAAavnB,GAAIvP,KAAK2vB,KAAKQ,KAAKnwB,KAAM82B,EAAavnB,KAY/D,OAPAvP,KAAKo4B,MAAQ,SAAU7oB,GACrBsb,EAAM,gBAAiBtb,GACnBsoB,IACFA,GAAS,EACTd,EAAO+C,SAEX,EACO95B,IACT,EACsB,mBAAXwD,SACTmxB,EAASl1B,UAAU+D,OAAOy4B,eAAiB,WAIzC,YAH0C1jB,IAAtC8d,IACFA,EAAoC,EAAQ,MAEvCA,EAAkCr2B,KAC3C,GAEFka,OAAOgG,eAAeyU,EAASl1B,UAAW,wBAAyB,CAIjE0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKu1B,eAAeF,aAC7B,IAEFnb,OAAOgG,eAAeyU,EAASl1B,UAAW,iBAAkB,CAI1D0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKu1B,gBAAkBv1B,KAAKu1B,eAAena,MACpD,IAEFlB,OAAOgG,eAAeyU,EAASl1B,UAAW,kBAAmB,CAI3D0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKu1B,eAAe8B,OAC7B,EACAxW,IAAK,SAAaoP,GACZjwB,KAAKu1B,iBACPv1B,KAAKu1B,eAAe8B,QAAUpH,EAElC,IAIF0E,EAASuH,UAAYjC,EACrB/f,OAAOgG,eAAeyU,EAASl1B,UAAW,iBAAkB,CAI1D0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKu1B,eAAex3B,MAC7B,IA+CoB,mBAAXyF,SACTmxB,EAASpa,KAAO,SAAU4hB,EAAUC,GAIlC,YAHa7jB,IAATgC,IACFA,EAAO,EAAQ,MAEVA,EAAKoa,EAAUwH,EAAUC,EAClC,+BC17BF3/B,EAAOD,QAAUk5B,EACjB,IAAIe,EAAiB,QACnBE,EAA6BF,EAAeE,2BAC5C0F,EAAwB5F,EAAe4F,sBACvCC,EAAqC7F,EAAe6F,mCACpDC,EAA8B9F,EAAe8F,4BAC3C7H,EAAS,EAAQ,KAErB,SAAS8H,EAAetL,EAAInV,GAC1B,IAAI0gB,EAAKz8B,KAAK08B,gBACdD,EAAGE,cAAe,EAClB,IAAI9G,EAAK4G,EAAGG,QACZ,GAAW,OAAP/G,EACF,OAAO71B,KAAK2vB,KAAK,QAAS,IAAI0M,GAEhCI,EAAGI,WAAa,KAChBJ,EAAGG,QAAU,KACD,MAAR7gB,GAEF/b,KAAK5B,KAAK2d,GACZ8Z,EAAG3E,GACH,IAAI4L,EAAK98B,KAAKu1B,eACduH,EAAGvF,SAAU,GACTuF,EAAGrF,cAAgBqF,EAAG/+B,OAAS++B,EAAGzH,gBACpCr1B,KAAKo4B,MAAM0E,EAAGzH,cAElB,CACA,SAASK,EAAU9C,GACjB,KAAM5yB,gBAAgB01B,GAAY,OAAO,IAAIA,EAAU9C,GACvD8B,EAAOjd,KAAKzX,KAAM4yB,GAClB5yB,KAAK08B,gBAAkB,CACrBF,eAAgBA,EAAerM,KAAKnwB,MACpC+8B,eAAe,EACfJ,cAAc,EACdC,QAAS,KACTC,WAAY,KACZG,cAAe,MAIjBh9B,KAAKu1B,eAAekC,cAAe,EAKnCz3B,KAAKu1B,eAAeiC,MAAO,EACvB5E,IAC+B,mBAAtBA,EAAQrkB,YAA0BvO,KAAK21B,WAAa/C,EAAQrkB,WAC1C,mBAAlBqkB,EAAQqK,QAAsBj9B,KAAKk9B,OAAStK,EAAQqK,QAIjEj9B,KAAK0uB,GAAG,YAAayO,EACvB,CACA,SAASA,IACP,IAAInB,EAAQh8B,KACe,mBAAhBA,KAAKk9B,QAA0Bl9B,KAAKu1B,eAAeC,UAK5D4H,EAAKp9B,KAAM,KAAM,MAJjBA,KAAKk9B,QAAO,SAAUhM,EAAInV,GACxBqhB,EAAKpB,EAAO9K,EAAInV,EAClB,GAIJ,CAiDA,SAASqhB,EAAKrG,EAAQ7F,EAAInV,GACxB,GAAImV,EAAI,OAAO6F,EAAOpH,KAAK,QAASuB,GAQpC,GAPY,MAARnV,GAEFgb,EAAO34B,KAAK2d,GAKVgb,EAAO9B,eAAel3B,OAAQ,MAAM,IAAIw+B,EAC5C,GAAIxF,EAAO2F,gBAAgBC,aAAc,MAAM,IAAIL,EACnD,OAAOvF,EAAO34B,KAAK,KACrB,CArHA,EAAQ,IAAR,CAAoBs3B,EAAWhB,GAyD/BgB,EAAUj2B,UAAUrB,KAAO,SAAUw3B,EAAOnb,GAE1C,OADAza,KAAK08B,gBAAgBK,eAAgB,EAC9BrI,EAAOj1B,UAAUrB,KAAKqZ,KAAKzX,KAAM41B,EAAOnb,EACjD,EAYAib,EAAUj2B,UAAUk2B,WAAa,SAAUC,EAAOnb,EAAUob,GAC1DA,EAAG,IAAIc,EAA2B,gBACpC,EACAjB,EAAUj2B,UAAU49B,OAAS,SAAUzH,EAAOnb,EAAUob,GACtD,IAAI4G,EAAKz8B,KAAK08B,gBAId,GAHAD,EAAGG,QAAU/G,EACb4G,EAAGI,WAAajH,EAChB6G,EAAGO,cAAgBviB,GACdgiB,EAAGE,aAAc,CACpB,IAAIG,EAAK98B,KAAKu1B,gBACVkH,EAAGM,eAAiBD,EAAGrF,cAAgBqF,EAAG/+B,OAAS++B,EAAGzH,gBAAer1B,KAAKo4B,MAAM0E,EAAGzH,cACzF,CACF,EAKAK,EAAUj2B,UAAU24B,MAAQ,SAAU7oB,GACpC,IAAIktB,EAAKz8B,KAAK08B,gBACQ,OAAlBD,EAAGI,YAAwBJ,EAAGE,aAMhCF,EAAGM,eAAgB,GALnBN,EAAGE,cAAe,EAClB38B,KAAK21B,WAAW8G,EAAGI,WAAYJ,EAAGO,cAAeP,EAAGD,gBAMxD,EACA9G,EAAUj2B,UAAU44B,SAAW,SAAUhK,EAAKwH,GAC5CnB,EAAOj1B,UAAU44B,SAAS5gB,KAAKzX,KAAMquB,GAAK,SAAUiP,GAClDzH,EAAGyH,EACL,GACF,8BCzIA,SAASC,EAActN,GACrB,IAAI+L,EAAQh8B,KACZA,KAAK4Y,KAAO,KACZ5Y,KAAKw9B,MAAQ,KACbx9B,KAAKy9B,OAAS,YA6iBhB,SAAwBC,EAASzN,GAC/B,IAAIuN,EAAQE,EAAQF,MAEpB,IADAE,EAAQF,MAAQ,KACTA,GAAO,CACZ,IAAI3H,EAAK2H,EAAMG,SACf1N,EAAM2N,YACN/H,EAljBAgI,WAmjBAL,EAAQA,EAAM5kB,IAChB,CAGAqX,EAAM6N,mBAAmBllB,KAAO8kB,CAClC,CAxjBIG,CAAe7B,EAAO/L,EACxB,CACF,CAIA,IAAIyE,EAvBJj4B,EAAOD,QAAUo4B,EA0BjBA,EAASmJ,cAAgBA,EAGzB,IA+JIC,EA/JAC,EAAe,CACjBC,UAAW,EAAQ,MAKjBlI,EAAS,EAAQ,KAGjB31B,EAAS,cACT41B,QAAmC,IAAX,EAAApiB,EAAyB,EAAAA,EAA2B,oBAAXtT,OAAyBA,OAAyB,oBAAT3D,KAAuBA,KAAO,CAAC,GAAG4B,YAAc,WAAa,EAOvK+3B,EAAc,EAAQ,KAExBC,EADa,EAAQ,KACOA,iBAC1BC,EAAiB,QACnB9O,EAAuB8O,EAAe9O,qBACtCgP,EAA6BF,EAAeE,2BAC5C0F,EAAwB5F,EAAe4F,sBACvC8B,EAAyB1H,EAAe0H,uBACxCC,EAAuB3H,EAAe2H,qBACtCC,EAAyB5H,EAAe4H,uBACxCC,EAA6B7H,EAAe6H,2BAC5CC,EAAuB9H,EAAe8H,qBACpC1H,EAAiBN,EAAYM,eAEjC,SAAS2H,IAAO,CAChB,SAAST,EAAcnL,EAASmE,EAAQC,GACtCtC,EAASA,GAAU,EAAQ,KAC3B9B,EAAUA,GAAW,CAAC,EAOE,kBAAboE,IAAwBA,EAAWD,aAAkBrC,GAIhE10B,KAAKi3B,aAAerE,EAAQqE,WACxBD,IAAUh3B,KAAKi3B,WAAaj3B,KAAKi3B,cAAgBrE,EAAQ6L,oBAK7Dz+B,KAAKq1B,cAAgBmB,EAAiBx2B,KAAM4yB,EAAS,wBAAyBoE,GAG9Eh3B,KAAK0+B,aAAc,EAGnB1+B,KAAKy7B,WAAY,EAEjBz7B,KAAK2+B,QAAS,EAEd3+B,KAAKk1B,OAAQ,EAEbl1B,KAAKs6B,UAAW,EAGhBt6B,KAAKw1B,WAAY,EAKjB,IAAIoJ,GAAqC,IAA1BhM,EAAQiM,cACvB7+B,KAAK6+B,eAAiBD,EAKtB5+B,KAAKg4B,gBAAkBpF,EAAQoF,iBAAmB,OAKlDh4B,KAAKjC,OAAS,EAGdiC,KAAK8+B,SAAU,EAGf9+B,KAAK++B,OAAS,EAMd/+B,KAAKw3B,MAAO,EAKZx3B,KAAKg/B,kBAAmB,EAGxBh/B,KAAKi/B,QAAU,SAAU/N,IAsQ3B,SAAiB6F,EAAQ7F,GACvB,IAAIjB,EAAQ8G,EAAO9B,eACfuC,EAAOvH,EAAMuH,KACb3B,EAAK5F,EAAM2M,QACf,GAAkB,mBAAP/G,EAAmB,MAAM,IAAIwG,EAExC,GAZF,SAA4BpM,GAC1BA,EAAM6O,SAAU,EAChB7O,EAAM2M,QAAU,KAChB3M,EAAMlyB,QAAUkyB,EAAMiP,SACtBjP,EAAMiP,SAAW,CACnB,CAMEC,CAAmBlP,GACfiB,GAlCN,SAAsB6F,EAAQ9G,EAAOuH,EAAMtG,EAAI2E,KAC3C5F,EAAM2N,UACJpG,GAGF9N,QAAQyL,SAASU,EAAI3E,GAGrBxH,QAAQyL,SAASiK,EAAarI,EAAQ9G,GACtC8G,EAAO9B,eAAeoK,cAAe,EACrCxI,EAAeE,EAAQ7F,KAIvB2E,EAAG3E,GACH6F,EAAO9B,eAAeoK,cAAe,EACrCxI,EAAeE,EAAQ7F,GAGvBkO,EAAYrI,EAAQ9G,GAExB,CAaUqP,CAAavI,EAAQ9G,EAAOuH,EAAMtG,EAAI2E,OAAS,CAErD,IAAIyE,EAAWiF,EAAWtP,IAAU8G,EAAOvB,UACtC8E,GAAarK,EAAM8O,QAAW9O,EAAM+O,mBAAoB/O,EAAMuP,iBACjEC,EAAY1I,EAAQ9G,GAElBuH,EACF9N,QAAQyL,SAASuK,EAAY3I,EAAQ9G,EAAOqK,EAAUzE,GAEtD6J,EAAW3I,EAAQ9G,EAAOqK,EAAUzE,EAExC,CACF,CAvRIoJ,CAAQlI,EAAQ7F,EAClB,EAGAlxB,KAAK48B,QAAU,KAGf58B,KAAKk/B,SAAW,EAChBl/B,KAAKw/B,gBAAkB,KACvBx/B,KAAK2/B,oBAAsB,KAI3B3/B,KAAK49B,UAAY,EAIjB59B,KAAK4/B,aAAc,EAGnB5/B,KAAKq/B,cAAe,EAGpBr/B,KAAK83B,WAAkC,IAAtBlF,EAAQkF,UAGzB93B,KAAK+3B,cAAgBnF,EAAQmF,YAG7B/3B,KAAK6/B,qBAAuB,EAI5B7/B,KAAK89B,mBAAqB,IAAIP,EAAcv9B,KAC9C,CAqCA,SAAS40B,EAAShC,GAahB,IAAIoE,EAAWh3B,gBAZf00B,EAASA,GAAU,EAAQ,MAa3B,IAAKsC,IAAagH,EAAgBvmB,KAAKmd,EAAU50B,MAAO,OAAO,IAAI40B,EAAShC,GAC5E5yB,KAAKi1B,eAAiB,IAAI8I,EAAcnL,EAAS5yB,KAAMg3B,GAGvDh3B,KAAKmnB,UAAW,EACZyL,IAC2B,mBAAlBA,EAAQhY,QAAsB5a,KAAKq9B,OAASzK,EAAQhY,OACjC,mBAAnBgY,EAAQkN,SAAuB9/B,KAAK+/B,QAAUnN,EAAQkN,QAClC,mBAApBlN,EAAQpI,UAAwBxqB,KAAKq4B,SAAWzF,EAAQpI,SACtC,mBAAlBoI,EAAQoN,QAAsBhgC,KAAKigC,OAASrN,EAAQoN,QAEjEhK,EAAOve,KAAKzX,KACd,CAgIA,SAASkgC,EAAQnJ,EAAQ9G,EAAO6P,EAAQpiC,EAAKk4B,EAAOnb,EAAUob,GAC5D5F,EAAMiP,SAAWxhC,EACjBuyB,EAAM2M,QAAU/G,EAChB5F,EAAM6O,SAAU,EAChB7O,EAAMuH,MAAO,EACTvH,EAAMuF,UAAWvF,EAAMgP,QAAQ,IAAIb,EAAqB,UAAmB0B,EAAQ/I,EAAOgJ,QAAQnK,EAAO3F,EAAMgP,SAAclI,EAAOsG,OAAOzH,EAAOnb,EAAUwV,EAAMgP,SACtKhP,EAAMuH,MAAO,CACf,CAgDA,SAASkI,EAAW3I,EAAQ9G,EAAOqK,EAAUzE,GACtCyE,GASP,SAAsBvD,EAAQ9G,GACP,IAAjBA,EAAMlyB,QAAgBkyB,EAAMwL,YAC9BxL,EAAMwL,WAAY,EAClB1E,EAAOpH,KAAK,SAEhB,CAdiBwQ,CAAapJ,EAAQ9G,GACpCA,EAAM2N,YACN/H,IACAuJ,EAAYrI,EAAQ9G,EACtB,CAaA,SAASwP,EAAY1I,EAAQ9G,GAC3BA,EAAM+O,kBAAmB,EACzB,IAAIxB,EAAQvN,EAAMuP,gBAClB,GAAIzI,EAAOgJ,SAAWvC,GAASA,EAAM5kB,KAAM,CAEzC,IAAI9K,EAAImiB,EAAM4P,qBACVzkB,EAAS,IAAI3c,MAAMqP,GACnBsyB,EAASnQ,EAAM6N,mBACnBsC,EAAO5C,MAAQA,EAGf,IAFA,IAAI5N,EAAQ,EACRyQ,GAAa,EACV7C,GACLpiB,EAAOwU,GAAS4N,EACXA,EAAM8C,QAAOD,GAAa,GAC/B7C,EAAQA,EAAM5kB,KACdgX,GAAS,EAEXxU,EAAOilB,WAAaA,EACpBH,EAAQnJ,EAAQ9G,GAAO,EAAMA,EAAMlyB,OAAQqd,EAAQ,GAAIglB,EAAO3C,QAI9DxN,EAAM2N,YACN3N,EAAM0P,oBAAsB,KACxBS,EAAOxnB,MACTqX,EAAM6N,mBAAqBsC,EAAOxnB,KAClCwnB,EAAOxnB,KAAO,MAEdqX,EAAM6N,mBAAqB,IAAIP,EAActN,GAE/CA,EAAM4P,qBAAuB,CAC/B,KAAO,CAEL,KAAOrC,GAAO,CACZ,IAAI5H,EAAQ4H,EAAM5H,MACdnb,EAAW+iB,EAAM/iB,SACjBob,EAAK2H,EAAMG,SASf,GAPAuC,EAAQnJ,EAAQ9G,GAAO,EADbA,EAAMgH,WAAa,EAAIrB,EAAM73B,OACJ63B,EAAOnb,EAAUob,GACpD2H,EAAQA,EAAM5kB,KACdqX,EAAM4P,uBAKF5P,EAAM6O,QACR,KAEJ,CACc,OAAVtB,IAAgBvN,EAAM0P,oBAAsB,KAClD,CACA1P,EAAMuP,gBAAkBhC,EACxBvN,EAAM+O,kBAAmB,CAC3B,CAoCA,SAASO,EAAWtP,GAClB,OAAOA,EAAM0O,QAA2B,IAAjB1O,EAAMlyB,QAA0C,OAA1BkyB,EAAMuP,kBAA6BvP,EAAMqK,WAAarK,EAAM6O,OAC3G,CACA,SAASyB,EAAUxJ,EAAQ9G,GACzB8G,EAAOkJ,QAAO,SAAU5R,GACtB4B,EAAM2N,YACFvP,GACFwI,EAAeE,EAAQ1I,GAEzB4B,EAAM2P,aAAc,EACpB7I,EAAOpH,KAAK,aACZyP,EAAYrI,EAAQ9G,EACtB,GACF,CAaA,SAASmP,EAAYrI,EAAQ9G,GAC3B,IAAIuQ,EAAOjB,EAAWtP,GACtB,GAAIuQ,IAdN,SAAmBzJ,EAAQ9G,GACpBA,EAAM2P,aAAgB3P,EAAMyO,cACF,mBAAlB3H,EAAOkJ,QAA0BhQ,EAAMuF,WAKhDvF,EAAM2P,aAAc,EACpB7I,EAAOpH,KAAK,eALZM,EAAM2N,YACN3N,EAAMyO,aAAc,EACpBhV,QAAQyL,SAASoL,EAAWxJ,EAAQ9G,IAM1C,CAIIkN,CAAUpG,EAAQ9G,GACM,IAApBA,EAAM2N,YACR3N,EAAMqK,UAAW,EACjBvD,EAAOpH,KAAK,UACRM,EAAM8H,cAAa,CAGrB,IAAI0I,EAAS1J,EAAOxB,iBACfkL,GAAUA,EAAO1I,aAAe0I,EAAOnJ,aAC1CP,EAAOvM,SAEX,CAGJ,OAAOgW,CACT,CAxfA,EAAQ,IAAR,CAAoB5L,EAAUoB,GA4G9B+H,EAAct+B,UAAU61B,UAAY,WAGlC,IAFA,IAAIlc,EAAUpZ,KAAKw/B,gBACfz7B,EAAM,GACHqV,GACLrV,EAAI3F,KAAKgb,GACTA,EAAUA,EAAQR,KAEpB,OAAO7U,CACT,EACA,WACE,IACEmW,OAAOgG,eAAe6d,EAAct+B,UAAW,SAAU,CACvD2gB,IAAK6d,EAAaC,WAAU,WAC1B,OAAOl+B,KAAKs1B,WACd,GAAG,6EAAmF,YAE1F,CAAE,MAAOplB,GAAI,CACd,CARD,GAasB,mBAAX1M,QAAyBA,OAAOk9B,aAAiE,mBAA3ClT,SAAS/tB,UAAU+D,OAAOk9B,cACzF1C,EAAkBxQ,SAAS/tB,UAAU+D,OAAOk9B,aAC5CxmB,OAAOgG,eAAe0U,EAAUpxB,OAAOk9B,YAAa,CAClDlmB,MAAO,SAAemmB,GACpB,QAAI3C,EAAgBvmB,KAAKzX,KAAM2gC,IAC3B3gC,OAAS40B,GACN+L,GAAUA,EAAO1L,0BAA0B8I,CACpD,KAGFC,EAAkB,SAAyB2C,GACzC,OAAOA,aAAkB3gC,IAC3B,EA+BF40B,EAASn1B,UAAUi7B,KAAO,WACxB7D,EAAe72B,KAAM,IAAIm+B,EAC3B,EAyBAvJ,EAASn1B,UAAUmb,MAAQ,SAAUgb,EAAOnb,EAAUob,GACpD,IAzNqBna,EAyNjBuU,EAAQjwB,KAAKi1B,eACbnwB,GAAM,EACNw7B,GAASrQ,EAAMgH,aA3NEvb,EA2N0Bka,EA1NxCv1B,EAAOsb,SAASD,IAAQA,aAAeua,GAwO9C,OAbIqK,IAAUjgC,EAAOsb,SAASia,KAC5BA,EAhOJ,SAA6BA,GAC3B,OAAOv1B,EAAOka,KAAKqb,EACrB,CA8NYiD,CAAoBjD,IAEN,mBAAbnb,IACTob,EAAKpb,EACLA,EAAW,MAET6lB,EAAO7lB,EAAW,SAAmBA,IAAUA,EAAWwV,EAAM+H,iBAClD,mBAAPnC,IAAmBA,EAAK2I,GAC/BvO,EAAM0O,OArCZ,SAAuB5H,EAAQlB,GAC7B,IAAI3E,EAAK,IAAIoN,EAEbzH,EAAeE,EAAQ7F,GACvBxH,QAAQyL,SAASU,EAAI3E,EACvB,CAgCoB0P,CAAc5gC,KAAM61B,IAAayK,GA3BrD,SAAoBvJ,EAAQ9G,EAAO2F,EAAOC,GACxC,IAAI3E,EAMJ,OALc,OAAV0E,EACF1E,EAAK,IAAImN,EACiB,iBAAVzI,GAAuB3F,EAAMgH,aAC7C/F,EAAK,IAAIvJ,EAAqB,QAAS,CAAC,SAAU,UAAWiO,KAE3D1E,IACF2F,EAAeE,EAAQ7F,GACvBxH,QAAQyL,SAASU,EAAI3E,IACd,EAGX,CAc8D2P,CAAW7gC,KAAMiwB,EAAO2F,EAAOC,MACzF5F,EAAM2N,YACN94B,EAiDJ,SAAuBiyB,EAAQ9G,EAAOqQ,EAAO1K,EAAOnb,EAAUob,GAC5D,IAAKyK,EAAO,CACV,IAAIQ,EArBR,SAAqB7Q,EAAO2F,EAAOnb,GAIjC,OAHKwV,EAAMgH,aAAsC,IAAxBhH,EAAM4O,eAA4C,iBAAVjJ,IAC/DA,EAAQv1B,EAAOka,KAAKqb,EAAOnb,IAEtBmb,CACT,CAgBmBmL,CAAY9Q,EAAO2F,EAAOnb,GACrCmb,IAAUkL,IACZR,GAAQ,EACR7lB,EAAW,SACXmb,EAAQkL,EAEZ,CACA,IAAIpjC,EAAMuyB,EAAMgH,WAAa,EAAIrB,EAAM73B,OACvCkyB,EAAMlyB,QAAUL,EAChB,IAAIoH,EAAMmrB,EAAMlyB,OAASkyB,EAAMoF,cAG/B,GADKvwB,IAAKmrB,EAAMwL,WAAY,GACxBxL,EAAM6O,SAAW7O,EAAM8O,OAAQ,CACjC,IAAIlb,EAAOoM,EAAM0P,oBACjB1P,EAAM0P,oBAAsB,CAC1B/J,MAAOA,EACPnb,SAAUA,EACV6lB,MAAOA,EACP3C,SAAU9H,EACVjd,KAAM,MAEJiL,EACFA,EAAKjL,KAAOqX,EAAM0P,oBAElB1P,EAAMuP,gBAAkBvP,EAAM0P,oBAEhC1P,EAAM4P,sBAAwB,CAChC,MACEK,EAAQnJ,EAAQ9G,GAAO,EAAOvyB,EAAKk4B,EAAOnb,EAAUob,GAEtD,OAAO/wB,CACT,CAlFUk8B,CAAchhC,KAAMiwB,EAAOqQ,EAAO1K,EAAOnb,EAAUob,IAEpD/wB,CACT,EACA8vB,EAASn1B,UAAUwhC,KAAO,WACxBjhC,KAAKi1B,eAAe8J,QACtB,EACAnK,EAASn1B,UAAUyhC,OAAS,WAC1B,IAAIjR,EAAQjwB,KAAKi1B,eACbhF,EAAM8O,SACR9O,EAAM8O,SACD9O,EAAM6O,SAAY7O,EAAM8O,QAAW9O,EAAM+O,mBAAoB/O,EAAMuP,iBAAiBC,EAAYz/B,KAAMiwB,GAE/G,EACA2E,EAASn1B,UAAU0hC,mBAAqB,SAA4B1mB,GAGlE,GADwB,iBAAbA,IAAuBA,EAAWA,EAASgC,iBAChD,CAAC,MAAO,OAAQ,QAAS,QAAS,SAAU,SAAU,OAAQ,QAAS,UAAW,WAAY,OAAO7d,SAAS6b,EAAW,IAAIgC,gBAAkB,GAAI,MAAM,IAAI8hB,EAAqB9jB,GAExL,OADAza,KAAKi1B,eAAe+C,gBAAkBvd,EAC/Bza,IACT,EACAka,OAAOgG,eAAe0U,EAASn1B,UAAW,iBAAkB,CAI1D0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKi1B,gBAAkBj1B,KAAKi1B,eAAeK,WACpD,IAQFpb,OAAOgG,eAAe0U,EAASn1B,UAAW,wBAAyB,CAIjE0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKi1B,eAAeI,aAC7B,IAuKFT,EAASn1B,UAAU49B,OAAS,SAAUzH,EAAOnb,EAAUob,GACrDA,EAAG,IAAIc,EAA2B,YACpC,EACA/B,EAASn1B,UAAUsgC,QAAU,KAC7BnL,EAASn1B,UAAUX,IAAM,SAAU82B,EAAOnb,EAAUob,GAClD,IAAI5F,EAAQjwB,KAAKi1B,eAmBjB,MAlBqB,mBAAVW,GACTC,EAAKD,EACLA,EAAQ,KACRnb,EAAW,MACkB,mBAAbA,IAChBob,EAAKpb,EACLA,EAAW,MAETmb,SAAuC51B,KAAK4a,MAAMgb,EAAOnb,GAGzDwV,EAAM8O,SACR9O,EAAM8O,OAAS,EACf/+B,KAAKkhC,UAIFjR,EAAM0O,QAyDb,SAAqB5H,EAAQ9G,EAAO4F,GAClC5F,EAAM0O,QAAS,EACfS,EAAYrI,EAAQ9G,GAChB4F,IACE5F,EAAMqK,SAAU5Q,QAAQyL,SAASU,GAASkB,EAAOhJ,KAAK,SAAU8H,IAEtE5F,EAAMiF,OAAQ,EACd6B,EAAO5P,UAAW,CACpB,CAjEqBia,CAAYphC,KAAMiwB,EAAO4F,GACrC71B,IACT,EACAka,OAAOgG,eAAe0U,EAASn1B,UAAW,iBAAkB,CAI1D0gB,YAAY,EACZC,IAAK,WACH,OAAOpgB,KAAKi1B,eAAel3B,MAC7B,IAqEFmc,OAAOgG,eAAe0U,EAASn1B,UAAW,YAAa,CAIrD0gB,YAAY,EACZC,IAAK,WACH,YAA4B7H,IAAxBvY,KAAKi1B,gBAGFj1B,KAAKi1B,eAAeO,SAC7B,EACA3U,IAAK,SAAarG,GAGXxa,KAAKi1B,iBAMVj1B,KAAKi1B,eAAeO,UAAYhb,EAClC,IAEFoa,EAASn1B,UAAU+qB,QAAU+L,EAAY/L,QACzCoK,EAASn1B,UAAUu5B,WAAazC,EAAY0C,UAC5CrE,EAASn1B,UAAU44B,SAAW,SAAUhK,EAAKwH,GAC3CA,EAAGxH,EACL,8BC9nBA,IAAIgT,EACJ,SAASC,EAAgB5lB,EAAKuR,EAAKzS,GAA4L,OAAnLyS,EAC5C,SAAwB7S,GAAO,IAAI6S,EACnC,SAAsBxU,GAAe,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,OAAOA,EAAO,IAAI8oB,EAAO9oB,EAAMjV,OAAOyY,aAAc,QAAa1D,IAATgpB,EAAoB,CAAE,IAAIn8B,EAAMm8B,EAAK9pB,KAAKgB,EAAOnH,UAAoB,GAAmB,iBAARlM,EAAkB,OAAOA,EAAK,MAAM,IAAIkV,UAAU,+CAAiD,CAAE,OAA4BmD,OAAiBhF,EAAQ,CAD/U+oB,CAAapnB,GAAgB,MAAsB,iBAAR6S,EAAmBA,EAAMxP,OAAOwP,EAAM,CADxEwU,CAAexU,MAAiBvR,EAAOxB,OAAOgG,eAAexE,EAAKuR,EAAK,CAAEzS,MAAOA,EAAO2F,YAAY,EAAMiH,cAAc,EAAMD,UAAU,IAAkBzL,EAAIuR,GAAOzS,EAAgBkB,CAAK,CAG3O,IAAI4e,EAAW,EAAQ,KACnBoH,EAAel+B,OAAO,eACtBm+B,EAAcn+B,OAAO,cACrBo+B,EAASp+B,OAAO,SAChBq+B,EAASr+B,OAAO,SAChBs+B,EAAet+B,OAAO,eACtBu+B,EAAiBv+B,OAAO,iBACxBw+B,EAAUx+B,OAAO,UACrB,SAASy+B,EAAiBznB,EAAO4iB,GAC/B,MAAO,CACL5iB,MAAOA,EACP4iB,KAAMA,EAEV,CACA,SAAS8E,EAAeC,GACtB,IAAIjU,EAAUiU,EAAKT,GACnB,GAAgB,OAAZxT,EAAkB,CACpB,IAAInS,EAAOomB,EAAKH,GAAStkB,OAIZ,OAAT3B,IACFomB,EAAKL,GAAgB,KACrBK,EAAKT,GAAgB,KACrBS,EAAKR,GAAe,KACpBzT,EAAQ+T,EAAiBlmB,GAAM,IAEnC,CACF,CACA,SAASqmB,EAAWD,GAGlBzY,QAAQyL,SAAS+M,EAAgBC,EACnC,CAYA,IAAIE,EAAyBnoB,OAAO4W,gBAAe,WAAa,IAC5DwR,EAAuCpoB,OAAOC,gBAmD/CmnB,EAnD+DD,EAAwB,CACxF,UAAItK,GACF,OAAO/2B,KAAKgiC,EACd,EACAppB,KAAM,WACJ,IAAIojB,EAAQh8B,KAGRigB,EAAQjgB,KAAK4hC,GACjB,GAAc,OAAV3hB,EACF,OAAOgO,QAAQE,OAAOlO,GAExB,GAAIjgB,KAAK6hC,GACP,OAAO5T,QAAQC,QAAQ+T,OAAiB1pB,GAAW,IAErD,GAAIvY,KAAKgiC,GAASxM,UAKhB,OAAO,IAAIvH,SAAQ,SAAUC,EAASC,GACpCzE,QAAQyL,UAAS,WACX6G,EAAM4F,GACRzT,EAAO6N,EAAM4F,IAEb1T,EAAQ+T,OAAiB1pB,GAAW,GAExC,GACF,IAOF,IACIgqB,EADAC,EAAcxiC,KAAK8hC,GAEvB,GAAIU,EACFD,EAAU,IAAItU,QAlDpB,SAAqBuU,EAAaL,GAChC,OAAO,SAAUjU,EAASC,GACxBqU,EAAYC,MAAK,WACXN,EAAKN,GACP3T,EAAQ+T,OAAiB1pB,GAAW,IAGtC4pB,EAAKJ,GAAgB7T,EAASC,EAChC,GAAGA,EACL,CACF,CAwC4BuU,CAAYF,EAAaxiC,WAC1C,CAGL,IAAI+b,EAAO/b,KAAKgiC,GAAStkB,OACzB,GAAa,OAAT3B,EACF,OAAOkS,QAAQC,QAAQ+T,EAAiBlmB,GAAM,IAEhDwmB,EAAU,IAAItU,QAAQjuB,KAAK+hC,GAC7B,CAEA,OADA/hC,KAAK8hC,GAAgBS,EACdA,CACT,GACwC/+B,OAAOy4B,eAAe,WAC9D,OAAOj8B,IACT,IAAIshC,EAAgBD,EAAuB,UAAU,WACnD,IAAIsB,EAAS3iC,KAIb,OAAO,IAAIiuB,SAAQ,SAAUC,EAASC,GACpCwU,EAAOX,GAASxX,QAAQ,MAAM,SAAU6D,GAClCA,EACFF,EAAOE,GAGTH,EAAQ+T,OAAiB1pB,GAAW,GACtC,GACF,GACF,IAAI8oB,GAAwBgB,GA4D5B5lC,EAAOD,QA3DiC,SAA2Cu6B,GACjF,IAAI6L,EACAC,EAAW3oB,OAAOuV,OAAO6S,GAA4DhB,EAArBsB,EAAiB,CAAC,EAAmCZ,EAAS,CAChIxnB,MAAOuc,EACP5P,UAAU,IACRma,EAAgBsB,EAAgBlB,EAAc,CAChDlnB,MAAO,KACP2M,UAAU,IACRma,EAAgBsB,EAAgBjB,EAAa,CAC/CnnB,MAAO,KACP2M,UAAU,IACRma,EAAgBsB,EAAgBhB,EAAQ,CAC1CpnB,MAAO,KACP2M,UAAU,IACRma,EAAgBsB,EAAgBf,EAAQ,CAC1CrnB,MAAOuc,EAAOxB,eAAe+B,WAC7BnQ,UAAU,IACRma,EAAgBsB,EAAgBb,EAAgB,CAClDvnB,MAAO,SAAe0T,EAASC,GAC7B,IAAIpS,EAAO8mB,EAASb,GAAStkB,OACzB3B,GACF8mB,EAASf,GAAgB,KACzBe,EAASnB,GAAgB,KACzBmB,EAASlB,GAAe,KACxBzT,EAAQ+T,EAAiBlmB,GAAM,MAE/B8mB,EAASnB,GAAgBxT,EACzB2U,EAASlB,GAAexT,EAE5B,EACAhH,UAAU,IACRyb,IA0BJ,OAzBAC,EAASf,GAAgB,KACzBxH,EAASvD,GAAQ,SAAU1I,GACzB,GAAIA,GAAoB,+BAAbA,EAAI3vB,KAAuC,CACpD,IAAIyvB,EAAS0U,EAASlB,GAUtB,OAPe,OAAXxT,IACF0U,EAASf,GAAgB,KACzBe,EAASnB,GAAgB,KACzBmB,EAASlB,GAAe,KACxBxT,EAAOE,SAETwU,EAASjB,GAAUvT,EAErB,CACA,IAAIH,EAAU2U,EAASnB,GACP,OAAZxT,IACF2U,EAASf,GAAgB,KACzBe,EAASnB,GAAgB,KACzBmB,EAASlB,GAAe,KACxBzT,EAAQ+T,OAAiB1pB,GAAW,KAEtCsqB,EAAShB,IAAU,CACrB,IACA9K,EAAOrI,GAAG,WAAY0T,EAAWjS,KAAK,KAAM0S,IACrCA,CACT,8BChLA,SAASpV,EAAQkT,EAAQmC,GAAkB,IAAI/V,EAAO7S,OAAO6S,KAAK4T,GAAS,GAAIzmB,OAAOwT,sBAAuB,CAAE,IAAIqV,EAAU7oB,OAAOwT,sBAAsBiT,GAASmC,IAAmBC,EAAUA,EAAQC,QAAO,SAAUjc,GAAO,OAAO7M,OAAO+oB,yBAAyBtC,EAAQ5Z,GAAK5G,UAAY,KAAK4M,EAAK3uB,KAAKqhB,MAAMsN,EAAMgW,EAAU,CAAE,OAAOhW,CAAM,CACpV,SAASmW,EAAc9hB,GAAU,IAAK,IAAI/jB,EAAI,EAAGA,EAAIgf,UAAUte,OAAQV,IAAK,CAAE,IAAI8lC,EAAS,MAAQ9mB,UAAUhf,GAAKgf,UAAUhf,GAAK,CAAC,EAAGA,EAAI,EAAIowB,EAAQvT,OAAOipB,IAAS,GAAInW,SAAQ,SAAUC,GAAOqU,EAAgBlgB,EAAQ6L,EAAKkW,EAAOlW,GAAO,IAAK/S,OAAOkpB,0BAA4BlpB,OAAOmpB,iBAAiBjiB,EAAQlH,OAAOkpB,0BAA0BD,IAAW1V,EAAQvT,OAAOipB,IAASnW,SAAQ,SAAUC,GAAO/S,OAAOgG,eAAekB,EAAQ6L,EAAK/S,OAAO+oB,yBAAyBE,EAAQlW,GAAO,GAAI,CAAE,OAAO7L,CAAQ,CACzf,SAASkgB,EAAgB5lB,EAAKuR,EAAKzS,GAA4L,OAAnLyS,EAAMwU,EAAexU,MAAiBvR,EAAOxB,OAAOgG,eAAexE,EAAKuR,EAAK,CAAEzS,MAAOA,EAAO2F,YAAY,EAAMiH,cAAc,EAAMD,UAAU,IAAkBzL,EAAIuR,GAAOzS,EAAgBkB,CAAK,CAE3O,SAAS4nB,EAAkBliB,EAAQmiB,GAAS,IAAK,IAAIlmC,EAAI,EAAGA,EAAIkmC,EAAMxlC,OAAQV,IAAK,CAAE,IAAImmC,EAAaD,EAAMlmC,GAAImmC,EAAWrjB,WAAaqjB,EAAWrjB,aAAc,EAAOqjB,EAAWpc,cAAe,EAAU,UAAWoc,IAAYA,EAAWrc,UAAW,GAAMjN,OAAOgG,eAAekB,EAAQqgB,EAAe+B,EAAWvW,KAAMuW,EAAa,CAAE,CAE5U,SAAS/B,EAAernB,GAAO,IAAI6S,EACnC,SAAsBxU,GAAe,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,OAAOA,EAAO,IAAI8oB,EAAO9oB,EAAMjV,OAAOyY,aAAc,QAAa1D,IAATgpB,EAAoB,CAAE,IAAIn8B,EAAMm8B,EAAK9pB,KAAKgB,EAAOnH,UAAoB,GAAmB,iBAARlM,EAAkB,OAAOA,EAAK,MAAM,IAAIkV,UAAU,+CAAiD,CAAE,OAA4BmD,OAAiBhF,EAAQ,CAD/U+oB,CAAapnB,GAAgB,MAAsB,iBAAR6S,EAAmBA,EAAMxP,OAAOwP,EAAM,CAE1H,IACE5sB,EADa,EAAQ,KACHA,OAElBqD,EADc,EAAQ,KACFA,QAClB+/B,EAAS//B,GAAWA,EAAQ+/B,QAAU,UAI1ChnC,EAAOD,QAAuB,WAC5B,SAAS85B,KAdX,SAAyBoN,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIrpB,UAAU,oCAAwC,CAepJspB,CAAgB5jC,KAAMs2B,GACtBt2B,KAAKq5B,KAAO,KACZr5B,KAAK6jC,KAAO,KACZ7jC,KAAKjC,OAAS,CAChB,CAjBF,IAAsB4lC,EAAaG,EA8KjC,OA9KoBH,EAkBPrN,GAlBoBwN,EAkBR,CAAC,CACxB7W,IAAK,OACLzS,MAAO,SAAcuQ,GACnB,IAAIyS,EAAQ,CACVzhB,KAAMgP,EACNnS,KAAM,MAEJ5Y,KAAKjC,OAAS,EAAGiC,KAAK6jC,KAAKjrB,KAAO4kB,EAAWx9B,KAAKq5B,KAAOmE,EAC7Dx9B,KAAK6jC,KAAOrG,IACVx9B,KAAKjC,MACT,GACC,CACDkvB,IAAK,UACLzS,MAAO,SAAiBuQ,GACtB,IAAIyS,EAAQ,CACVzhB,KAAMgP,EACNnS,KAAM5Y,KAAKq5B,MAEO,IAAhBr5B,KAAKjC,SAAciC,KAAK6jC,KAAOrG,GACnCx9B,KAAKq5B,KAAOmE,IACVx9B,KAAKjC,MACT,GACC,CACDkvB,IAAK,QACLzS,MAAO,WACL,GAAoB,IAAhBxa,KAAKjC,OAAT,CACA,IAAI+G,EAAM9E,KAAKq5B,KAAKtd,KAGpB,OAFoB,IAAhB/b,KAAKjC,OAAciC,KAAKq5B,KAAOr5B,KAAK6jC,KAAO,KAAU7jC,KAAKq5B,KAAOr5B,KAAKq5B,KAAKzgB,OAC7E5Y,KAAKjC,OACA+G,CAJsB,CAK/B,GACC,CACDmoB,IAAK,QACLzS,MAAO,WACLxa,KAAKq5B,KAAOr5B,KAAK6jC,KAAO,KACxB7jC,KAAKjC,OAAS,CAChB,GACC,CACDkvB,IAAK,OACLzS,MAAO,SAAchM,GACnB,GAAoB,IAAhBxO,KAAKjC,OAAc,MAAO,GAG9B,IAFA,IAAI+Q,EAAI9O,KAAKq5B,KACTv0B,EAAM,GAAKgK,EAAEiN,KACVjN,EAAIA,EAAE8J,MAAM9T,GAAO0J,EAAIM,EAAEiN,KAChC,OAAOjX,CACT,GACC,CACDmoB,IAAK,SACLzS,MAAO,SAAgBjL,GACrB,GAAoB,IAAhBvP,KAAKjC,OAAc,OAAOsC,EAAOuZ,MAAM,GAI3C,IAHA,IA5DcpY,EAAK4f,EAAQrD,EA4DvBjZ,EAAMzE,EAAOgF,YAAYkK,IAAM,GAC/BT,EAAI9O,KAAKq5B,KACTh8B,EAAI,EACDyR,GA/DOtN,EAgEDsN,EAAEiN,KAhEIqF,EAgEEtc,EAhEMiZ,EAgED1gB,EA/D9BgD,EAAOZ,UAAUyD,KAAKuU,KAAKjW,EAAK4f,EAAQrD,GAgElC1gB,GAAKyR,EAAEiN,KAAKhe,OACZ+Q,EAAIA,EAAE8J,KAER,OAAO9T,CACT,GAGC,CACDmoB,IAAK,UACLzS,MAAO,SAAiBjL,EAAGw0B,GACzB,IAAIj/B,EAYJ,OAXIyK,EAAIvP,KAAKq5B,KAAKtd,KAAKhe,QAErB+G,EAAM9E,KAAKq5B,KAAKtd,KAAKlB,MAAM,EAAGtL,GAC9BvP,KAAKq5B,KAAKtd,KAAO/b,KAAKq5B,KAAKtd,KAAKlB,MAAMtL,IAGtCzK,EAFSyK,IAAMvP,KAAKq5B,KAAKtd,KAAKhe,OAExBiC,KAAKyF,QAGLs+B,EAAa/jC,KAAKgkC,WAAWz0B,GAAKvP,KAAKikC,WAAW10B,GAEnDzK,CACT,GACC,CACDmoB,IAAK,QACLzS,MAAO,WACL,OAAOxa,KAAKq5B,KAAKtd,IACnB,GAGC,CACDkR,IAAK,aACLzS,MAAO,SAAoBjL,GACzB,IAAIT,EAAI9O,KAAKq5B,KACTz4B,EAAI,EACJkE,EAAMgK,EAAEiN,KAEZ,IADAxM,GAAKzK,EAAI/G,OACF+Q,EAAIA,EAAE8J,MAAM,CACjB,IAAI3X,EAAM6N,EAAEiN,KACRmoB,EAAK30B,EAAItO,EAAIlD,OAASkD,EAAIlD,OAASwR,EAGvC,GAFI20B,IAAOjjC,EAAIlD,OAAQ+G,GAAO7D,EAAS6D,GAAO7D,EAAI4Z,MAAM,EAAGtL,GAEjD,IADVA,GAAK20B,GACQ,CACPA,IAAOjjC,EAAIlD,UACX6C,EACEkO,EAAE8J,KAAM5Y,KAAKq5B,KAAOvqB,EAAE8J,KAAU5Y,KAAKq5B,KAAOr5B,KAAK6jC,KAAO,OAE5D7jC,KAAKq5B,KAAOvqB,EACZA,EAAEiN,KAAO9a,EAAI4Z,MAAMqpB,IAErB,KACF,GACEtjC,CACJ,CAEA,OADAZ,KAAKjC,QAAU6C,EACRkE,CACT,GAGC,CACDmoB,IAAK,aACLzS,MAAO,SAAoBjL,GACzB,IAAIzK,EAAMzE,EAAOgF,YAAYkK,GACzBT,EAAI9O,KAAKq5B,KACTz4B,EAAI,EAGR,IAFAkO,EAAEiN,KAAK7Y,KAAK4B,GACZyK,GAAKT,EAAEiN,KAAKhe,OACL+Q,EAAIA,EAAE8J,MAAM,CACjB,IAAIqB,EAAMnL,EAAEiN,KACRmoB,EAAK30B,EAAI0K,EAAIlc,OAASkc,EAAIlc,OAASwR,EAGvC,GAFA0K,EAAI/W,KAAK4B,EAAKA,EAAI/G,OAASwR,EAAG,EAAG20B,GAEvB,IADV30B,GAAK20B,GACQ,CACPA,IAAOjqB,EAAIlc,UACX6C,EACEkO,EAAE8J,KAAM5Y,KAAKq5B,KAAOvqB,EAAE8J,KAAU5Y,KAAKq5B,KAAOr5B,KAAK6jC,KAAO,OAE5D7jC,KAAKq5B,KAAOvqB,EACZA,EAAEiN,KAAO9B,EAAIY,MAAMqpB,IAErB,KACF,GACEtjC,CACJ,CAEA,OADAZ,KAAKjC,QAAU6C,EACRkE,CACT,GAGC,CACDmoB,IAAKwW,EACLjpB,MAAO,SAAetK,EAAG0iB,GACvB,OAAOlvB,EAAQ1D,KAAMkjC,EAAcA,EAAc,CAAC,EAAGtQ,GAAU,CAAC,EAAG,CAEjEuR,MAAO,EAEPC,eAAe,IAEnB,MA5K0Ed,EAAkBK,EAAYlkC,UAAWqkC,GAA2E5pB,OAAOgG,eAAeyjB,EAAa,YAAa,CAAExc,UAAU,IA8KrPmP,CACT,CApK8B,yBCiC9B,SAAS+N,EAAoBznC,EAAMyxB,GACjCiW,EAAY1nC,EAAMyxB,GAClBkW,EAAY3nC,EACd,CACA,SAAS2nC,EAAY3nC,GACfA,EAAKq4B,iBAAmBr4B,EAAKq4B,eAAe6C,WAC5Cl7B,EAAK24B,iBAAmB34B,EAAK24B,eAAeuC,WAChDl7B,EAAK+yB,KAAK,QACZ,CAkBA,SAAS2U,EAAY1nC,EAAMyxB,GACzBzxB,EAAK+yB,KAAK,QAAStB,EACrB,CAYA5xB,EAAOD,QAAU,CACfguB,QAzFF,SAAiB6D,EAAKwH,GACpB,IAAImG,EAAQh8B,KACRwkC,EAAoBxkC,KAAKu1B,gBAAkBv1B,KAAKu1B,eAAeC,UAC/DiP,EAAoBzkC,KAAKi1B,gBAAkBj1B,KAAKi1B,eAAeO,UACnE,OAAIgP,GAAqBC,GACnB5O,EACFA,EAAGxH,GACMA,IACJruB,KAAKi1B,eAEEj1B,KAAKi1B,eAAeoK,eAC9Br/B,KAAKi1B,eAAeoK,cAAe,EACnC3V,QAAQyL,SAASmP,EAAatkC,KAAMquB,IAHpC3E,QAAQyL,SAASmP,EAAatkC,KAAMquB,IAMjCruB,OAMLA,KAAKu1B,iBACPv1B,KAAKu1B,eAAeC,WAAY,GAI9Bx1B,KAAKi1B,iBACPj1B,KAAKi1B,eAAeO,WAAY,GAElCx1B,KAAKq4B,SAAShK,GAAO,MAAM,SAAUA,IAC9BwH,GAAMxH,EACJ2N,EAAM/G,eAEC+G,EAAM/G,eAAeoK,aAI/B3V,QAAQyL,SAASoP,EAAavI,IAH9BA,EAAM/G,eAAeoK,cAAe,EACpC3V,QAAQyL,SAASkP,EAAqBrI,EAAO3N,IAH7C3E,QAAQyL,SAASkP,EAAqBrI,EAAO3N,GAOtCwH,GACTnM,QAAQyL,SAASoP,EAAavI,GAC9BnG,EAAGxH,IAEH3E,QAAQyL,SAASoP,EAAavI,EAElC,IACOh8B,KACT,EA2CEi5B,UAjCF,WACMj5B,KAAKu1B,iBACPv1B,KAAKu1B,eAAeC,WAAY,EAChCx1B,KAAKu1B,eAAegC,SAAU,EAC9Bv3B,KAAKu1B,eAAeL,OAAQ,EAC5Bl1B,KAAKu1B,eAAe+B,YAAa,GAE/Bt3B,KAAKi1B,iBACPj1B,KAAKi1B,eAAeO,WAAY,EAChCx1B,KAAKi1B,eAAeC,OAAQ,EAC5Bl1B,KAAKi1B,eAAe0J,QAAS,EAC7B3+B,KAAKi1B,eAAeyJ,aAAc,EAClC1+B,KAAKi1B,eAAe2K,aAAc,EAClC5/B,KAAKi1B,eAAeqF,UAAW,EAC/Bt6B,KAAKi1B,eAAeoK,cAAe,EAEvC,EAkBExI,eAdF,SAAwBE,EAAQ1I,GAO9B,IAAIoS,EAAS1J,EAAOxB,eAChB8E,EAAStD,EAAO9B,eAChBwL,GAAUA,EAAO1I,aAAesC,GAAUA,EAAOtC,YAAahB,EAAOvM,QAAQ6D,GAAU0I,EAAOpH,KAAK,QAAStB,EAClH,+BCrFA,IAAIqW,EAA6B,QAAiCA,2BAYlE,SAASC,IAAQ,CAoEjBloC,EAAOD,QAhEP,SAASooC,EAAI7N,EAAQqF,EAAMuB,GACzB,GAAoB,mBAATvB,EAAqB,OAAOwI,EAAI7N,EAAQ,KAAMqF,GACpDA,IAAMA,EAAO,CAAC,GACnBuB,EAlBF,SAAcA,GACZ,IAAIkH,GAAS,EACb,OAAO,WACL,IAAIA,EAAJ,CACAA,GAAS,EACT,IAAK,IAAIC,EAAOzoB,UAAUte,OAAQ4qB,EAAO,IAAIlqB,MAAMqmC,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/Epc,EAAKoc,GAAQ1oB,UAAU0oB,GAEzBpH,EAASle,MAAMzf,KAAM2oB,EALH,CAMpB,CACF,CAQaoF,CAAK4P,GAAYgH,GAC5B,IAAI5P,EAAWqH,EAAKrH,WAA8B,IAAlBqH,EAAKrH,UAAsBgC,EAAOhC,SAC9D5N,EAAWiV,EAAKjV,WAA8B,IAAlBiV,EAAKjV,UAAsB4P,EAAO5P,SAC9D6d,EAAiB,WACdjO,EAAO5P,UAAUiU,GACxB,EACI6J,EAAgBlO,EAAO9B,gBAAkB8B,EAAO9B,eAAeqF,SAC/Dc,EAAW,WACbjU,GAAW,EACX8d,GAAgB,EACXlQ,GAAU4I,EAASlmB,KAAKsf,EAC/B,EACImO,EAAgBnO,EAAOxB,gBAAkBwB,EAAOxB,eAAe+B,WAC/DtC,EAAQ,WACVD,GAAW,EACXmQ,GAAgB,EACX/d,GAAUwW,EAASlmB,KAAKsf,EAC/B,EACIuE,EAAU,SAAiBjN,GAC7BsP,EAASlmB,KAAKsf,EAAQ1I,EACxB,EACI8M,EAAU,WACZ,IAAI9M,EACJ,OAAI0G,IAAamQ,GACVnO,EAAOxB,gBAAmBwB,EAAOxB,eAAeL,QAAO7G,EAAM,IAAIqW,GAC/D/G,EAASlmB,KAAKsf,EAAQ1I,IAE3BlH,IAAa8d,GACVlO,EAAO9B,gBAAmB8B,EAAO9B,eAAeC,QAAO7G,EAAM,IAAIqW,GAC/D/G,EAASlmB,KAAKsf,EAAQ1I,SAF/B,CAIF,EACI8W,EAAY,WACdpO,EAAOqO,IAAI1W,GAAG,SAAU0M,EAC1B,EAcA,OAtDF,SAAmBrE,GACjB,OAAOA,EAAOsO,WAAqC,mBAAjBtO,EAAOuO,KAC3C,CAuCMC,CAAUxO,IACZA,EAAOrI,GAAG,WAAY0M,GACtBrE,EAAOrI,GAAG,QAASyM,GACfpE,EAAOqO,IAAKD,IAAiBpO,EAAOrI,GAAG,UAAWyW,IAC7Che,IAAa4P,EAAO9B,iBAE7B8B,EAAOrI,GAAG,MAAOsW,GACjBjO,EAAOrI,GAAG,QAASsW,IAErBjO,EAAOrI,GAAG,MAAOsG,GACjB+B,EAAOrI,GAAG,SAAU0M,IACD,IAAfgB,EAAKnc,OAAiB8W,EAAOrI,GAAG,QAAS4M,GAC7CvE,EAAOrI,GAAG,QAASyM,GACZ,WACLpE,EAAOzI,eAAe,WAAY8M,GAClCrE,EAAOzI,eAAe,QAAS6M,GAC/BpE,EAAOzI,eAAe,UAAW6W,GAC7BpO,EAAOqO,KAAKrO,EAAOqO,IAAI9W,eAAe,SAAU8M,GACpDrE,EAAOzI,eAAe,MAAO0W,GAC7BjO,EAAOzI,eAAe,QAAS0W,GAC/BjO,EAAOzI,eAAe,SAAU8M,GAChCrE,EAAOzI,eAAe,MAAO0G,GAC7B+B,EAAOzI,eAAe,QAASgN,GAC/BvE,EAAOzI,eAAe,QAAS6M,EACjC,CACF,WCpFA1+B,EAAOD,QAAU,WACf,MAAM,IAAImC,MAAM,gDAClB,8BCGA,IAAIimC,EASAnO,EAAiB,QACnB+O,EAAmB/O,EAAe+O,iBAClCpH,EAAuB3H,EAAe2H,qBACxC,SAASuG,EAAKtW,GAEZ,GAAIA,EAAK,MAAMA,CACjB,CA+BA,SAAS5W,EAAK+Q,GACZA,GACF,CACA,SAASkS,EAAKngB,EAAMkrB,GAClB,OAAOlrB,EAAKmgB,KAAK+K,EACnB,CA6BAhpC,EAAOD,QAvBP,WACE,IAAK,IAAIsoC,EAAOzoB,UAAUte,OAAQ2nC,EAAU,IAAIjnC,MAAMqmC,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAClFW,EAAQX,GAAQ1oB,UAAU0oB,GAE5B,IAKI9kB,EALA0d,EATN,SAAqB+H,GACnB,OAAKA,EAAQ3nC,OAC8B,mBAAhC2nC,EAAQA,EAAQ3nC,OAAS,GAA0B4mC,EACvDe,EAAQjU,MAFakT,CAG9B,CAKiBgB,CAAYD,GAE3B,GADIjnC,MAAMgD,QAAQikC,EAAQ,MAAKA,EAAUA,EAAQ,IAC7CA,EAAQ3nC,OAAS,EACnB,MAAM,IAAIynC,EAAiB,WAG7B,IAAII,EAAWF,EAAQhZ,KAAI,SAAUqK,EAAQ15B,GAC3C,IAAIk6B,EAAUl6B,EAAIqoC,EAAQ3nC,OAAS,EAEnC,OAnDJ,SAAmBg5B,EAAQQ,EAASuH,EAASnB,GAC3CA,EAnBF,SAAcA,GACZ,IAAIkH,GAAS,EACb,OAAO,WACDA,IACJA,GAAS,EACTlH,EAASle,WAAM,EAAQpD,WACzB,CACF,CAYa0R,CAAK4P,GAChB,IAAIkI,GAAS,EACb9O,EAAOrI,GAAG,SAAS,WACjBmX,GAAS,CACX,SACYttB,IAARqsB,IAAmBA,EAAM,EAAQ,MACrCA,EAAI7N,EAAQ,CACVhC,SAAUwC,EACVpQ,SAAU2X,IACT,SAAUzQ,GACX,GAAIA,EAAK,OAAOsP,EAAStP,GACzBwX,GAAS,EACTlI,GACF,IACA,IAAInI,GAAY,EAChB,OAAO,SAAUnH,GACf,IAAIwX,IACArQ,EAIJ,OAHAA,GAAY,EAtBhB,SAAmBuB,GACjB,OAAOA,EAAOsO,WAAqC,mBAAjBtO,EAAOuO,KAC3C,CAuBQC,CAAUxO,GAAgBA,EAAOuO,QACP,mBAAnBvO,EAAOvM,QAA+BuM,EAAOvM,eACxDmT,EAAStP,GAAO,IAAI+P,EAAqB,QAC3C,CACF,CAyBW0H,CAAU/O,EAAQQ,EADXl6B,EAAI,GACyB,SAAUgxB,GAC9CpO,IAAOA,EAAQoO,GAChBA,GAAKuX,EAAS5Y,QAAQvV,GACtB8f,IACJqO,EAAS5Y,QAAQvV,GACjBkmB,EAAS1d,GACX,GACF,IACA,OAAOylB,EAAQK,OAAOrL,EACxB,8BClFA,IAAIsL,EAAwB,QAAiCA,sBAiB7DvpC,EAAOD,QAAU,CACfg6B,iBAdF,SAA0BvG,EAAO2C,EAASqT,EAAWjP,GACnD,IAAIkP,EAJN,SAA2BtT,EAASoE,EAAUiP,GAC5C,OAAgC,MAAzBrT,EAAQyC,cAAwBzC,EAAQyC,cAAgB2B,EAAWpE,EAAQqT,GAAa,IACjG,CAEYE,CAAkBvT,EAASoE,EAAUiP,GAC/C,GAAW,MAAPC,EAAa,CACf,IAAMxkB,SAASwkB,IAAQ9kC,KAAKwmB,MAAMse,KAASA,GAAQA,EAAM,EAEvD,MAAM,IAAIF,EADChP,EAAWiP,EAAY,gBACIC,GAExC,OAAO9kC,KAAKwmB,MAAMse,EACpB,CAGA,OAAOjW,EAAMgH,WAAa,GAAK,KACjC,kBClBAx6B,EAAOD,QAAU,EAAjB,gCCAAA,EAAUC,EAAOD,QAAU,EAAjB,MACFw5B,OAASx5B,EACjBA,EAAQm4B,SAAWn4B,EACnBA,EAAQo4B,SAAW,EAAnB,KACAp4B,EAAQk4B,OAAS,EAAjB,KACAl4B,EAAQk5B,UAAY,EAApB,KACAl5B,EAAQi5B,YAAc,EAAtB,KACAj5B,EAAQ89B,SAAW,EAAnB,KACA99B,EAAQ4pC,SAAW,EAAnB,+BCyBA,SAASC,EAAU5tB,EAAO5Z,EAAOC,GAC7B,GAAIA,EAAM2Z,EAAM1a,OACZ,MAAM,IAAIY,MAAM,kEAEpB,OAAO8Z,EAAMoC,MAAMhc,EAAOC,EAC9B,CAKA,SAASwnC,EAAavb,GAClB,GAAa,IAATA,EAAE,GACF,MAAM,IAAIpsB,MAAM,4BAEpB,OAAOkC,EAgHX,SAAoB0lC,GAEhB,IAAIC,EAAM,GACV,IAAK,IAAInpC,EAAI,EAAGA,EAAIkpC,EAAOxoC,OAAQV,IAC/BmpC,GAAOC,EAAYF,EAAOlpC,IAE9B,OAAOmpC,CACX,CAvHwBE,CAAW3b,GACnC,CACA,SAAS4b,EAAajpC,EAAKqgB,GACvB,GAAIrgB,EAAM,GACN,OAAOc,WAAW+b,KAAK,CAAC7c,EAAMqgB,IAElC,MAAM6oB,EAAYC,EAAYnpC,GAExBqhB,EAAY8nB,EAAY9oB,EAAS,GADvB6oB,EAAU7oC,OAAS,GAEnC,OAAOS,WAAW+b,KAAKusB,EAAW/nB,EAAY6nB,GAClD,CAiBA,SAASG,EAAQtuB,GACb,IAAI1a,EAAQipC,EAASjrB,EAAMkrB,EAAgB5U,EAC3C,MAAM6U,EAAU,GACVnoB,EAAYtG,EAAM,GACxB,GAAIsG,GAAa,IAEb,MAAO,CACHhD,KAAMtD,EAAMoC,MAAM,EAAG,GACrBssB,UAAW1uB,EAAMoC,MAAM,IAG1B,GAAIkE,GAAa,IAAM,CAWxB,GARAhhB,EAASghB,EAAY,IAGjBhD,EADc,MAAdgD,EACOvgB,WAAW+b,KAAK,IAGhB8rB,EAAU5tB,EAAO,EAAG1a,GAEhB,IAAXA,GAAgBge,EAAK,GAAK,IAC1B,MAAM,IAAIpd,MAAM,6EAEpB,MAAO,CACHod,KAAMA,EACNorB,UAAW1uB,EAAMoC,MAAM9c,GAE/B,CACK,GAAIghB,GAAa,IAAM,CAIxB,GADAioB,EAAUjoB,EAAY,IAClBtG,EAAM1a,OAAS,EAAIipC,EACnB,MAAM,IAAIroC,MAAM,mDAGpB,GADAZ,EAASuoC,EAAaD,EAAU5tB,EAAO,EAAGuuB,IACtCjpC,GAAU,GACV,MAAM,IAAIY,MAAM,6DAGpB,OADAod,EAAOsqB,EAAU5tB,EAAOuuB,EAASjpC,EAASipC,GACnC,CACHjrB,KAAMA,EACNorB,UAAW1uB,EAAMoC,MAAM9c,EAASipC,GAExC,CACK,GAAIjoB,GAAa,IAAM,CAIxB,IAFAhhB,EAASghB,EAAY,IACrBkoB,EAAiBZ,EAAU5tB,EAAO,EAAG1a,GAC9BkpC,EAAelpC,QAClBs0B,EAAI0U,EAAQE,GACZC,EAAQ9oC,KAAKi0B,EAAEtW,MACfkrB,EAAiB5U,EAAE8U,UAEvB,MAAO,CACHprB,KAAMmrB,EACNC,UAAW1uB,EAAMoC,MAAM9c,GAE/B,CACK,CAID,GAFAipC,EAAUjoB,EAAY,IACtBhhB,EAASuoC,EAAaD,EAAU5tB,EAAO,EAAGuuB,IACtCjpC,EAAS,GACT,MAAM,IAAIY,MAAM,uCAEpB,MAAMyoC,EAAcJ,EAAUjpC,EAC9B,GAAIqpC,EAAc3uB,EAAM1a,OACpB,MAAM,IAAIY,MAAM,qDAGpB,IADAsoC,EAAiBZ,EAAU5tB,EAAOuuB,EAASI,GACpCH,EAAelpC,QAClBs0B,EAAI0U,EAAQE,GACZC,EAAQ9oC,KAAKi0B,EAAEtW,MACfkrB,EAAiB5U,EAAE8U,UAEvB,MAAO,CACHprB,KAAMmrB,EACNC,UAAW1uB,EAAMoC,MAAMusB,GAE/B,CACJ,CACA,MAAMX,EAAchoC,MAAM8b,KAAK,CAAExc,OAAQ,MAAO,CAACspC,EAAIhqC,IAAMA,EAAE2E,SAAS,IAAIslC,SAAS,EAAG,OAStF,SAASzmC,EAAa0mC,GAClB,MAAMC,EAAOxpB,OAAOI,SAASmpB,EAAS,IACtC,GAAIvpB,OAAO6P,MAAM2Z,GACb,MAAM,IAAI7oC,MAAM,yBACpB,OAAO6oC,CACX,CAEA,SAASV,EAAWN,GAChB,GAAmB,iBAARA,EACP,MAAM,IAAIlsB,UAAU,2CAA6CksB,GAErE,GAAIA,EAAIzoC,OAAS,EACb,MAAM,IAAIY,MAAM,6CACpB,MAAMwd,EAAQ,IAAI3d,WAAWgoC,EAAIzoC,OAAS,GAC1C,IAAK,IAAIV,EAAI,EAAGA,EAAI8e,EAAMpe,OAAQV,IAAK,CACnC,MAAMiF,EAAQ,EAAJjF,EACV8e,EAAM9e,GAAKwD,EAAa2lC,EAAI3rB,MAAMvY,EAAGA,EAAI,GAC7C,CACA,OAAO6Z,CACX,CAEA,SAASsrB,KAAeC,GACpB,GAAsB,IAAlBA,EAAO3pC,OACP,OAAO2pC,EAAO,GAClB,MAAM3pC,EAAS2pC,EAAO3B,QAAO,CAAC/hC,EAAG1G,IAAQ0G,EAAI1G,EAAIS,QAAQ,GACnD4pC,EAAS,IAAInpC,WAAWT,GAC9B,IAAK,IAAIV,EAAI,EAAGuqC,EAAM,EAAGvqC,EAAIqqC,EAAO3pC,OAAQV,IAAK,CAC7C,MAAMC,EAAMoqC,EAAOrqC,GACnBsqC,EAAO9mB,IAAIvjB,EAAKsqC,GAChBA,GAAOtqC,EAAIS,MACf,CACA,OAAO4pC,CACX,CAKA,SAASd,EAAYgB,GACjB,GAAIA,EAAU,EACV,MAAM,IAAIlpC,MAAM,kDAEpB,MAAM6nC,EAAMqB,EAAQ7lC,SAAS,IAC7B,OAAOwkC,EAAIzoC,OAAS,EAAI,IAAIyoC,IAAQA,CACxC,CAMA,SAASsB,EAAc7mC,GACnB,OAAOA,EAAIlD,QAAU,GAAgB,MAAXkD,EAAI,IAAyB,MAAXA,EAAI,EACpD,CASA,SAAS8mC,EAAQhd,GACb,GAAIA,aAAavsB,WACb,OAAOusB,EAEX,GAAiB,iBAANA,EACP,OAAI+c,EAAc/c,GACP+b,GArBA9iC,EASI,iBADC/C,EAa+B8pB,GAXxC9pB,EAEJ6mC,EAAc7mC,GAAOA,EAAI4Z,MAAM,GAAK5Z,GAXlClD,OAAS,EAAI,IAAIiG,IAAMA,IAbfgkC,EAmCMjd,GAlChB,IAAIkd,aAAcC,OAAOF,IADpC,IAAqBA,EAYFhkC,EAQK/C,EAiBpB,GAAiB,iBAAN8pB,GAA+B,iBAANA,EAChC,OAAKA,EAGE+b,EAAWD,EAAY9b,IAFnBvsB,WAAW+b,KAAK,IAI/B,GAAIwQ,QACA,OAAOvsB,WAAW+b,KAAK,IAE3B,MAAM,IAAI5b,MAAM,6CAA+CosB,EACnE,CAOA,MAAMod,EAAM,CAAED,OApPd,SAASA,EAAOzvB,GACZ,GAAIha,MAAMgD,QAAQgX,GAAQ,CACtB,MAAMzZ,EAAS,GACf,IAAK,IAAI3B,EAAI,EAAGA,EAAIob,EAAM1a,OAAQV,IAC9B2B,EAAOZ,KAAK8pC,EAAOzvB,EAAMpb,KAE7B,MAAM4c,EAAMwtB,KAAezoC,GAC3B,OAAOyoC,EAAYd,EAAa1sB,EAAIlc,OAAQ,KAAMkc,EACtD,CACA,MAAMmuB,EAAWL,EAAQtvB,GACzB,OAAwB,IAApB2vB,EAASrqC,QAAgBqqC,EAAS,GAAK,IAChCA,EAEJX,EAAYd,EAAayB,EAASrqC,OAAQ,KAAMqqC,EAC3D,EAsOsBC,OApMtB,SAAgB5vB,EAAOse,GAAS,GAC5B,IAAKte,GAA0B,IAAjBA,EAAM1a,OAChB,OAAOS,WAAW+b,KAAK,IAE3B,MACM2sB,EAAUH,EADGgB,EAAQtvB,IAE3B,GAAIse,EACA,OAAOmQ,EAEX,GAAiC,IAA7BA,EAAQC,UAAUppC,OAClB,MAAM,IAAIY,MAAM,uCAEpB,OAAOuoC,EAAQnrB,IACnB,GAwLAvf,EAAQ,GAAU2rC,iBC9PlB,IAAI/sB,EAAS,EAAQ,KACjB/a,EAAS+a,EAAO/a,OAGpB,SAASioC,EAAW9mC,EAAK4mB,GACvB,IAAK,IAAI6E,KAAOzrB,EACd4mB,EAAI6E,GAAOzrB,EAAIyrB,EAEnB,CASA,SAASsb,EAAYnuB,EAAKC,EAAkBtc,GAC1C,OAAOsC,EAAO+Z,EAAKC,EAAkBtc,EACvC,CAVIsC,EAAOka,MAAQla,EAAOuZ,OAASvZ,EAAOgF,aAAehF,EAAOkgB,gBAC9D9jB,EAAOD,QAAU4e,GAGjBktB,EAAUltB,EAAQ5e,GAClBA,EAAQ6D,OAASkoC,GAQnBD,EAAUjoC,EAAQkoC,GAElBA,EAAWhuB,KAAO,SAAUH,EAAKC,EAAkBtc,GACjD,GAAmB,iBAARqc,EACT,MAAM,IAAIE,UAAU,iCAEtB,OAAOja,EAAO+Z,EAAKC,EAAkBtc,EACvC,EAEAwqC,EAAW3uB,MAAQ,SAAUtW,EAAMgd,EAAM7F,GACvC,GAAoB,iBAATnX,EACT,MAAM,IAAIgX,UAAU,6BAEtB,IAAIL,EAAM5Z,EAAOiD,GAUjB,YATaiV,IAAT+H,EACsB,iBAAb7F,EACTR,EAAIqG,KAAKA,EAAM7F,GAEfR,EAAIqG,KAAKA,GAGXrG,EAAIqG,KAAK,GAEJrG,CACT,EAEAsuB,EAAWljC,YAAc,SAAU/B,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIgX,UAAU,6BAEtB,OAAOja,EAAOiD,EAChB,EAEAilC,EAAWhoB,gBAAkB,SAAUjd,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIgX,UAAU,6BAEtB,OAAOc,EAAOzB,WAAWrW,EAC3B,8BCpCA,IAAIjD,EAAS,YAGTqa,EAAara,EAAOqa,YAAc,SAAUD,GAE9C,QADAA,EAAW,GAAKA,IACIA,EAASgC,eAC3B,IAAK,MAAM,IAAK,OAAO,IAAK,QAAQ,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,OAAO,IAAK,QAAQ,IAAK,UAAU,IAAK,WAAW,IAAK,MACxI,OAAO,EACT,QACE,OAAO,EAEb,EA0CA,SAAS2Z,EAAc3b,GAErB,IAAIypB,EACJ,OAFAlkC,KAAKya,SAXP,SAA2B2e,GACzB,IAAIoP,EA/BN,SAA4BpP,GAC1B,IAAKA,EAAK,MAAO,OAEjB,IADA,IAAIqP,IAEF,OAAQrP,GACN,IAAK,OACL,IAAK,QACH,MAAO,OACT,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAO,UACT,IAAK,SACL,IAAK,SACH,MAAO,SACT,IAAK,SACL,IAAK,QACL,IAAK,MACH,OAAOA,EACT,QACE,GAAIqP,EAAS,OACbrP,GAAO,GAAKA,GAAK3c,cACjBgsB,GAAU,EAGlB,CAKaC,CAAmBtP,GAC9B,GAAoB,iBAAToP,IAAsBnoC,EAAOqa,aAAeA,IAAeA,EAAW0e,IAAO,MAAM,IAAIz6B,MAAM,qBAAuBy6B,GAC/H,OAAOoP,GAAQpP,CACjB,CAOkBuP,CAAkBluB,GAE1Bza,KAAKya,UACX,IAAK,UACHza,KAAK4oC,KAAOC,EACZ7oC,KAAKlB,IAAMgqC,EACX5E,EAAK,EACL,MACF,IAAK,OACHlkC,KAAK+oC,SAAWC,EAChB9E,EAAK,EACL,MACF,IAAK,SACHlkC,KAAK4oC,KAAOK,EACZjpC,KAAKlB,IAAMoqC,EACXhF,EAAK,EACL,MACF,QAGE,OAFAlkC,KAAK4a,MAAQuuB,OACbnpC,KAAKlB,IAAMsqC,GAGfppC,KAAKqpC,SAAW,EAChBrpC,KAAKspC,UAAY,EACjBtpC,KAAKupC,SAAWlpC,EAAOgF,YAAY6+B,EACrC,CAmCA,SAASsF,EAAchC,GACrB,OAAIA,GAAQ,IAAa,EAAWA,GAAQ,GAAM,EAAa,EAAWA,GAAQ,GAAM,GAAa,EAAWA,GAAQ,GAAM,GAAa,EACpIA,GAAQ,GAAM,GAAQ,GAAK,CACpC,CA0DA,SAASwB,EAAa/uB,GACpB,IAAInL,EAAI9O,KAAKspC,UAAYtpC,KAAKqpC,SAC1BtoC,EAtBN,SAA6BnE,EAAMqd,GACjC,GAAwB,MAAV,IAATA,EAAI,IAEP,OADArd,EAAKysC,SAAW,EACT,IAET,GAAIzsC,EAAKysC,SAAW,GAAKpvB,EAAIlc,OAAS,EAAG,CACvC,GAAwB,MAAV,IAATkc,EAAI,IAEP,OADArd,EAAKysC,SAAW,EACT,IAET,GAAIzsC,EAAKysC,SAAW,GAAKpvB,EAAIlc,OAAS,GACZ,MAAV,IAATkc,EAAI,IAEP,OADArd,EAAKysC,SAAW,EACT,GAGb,CACF,CAKUI,CAAoBzpC,KAAMia,GAClC,YAAU1B,IAANxX,EAAwBA,EACxBf,KAAKqpC,UAAYpvB,EAAIlc,QACvBkc,EAAI/W,KAAKlD,KAAKupC,SAAUz6B,EAAG,EAAG9O,KAAKqpC,UAC5BrpC,KAAKupC,SAASvnC,SAAShC,KAAKya,SAAU,EAAGza,KAAKspC,aAEvDrvB,EAAI/W,KAAKlD,KAAKupC,SAAUz6B,EAAG,EAAGmL,EAAIlc,aAClCiC,KAAKqpC,UAAYpvB,EAAIlc,QACvB,CA0BA,SAAS8qC,EAAU5uB,EAAK5c,GACtB,IAAK4c,EAAIlc,OAASV,GAAK,GAAM,EAAG,CAC9B,IAAI0D,EAAIkZ,EAAIjY,SAAS,UAAW3E,GAChC,GAAI0D,EAAG,CACL,IAAIH,EAAIG,EAAEnD,WAAWmD,EAAEhD,OAAS,GAChC,GAAI6C,GAAK,OAAUA,GAAK,MAKtB,OAJAZ,KAAKqpC,SAAW,EAChBrpC,KAAKspC,UAAY,EACjBtpC,KAAKupC,SAAS,GAAKtvB,EAAIA,EAAIlc,OAAS,GACpCiC,KAAKupC,SAAS,GAAKtvB,EAAIA,EAAIlc,OAAS,GAC7BgD,EAAE8Z,MAAM,GAAI,EAEvB,CACA,OAAO9Z,CACT,CAIA,OAHAf,KAAKqpC,SAAW,EAChBrpC,KAAKspC,UAAY,EACjBtpC,KAAKupC,SAAS,GAAKtvB,EAAIA,EAAIlc,OAAS,GAC7Bkc,EAAIjY,SAAS,UAAW3E,EAAG4c,EAAIlc,OAAS,EACjD,CAIA,SAAS+qC,EAAS7uB,GAChB,IAAIlZ,EAAIkZ,GAAOA,EAAIlc,OAASiC,KAAK4a,MAAMX,GAAO,GAC9C,GAAIja,KAAKqpC,SAAU,CACjB,IAAIvqC,EAAMkB,KAAKspC,UAAYtpC,KAAKqpC,SAChC,OAAOtoC,EAAIf,KAAKupC,SAASvnC,SAAS,UAAW,EAAGlD,EAClD,CACA,OAAOiC,CACT,CAEA,SAASkoC,EAAWhvB,EAAK5c,GACvB,IAAIkS,GAAK0K,EAAIlc,OAASV,GAAK,EAC3B,OAAU,IAANkS,EAAgB0K,EAAIjY,SAAS,SAAU3E,IAC3C2C,KAAKqpC,SAAW,EAAI95B,EACpBvP,KAAKspC,UAAY,EACP,IAAN/5B,EACFvP,KAAKupC,SAAS,GAAKtvB,EAAIA,EAAIlc,OAAS,IAEpCiC,KAAKupC,SAAS,GAAKtvB,EAAIA,EAAIlc,OAAS,GACpCiC,KAAKupC,SAAS,GAAKtvB,EAAIA,EAAIlc,OAAS,IAE/Bkc,EAAIjY,SAAS,SAAU3E,EAAG4c,EAAIlc,OAASwR,GAChD,CAEA,SAAS25B,EAAUjvB,GACjB,IAAIlZ,EAAIkZ,GAAOA,EAAIlc,OAASiC,KAAK4a,MAAMX,GAAO,GAC9C,OAAIja,KAAKqpC,SAAiBtoC,EAAIf,KAAKupC,SAASvnC,SAAS,SAAU,EAAG,EAAIhC,KAAKqpC,UACpEtoC,CACT,CAGA,SAASooC,EAAYlvB,GACnB,OAAOA,EAAIjY,SAAShC,KAAKya,SAC3B,CAEA,SAAS2uB,EAAUnvB,GACjB,OAAOA,GAAOA,EAAIlc,OAASiC,KAAK4a,MAAMX,GAAO,EAC/C,CA1NAzd,EAAQ,EAAgB45B,EA6BxBA,EAAc32B,UAAUmb,MAAQ,SAAUX,GACxC,GAAmB,IAAfA,EAAIlc,OAAc,MAAO,GAC7B,IAAIgD,EACA1D,EACJ,GAAI2C,KAAKqpC,SAAU,CAEjB,QAAU9wB,KADVxX,EAAIf,KAAK+oC,SAAS9uB,IACG,MAAO,GAC5B5c,EAAI2C,KAAKqpC,SACTrpC,KAAKqpC,SAAW,CAClB,MACEhsC,EAAI,EAEN,OAAIA,EAAI4c,EAAIlc,OAAegD,EAAIA,EAAIf,KAAK4oC,KAAK3uB,EAAK5c,GAAK2C,KAAK4oC,KAAK3uB,EAAK5c,GAC/D0D,GAAK,EACd,EAEAq1B,EAAc32B,UAAUX,IAwGxB,SAAiBmb,GACf,IAAIlZ,EAAIkZ,GAAOA,EAAIlc,OAASiC,KAAK4a,MAAMX,GAAO,GAC9C,OAAIja,KAAKqpC,SAAiBtoC,EAAI,IACvBA,CACT,EAzGAq1B,EAAc32B,UAAUmpC,KA0FxB,SAAkB3uB,EAAK5c,GACrB,IAAIuF,EArEN,SAA6BhG,EAAMqd,EAAK5c,GACtC,IAAIiF,EAAI2X,EAAIlc,OAAS,EACrB,GAAIuE,EAAIjF,EAAG,OAAO,EAClB,IAAI6mC,EAAKsF,EAAcvvB,EAAI3X,IAC3B,OAAI4hC,GAAM,GACJA,EAAK,IAAGtnC,EAAKysC,SAAWnF,EAAK,GAC1BA,KAEH5hC,EAAIjF,IAAa,IAAR6mC,EAAkB,GACjCA,EAAKsF,EAAcvvB,EAAI3X,MACb,GACJ4hC,EAAK,IAAGtnC,EAAKysC,SAAWnF,EAAK,GAC1BA,KAEH5hC,EAAIjF,IAAa,IAAR6mC,EAAkB,GACjCA,EAAKsF,EAAcvvB,EAAI3X,MACb,GACJ4hC,EAAK,IACI,IAAPA,EAAUA,EAAK,EAAOtnC,EAAKysC,SAAWnF,EAAK,GAE1CA,GAEF,CACT,CA8CcwF,CAAoB1pC,KAAMia,EAAK5c,GAC3C,IAAK2C,KAAKqpC,SAAU,OAAOpvB,EAAIjY,SAAS,OAAQ3E,GAChD2C,KAAKspC,UAAY1mC,EACjB,IAAI9D,EAAMmb,EAAIlc,QAAU6E,EAAQ5C,KAAKqpC,UAErC,OADApvB,EAAI/W,KAAKlD,KAAKupC,SAAU,EAAGzqC,GACpBmb,EAAIjY,SAAS,OAAQ3E,EAAGyB,EACjC,EA9FAs3B,EAAc32B,UAAUspC,SAAW,SAAU9uB,GAC3C,GAAIja,KAAKqpC,UAAYpvB,EAAIlc,OAEvB,OADAkc,EAAI/W,KAAKlD,KAAKupC,SAAUvpC,KAAKspC,UAAYtpC,KAAKqpC,SAAU,EAAGrpC,KAAKqpC,UACzDrpC,KAAKupC,SAASvnC,SAAShC,KAAKya,SAAU,EAAGza,KAAKspC,WAEvDrvB,EAAI/W,KAAKlD,KAAKupC,SAAUvpC,KAAKspC,UAAYtpC,KAAKqpC,SAAU,EAAGpvB,EAAIlc,QAC/DiC,KAAKqpC,UAAYpvB,EAAIlc,MACvB,eCrIA,IAAIqd,EAAS,EAAQ,KACjB/a,EAAS+a,EAAO/a,OAGpB,SAASioC,EAAW9mC,EAAK4mB,GACvB,IAAK,IAAI6E,KAAOzrB,EACd4mB,EAAI6E,GAAOzrB,EAAIyrB,EAEnB,CASA,SAASsb,EAAYnuB,EAAKC,EAAkBtc,GAC1C,OAAOsC,EAAO+Z,EAAKC,EAAkBtc,EACvC,CAVIsC,EAAOka,MAAQla,EAAOuZ,OAASvZ,EAAOgF,aAAehF,EAAOkgB,gBAC9D9jB,EAAOD,QAAU4e,GAGjBktB,EAAUltB,EAAQ5e,GAClBA,EAAQ6D,OAASkoC,GAOnBA,EAAW9oC,UAAYya,OAAOuV,OAAOpvB,EAAOZ,WAG5C6oC,EAAUjoC,EAAQkoC,GAElBA,EAAWhuB,KAAO,SAAUH,EAAKC,EAAkBtc,GACjD,GAAmB,iBAARqc,EACT,MAAM,IAAIE,UAAU,iCAEtB,OAAOja,EAAO+Z,EAAKC,EAAkBtc,EACvC,EAEAwqC,EAAW3uB,MAAQ,SAAUtW,EAAMgd,EAAM7F,GACvC,GAAoB,iBAATnX,EACT,MAAM,IAAIgX,UAAU,6BAEtB,IAAIL,EAAM5Z,EAAOiD,GAUjB,YATaiV,IAAT+H,EACsB,iBAAb7F,EACTR,EAAIqG,KAAKA,EAAM7F,GAEfR,EAAIqG,KAAKA,GAGXrG,EAAIqG,KAAK,GAEJrG,CACT,EAEAsuB,EAAWljC,YAAc,SAAU/B,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIgX,UAAU,6BAEtB,OAAOja,EAAOiD,EAChB,EAEAilC,EAAWhoB,gBAAkB,SAAUjd,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIgX,UAAU,6BAEtB,OAAOc,EAAOzB,WAAWrW,EAC3B,iBCRA,SAASqmC,EAAQryB,GAEf,IACE,IAAK,EAAAzD,EAAOyW,aAAc,OAAO,CACnC,CAAE,MAAOpa,GACP,OAAO,CACT,CACA,IAAIhR,EAAM,EAAA2U,EAAOyW,aAAahT,GAC9B,OAAI,MAAQpY,GACyB,SAA9Bue,OAAOve,GAAKud,aACrB,CA7DAhgB,EAAOD,QAoBP,SAAoBgsB,EAAIrpB,GACtB,GAAIwqC,EAAO,iBACT,OAAOnhB,EAGT,IAAIiC,GAAS,EAeb,OAdA,WACE,IAAKA,EAAQ,CACX,GAAIkf,EAAO,oBACT,MAAM,IAAIhrC,MAAMQ,GACPwqC,EAAO,oBAChB3pB,QAAQ4pB,MAAMzqC,GAEd6gB,QAAQ0K,KAAKvrB,GAEfsrB,GAAS,CACX,CACA,OAAOjC,EAAG/I,MAAMzf,KAAMqc,UACxB,CAGF,qCC7CIwtB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBxxB,IAAjByxB,EACH,OAAOA,EAAaxtC,QAGrB,IAAIC,EAASotC,EAAyBE,GAAY,CACjDE,GAAIF,EACJG,QAAQ,EACR1tC,QAAS,CAAC,GAUX,OANA2tC,EAAoBJ,GAAUtyB,KAAKhb,EAAOD,QAASC,EAAQA,EAAOD,QAASstC,GAG3ErtC,EAAOytC,QAAS,EAGTztC,EAAOD,OACf,CCxBAstC,EAAoBv6B,EAAK9S,IACxB,IAAI2tC,EAAS3tC,GAAUA,EAAO4tC,WAC7B,IAAO5tC,EAAiB,QACxB,IAAM,EAEP,OADAqtC,EAAoBzX,EAAE+X,EAAQ,CAAEpmC,EAAGomC,IAC5BA,CAAM,ECLdN,EAAoBzX,EAAI,CAAC71B,EAAS8tC,KACjC,IAAI,IAAIrd,KAAOqd,EACXR,EAAoB1hC,EAAEkiC,EAAYrd,KAAS6c,EAAoB1hC,EAAE5L,EAASywB,IAC5E/S,OAAOgG,eAAe1jB,EAASywB,EAAK,CAAE9M,YAAY,EAAMC,IAAKkqB,EAAWrd,IAE1E,ECND6c,EAAoBj2B,EAAI,WACvB,GAA0B,iBAAf02B,WAAyB,OAAOA,WAC3C,IACC,OAAOvqC,MAAQ,IAAIwtB,SAAS,cAAb,EAChB,CAAE,MAAOhtB,GACR,GAAsB,iBAAXD,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBupC,EAAoB1hC,EAAI,CAACsT,EAAK8uB,IAAUtwB,OAAOza,UAAUgrC,eAAehzB,KAAKiE,EAAK8uB,GCClFV,EAAoB/oC,EAAKvE,IACH,oBAAXgH,QAA0BA,OAAOknC,aAC1CxwB,OAAOgG,eAAe1jB,EAASgH,OAAOknC,YAAa,CAAElwB,MAAO,WAE7DN,OAAOgG,eAAe1jB,EAAS,aAAc,CAAEge,OAAO,GAAO,ECL9DsvB,EAAoBa,IAAOluC,IAC1BA,EAAOmuC,MAAQ,GACVnuC,EAAOouC,WAAUpuC,EAAOouC,SAAW,IACjCpuC,sqCCAR,MCHYquC,ECAAC,EFGZ,EACI,SAAmBC,GAAA,KAAAA,OAAAA,CAEnB,EGFJ,aAGI,WAAmBA,GAAA,KAAAA,OAAAA,CAEnB,CAoDJ,OA5BI,YAAAC,YAAA,SAAaC,EAAoBC,GAC7B,OAAOnrC,KAAKorC,eAAe,CACvBC,QAAS,MACTxW,OAAQ,kBACRyW,OAAQ,CAACttB,OAAOktB,GAAaltB,OAAOmtB,IACpClB,IAAI,IAAIxe,MAAO8f,YAChB9I,MAAK,SAAA+I,GACJ,OAAO/tB,OAAO+tB,EAAQ7D,OAC1B,GACJ,EAEA,YAAA8D,qBAAA,WACI,OAAOzrC,KAAKorC,eAAe,CACvBC,QAAS,MACTxW,OAAQ,eACRyW,OAAQ,GACRrB,IAAI,IAAIxe,MAAO8f,YAChB9I,MAAK,SAAA+I,GACJ,OAAOA,EAAQ7D,MACnB,GACJ,EAQJ,EAzDA,GCDA,EAEI,SAAmB+D,EAAwBV,GAAxB,KAAAU,QAAAA,EAAwB,KAAAV,OAAAA,CAE3C,ECLJ,0BAiBA,QAhBW,EAAAjrC,KAAP,SAAYya,GACR,OAAOmxB,IACX,EAcJ,EAjBA,scCCA,cAEI,WAAYnxB,UACR,cAAO,IACX,CAgDJ,OApDoC,OAMhC,YAAAxY,SAAA,SAASnC,GACL,OAAO8rC,IACX,EAEA,YAAA9mC,SAAA,WACI,OAAO8mC,IACX,EAEA,YAAA3jC,IAAA,SAAIwS,GACA,OAAOmxB,IACX,EAEA,YAAA1jC,IAAA,SAAIuS,GACA,OAAOmxB,IACX,EAEA,YAAAzqC,IAAA,SAAIsZ,GACA,OAAOmxB,IACX,EAEA,YAAA/4B,IAAA,SAAI4H,GACA,OAAOmxB,IACX,EAEA,YAAAv2B,IAAA,SAAIoF,GACA,OAAOmxB,IACX,EAEA,YAAAz2B,GAAA,SAAGsF,GACC,OAAOmxB,IAEX,EAEA,YAAA32B,IAAA,SAAIwF,GACA,OAAOmxB,IAEX,EAEA,YAAA72B,GAAA,SAAG0F,GACC,OAAOmxB,IAEX,EAEA,YAAAr2B,GAAA,SAAGkF,GACC,OAAOmxB,IACX,EACJ,EApDA,CAAoCC,GCApC,0BA+BA,QA9BW,EAAAC,MAAP,SAAaC,GACT,IAAMC,SAAkBD,EACxB,GAAiB,WAAbC,EACAD,EAAS,IAAI,GAAMnsC,GAAGmsC,QACnB,GAAiB,WAAbC,EAAuB,CAC9B,GAAuC,OAAlCD,EAAkBjxB,MAAM,EAAG,GAC5B,OAAOixB,EAEXA,EAAS,IAAI,GAAMnsC,GAAGmsC,GAE1B,GAAI,GAAMnsC,GAAGI,KAAK+rC,GACd,MAAO,KAAOA,EAAO9pC,SAAS,IAG9B,MAAM,IAAIrD,MAAM,wBAAiBmtC,EAAM,4BAE/C,EAEO,EAAAE,KAAP,SAAYF,GAUR,MARiB,iBADOA,GAEmB,OAAlCA,EAAkBjxB,MAAM,EAAG,KAC5BixB,EAAS1tB,SAAS0tB,EAAkB,KAGvC,GAAMnsC,GAAGI,KAAK+rC,KACfA,EAAS,IAAI,GAAMnsC,GAAGmsC,IAEnBA,CACX,EACJ,EA/BA,GCAaG,EAAM,SAACC,OAAQ,wDACxB,IAAMC,EAA4C,mBAAXD,EAAwB,IAAIA,EAAWA,EAC9E,OAAOC,EAAeC,MAAK,MAApBD,iMAAc,EAAOE,IAAkBb,GAAO,GACzD,ECAac,EAAkB,SAAaC,GACxC,IAAMhK,EAA+B,IAAItU,QAAQse,GAC3CC,EAAW,IAAIC,EAGrB,OAFAlK,EAAQ7T,GAAK8d,EAAS9d,GAAGyB,KAAKqc,GAC9BjK,EAAQ5S,KAAO6c,EAAS7c,KAAKQ,KAAKqc,GAC3BjK,CACX,EAEA,aAEI,WAAY9sB,GAMJ,KAAAmZ,QAEJ,CAAC,EAPD5uB,KAAK0sC,KAAOj3B,CAChB,CA0CJ,OAlCI,YAAAiZ,GAAA,SAAGkN,EAAe/F,GAKd,OAJ2B,MAAvB71B,KAAK4uB,QAAQgN,KACb57B,KAAK4uB,QAAQgN,GAAS,IAE1B57B,KAAK4uB,QAAQgN,GAAOx9B,KAAKy3B,GAClB71B,IACX,EAEA,YAAAwC,IAAA,SAAIo5B,EAAe/F,GACf,GAAI71B,KAAK4uB,QAAQgN,GACb,GAAI/F,EAAI,CACJ,IAAMl1B,EAAQX,KAAK4uB,QAAQgN,GAAOh9B,QAAQi3B,GAC1C71B,KAAK4uB,QAAQgN,GAAO5S,OAAOroB,EAAO,QAGlCX,KAAK4uB,QAAQgN,GAAS,EAGlC,EAEA,YAAAjM,KAAA,SAAKiM,OAAL,WAAoB,oDAChB,IAAMtM,EAAStvB,KAAK4uB,QAAQgN,IAAU,GACtC,OAAO3N,QAAQ0e,IACXrd,EAAO5C,KAAI,SAAAmJ,GACP,IAAM8R,EAAS9R,EAAGpe,KAAI,MAAPoe,iMAAE,EAAM,EAAK6W,MAAS/jB,GAAI,IACzC,OAAOgf,GAAUA,EAAOlF,KAAOkF,EAAS1Z,QAAQC,QAAQyZ,EAC5D,IAER,EAEA,YAAAnd,QAAA,WACIxqB,KAAK4uB,QAAU,KACf5uB,KAAK0sC,KAAO,IAChB,EACJ,EA9CA,IRdA,SAAY5B,GAGR,qFACA,sFACA,uFACA,2FACA,4FACA,iGACH,CATD,CAAYA,IAAAA,EAAmB,KCA/B,SAAYC,GACR,kCACA,oCACA,oBACA,qCACA,4DACA,mDACA,+CACA,4CACA,yDACA,wCACA,2DACH,CAZD,CAAYA,IAAAA,EAAU,KQGtB,iBAII,WAAYjvB,EAAkB8wB,GAC1B5sC,KAAK8b,KAAOA,EACZ9b,KAAKsnB,QAAUtnB,KAAK6sC,QAAQD,EAChC,CA8CJ,OA5CI,YAAAE,MAAA,WACI,MAAM9sC,KAAKogB,KACf,EAEA,YAAAA,IAAA,WACI,MAAO,CACHkH,QAAStnB,KAAKsnB,QACdxL,KAAM9b,KAAK8b,KAEnB,EAEQ,YAAA+wB,QAAR,SAAgBD,GACZ,IAAIG,EACJ,OAAQ/sC,KAAK8b,MACT,KAAKivB,EAAWiC,eACZD,EAAS,qBAAcH,EAAI,oCAC3B,MACJ,KAAK7B,EAAWkC,cACZF,EAAS,qBAAcH,EAAI,mCAC3B,MACJ,KAAK7B,EAAWmC,iBACZH,EAAS,gDACT,MACJ,KAAKhC,EAAWoC,eACZJ,EAAS,0DACT,MACJ,KAAKhC,EAAWqC,sBACZL,EAAS,oDACT,MACJ,KAAKhC,EAAWsC,oBACZN,EAAS,UAAGH,EAAO,OAAS,QAAO,mCACnC,MACJ,KAAK7B,EAAWuC,mBACZP,EAAS,kCACT,MACJ,QACS/sC,KAAK8b,OACN9b,KAAK8b,KAAOivB,EAAWwC,SAE3BR,EAAS/sC,KAAKsnB,QAGtB,OAAOylB,CACX,EACJ,EArDA,GCAA,0BAiBA,QAbI,YAAAS,UAAA,SAAUhzB,GACNxa,KAAKytC,YAAYjzB,CACrB,EAEA,YAAAoQ,IAAA,eAAI,sDACI5qB,KAAKytC,WACLztB,QAAQ4K,IAAG,MAAX5K,QAAesH,EAEvB,EAEA,YAAArH,MAAA,SAAMnE,EAAkB8wB,GACpB,OAAO,IAAIc,EAAY5xB,EAAM8wB,EACjC,EACJ,EAjBA,GCHae,EAAQ,eAAC,sDAClB,OAAOzzB,OAAO0zB,OAAM,MAAb1zB,sMAAM,EAAQ,CAAC,GAAMwB,GAAG,GACnC,ECCMmyB,EAAc,SAACC,EAA+BC,GAClD,IAAMC,EAAOF,EAASphB,KAAI,SAACxtB,EAAKyB,GAC9B,OAAOotC,EAAU7uC,EAAKyB,EACxB,IACA,OAAOstB,QAAQ0e,IAAIqB,EACrB,EAEO,SAASC,EAAWC,EAAeH,EAAqBI,QAAA,IAAAA,IAAAA,EAA4B,CAAC,GAC1F,IAAMC,EAAeF,EAAOnwC,OACtBswC,EAAcF,EAAOE,aAAeD,EAEtCzG,EAAS,GACP2G,EAAsC,WAC1C,IAAMR,EAAWI,EAAOllB,OAAO,EAAGqlB,GAClC,OAAOR,EAAYC,EAAUC,GAAWtL,MAAK,SAAA8L,GAG3C,OAFA5G,EAASA,EAAOjnB,OAAO6tB,GAEhBH,EAAezG,EAAO5pC,OAC3BuwC,IAAoBE,GAAe7G,EACvC,GACF,EAEA,OAAO2G,GACT,CC1BA,SAAS1uC,EAAO2P,GACZ,IAAKyO,OAAOywB,cAAcl/B,IAAMA,EAAI,EAChC,MAAM,IAAI5Q,MAAM,kCAAkC4Q,IAC1D,CAUA,SAAS,EAAMpO,KAAMutC,GACjB,MALoB1qC,EAKP7C,aAJQ3C,YACX,MAALwF,GAA0B,iBAANA,GAAyC,eAAvBA,EAAEtE,YAAY4X,MAIrD,MAAM,IAAI3Y,MAAM,uBANjB,IAAiBqF,EAOpB,GAAI0qC,EAAQ3wC,OAAS,IAAM2wC,EAAQjtB,SAAStgB,EAAEpD,QAC1C,MAAM,IAAIY,MAAM,iCAAiC+vC,oBAA0BvtC,EAAEpD,SACrF,CACA,SAAS,EAAKyT,GACV,GAAiB,mBAANA,GAAwC,mBAAbA,EAAEie,OACpC,MAAM,IAAI9wB,MAAM,mDACpBiB,EAAO4R,EAAEm9B,WACT/uC,EAAO4R,EAAEo9B,SACb,CACA,SAASC,EAAOnL,EAAUoL,GAAgB,GACtC,GAAIpL,EAASlO,UACT,MAAM,IAAI72B,MAAM,oCACpB,GAAImwC,GAAiBpL,EAASpJ,SAC1B,MAAM,IAAI37B,MAAM,wCACxB,CACA,SAASK,EAAO+E,EAAK2/B,GACjB,EAAM3/B,GACN,MAAM1C,EAAMqiC,EAASiL,UACrB,GAAI5qC,EAAIhG,OAASsD,EACb,MAAM,IAAI1C,MAAM,yDAAyD0C,IAEjF,CAEA,MACA,EADe,CAAEzB,SAAQmvC,KAnCzB,SAAc5tC,GACV,GAAiB,kBAANA,EACP,MAAM,IAAIxC,MAAM,yBAAyBwC,IACjD,EAgC+B0gB,MAAK,OAAM,qBCvC7B,EAA+B,iBAAf0oB,YAA2B,WAAYA,WAAaA,WAAWyE,YAASz2B,ECmBxF02B,EAAc3xC,GAAQ,IAAI4xC,SAAS5xC,EAAI8d,OAAQ9d,EAAI+d,WAAY/d,EAAIT,YAEnEsyC,EAAO,CAACrsC,EAAM2C,IAAW3C,GAAS,GAAK2C,EAAW3C,IAAS2C,EAG3DqsB,EAAmE,KAA5D,IAAItzB,WAAW,IAAI4wC,YAAY,CAAC,YAAah0B,QAAQ,GASlE,SAASi0B,EAAW/xC,GACvB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAIS,OAAQV,IAC5BC,EAAID,IATayF,EASCxF,EAAID,KATc,GAAM,WAC5CyF,GAAQ,EAAK,SACbA,IAAS,EAAK,MACdA,IAAS,GAAM,IAHG,IAACA,CAWzB,CAEA,MAAMwsC,EAAwB7wC,MAAM8b,KAAK,CAAExc,OAAQ,MAAO,CAACmS,EAAG7S,IAAMA,EAAE2E,SAAS,IAAIslC,SAAS,EAAG,OAIxF,SAAS,EAAWzlB,GACvB,EAAOA,GAEP,IAAI2kB,EAAM,GACV,IAAK,IAAInpC,EAAI,EAAGA,EAAIwkB,EAAM9jB,OAAQV,IAC9BmpC,GAAO8I,EAAMztB,EAAMxkB,IAEvB,OAAOmpC,CACX,CAsDO,SAAS,EAAYvlC,GACxB,GAAmB,iBAARA,EACP,MAAM,IAAItC,MAAM,2CAA2CsC,GAC/D,OAAO,IAAIzC,YAAW,IAAIypC,aAAcC,OAAOjnC,GACnD,CAMO,SAAS,EAAQ8a,GAIpB,MAHoB,iBAATA,IACPA,EAAO,EAAYA,IACvB,EAAOA,GACAA,CACX,CAoBO,MAAMwzB,EAET,KAAAnsC,GACI,OAAOpD,KAAKwvC,YAChB,EASG,SAAS,EAAgBC,GAC5B,MAAMC,EAASvwC,GAAQswC,IAAWE,OAAO,EAAQxwC,IAAMywC,SACjDxyC,EAAMqyC,IAIZ,OAHAC,EAAMf,UAAYvxC,EAAIuxC,UACtBe,EAAMd,SAAWxxC,EAAIwxC,SACrBc,EAAMjgB,OAAS,IAAMggB,IACdC,CACX,CAoBO,SAAS,EAAYG,EAAc,IACtC,GAAI,GAA4C,mBAA3B,EAAOC,gBACxB,OAAO,EAAOA,gBAAgB,IAAItxC,WAAWqxC,IAEjD,MAAM,IAAIlxC,MAAM,yCACpB,CCzKO,MAEMoxC,EAAM,CAAC/rC,EAAG7C,EAAGP,IAAOoD,EAAI7C,EAAM6C,EAAIpD,EAAMO,EAAIP,EAKlD,MAAMovC,UAAeT,EACxB,WAAA7vC,CAAYkvC,EAAUD,EAAWsB,EAAWne,GACxC5K,QACAlnB,KAAK4uC,SAAWA,EAChB5uC,KAAK2uC,UAAYA,EACjB3uC,KAAKiwC,UAAYA,EACjBjwC,KAAK8xB,KAAOA,EACZ9xB,KAAKs6B,UAAW,EAChBt6B,KAAKjC,OAAS,EACdiC,KAAK4gB,IAAM,EACX5gB,KAAKw1B,WAAY,EACjBx1B,KAAKob,OAAS,IAAI5c,WAAWowC,GAC7B5uC,KAAKkwC,KAAOjB,EAAWjvC,KAAKob,OAChC,CACA,MAAAu0B,CAAO5zB,GACH8yB,EAAO7uC,MACP,MAAM,KAAEkwC,EAAI,OAAE90B,EAAM,SAAEwzB,GAAa5uC,KAE7BtC,GADNqe,EAAO,EAAQA,IACEhe,OACjB,IAAK,IAAI6iB,EAAM,EAAGA,EAAMljB,GAAM,CAC1B,MAAMyyC,EAAO/uC,KAAKC,IAAIutC,EAAW5uC,KAAK4gB,IAAKljB,EAAMkjB,GAEjD,GAAIuvB,IAASvB,EAMbxzB,EAAOyF,IAAI9E,EAAK4G,SAAS/B,EAAKA,EAAMuvB,GAAOnwC,KAAK4gB,KAChD5gB,KAAK4gB,KAAOuvB,EACZvvB,GAAOuvB,EACHnwC,KAAK4gB,MAAQguB,IACb5uC,KAAK0pB,QAAQwmB,EAAM,GACnBlwC,KAAK4gB,IAAM,OAXf,CACI,MAAMwvB,EAAWnB,EAAWlzB,GAC5B,KAAO6yB,GAAYlxC,EAAMkjB,EAAKA,GAAOguB,EACjC5uC,KAAK0pB,QAAQ0mB,EAAUxvB,EAE/B,CAQJ,CAGA,OAFA5gB,KAAKjC,QAAUge,EAAKhe,OACpBiC,KAAKqwC,aACErwC,IACX,CACA,UAAAswC,CAAWvsC,GACP8qC,EAAO7uC,MACPhB,EAAO+E,EAAK/D,MACZA,KAAKs6B,UAAW,EAIhB,MAAM,OAAElf,EAAM,KAAE80B,EAAI,SAAEtB,EAAQ,KAAE9c,GAAS9xB,KACzC,IAAI,IAAE4gB,GAAQ5gB,KAEdob,EAAOwF,KAAS,IAChB5gB,KAAKob,OAAOuH,SAAS/B,GAAKN,KAAK,GAG3BtgB,KAAKiwC,UAAYrB,EAAWhuB,IAC5B5gB,KAAK0pB,QAAQwmB,EAAM,GACnBtvB,EAAM,GAGV,IAAK,IAAIvjB,EAAIujB,EAAKvjB,EAAIuxC,EAAUvxC,IAC5B+d,EAAO/d,GAAK,GAhFxB,SAAsB6yC,EAAM70B,EAAYb,EAAOsX,GAC3C,GAAiC,mBAAtBoe,EAAKK,aACZ,OAAOL,EAAKK,aAAal1B,EAAYb,EAAOsX,GAChD,MAAM0e,EAAOruB,OAAO,IACdsuB,EAAWtuB,OAAO,YAClBuuB,EAAK1yB,OAAQxD,GAASg2B,EAAQC,GAC9BE,EAAK3yB,OAAOxD,EAAQi2B,GACpBj/B,EAAIsgB,EAAO,EAAI,EACfhkB,EAAIgkB,EAAO,EAAI,EACrBoe,EAAKU,UAAUv1B,EAAa7J,EAAGk/B,EAAI5e,GACnCoe,EAAKU,UAAUv1B,EAAavN,EAAG6iC,EAAI7e,EACvC,CAyEQye,CAAaL,EAAMtB,EAAW,EAAGzsB,OAAqB,EAAdniB,KAAKjC,QAAa+zB,GAC1D9xB,KAAK0pB,QAAQwmB,EAAM,GACnB,MAAMW,EAAQ5B,EAAWlrC,GACnBrG,EAAMsC,KAAK2uC,UAEjB,GAAIjxC,EAAM,EACN,MAAM,IAAIiB,MAAM,+CACpB,MAAM+Z,EAAShb,EAAM,EACfuyB,EAAQjwB,KAAKogB,MACnB,GAAI1H,EAASuX,EAAMlyB,OACf,MAAM,IAAIY,MAAM,sCACpB,IAAK,IAAItB,EAAI,EAAGA,EAAIqb,EAAQrb,IACxBwzC,EAAMD,UAAU,EAAIvzC,EAAG4yB,EAAM5yB,GAAIy0B,EACzC,CACA,MAAA8d,GACI,MAAM,OAAEx0B,EAAM,UAAEuzB,GAAc3uC,KAC9BA,KAAKswC,WAAWl1B,GAChB,MAAMhW,EAAMgW,EAAOP,MAAM,EAAG8zB,GAE5B,OADA3uC,KAAKwqB,UACEplB,CACX,CACA,UAAAoqC,CAAW/J,GACPA,IAAOA,EAAK,IAAIzlC,KAAKN,aACrB+lC,EAAG5kB,OAAO7gB,KAAKogB,OACf,MAAM,SAAEwuB,EAAQ,OAAExzB,EAAM,OAAErd,EAAM,SAAEu8B,EAAQ,UAAE9E,EAAS,IAAE5U,GAAQ5gB,KAO/D,OANAylC,EAAG1nC,OAASA,EACZ0nC,EAAG7kB,IAAMA,EACT6kB,EAAGnL,SAAWA,EACdmL,EAAGjQ,UAAYA,EACXz3B,EAAS6wC,GACTnJ,EAAGrqB,OAAOyF,IAAIzF,GACXqqB,CACX,EChHJ,MAAMqL,EAA2B,IAAI1B,YAAY,CAC7C,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAKlF2B,EAA4B,IAAI3B,YAAY,CAC9C,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAIlF4B,EAA2B,IAAI5B,YAAY,IACjD,MAAM6B,UAAejB,EACjB,WAAAtwC,GACIwnB,MAAM,GAAI,GAAI,GAAG,GAGjBlnB,KAAKyT,EAAmB,EAAfs9B,EAAU,GACnB/wC,KAAK0T,EAAmB,EAAfq9B,EAAU,GACnB/wC,KAAK2T,EAAmB,EAAfo9B,EAAU,GACnB/wC,KAAK4T,EAAmB,EAAfm9B,EAAU,GACnB/wC,KAAK8mB,EAAmB,EAAfiqB,EAAU,GACnB/wC,KAAKkxC,EAAmB,EAAfH,EAAU,GACnB/wC,KAAKmxC,EAAmB,EAAfJ,EAAU,GACnB/wC,KAAKoxC,EAAmB,EAAfL,EAAU,EACvB,CACA,GAAA3wB,GACI,MAAM,EAAE3M,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEkT,EAAC,EAAEoqB,EAAC,EAAEC,EAAC,EAAEC,GAAMpxC,KACnC,MAAO,CAACyT,EAAGC,EAAGC,EAAGC,EAAGkT,EAAGoqB,EAAGC,EAAGC,EACjC,CAEA,GAAAvwB,CAAIpN,EAAGC,EAAGC,EAAGC,EAAGkT,EAAGoqB,EAAGC,EAAGC,GACrBpxC,KAAKyT,EAAQ,EAAJA,EACTzT,KAAK0T,EAAQ,EAAJA,EACT1T,KAAK2T,EAAQ,EAAJA,EACT3T,KAAK4T,EAAQ,EAAJA,EACT5T,KAAK8mB,EAAQ,EAAJA,EACT9mB,KAAKkxC,EAAQ,EAAJA,EACTlxC,KAAKmxC,EAAQ,EAAJA,EACTnxC,KAAKoxC,EAAQ,EAAJA,CACb,CACA,OAAA1nB,CAAQwmB,EAAMnyB,GAEV,IAAK,IAAI1gB,EAAI,EAAGA,EAAI,GAAIA,IAAK0gB,GAAU,EACnCizB,EAAS3zC,GAAK6yC,EAAKmB,UAAUtzB,GAAQ,GACzC,IAAK,IAAI1gB,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,MAAMi0C,EAAMN,EAAS3zC,EAAI,IACnBk0C,EAAKP,EAAS3zC,EAAI,GAClBm0C,EAAKrC,EAAKmC,EAAK,GAAKnC,EAAKmC,EAAK,IAAOA,IAAQ,EAC7CG,EAAKtC,EAAKoC,EAAI,IAAMpC,EAAKoC,EAAI,IAAOA,IAAO,GACjDP,EAAS3zC,GAAMo0C,EAAKT,EAAS3zC,EAAI,GAAKm0C,EAAKR,EAAS3zC,EAAI,IAAO,CACnE,CAEA,IAAI,EAAEoW,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEkT,EAAC,EAAEoqB,EAAC,EAAEC,EAAC,EAAEC,GAAMpxC,KACjC,IAAK,IAAI3C,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MACMq0C,EAAMN,GADGjC,EAAKroB,EAAG,GAAKqoB,EAAKroB,EAAG,IAAMqoB,EAAKroB,EAAG,ODrD1C9iB,ECsDqB8iB,GAAGoqB,GDtDAltC,ECsDGmtC,GAAKL,EAASzzC,GAAK2zC,EAAS3zC,GAAM,EAE/Ds0C,GADSxC,EAAK17B,EAAG,GAAK07B,EAAK17B,EAAG,IAAM07B,EAAK17B,EAAG,KAC7Bs8B,EAAIt8B,EAAGC,EAAGC,GAAM,EACrCy9B,EAAID,EACJA,EAAID,EACJA,EAAIpqB,EACJA,EAAKlT,EAAI89B,EAAM,EACf99B,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKi+B,EAAKC,EAAM,CACpB,CDjEW,IAAC3tC,ECmEZyP,EAAKA,EAAIzT,KAAKyT,EAAK,EACnBC,EAAKA,EAAI1T,KAAK0T,EAAK,EACnBC,EAAKA,EAAI3T,KAAK2T,EAAK,EACnBC,EAAKA,EAAI5T,KAAK4T,EAAK,EACnBkT,EAAKA,EAAI9mB,KAAK8mB,EAAK,EACnBoqB,EAAKA,EAAIlxC,KAAKkxC,EAAK,EACnBC,EAAKA,EAAInxC,KAAKmxC,EAAK,EACnBC,EAAKA,EAAIpxC,KAAKoxC,EAAK,EACnBpxC,KAAK6gB,IAAIpN,EAAGC,EAAGC,EAAGC,EAAGkT,EAAGoqB,EAAGC,EAAGC,EAClC,CACA,UAAAf,GACIW,EAAS1wB,KAAK,EAClB,CACA,OAAAkK,GACIxqB,KAAK6gB,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9B7gB,KAAKob,OAAOkF,KAAK,EACrB,EAqBG,MAAM,EAAyB,GAAgB,IAAM,IAAI2wB,ICrHzD,MAAMW,UAAarC,EACtB,WAAA7vC,CAAYwtB,EAAM6X,GACd7d,QACAlnB,KAAKs6B,UAAW,EAChBt6B,KAAKw1B,WAAY,EACjB,EAAWtI,GACX,MAAMD,EAAM,EAAQ8X,GAEpB,GADA/kC,KAAK6xC,MAAQ3kB,EAAKuC,SACe,mBAAtBzvB,KAAK6xC,MAAMlC,OAClB,MAAM,IAAIhxC,MAAM,uDACpBqB,KAAK4uC,SAAW5uC,KAAK6xC,MAAMjD,SAC3B5uC,KAAK2uC,UAAY3uC,KAAK6xC,MAAMlD,UAC5B,MAAMC,EAAW5uC,KAAK4uC,SAChBhH,EAAM,IAAIppC,WAAWowC,GAE3BhH,EAAI/mB,IAAIoM,EAAIlvB,OAAS6wC,EAAW1hB,EAAKuC,SAASkgB,OAAO1iB,GAAK2iB,SAAW3iB,GACrE,IAAK,IAAI5vB,EAAI,EAAGA,EAAIuqC,EAAI7pC,OAAQV,IAC5BuqC,EAAIvqC,IAAM,GACd2C,KAAK6xC,MAAMlC,OAAO/H,GAElB5nC,KAAK8xC,MAAQ5kB,EAAKuC,SAElB,IAAK,IAAIpyB,EAAI,EAAGA,EAAIuqC,EAAI7pC,OAAQV,IAC5BuqC,EAAIvqC,IAAM,IACd2C,KAAK8xC,MAAMnC,OAAO/H,GAClBA,EAAItnB,KAAK,EACb,CACA,MAAAqvB,CAAO11B,GAGH,OAFA,EAAaja,MACbA,KAAK6xC,MAAMlC,OAAO11B,GACXja,IACX,CACA,UAAAswC,CAAWvsC,GACP,EAAa/D,MACb,EAAY+D,EAAK/D,KAAK2uC,WACtB3uC,KAAKs6B,UAAW,EAChBt6B,KAAK6xC,MAAMvB,WAAWvsC,GACtB/D,KAAK8xC,MAAMnC,OAAO5rC,GAClB/D,KAAK8xC,MAAMxB,WAAWvsC,GACtB/D,KAAKwqB,SACT,CACA,MAAAolB,GACI,MAAM7rC,EAAM,IAAIvF,WAAWwB,KAAK8xC,MAAMnD,WAEtC,OADA3uC,KAAKswC,WAAWvsC,GACTA,CACX,CACA,UAAAyrC,CAAW/J,GAEPA,IAAOA,EAAKvrB,OAAOuV,OAAOvV,OAAO4W,eAAe9wB,MAAO,CAAC,IACxD,MAAM,MAAE8xC,EAAK,MAAED,EAAK,SAAEvX,EAAQ,UAAE9E,EAAS,SAAEoZ,EAAQ,UAAED,GAAc3uC,KAQnE,OANAylC,EAAGnL,SAAWA,EACdmL,EAAGjQ,UAAYA,EACfiQ,EAAGmJ,SAAWA,EACdnJ,EAAGkJ,UAAYA,EACflJ,EAAGqM,MAAQA,EAAMtC,WAAW/J,EAAGqM,OAC/BrM,EAAGoM,MAAQA,EAAMrC,WAAW/J,EAAGoM,OACxBpM,CACX,CACA,OAAAjb,GACIxqB,KAAKw1B,WAAY,EACjBx1B,KAAK8xC,MAAMtnB,UACXxqB,KAAK6xC,MAAMrnB,SACf,EAQG,MAAMunB,EAAO,CAAC7kB,EAAMD,EAAK3F,IAAY,IAAIsqB,EAAK1kB,EAAMD,GAAK0iB,OAAOroB,GAASsoB,SAChFmC,EAAKtiB,OAAS,CAACvC,EAAMD,IAAQ,IAAI2kB,EAAK1kB,EAAMD,GCtE5C,MACM+kB,EAAsB7vB,OAAO,GAC7B8vB,EAAsB9vB,OAAO,GAC5B,SAAS,EAAQne,GACpB,OAAQA,aAAaxF,YACX,MAALwF,GAA0B,iBAANA,GAAyC,eAAvBA,EAAEtE,YAAY4X,IAC7D,CACO,SAAS46B,EAAOC,GACnB,IAAK,EAAQA,GACT,MAAM,IAAIxzC,MAAM,sBACxB,CAEA,MAAM,EAAwBF,MAAM8b,KAAK,CAAExc,OAAQ,MAAO,CAACmS,EAAG7S,IAAMA,EAAE2E,SAAS,IAAIslC,SAAS,EAAG,OAIxF,SAAS,EAAWzlB,GACvBqwB,EAAOrwB,GAEP,IAAI2kB,EAAM,GACV,IAAK,IAAInpC,EAAI,EAAGA,EAAIwkB,EAAM9jB,OAAQV,IAC9BmpC,GAAO,EAAM3kB,EAAMxkB,IAEvB,OAAOmpC,CACX,CAKO,SAAS4L,GAAY5L,GACxB,GAAmB,iBAARA,EACP,MAAM,IAAI7nC,MAAM,mCAAqC6nC,GAEzD,OAAOrkB,OAAe,KAARqkB,EAAa,IAAM,KAAKA,IAC1C,CAEA,MAAM,GAAS,CAAE6L,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC7D,SAAS,GAAcC,GACnB,OAAIA,GAAQ,GAAON,IAAMM,GAAQ,GAAOL,GAC7BK,EAAO,GAAON,GACrBM,GAAQ,GAAOJ,IAAMI,GAAQ,GAAOH,GAC7BG,GAAQ,GAAOJ,GAAK,IAC3BI,GAAQ,GAAOF,IAAME,GAAQ,GAAOD,GAC7BC,GAAQ,GAAOF,GAAK,SAD/B,CAGJ,CAIO,SAAS,GAAWjM,GACvB,GAAmB,iBAARA,EACP,MAAM,IAAI7nC,MAAM,mCAAqC6nC,GACzD,MAAMoM,EAAKpM,EAAIzoC,OACT80C,EAAKD,EAAK,EAChB,GAAIA,EAAK,EACL,MAAM,IAAIj0C,MAAM,0DAA4Di0C,GAChF,MAAMz2B,EAAQ,IAAI3d,WAAWq0C,GAC7B,IAAK,IAAIC,EAAK,EAAG9sC,EAAK,EAAG8sC,EAAKD,EAAIC,IAAM9sC,GAAM,EAAG,CAC7C,MAAM+sC,EAAK,GAAcvM,EAAI5oC,WAAWoI,IAClCgtC,EAAK,GAAcxM,EAAI5oC,WAAWoI,EAAK,IAC7C,QAAWuS,IAAPw6B,QAA2Bx6B,IAAPy6B,EAAkB,CACtC,MAAML,EAAOnM,EAAIxgC,GAAMwgC,EAAIxgC,EAAK,GAChC,MAAM,IAAIrH,MAAM,+CAAiDg0C,EAAO,cAAgB3sC,EAC5F,CACAmW,EAAM22B,GAAW,GAALC,EAAUC,CAC1B,CACA,OAAO72B,CACX,CAEO,SAAS,GAAgB0F,GAC5B,OAAOuwB,GAAY,EAAWvwB,GAClC,CACO,SAAS,GAAgBA,GAE5B,OADAqwB,EAAOrwB,GACAuwB,GAAY,EAAW5zC,WAAW+b,KAAKsH,GAAOoxB,WACzD,CACO,SAAS,GAAgB1jC,EAAG7R,GAC/B,OAAO,GAAW6R,EAAEvN,SAAS,IAAIslC,SAAe,EAAN5pC,EAAS,KACvD,CACO,SAASw1C,GAAgB3jC,EAAG7R,GAC/B,OAAO,GAAgB6R,EAAG7R,GAAKu1C,SACnC,CAcO,SAAS,GAAYE,EAAO3M,EAAK4M,GACpC,IAAIhuC,EACJ,GAAmB,iBAARohC,EACP,IACIphC,EAAM,GAAWohC,EACrB,CACA,MAAOhmC,GACH,MAAM,IAAI7B,MAAM,GAAGw0C,oCAAwC3M,cAAgBhmC,IAC/E,KAEC,KAAI,EAAQgmC,GAMb,MAAM,IAAI7nC,MAAM,GAAGw0C,sCAHnB/tC,EAAM5G,WAAW+b,KAAKisB,EAI1B,CACA,MAAM9oC,EAAM0H,EAAIrH,OAChB,GAA8B,iBAAnBq1C,GAA+B11C,IAAQ01C,EAC9C,MAAM,IAAIz0C,MAAM,GAAGw0C,cAAkBC,gBAA6B11C,KACtE,OAAO0H,CACX,CAIO,SAAS,MAAesiC,GAC3B,IAAI2L,EAAM,EACV,IAAK,IAAIh2C,EAAI,EAAGA,EAAIqqC,EAAO3pC,OAAQV,IAAK,CACpC,MAAM2G,EAAI0jC,EAAOrqC,GACjB60C,EAAOluC,GACPqvC,GAAOrvC,EAAEjG,MACb,CACA,MAAMqH,EAAM,IAAI5G,WAAW60C,GAC3B,IAAK,IAAIh2C,EAAI,EAAGuqC,EAAM,EAAGvqC,EAAIqqC,EAAO3pC,OAAQV,IAAK,CAC7C,MAAM2G,EAAI0jC,EAAOrqC,GACjB+H,EAAIyb,IAAI7c,EAAG4jC,GACXA,GAAO5jC,EAAEjG,MACb,CACA,OAAOqH,CACX,CA+CO,MAAMkuC,GAAW/jC,IAAO0iC,GAAO9vB,OAAO5S,EAAI,IAAMyiC,EAEjDuB,GAAOx3B,GAAS,IAAIvd,WAAWud,GAC/By3B,GAAQl2C,GAAQkB,WAAW+b,KAAKjd,GAQ/B,SAASm2C,GAAeC,EAASC,EAAUC,GAC9C,GAAuB,iBAAZF,GAAwBA,EAAU,EACzC,MAAM,IAAI/0C,MAAM,4BACpB,GAAwB,iBAAbg1C,GAAyBA,EAAW,EAC3C,MAAM,IAAIh1C,MAAM,6BACpB,GAAsB,mBAAXi1C,EACP,MAAM,IAAIj1C,MAAM,6BAEpB,IAAIosB,EAAIwoB,GAAIG,GACRvvC,EAAIovC,GAAIG,GACRr2C,EAAI,EACR,MAAMw2C,EAAQ,KACV9oB,EAAEzK,KAAK,GACPnc,EAAEmc,KAAK,GACPjjB,EAAI,CAAC,EAEHmU,EAAI,IAAIrQ,IAAMyyC,EAAOzvC,EAAG4mB,KAAM5pB,GAC9B2yC,EAAS,CAACC,EAAOR,QAEnBpvC,EAAIqN,EAAEgiC,GAAK,CAAC,IAAQO,GACpBhpB,EAAIvZ,IACgB,IAAhBuiC,EAAKh2C,SAEToG,EAAIqN,EAAEgiC,GAAK,CAAC,IAAQO,GACpBhpB,EAAIvZ,IAAG,EAELwiC,EAAM,KAER,GAAI32C,KAAO,IACP,MAAM,IAAIsB,MAAM,2BACpB,IAAIjB,EAAM,EACV,MAAMqG,EAAM,GACZ,KAAOrG,EAAMi2C,GAAU,CACnB5oB,EAAIvZ,IACJ,MAAMyiC,EAAKlpB,EAAElQ,QACb9W,EAAI3F,KAAK61C,GACTv2C,GAAOqtB,EAAEhtB,MACb,CACA,OAAO,MAAegG,EAAI,EAW9B,MATiB,CAACgwC,EAAMG,KAGpB,IAAI9uC,EACJ,IAHAyuC,IACAC,EAAOC,KAEE3uC,EAAM8uC,EAAKF,OAChBF,IAEJ,OADAD,IACOzuC,CAAG,CAGlB,CAEA,MAAM+uC,GAAe,CACjBC,OAASl1C,GAAuB,iBAARA,EACxBm1C,SAAWn1C,GAAuB,mBAARA,EAC1Bo1C,QAAUp1C,GAAuB,kBAARA,EACzBwB,OAASxB,GAAuB,iBAARA,EACxBq1C,mBAAqBr1C,GAAuB,iBAARA,GAAoB,EAAQA,GAChEuvC,cAAgBvvC,GAAQ8e,OAAOywB,cAAcvvC,GAC7Cid,MAAQjd,GAAQT,MAAMgD,QAAQvC,GAC9Bs1C,MAAO,CAACt1C,EAAKyhC,IAAWA,EAAO8T,GAAGC,QAAQx1C,GAC1CguB,KAAOhuB,GAAuB,mBAARA,GAAsB8e,OAAOywB,cAAcvvC,EAAIyvC,YAGlE,SAASgG,GAAehU,EAAQiU,EAAYC,EAAgB,CAAC,GAChE,MAAMC,EAAa,CAACC,EAAWj5B,EAAMk5B,KACjC,MAAMC,EAAWd,GAAar4B,GAC9B,GAAwB,mBAAbm5B,EACP,MAAM,IAAIt2C,MAAM,sBAAsBmd,yBAC1C,MAAM5c,EAAMyhC,EAAOoU,GACnB,KAAIC,QAAsBz8B,IAARrZ,GAEb+1C,EAAS/1C,EAAKyhC,IACf,MAAM,IAAIhiC,MAAM,iBAAiB8e,OAAOs3B,MAAc71C,aAAeA,gBAAkB4c,IAC3F,EAEJ,IAAK,MAAOi5B,EAAWj5B,KAAS5B,OAAOg7B,QAAQN,GAC3CE,EAAWC,EAAWj5B,GAAM,GAChC,IAAK,MAAOi5B,EAAWj5B,KAAS5B,OAAOg7B,QAAQL,GAC3CC,EAAWC,EAAWj5B,GAAM,GAChC,OAAO6kB,CACX,CCnRA,MAAM,GAAMxe,OAAO,GAAI,GAAMA,OAAO,GAAI,GAAMA,OAAO,GAAIgzB,GAAMhzB,OAAO,GAEhEizB,GAAMjzB,OAAO,GAAIkzB,GAAMlzB,OAAO,GAAImzB,GAAMnzB,OAAO,GAI9C,SAAS,GAAIne,EAAG7C,GACnB,MAAMwmC,EAAS3jC,EAAI7C,EACnB,OAAOwmC,GAAU,GAAMA,EAASxmC,EAAIwmC,CACxC,CAQO,SAAS1kC,GAAIlE,EAAKw2C,EAAOC,GAC5B,GAAIA,GAAU,IAAOD,EAAQ,GACzB,MAAM,IAAI52C,MAAM,6BACpB,GAAI62C,IAAW,GACX,OAAO,GACX,IAAIpwC,EAAM,GACV,KAAOmwC,EAAQ,IACPA,EAAQ,KACRnwC,EAAOA,EAAMrG,EAAOy2C,GACxBz2C,EAAOA,EAAMA,EAAOy2C,EACpBD,IAAU,GAEd,OAAOnwC,CACX,CAEO,SAASqwC,GAAKhoC,EAAG8nC,EAAOC,GAC3B,IAAIpwC,EAAMqI,EACV,KAAO8nC,KAAU,IACbnwC,GAAOA,EACPA,GAAOowC,EAEX,OAAOpwC,CACX,CAEO,SAASswC,GAAO91C,EAAQ41C,GAC3B,GAAI51C,IAAW,IAAO41C,GAAU,GAC5B,MAAM,IAAI72C,MAAM,6CAA6CiB,SAAc41C,KAI/E,IAAIxxC,EAAI,GAAIpE,EAAQ41C,GAChBr0C,EAAIq0C,EAEJ/nC,EAAI,GAAKC,EAAI,GAAK6L,EAAI,GAAKwR,EAAI,GACnC,KAAO/mB,IAAM,IAAK,CAEd,MAAM+M,EAAI5P,EAAI6C,EACRjD,EAAII,EAAI6C,EACRwL,EAAI/B,EAAI8L,EAAIxI,EACZxB,EAAI7B,EAAIqd,EAAIha,EAElB5P,EAAI6C,EAAGA,EAAIjD,EAAG0M,EAAI8L,EAAG7L,EAAIqd,EAAGxR,EAAI/J,EAAGub,EAAIxb,CAC3C,CAEA,GADYpO,IACA,GACR,MAAM,IAAIxC,MAAM,0BACpB,OAAO,GAAI8O,EAAG+nC,EAClB,CA5DYrzB,OAAO,GAAWA,OAAO,IAwL9B,MAEDwzB,GAAe,CACjB,SAAU,UAAW,MAAO,MAAO,MAAO,OAAQ,MAClD,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,OAAQ,OAAQ,OAAQ,QA2ErB,SAASC,GAAQrmC,EAAGsmC,GAEvB,MAAMC,OAA6Bv9B,IAAfs9B,EAA2BA,EAAatmC,EAAEvN,SAAS,GAAGjE,OAE1E,MAAO,CAAE83C,WAAYC,EAAaC,YADd30C,KAAKiB,KAAKyzC,EAAc,GAEhD,CAgGO,SAASE,GAAoBC,GAChC,GAA0B,iBAAfA,EACP,MAAM,IAAIt3C,MAAM,8BACpB,MAAMoH,EAAYkwC,EAAWj0C,SAAS,GAAGjE,OACzC,OAAOqD,KAAKiB,KAAK0D,EAAY,EACjC,CAQO,SAASmwC,GAAiBD,GAC7B,MAAMl4C,EAASi4C,GAAoBC,GACnC,OAAOl4C,EAASqD,KAAKiB,KAAKtE,EAAS,EACvC,CCjYA,MAAM,GAAMokB,OAAO,GACb,GAAMA,OAAO,GAoIZ,SAASg0B,GAAcC,GAY1B,OD6DOzB,GCxEOyB,EAAM3B,GDoEPkB,GAAa5P,QAAO,CAACrZ,EAAKxtB,KACnCwtB,EAAIxtB,GAAO,WACJwtB,IARK,CACZ2pB,MAAO,SACPC,KAAM,SACNC,MAAO,gBACPC,KAAM,mBCjEV7B,GAAeyB,EAAO,CAClB7mC,EAAG,SACHiC,EAAG,SACHilC,GAAI,QACJC,GAAI,SACL,CACCb,WAAY,gBACZE,YAAa,kBAGV77B,OAAOy8B,OAAO,IACdf,GAAQQ,EAAM7mC,EAAG6mC,EAAMP,eACvBO,EACEtnC,EAAGsnC,EAAM3B,GAAG4B,OAEzB,CCxHA,MAAQ,GAAiBO,GAAK,GAAYC,IAAQ,EACrCC,GAAM,CAEfC,IAAK,cAAqBp4C,MACtB,WAAAe,CAAY8P,EAAI,IACZ0X,MAAM1X,EACV,GAEJ,SAAAwnC,CAAUj7B,GACN,MAAQg7B,IAAKjwB,GAAMgwB,GACnB,GAAI/6B,EAAKhe,OAAS,GAAiB,IAAZge,EAAK,GACxB,MAAM,IAAI+K,EAAE,iCAChB,MAAMppB,EAAMqe,EAAK,GACX3W,EAAM2W,EAAK4G,SAAS,EAAGjlB,EAAM,GACnC,IAAKA,GAAO0H,EAAIrH,SAAWL,EACvB,MAAM,IAAIopB,EAAE,2CAKhB,GAAa,IAAT1hB,EAAI,GACJ,MAAM,IAAI0hB,EAAE,uCAChB,GAAe,IAAX1hB,EAAI,MAA0B,IAATA,EAAI,IACzB,MAAM,IAAI0hB,EAAE,uDAChB,MAAO,CAAEuL,EAAGukB,GAAIxxC,GAAM0I,EAAGiO,EAAK4G,SAASjlB,EAAM,GACjD,EACA,KAAAu5C,CAAMzQ,GAEF,MAAQuQ,IAAKjwB,GAAMgwB,GACb/6B,EAAsB,iBAARyqB,EAAmBqQ,GAAIrQ,GAAOA,EAClD,EAAUzqB,GACV,IAAIjO,EAAIiO,EAAKhe,OACb,GAAI+P,EAAI,GAAgB,IAAXiO,EAAK,GACd,MAAM,IAAI+K,EAAE,yBAChB,GAAI/K,EAAK,KAAOjO,EAAI,EAChB,MAAM,IAAIgZ,EAAE,uCAChB,MAAQuL,EAAGtxB,EAAG+M,EAAGopC,GAAWJ,GAAIE,UAAUj7B,EAAK4G,SAAS,KAChD0P,EAAG7jB,EAAGV,EAAGqpC,GAAeL,GAAIE,UAAUE,GAC9C,GAAIC,EAAWp5C,OACX,MAAM,IAAI+oB,EAAE,+CAChB,MAAO,CAAE/lB,IAAGyN,EAChB,EACA,UAAA4oC,CAAWC,GAEP,MAAMx8B,EAASrM,GAAmC,EAA5BwP,OAAOI,SAAS5P,EAAE,GAAI,IAAe,KAAOA,EAAIA,EAChEgD,EAAKzS,IACP,MAAMynC,EAAMznC,EAAIiD,SAAS,IACzB,OAAoB,EAAbwkC,EAAIzoC,OAAa,IAAIyoC,IAAQA,CAAG,EAErCh4B,EAAIqM,EAAMrJ,EAAE6lC,EAAI7oC,IAChBzN,EAAI8Z,EAAMrJ,EAAE6lC,EAAIt2C,IAChBqV,EAAM5H,EAAEzQ,OAAS,EACjBu5C,EAAMv2C,EAAEhD,OAAS,EACjBk2C,EAAKziC,EAAE4E,GACPmhC,EAAK/lC,EAAE8lC,GACb,MAAO,KAAK9lC,EAAE8lC,EAAMlhC,EAAM,OAAOmhC,IAAKx2C,MAAMkzC,IAAKzlC,GACrD,GAIE,GAAM2T,OAAO,GAAI,GAAMA,OAAO,GAAqB,IAAXA,OAAO,GAAUA,OAAO,IAyb/D,SAASq1B,GAAYC,GACxB,MAAMC,EAdV,SAAsBtB,GAClB,MAAMha,EAAO+Z,GAAcC,GAU3B,OATA,GAAkBha,EAAM,CACpBlP,KAAM,OACN6kB,KAAM,WACN4F,YAAa,YACd,CACCC,SAAU,WACVC,cAAe,WACfC,KAAM,YAEH59B,OAAOy8B,OAAO,CAAEmB,MAAM,KAAS1b,GAC1C,CAEkB2b,CAAaN,IACrB,GAAEhD,EAAIllC,GAAmBmoC,EACzBM,EAAgBvD,EAAG8B,MAAQ,EAC3B0B,EAAkB,EAAIxD,EAAG8B,MAAQ,EAIvC,SAAS2B,EAAKl0C,GACV,OAAO,GAAQA,EAAGm0C,EACtB,CACA,SAASC,EAAKp0C,GACV,OAAO,GAAWA,EAAGm0C,EACzB,CACA,MAAQE,gBAAiBC,EAAK,uBAAEC,EAAsB,oBAAEC,EAAmB,mBAAEC,GAtc1E,SAA2Brc,GAC9B,MAAMsb,EA1FV,SAA2BtB,GACvB,MAAMha,EAAO+Z,GAAcC,GAC3B,GAAkBha,EAAM,CACpBp4B,EAAG,QACH7C,EAAG,SACJ,CACCu3C,yBAA0B,QAC1BC,eAAgB,UAChBC,cAAe,WACfC,cAAe,WACfC,mBAAoB,UACpBC,UAAW,WACXhR,QAAS,aAEb,MAAM,KAAEiR,EAAI,GAAEvE,EAAE,EAAEzwC,GAAMo4B,EACxB,GAAI4c,EAAM,CACN,IAAKvE,EAAGwE,IAAIj1C,EAAGywC,EAAGyE,MACd,MAAM,IAAIv6C,MAAM,qEAEpB,GAAoB,iBAATq6C,GACc,iBAAdA,EAAKG,MACgB,mBAArBH,EAAKI,YACZ,MAAM,IAAIz6C,MAAM,oEAExB,CACA,OAAOub,OAAOy8B,OAAO,IAAKva,GAC9B,CAgEkBid,CAAkBjd,IAC1B,GAAEqY,GAAOiD,EACT3P,EAAU2P,EAAM3P,SAClB,EAAEuR,EAAIC,EAAOC,KACT,MAAMx1C,EAAIu1C,EAAME,WAChB,OAAO,GAAej7C,WAAW+b,KAAK,CAAC,IAAQk6B,EAAG1M,QAAQ/jC,EAAEyJ,GAAIgnC,EAAG1M,QAAQ/jC,EAAE0J,GAChF,GACCqrC,EAAYrB,EAAMqB,WACpB,CAAEl3B,IAEE,MAAMgiB,EAAOhiB,EAAMc,SAAS,GAI5B,MAAO,CAAElV,EAFCgnC,EAAGsE,UAAUlV,EAAKlhB,SAAS,EAAG8xB,EAAG8B,QAE/B7oC,EADF+mC,EAAGsE,UAAUlV,EAAKlhB,SAAS8xB,EAAG8B,MAAO,EAAI9B,EAAG8B,QAEzD,GAKL,SAASiC,EAAoB/qC,GACzB,MAAM,EAAEzJ,EAAC,EAAE7C,GAAMu2C,EACXnjC,EAAKkgC,EAAG7jC,IAAInD,GACZisC,EAAKjF,EAAGvzC,IAAIqT,EAAI9G,GACtB,OAAOgnC,EAAGzsC,IAAIysC,EAAGzsC,IAAI0xC,EAAIjF,EAAGvzC,IAAIuM,EAAGzJ,IAAK7C,EAC5C,CAKA,IAAKszC,EAAGwE,IAAIxE,EAAG7jC,IAAI8mC,EAAMhB,IAAK8B,EAAoBd,EAAMjB,KACpD,MAAM,IAAI93C,MAAM,+CAEpB,SAAS85C,EAAmB15C,GACxB,MAAsB,iBAARA,GAAoB,GAAMA,GAAOA,EAAM24C,EAAMnoC,CAC/D,CACA,SAASoqC,EAAS56C,GACd,IAAK05C,EAAmB15C,GACpB,MAAM,IAAIJ,MAAM,8CACxB,CAGA,SAAS45C,EAAuBtrB,GAC5B,MAAQyrB,yBAA0BhK,EAAO,YAAEqH,EAAW,eAAE4C,EAAc,EAAEppC,GAAMmoC,EAC9E,GAAIhJ,GAA0B,iBAARzhB,EAAkB,CAIpC,GAHI,EAAWA,KACXA,EAAM,EAAcA,IAEL,iBAARA,IAAqByhB,EAAQjtB,SAASwL,EAAIlvB,QACjD,MAAM,IAAIY,MAAM,eACpBsuB,EAAMA,EAAIqa,SAAuB,EAAdyO,EAAiB,IACxC,CACA,IAAIh3C,EACJ,IACIA,EACmB,iBAARkuB,EACDA,EACA,GAAmB,GAAY,cAAeA,EAAK8oB,GACjE,CACA,MAAO91B,GACH,MAAM,IAAIthB,MAAM,uBAAuBo3C,sCAAgD9oB,IAC3F,CAIA,OAHI0rB,IACA55C,EAAM,GAAQA,EAAKwQ,IACvBoqC,EAAS56C,GACFA,CACX,CACA,MAAM66C,EAAmB,IAAIC,IAC7B,SAASC,EAAeC,GACpB,KAAMA,aAAiBzB,GACnB,MAAM,IAAI35C,MAAM,2BACxB,CAMA,MAAM25C,EACF,WAAA54C,CAAYs6C,EAAIC,EAAIC,GAIhB,GAHAl6C,KAAKg6C,GAAKA,EACVh6C,KAAKi6C,GAAKA,EACVj6C,KAAKk6C,GAAKA,EACA,MAANF,IAAevF,EAAGC,QAAQsF,GAC1B,MAAM,IAAIr7C,MAAM,cACpB,GAAU,MAANs7C,IAAexF,EAAGC,QAAQuF,GAC1B,MAAM,IAAIt7C,MAAM,cACpB,GAAU,MAANu7C,IAAezF,EAAGC,QAAQwF,GAC1B,MAAM,IAAIv7C,MAAM,aACxB,CAGA,iBAAOw7C,CAAWrrC,GACd,MAAM,EAAErB,EAAC,EAAEC,GAAMoB,GAAK,CAAC,EACvB,IAAKA,IAAM2lC,EAAGC,QAAQjnC,KAAOgnC,EAAGC,QAAQhnC,GACpC,MAAM,IAAI/O,MAAM,wBACpB,GAAImQ,aAAawpC,EACb,MAAM,IAAI35C,MAAM,gCACpB,MAAMy7C,EAAO/8C,GAAMo3C,EAAGwE,IAAI57C,EAAGo3C,EAAGyE,MAEhC,OAAIkB,EAAI3sC,IAAM2sC,EAAI1sC,GACP4qC,EAAMY,KACV,IAAIZ,EAAM7qC,EAAGC,EAAG+mC,EAAG4F,IAC9B,CACA,KAAI5sC,GACA,OAAOzN,KAAKy5C,WAAWhsC,CAC3B,CACA,KAAIC,GACA,OAAO1N,KAAKy5C,WAAW/rC,CAC3B,CAOA,iBAAO4sC,CAAWC,GACd,MAAMC,EAAQ/F,EAAGgG,YAAYF,EAAO7tB,KAAK5d,GAAMA,EAAEorC,MACjD,OAAOK,EAAO7tB,KAAI,CAAC5d,EAAGzR,IAAMyR,EAAE2qC,SAASe,EAAMn9C,MAAKqvB,IAAI4rB,EAAM6B,WAChE,CAKA,cAAOO,CAAQlU,GACX,MAAMmU,EAAIrC,EAAM6B,WAAWpB,EAAU,GAAY,WAAYvS,KAE7D,OADAmU,EAAEC,iBACKD,CACX,CAEA,qBAAOE,CAAeC,GAClB,OAAOxC,EAAMyC,KAAKC,SAASzC,EAAuBuC,GACtD,CAEA,cAAAG,CAAeC,GACXl7C,KAAKm7C,aAAeD,EACpBtB,EAAiBwB,OAAOp7C,KAC5B,CAEA,cAAA46C,GACI,GAAI56C,KAAKo6C,MAAO,CAIZ,GAAI1C,EAAMoB,qBAAuBrE,EAAG2F,IAAIp6C,KAAKi6C,IACzC,OACJ,MAAM,IAAIt7C,MAAM,kBACpB,CAEA,MAAM,EAAE8O,EAAC,EAAEC,GAAM1N,KAAKy5C,WAEtB,IAAKhF,EAAGC,QAAQjnC,KAAOgnC,EAAGC,QAAQhnC,GAC9B,MAAM,IAAI/O,MAAM,4BACpB,MAAMgD,EAAO8yC,EAAG7jC,IAAIlD,GACd9L,EAAQ42C,EAAoB/qC,GAClC,IAAKgnC,EAAGwE,IAAIt3C,EAAMC,GACd,MAAM,IAAIjD,MAAM,qCACpB,IAAKqB,KAAK44C,gBACN,MAAM,IAAIj6C,MAAM,yCACxB,CACA,QAAA08C,GACI,MAAM,EAAE3tC,GAAM1N,KAAKy5C,WACnB,GAAIhF,EAAGvgC,MACH,OAAQugC,EAAGvgC,MAAMxG,GACrB,MAAM,IAAI/O,MAAM,8BACpB,CAIA,MAAAuiB,CAAO64B,GACHD,EAAeC,GACf,MAAQC,GAAIsB,EAAIrB,GAAIsB,EAAIrB,GAAIsB,GAAOx7C,MAC3Bg6C,GAAIyB,EAAIxB,GAAIyB,EAAIxB,GAAIyB,GAAO5B,EAC7B6B,EAAKnH,EAAGwE,IAAIxE,EAAGvzC,IAAIo6C,EAAIK,GAAKlH,EAAGvzC,IAAIu6C,EAAID,IACvCK,EAAKpH,EAAGwE,IAAIxE,EAAGvzC,IAAIq6C,EAAII,GAAKlH,EAAGvzC,IAAIw6C,EAAIF,IAC7C,OAAOI,GAAMC,CACjB,CAIA,MAAAC,GACI,OAAO,IAAIxD,EAAMt4C,KAAKg6C,GAAIvF,EAAG7tC,IAAI5G,KAAKi6C,IAAKj6C,KAAKk6C,GACpD,CAKA,MAAA6B,GACI,MAAM,EAAE/3C,EAAC,EAAE7C,GAAMu2C,EACX9sC,EAAK6pC,EAAGvzC,IAAIC,EAAG,KACb64C,GAAIsB,EAAIrB,GAAIsB,EAAIrB,GAAIsB,GAAOx7C,KACnC,IAAIg8C,EAAKvH,EAAGyE,KAAM+C,EAAKxH,EAAGyE,KAAMgD,EAAKzH,EAAGyE,KACpCiD,EAAK1H,EAAGvzC,IAAIo6C,EAAIA,GAChBc,EAAK3H,EAAGvzC,IAAIq6C,EAAIA,GAChBc,EAAK5H,EAAGvzC,IAAIs6C,EAAIA,GAChBc,EAAK7H,EAAGvzC,IAAIo6C,EAAIC,GA4BpB,OA3BAe,EAAK7H,EAAGzsC,IAAIs0C,EAAIA,GAChBJ,EAAKzH,EAAGvzC,IAAIo6C,EAAIE,GAChBU,EAAKzH,EAAGzsC,IAAIk0C,EAAIA,GAChBF,EAAKvH,EAAGvzC,IAAI8C,EAAGk4C,GACfD,EAAKxH,EAAGvzC,IAAI0J,EAAIyxC,GAChBJ,EAAKxH,EAAGzsC,IAAIg0C,EAAIC,GAChBD,EAAKvH,EAAGxsC,IAAIm0C,EAAIH,GAChBA,EAAKxH,EAAGzsC,IAAIo0C,EAAIH,GAChBA,EAAKxH,EAAGvzC,IAAI86C,EAAIC,GAChBD,EAAKvH,EAAGvzC,IAAIo7C,EAAIN,GAChBE,EAAKzH,EAAGvzC,IAAI0J,EAAIsxC,GAChBG,EAAK5H,EAAGvzC,IAAI8C,EAAGq4C,GACfC,EAAK7H,EAAGxsC,IAAIk0C,EAAIE,GAChBC,EAAK7H,EAAGvzC,IAAI8C,EAAGs4C,GACfA,EAAK7H,EAAGzsC,IAAIs0C,EAAIJ,GAChBA,EAAKzH,EAAGzsC,IAAIm0C,EAAIA,GAChBA,EAAK1H,EAAGzsC,IAAIk0C,EAAIC,GAChBA,EAAK1H,EAAGzsC,IAAIm0C,EAAIE,GAChBF,EAAK1H,EAAGvzC,IAAIi7C,EAAIG,GAChBL,EAAKxH,EAAGzsC,IAAIi0C,EAAIE,GAChBE,EAAK5H,EAAGvzC,IAAIq6C,EAAIC,GAChBa,EAAK5H,EAAGzsC,IAAIq0C,EAAIA,GAChBF,EAAK1H,EAAGvzC,IAAIm7C,EAAIC,GAChBN,EAAKvH,EAAGxsC,IAAI+zC,EAAIG,GAChBD,EAAKzH,EAAGvzC,IAAIm7C,EAAID,GAChBF,EAAKzH,EAAGzsC,IAAIk0C,EAAIA,GAChBA,EAAKzH,EAAGzsC,IAAIk0C,EAAIA,GACT,IAAI5D,EAAM0D,EAAIC,EAAIC,EAC7B,CAKA,GAAAl0C,CAAI+xC,GACAD,EAAeC,GACf,MAAQC,GAAIsB,EAAIrB,GAAIsB,EAAIrB,GAAIsB,GAAOx7C,MAC3Bg6C,GAAIyB,EAAIxB,GAAIyB,EAAIxB,GAAIyB,GAAO5B,EACnC,IAAIiC,EAAKvH,EAAGyE,KAAM+C,EAAKxH,EAAGyE,KAAMgD,EAAKzH,EAAGyE,KACxC,MAAMl1C,EAAI0zC,EAAM1zC,EACV4G,EAAK6pC,EAAGvzC,IAAIw2C,EAAMv2C,EAAG,IAC3B,IAAIg7C,EAAK1H,EAAGvzC,IAAIo6C,EAAIG,GAChBW,EAAK3H,EAAGvzC,IAAIq6C,EAAIG,GAChBW,EAAK5H,EAAGvzC,IAAIs6C,EAAIG,GAChBW,EAAK7H,EAAGzsC,IAAIszC,EAAIC,GAChBgB,EAAK9H,EAAGzsC,IAAIyzC,EAAIC,GACpBY,EAAK7H,EAAGvzC,IAAIo7C,EAAIC,GAChBA,EAAK9H,EAAGzsC,IAAIm0C,EAAIC,GAChBE,EAAK7H,EAAGxsC,IAAIq0C,EAAIC,GAChBA,EAAK9H,EAAGzsC,IAAIszC,EAAIE,GAChB,IAAIgB,EAAK/H,EAAGzsC,IAAIyzC,EAAIE,GA+BpB,OA9BAY,EAAK9H,EAAGvzC,IAAIq7C,EAAIC,GAChBA,EAAK/H,EAAGzsC,IAAIm0C,EAAIE,GAChBE,EAAK9H,EAAGxsC,IAAIs0C,EAAIC,GAChBA,EAAK/H,EAAGzsC,IAAIuzC,EAAIC,GAChBQ,EAAKvH,EAAGzsC,IAAI0zC,EAAIC,GAChBa,EAAK/H,EAAGvzC,IAAIs7C,EAAIR,GAChBA,EAAKvH,EAAGzsC,IAAIo0C,EAAIC,GAChBG,EAAK/H,EAAGxsC,IAAIu0C,EAAIR,GAChBE,EAAKzH,EAAGvzC,IAAI8C,EAAGu4C,GACfP,EAAKvH,EAAGvzC,IAAI0J,EAAIyxC,GAChBH,EAAKzH,EAAGzsC,IAAIg0C,EAAIE,GAChBF,EAAKvH,EAAGxsC,IAAIm0C,EAAIF,GAChBA,EAAKzH,EAAGzsC,IAAIo0C,EAAIF,GAChBD,EAAKxH,EAAGvzC,IAAI86C,EAAIE,GAChBE,EAAK3H,EAAGzsC,IAAIm0C,EAAIA,GAChBC,EAAK3H,EAAGzsC,IAAIo0C,EAAID,GAChBE,EAAK5H,EAAGvzC,IAAI8C,EAAGq4C,GACfE,EAAK9H,EAAGvzC,IAAI0J,EAAI2xC,GAChBH,EAAK3H,EAAGzsC,IAAIo0C,EAAIC,GAChBA,EAAK5H,EAAGxsC,IAAIk0C,EAAIE,GAChBA,EAAK5H,EAAGvzC,IAAI8C,EAAGq4C,GACfE,EAAK9H,EAAGzsC,IAAIu0C,EAAIF,GAChBF,EAAK1H,EAAGvzC,IAAIk7C,EAAIG,GAChBN,EAAKxH,EAAGzsC,IAAIi0C,EAAIE,GAChBA,EAAK1H,EAAGvzC,IAAIs7C,EAAID,GAChBP,EAAKvH,EAAGvzC,IAAIo7C,EAAIN,GAChBA,EAAKvH,EAAGxsC,IAAI+zC,EAAIG,GAChBA,EAAK1H,EAAGvzC,IAAIo7C,EAAIF,GAChBF,EAAKzH,EAAGvzC,IAAIs7C,EAAIN,GAChBA,EAAKzH,EAAGzsC,IAAIk0C,EAAIC,GACT,IAAI7D,EAAM0D,EAAIC,EAAIC,EAC7B,CACA,QAAAO,CAAS1C,GACL,OAAO/5C,KAAKgI,IAAI+xC,EAAM+B,SAC1B,CACA,GAAA1B,GACI,OAAOp6C,KAAKkhB,OAAOo3B,EAAMY,KAC7B,CACA,IAAAwD,CAAKntC,GACD,OAAOotC,EAAKC,WAAW58C,KAAM45C,EAAkBrqC,GAAIstC,IAC/C,MAAMrC,EAAQ/F,EAAGgG,YAAYoC,EAAKnwB,KAAK5d,GAAMA,EAAEorC,MAC/C,OAAO2C,EAAKnwB,KAAI,CAAC5d,EAAGzR,IAAMyR,EAAE2qC,SAASe,EAAMn9C,MAAKqvB,IAAI4rB,EAAM6B,WAAW,GAE7E,CAMA,cAAA2C,CAAevtC,GACX,MAAMwtC,EAAIzE,EAAMY,KAChB,GAAI3pC,IAAM,GACN,OAAOwtC,EAEX,GADApD,EAASpqC,GACLA,IAAM,GACN,OAAOvP,KACX,MAAM,KAAEg5C,GAAStB,EACjB,IAAKsB,EACD,OAAO2D,EAAKK,aAAah9C,KAAMuP,GAEnC,IAAI,MAAE0tC,EAAK,GAAEC,EAAE,MAAEC,EAAK,GAAEC,GAAOpE,EAAKI,YAAY7pC,GAC5C8tC,EAAMN,EACNO,EAAMP,EACN1qB,EAAIryB,KACR,KAAOk9C,EAAK,IAAOE,EAAK,IAChBF,EAAK,KACLG,EAAMA,EAAIr1C,IAAIqqB,IACd+qB,EAAK,KACLE,EAAMA,EAAIt1C,IAAIqqB,IAClBA,EAAIA,EAAE0pB,SACNmB,IAAO,GACPE,IAAO,GAOX,OALIH,IACAI,EAAMA,EAAIvB,UACVqB,IACAG,EAAMA,EAAIxB,UACdwB,EAAM,IAAIhF,EAAM7D,EAAGvzC,IAAIo8C,EAAItD,GAAIhB,EAAKG,MAAOmE,EAAIrD,GAAIqD,EAAIpD,IAChDmD,EAAIr1C,IAAIs1C,EACnB,CAUA,QAAAtC,CAASuC,GACL5D,EAAS4D,GACT,IACIhE,EAAOiE,EADPjuC,EAAIguC,EAER,MAAM,KAAEvE,GAAStB,EACjB,GAAIsB,EAAM,CACN,MAAM,MAAEiE,EAAK,GAAEC,EAAE,MAAEC,EAAK,GAAEC,GAAOpE,EAAKI,YAAY7pC,GAClD,IAAMT,EAAGuuC,EAAKI,EAAGC,GAAQ19C,KAAK08C,KAAKQ,IAC7BpuC,EAAGwuC,EAAKG,EAAGE,GAAQ39C,KAAK08C,KAAKU,GACnCC,EAAMV,EAAKiB,gBAAgBX,EAAOI,GAClCC,EAAMX,EAAKiB,gBAAgBT,EAAOG,GAClCA,EAAM,IAAIhF,EAAM7D,EAAGvzC,IAAIo8C,EAAItD,GAAIhB,EAAKG,MAAOmE,EAAIrD,GAAIqD,EAAIpD,IACvDX,EAAQ8D,EAAIr1C,IAAIs1C,GAChBE,EAAOE,EAAI11C,IAAI21C,EACnB,KACK,CACD,MAAM,EAAE7uC,EAAC,EAAE2uC,GAAMz9C,KAAK08C,KAAKntC,GAC3BgqC,EAAQzqC,EACR0uC,EAAOC,CACX,CAEA,OAAOnF,EAAMgC,WAAW,CAACf,EAAOiE,IAAO,EAC3C,CAOA,oBAAAK,CAAqBC,EAAG95C,EAAG7C,GACvB,MAAMgwC,EAAImH,EAAMyC,KACV75C,EAAM,CAACy5C,EAAG32C,IACVA,IAAM,IAAOA,IAAM,IAAQ22C,EAAEz5B,OAAOiwB,GAA2BwJ,EAAEK,SAASh3C,GAAjC22C,EAAEmC,eAAe94C,GAC1DqvC,EAAMnyC,EAAIlB,KAAMgE,GAAGgE,IAAI9G,EAAI48C,EAAG38C,IACpC,OAAOkyC,EAAI+G,WAAQ7hC,EAAY86B,CACnC,CAIA,QAAAoG,CAASsE,GACL,MAAQ/D,GAAIvsC,EAAGwsC,GAAIvsC,EAAGwsC,GAAIjhC,GAAMjZ,KAC1Bo6C,EAAMp6C,KAAKo6C,MAGP,MAAN2D,IACAA,EAAK3D,EAAM3F,EAAG4F,IAAM5F,EAAGv7B,IAAID,IAC/B,MAAM+kC,EAAKvJ,EAAGvzC,IAAIuM,EAAGswC,GACfE,EAAKxJ,EAAGvzC,IAAIwM,EAAGqwC,GACfG,EAAKzJ,EAAGvzC,IAAI+X,EAAG8kC,GACrB,GAAI3D,EACA,MAAO,CAAE3sC,EAAGgnC,EAAGyE,KAAMxrC,EAAG+mC,EAAGyE,MAC/B,IAAKzE,EAAGwE,IAAIiF,EAAIzJ,EAAG4F,KACf,MAAM,IAAI17C,MAAM,oBACpB,MAAO,CAAE8O,EAAGuwC,EAAItwC,EAAGuwC,EACvB,CACA,aAAArF,GACI,MAAQpnC,EAAG2sC,EAAQ,cAAEvF,GAAkBlB,EACvC,GAAIyG,IAAa,GACb,OAAO,EACX,GAAIvF,EACA,OAAOA,EAAcN,EAAOt4C,MAChC,MAAM,IAAIrB,MAAM,+DACpB,CACA,aAAAk6C,GACI,MAAQrnC,EAAG2sC,EAAQ,cAAEtF,GAAkBnB,EACvC,OAAIyG,IAAa,GACNn+C,KACP64C,EACOA,EAAcP,EAAOt4C,MACzBA,KAAK88C,eAAepF,EAAMlmC,EACrC,CACA,UAAA4sC,CAAWC,GAAe,GAEtB,OADAr+C,KAAK46C,iBACE7S,EAAQuQ,EAAOt4C,KAAMq+C,EAChC,CACA,KAAAxS,CAAMwS,GAAe,GACjB,OAAO,EAAcr+C,KAAKo+C,WAAWC,GACzC,EAEJ/F,EAAMyC,KAAO,IAAIzC,EAAMZ,EAAMjB,GAAIiB,EAAMhB,GAAIjC,EAAG4F,KAC9C/B,EAAMY,KAAO,IAAIZ,EAAM7D,EAAGyE,KAAMzE,EAAG4F,IAAK5F,EAAGyE,MAC3C,MAAMoF,EAAQ5G,EAAM7B,WACd8G,ED/eH,SAAc/7C,EAAGqQ,GACpB,MAAM2sC,EAAkB,CAACW,EAAWpM,KAChC,MAAMvrC,EAAMurC,EAAK2J,SACjB,OAAOyC,EAAY33C,EAAMurC,CAAI,EAE3B/V,EAAQoiB,IAGH,CAAEC,QAFOr9C,KAAKiB,KAAK4O,EAAOutC,GAAK,EAEpBtD,WADC,IAAMsD,EAAI,KAGjC,MAAO,CACHZ,kBAEA,YAAAZ,CAAa0B,EAAKnvC,GACd,IAAIT,EAAIlO,EAAEs4C,KACN7mB,EAAIqsB,EACR,KAAOnvC,EAAI,IACHA,EAAI,KACJT,EAAIA,EAAE9G,IAAIqqB,IACdA,EAAIA,EAAE0pB,SACNxsC,IAAM,GAEV,OAAOT,CACX,EAWA,gBAAA6vC,CAAiBD,EAAKF,GAClB,MAAM,QAAEC,EAAO,WAAEvD,GAAe9e,EAAKoiB,GAC/BjE,EAAS,GACf,IAAIzrC,EAAI4vC,EACJ7+C,EAAOiP,EACX,IAAK,IAAIvO,EAAS,EAAGA,EAASk+C,EAASl+C,IAAU,CAC7CV,EAAOiP,EACPyrC,EAAOn8C,KAAKyB,GAEZ,IAAK,IAAIxC,EAAI,EAAGA,EAAI69C,EAAY79C,IAC5BwC,EAAOA,EAAKmI,IAAI8G,GAChByrC,EAAOn8C,KAAKyB,GAEhBiP,EAAIjP,EAAKk8C,QACb,CACA,OAAOxB,CACX,EAQA,IAAAmC,CAAK8B,EAAGI,EAAarvC,GAGjB,MAAM,QAAEkvC,EAAO,WAAEvD,GAAe9e,EAAKoiB,GACrC,IAAI1vC,EAAIlO,EAAEs4C,KACNuE,EAAI78C,EAAEm6C,KACV,MAAMtpC,EAAO0Q,OAAO,GAAKq8B,EAAI,GACvBK,EAAY,GAAKL,EACjBM,EAAU38B,OAAOq8B,GACvB,IAAK,IAAIj+C,EAAS,EAAGA,EAASk+C,EAASl+C,IAAU,CAC7C,MAAMwd,EAASxd,EAAS26C,EAExB,IAAI6D,EAAQ/gC,OAAOzO,EAAIkC,GAEvBlC,IAAMuvC,EAGFC,EAAQ7D,IACR6D,GAASF,EACTtvC,GAAK,IAST,MAAMyvC,EAAUjhC,EACVkhC,EAAUlhC,EAAS3c,KAAKgF,IAAI24C,GAAS,EACrCG,EAAQ3+C,EAAS,GAAM,EACvB4+C,EAAQJ,EAAQ,EACR,IAAVA,EAEAtB,EAAIA,EAAEz1C,IAAI41C,EAAgBsB,EAAON,EAAYI,KAG7ClwC,EAAIA,EAAE9G,IAAI41C,EAAgBuB,EAAOP,EAAYK,IAErD,CAMA,MAAO,CAAEnwC,IAAG2uC,IAChB,EACA,UAAAb,CAAWjC,EAAGyE,EAAgB7vC,EAAGhB,GAE7B,MAAMiwC,EAAI7D,EAAEQ,cAAgB,EAE5B,IAAI0B,EAAOuC,EAAeh/B,IAAIu6B,GAO9B,OANKkC,IACDA,EAAO78C,KAAK2+C,iBAAiBhE,EAAG6D,GACtB,IAANA,GACAY,EAAev+B,IAAI85B,EAAGpsC,EAAUsuC,KAGjC78C,KAAK08C,KAAK8B,EAAG3B,EAAMttC,EAC9B,EAER,CCwXiBmtC,CAAKpE,EAAOZ,EAAMsB,KAAO53C,KAAKiB,KAAKi8C,EAAQ,GAAKA,GAE7D,MAAO,CACH5G,QACAW,gBAAiBC,EACjBC,yBACAC,sBACAC,qBAER,CA4ByG4G,CAAkB,IAChH3H,EACH,OAAA3P,CAAQuR,EAAIC,EAAO8E,GACf,MAAMr6C,EAAIu1C,EAAME,WACVhsC,EAAIgnC,EAAG1M,QAAQ/jC,EAAEyJ,GACjB6xC,EAAM,GACZ,OAAIjB,EACOiB,EAAI9gD,WAAW+b,KAAK,CAACg/B,EAAM8B,WAAa,EAAO,IAAQ5tC,GAGvD6xC,EAAI9gD,WAAW+b,KAAK,CAAC,IAAQ9M,EAAGgnC,EAAG1M,QAAQ/jC,EAAE0J,GAE5D,EACA,SAAAqrC,CAAUl3B,GACN,MAAMnkB,EAAMmkB,EAAM9jB,OACZs7B,EAAOxX,EAAM,GACbgiB,EAAOhiB,EAAMc,SAAS,GAE5B,GAAIjlB,IAAQs6C,GAA2B,IAAT3e,GAA0B,IAATA,EAoB1C,IAAI37B,IAAQu6C,GAA4B,IAAT5e,EAGhC,MAAO,CAAE5rB,EAFCgnC,EAAGsE,UAAUlV,EAAKlhB,SAAS,EAAG8xB,EAAG8B,QAE/B7oC,EADF+mC,EAAGsE,UAAUlV,EAAKlhB,SAAS8xB,EAAG8B,MAAO,EAAI9B,EAAG8B,SAItD,MAAM,IAAI53C,MAAM,mBAAmBjB,2BAA6Bs6C,yBAAqCC,uBACzG,CA3B+D,CAC3D,MAAMxqC,EAAI,GAAmBo2B,GAC7B,KA5BD,IADkB9kC,EA6BQ0O,IA5Bb1O,EAAM01C,EAAG4B,OA6BjB,MAAM,IAAI13C,MAAM,yBACpB,MAAM4gD,EAAK/G,EAAoB/qC,GAC/B,IAAIC,EACJ,IACIA,EAAI+mC,EAAG79B,KAAK2oC,EAChB,CACA,MAAOC,GACH,MAAMC,EAASD,aAAqB7gD,MAAQ,KAAO6gD,EAAUl4B,QAAU,GACvE,MAAM,IAAI3oB,MAAM,wBAA0B8gD,EAC9C,CAMA,QAHiC,GAAdpmB,MAFH3rB,EAAI,MAAS,MAIzBA,EAAI+mC,EAAG7tC,IAAI8G,IACR,CAAED,IAAGC,IAChB,CA9CR,IAA6B3O,CAuDzB,IAEE2gD,EAAiB3gD,GAAQ,EAAc,GAAmBA,EAAK24C,EAAM3B,cAC3E,SAAS4J,EAAsB//C,GAE3B,OAAOA,EADMu4C,GAAe,EAEhC,CAKA,MAAMyH,EAAS,CAACz+C,EAAGoZ,EAAMkrB,IAAO,GAAmBtkC,EAAE0Z,MAAMN,EAAMkrB,IAIjE,MAAMoa,EACF,WAAAngD,CAAYqB,EAAGyN,EAAGsxC,GACd9/C,KAAKe,EAAIA,EACTf,KAAKwO,EAAIA,EACTxO,KAAK8/C,SAAWA,EAChB9/C,KAAK46C,gBACT,CAEA,kBAAOmF,CAAYvZ,GACf,MAAM14B,EAAI4pC,EAAM3B,YAEhB,OADAvP,EAAM,GAAY,mBAAoBA,EAAS,EAAJ14B,GACpC,IAAI+xC,EAAUD,EAAOpZ,EAAK,EAAG14B,GAAI8xC,EAAOpZ,EAAK14B,EAAG,EAAIA,GAC/D,CAGA,cAAOkyC,CAAQxZ,GACX,MAAM,EAAEzlC,EAAC,EAAEyN,GAAMsoC,GAAIG,MAAM,GAAY,MAAOzQ,IAC9C,OAAO,IAAIqZ,EAAU9+C,EAAGyN,EAC5B,CACA,cAAAosC,GAEI,IAAKnC,EAAmBz4C,KAAKe,GACzB,MAAM,IAAIpC,MAAM,6BACpB,IAAK85C,EAAmBz4C,KAAKwO,GACzB,MAAM,IAAI7P,MAAM,4BACxB,CACA,cAAAshD,CAAeH,GACX,OAAO,IAAID,EAAU7/C,KAAKe,EAAGf,KAAKwO,EAAGsxC,EACzC,CACA,gBAAAI,CAAiBC,GACb,MAAM,EAAEp/C,EAAC,EAAEyN,EAAGsxC,SAAUM,GAAQpgD,KAC1BwR,EAAIqmC,EAAc,GAAY,UAAWsI,IAC/C,GAAW,MAAPC,IAAgB,CAAC,EAAG,EAAG,EAAG,GAAG3+B,SAAS2+B,GACtC,MAAM,IAAIzhD,MAAM,uBACpB,MAAM0hD,EAAe,IAARD,GAAqB,IAARA,EAAYr/C,EAAI22C,EAAMnoC,EAAIxO,EACpD,GAAIs/C,GAAQ5L,EAAG4B,MACX,MAAM,IAAI13C,MAAM,8BACpB,MAAM2hD,EAAgB,EAANF,EAAwB,KAAP,KAC3BhzB,EAAIkrB,EAAMoC,QAAQ4F,EAASZ,EAAcW,IACzCE,EAAKnI,EAAKiI,GACVG,EAAKtI,GAAM1mC,EAAI+uC,GACfE,EAAKvI,EAAK1pC,EAAI+xC,GACdzC,EAAIxF,EAAMyC,KAAK8C,qBAAqBzwB,EAAGozB,EAAIC,GACjD,IAAK3C,EACD,MAAM,IAAIn/C,MAAM,qBAEpB,OADAm/C,EAAElD,iBACKkD,CACX,CAEA,QAAA4C,GACI,OAAOf,EAAsB3/C,KAAKwO,EACtC,CACA,UAAAmyC,GACI,OAAO3gD,KAAK0gD,WAAa,IAAIb,EAAU7/C,KAAKe,EAAGm3C,GAAMl4C,KAAKwO,GAAIxO,KAAK8/C,UAAY9/C,IACnF,CAEA,aAAA4gD,GACI,OAAO,GAAc5gD,KAAK6gD,WAC9B,CACA,QAAAA,GACI,OAAO/J,GAAIM,WAAW,CAAEr2C,EAAGf,KAAKe,EAAGyN,EAAGxO,KAAKwO,GAC/C,CAEA,iBAAAsyC,GACI,OAAO,GAAc9gD,KAAK+gD,eAC9B,CACA,YAAAA,GACI,OAAOrB,EAAc1/C,KAAKe,GAAK2+C,EAAc1/C,KAAKwO,EACtD,EAEJ,MAAMwyC,EAAQ,CACV,iBAAAC,CAAkBnG,GACd,IAEI,OADAvC,EAAuBuC,IAChB,CACX,CACA,MAAO76B,GACH,OAAO,CACX,CACJ,EACAs4B,uBAAwBA,EAKxB2I,iBAAkB,KACd,MAAMnjD,EAAS,GAAqB25C,EAAMnoC,GAC1C,OFtSL,SAAwB0d,EAAKgpB,EAAYnkB,GAAO,GACnD,MAAMp0B,EAAMuvB,EAAIlvB,OACVojD,EAAWnL,GAAoBC,GAC/BmL,EAASlL,GAAiBD,GAEhC,GAAIv4C,EAAM,IAAMA,EAAM0jD,GAAU1jD,EAAM,KAClC,MAAM,IAAIiB,MAAM,YAAYyiD,8BAAmC1jD,KACnE,MAEM2jD,EAAU,GAFJvvB,EAAO,GAAgB7E,GAAO,GAAgBA,GAEjCgpB,EAAa,IAAO,GAC7C,OAAOnkB,EAAOohB,GAAgBmO,EAASF,GAAY,GAAgBE,EAASF,EAChF,CE2RmB,CAAmBzJ,EAAMC,YAAY55C,GAAS25C,EAAMnoC,EAAE,EAUjE+xC,WAAU,CAACpG,EAAa,EAAG3B,EAAQjB,EAAMyC,QACrCxB,EAAM0B,eAAeC,GACrB3B,EAAMyB,SAAS74B,OAAO,IACfo3B,IAef,SAASgI,EAAUpP,GACf,MAAM70C,EAAM,EAAW60C,GACjBlxC,EAAsB,iBAATkxC,EACbz0C,GAAOJ,GAAO2D,IAAQkxC,EAAKp0C,OACjC,OAAIT,EACOI,IAAQs6C,GAAiBt6C,IAAQu6C,EACxCh3C,EACOvD,IAAQ,EAAIs6C,GAAiBt6C,IAAQ,EAAIu6C,EAChD9F,aAAgBmG,CAGxB,CAuBA,MAAMV,EAAWF,EAAME,UACnB,SAAU/1B,GAGN,MAAM9iB,EAAM,GAAmB8iB,GACzBrN,EAAuB,EAAfqN,EAAM9jB,OAAa25C,EAAM7B,WACvC,OAAOrhC,EAAQ,EAAIzV,GAAOojB,OAAO3N,GAASzV,CAC9C,EACE84C,EAAgBH,EAAMG,eACxB,SAAUh2B,GACN,OAAOq2B,EAAKN,EAAS/1B,GACzB,EAEE2/B,EAAa,GAAW9J,EAAM7B,YAIpC,SAAS4L,EAAW1iD,GAChB,GAAmB,iBAARA,EACP,MAAM,IAAIJ,MAAM,mBACpB,KAAM,IAAOI,GAAOA,EAAMyiD,GACtB,MAAM,IAAI7iD,MAAM,uBAAuB+4C,EAAM7B,cAEjD,OAAO,GAAmB92C,EAAK24C,EAAM3B,YACzC,CAyDA,MAAM2L,EAAiB,CAAE5J,KAAMJ,EAAMI,KAAM6J,SAAS,GAC9CC,EAAiB,CAAE9J,KAAMJ,EAAMI,KAAM6J,SAAS,GAuFpD,OAlEArJ,EAAMyC,KAAKE,eAAe,GAkEnB,CACHvD,QACAmK,aAnNJ,SAAsB/G,EAAYuD,GAAe,GAC7C,OAAO/F,EAAMuC,eAAeC,GAAYsD,WAAWC,EACvD,EAkNIyD,gBAxLJ,SAAyBC,EAAUC,EAAS3D,GAAe,GACvD,GAAIkD,EAAUQ,GACV,MAAM,IAAIpjD,MAAM,iCACpB,IAAK4iD,EAAUS,GACX,MAAM,IAAIrjD,MAAM,iCAEpB,OADU25C,EAAMoC,QAAQsH,GACfhH,SAASzC,EAAuBwJ,IAAW3D,WAAWC,EACnE,EAkLI4D,KA7EJ,SAAc9B,EAAS+B,EAAS9lB,EAAOslB,GACnC,MAAM,KAAE3N,EAAI,MAAEoO,GAnElB,SAAiBhC,EAASrF,EAAY1e,EAAOslB,GACzC,GAAI,CAAC,YAAa,aAAaU,MAAMj+C,GAAMA,KAAKi4B,IAC5C,MAAM,IAAIz9B,MAAM,uCACpB,MAAM,KAAEuuB,EAAI,YAAEyqB,GAAgBD,EAC9B,IAAI,KAAEI,EAAI,QAAE6J,EAASU,aAAcC,GAAQlmB,EAC/B,MAAR0b,IACAA,GAAO,GACXqI,EAAU,GAAY,UAAWA,GAC7BwB,IACAxB,EAAU,GAAY,oBAAqBjzB,EAAKizB,KAIpD,MAAMoC,EAAQ1K,EAAcsI,GACtB9tB,EAAIkmB,EAAuBuC,GAC3B0H,EAAW,CAACf,EAAWpvB,GAAIovB,EAAWc,IAE5C,GAAW,MAAPD,IAAuB,IAARA,EAAe,CAE9B,MAAM9hD,GAAY,IAAR8hD,EAAe3K,EAAYlD,EAAG8B,OAAS+L,EACjDE,EAASpkD,KAAK,GAAY,eAAgBoC,GAC9C,CACA,MAAMuzC,EAAO,MAAkByO,GACzBhzC,EAAI+yC,EA0BV,MAAO,CAAExO,OAAMoO,MAxBf,SAAeM,GAEX,MAAMt+C,EAAIyzC,EAAS6K,GACnB,IAAKhK,EAAmBt0C,GACpB,OACJ,MAAMu+C,EAAKtK,EAAKj0C,GACV4M,EAAIunC,EAAMyC,KAAKC,SAAS72C,GAAGs1C,WAC3B14C,EAAIm3C,EAAKnnC,EAAEtD,GACjB,GAAI1M,IAAM,GACN,OAIJ,MAAMyN,EAAI0pC,EAAKwK,EAAKxK,EAAK1oC,EAAIzO,EAAIsxB,IACjC,GAAI7jB,IAAM,GACN,OACJ,IAAIsxC,GAAY/uC,EAAEtD,IAAM1M,EAAI,EAAI,GAAKid,OAAOjN,EAAErD,EAAI,IAC9Ci1C,EAAQn0C,EAKZ,OAJIspC,GAAQ6H,EAAsBnxC,KAC9Bm0C,EAvOZ,SAAoBn0C,GAChB,OAAOmxC,EAAsBnxC,GAAK0pC,GAAM1pC,GAAKA,CACjD,CAqOoBmyC,CAAWnyC,GACnBsxC,GAAY,GAET,IAAID,EAAU9+C,EAAG4hD,EAAO7C,EACnC,EAEJ,CAiB4B8C,CAAQzC,EAAS+B,EAAS9lB,GAC5CzoB,EAAI+jC,EAEV,OADa,GAAkB/jC,EAAEuZ,KAAKyhB,UAAWh7B,EAAEoiC,YAAapiC,EAAEo+B,KAC3D8Q,CAAK9O,EAAMoO,EACtB,EAyEIW,OAxDJ,SAAgBC,EAAW5C,EAAS6C,EAAW5mB,EAAOwlB,GAClD,MAAMqB,EAAKF,EAGX,GAFA5C,EAAU,GAAY,UAAWA,GACjC6C,EAAY,GAAY,YAAaA,GACjC,WAAY5mB,EACZ,MAAM,IAAIz9B,MAAM,sCACpB,MAAM,KAAEm5C,EAAI,QAAE6J,GAAYvlB,EAC1B,IAAI8mB,EACAvI,EACJ,IACI,GAAkB,iBAAPsI,GAAmB,EAAWA,GAGrC,IACIC,EAAOrD,EAAUG,QAAQiD,EAC7B,CACA,MAAOE,GACH,KAAMA,aAAoBrM,GAAIC,KAC1B,MAAMoM,EACVD,EAAOrD,EAAUE,YAAYkD,EACjC,KAEC,IAAkB,iBAAPA,GAAmC,iBAATA,EAAGliD,GAAkC,iBAATkiD,EAAGz0C,EAKrE,MAAM,IAAI7P,MAAM,SALqE,CACrF,MAAM,EAAEoC,EAAC,EAAEyN,GAAMy0C,EACjBC,EAAO,IAAIrD,EAAU9+C,EAAGyN,EAC5B,CAGA,CACAmsC,EAAIrC,EAAMoC,QAAQsI,EACtB,CACA,MAAO/iC,GACH,GAAsB,UAAlBA,EAAMqH,QACN,MAAM,IAAI3oB,MAAM,kEACpB,OAAO,CACX,CACA,GAAIm5C,GAAQoL,EAAKxC,WACb,OAAO,EACPiB,IACAxB,EAAUzI,EAAMxqB,KAAKizB,IACzB,MAAM,EAAEp/C,EAAC,EAAEyN,GAAM00C,EACX1xC,EAAIqmC,EAAcsI,GAClBiD,EAAKhL,EAAK5pC,GACVgyC,EAAKtI,EAAK1mC,EAAI4xC,GACd3C,EAAKvI,EAAKn3C,EAAIqiD,GACdh2B,EAAIkrB,EAAMyC,KAAK8C,qBAAqBlD,EAAG6F,EAAIC,IAAKhH,WACtD,QAAKrsB,GAEK8qB,EAAK9qB,EAAE3f,KACJ1M,CACjB,EAOIs3C,gBAAiBC,EACjBuH,YACAmB,QAER,CCr6BO,SAASqC,GAAQn2B,GACpB,MAAO,CACHA,OACA6kB,KAAM,CAAC9kB,KAAQq2B,IAASvR,EAAK7kB,EAAMD,ERoHpC,YAAwBya,GAC3B,IAAI2L,EAAM,EACV,IAAK,IAAIh2C,EAAI,EAAGA,EAAIqqC,EAAO3pC,OAAQV,IAAK,CACpC,MAAM2G,EAAI0jC,EAAOrqC,GACjB,EAAO2G,GACPqvC,GAAOrvC,EAAEjG,MACb,CACA,MAAMqH,EAAM,IAAI5G,WAAW60C,GAC3B,IAAK,IAAIh2C,EAAI,EAAGuqC,EAAM,EAAGvqC,EAAIqqC,EAAO3pC,OAAQV,IAAK,CAC7C,MAAM2G,EAAI0jC,EAAOrqC,GACjB+H,EAAIyb,IAAI7c,EAAG4jC,GACXA,GAAO5jC,EAAEjG,MACb,CACA,OAAOqH,CACX,CQlIgD,IAAek+C,IACvD3L,YAAW,EAEnB,CDmFgFx1B,OAAO,GEtFvF,MAAMohC,GAAaphC,OAAO,sEACpBqhC,GAAarhC,OAAO,sEACpB,GAAMA,OAAO,GACb,GAAMA,OAAO,GACbshC,GAAa,CAACz/C,EAAG7C,KAAO6C,EAAI7C,EAAI,IAAOA,EA6B7C,MAAMszC,GJyPC,SAAe4B,EAAOqN,EAAQ5xB,GAAO,EAAO6xB,EAAQ,CAAC,GACxD,GAAItN,GAAS,GACT,MAAM,IAAI13C,MAAM,iCAAiC03C,KACrD,MAAQR,WAAYW,EAAMT,YAAaQ,GAAUX,GAAQS,EAAOqN,GAChE,GAAInN,EAAQ,KACR,MAAM,IAAI53C,MAAM,mDACpB,MAAMilD,EAnKH,SAAgBjJ,GAKnB,GAAIA,EAAIvF,KAAQD,GAAK,CAKjB,MAAM0O,GAAUlJ,EAAI,IAAOvF,GAC3B,OAAO,SAAmBX,EAAIllC,GAC1B,MAAMjT,EAAOm4C,EAAGxxC,IAAIsM,EAAGs0C,GAEvB,IAAKpP,EAAGwE,IAAIxE,EAAG7jC,IAAItU,GAAOiT,GACtB,MAAM,IAAI5Q,MAAM,2BACpB,OAAOrC,CACX,CACJ,CAEA,GAAIq+C,EAAIrF,KAAQD,GAAK,CACjB,MAAMyO,GAAMnJ,EAAItF,IAAOC,GACvB,OAAO,SAAmBb,EAAIllC,GAC1B,MAAMyjC,EAAKyB,EAAGvzC,IAAIqO,EAAG,IACfwb,EAAI0pB,EAAGxxC,IAAI+vC,EAAI8Q,GACfC,EAAKtP,EAAGvzC,IAAIqO,EAAGwb,GACf1tB,EAAIo3C,EAAGvzC,IAAIuzC,EAAGvzC,IAAI6iD,EAAI,IAAMh5B,GAC5BzuB,EAAOm4C,EAAGvzC,IAAI6iD,EAAItP,EAAGxsC,IAAI5K,EAAGo3C,EAAG4F,MACrC,IAAK5F,EAAGwE,IAAIxE,EAAG7jC,IAAItU,GAAOiT,GACtB,MAAM,IAAI5Q,MAAM,2BACpB,OAAOrC,CACX,CACJ,CAwBA,OAhHG,SAAuBq+C,GAM1B,MAAMqJ,GAAarJ,EAAI,IAAO,GAC9B,IAAImD,EAAGmG,EAAGC,EAGV,IAAKpG,EAAInD,EAAI,GAAKsJ,EAAI,EAAGnG,EAAI,KAAQ,GAAKA,GAAK,GAAKmG,KAGpD,IAAKC,EAAI,GAAKA,EAAIvJ,GAAK13C,GAAIihD,EAAGF,EAAWrJ,KAAOA,EAAI,GAAKuJ,KAGzD,GAAU,IAAND,EAAS,CACT,MAAMJ,GAAUlJ,EAAI,IAAOvF,GAC3B,OAAO,SAAqBX,EAAIllC,GAC5B,MAAMjT,EAAOm4C,EAAGxxC,IAAIsM,EAAGs0C,GACvB,IAAKpP,EAAGwE,IAAIxE,EAAG7jC,IAAItU,GAAOiT,GACtB,MAAM,IAAI5Q,MAAM,2BACpB,OAAOrC,CACX,CACJ,CAEA,MAAM6nD,GAAUrG,EAAI,IAAO,GAC3B,OAAO,SAAqBrJ,EAAIllC,GAE5B,GAAIklC,EAAGxxC,IAAIsM,EAAGy0C,KAAevP,EAAG7tC,IAAI6tC,EAAG4F,KACnC,MAAM,IAAI17C,MAAM,2BACpB,IAAIoC,EAAIkjD,EAEJpwC,EAAI4gC,EAAGxxC,IAAIwxC,EAAGvzC,IAAIuzC,EAAG4F,IAAK6J,GAAIpG,GAC9BrwC,EAAIgnC,EAAGxxC,IAAIsM,EAAG40C,GACdhjD,EAAIszC,EAAGxxC,IAAIsM,EAAGuuC,GAClB,MAAQrJ,EAAGwE,IAAI93C,EAAGszC,EAAG4F,MAAM,CACvB,GAAI5F,EAAGwE,IAAI93C,EAAGszC,EAAGyE,MACb,OAAOzE,EAAGyE,KAEd,IAAI1pC,EAAI,EACR,IAAK,IAAI6sC,EAAK5H,EAAG7jC,IAAIzP,GAAIqO,EAAIzO,IACrB0zC,EAAGwE,IAAIoD,EAAI5H,EAAG4F,KADU7qC,IAG5B6sC,EAAK5H,EAAG7jC,IAAIyrC,GAGhB,MAAM+H,EAAK3P,EAAGxxC,IAAI4Q,EAAG,IAAOsO,OAAOphB,EAAIyO,EAAI,IAC3CqE,EAAI4gC,EAAG7jC,IAAIwzC,GACX32C,EAAIgnC,EAAGvzC,IAAIuM,EAAG22C,GACdjjD,EAAIszC,EAAGvzC,IAAIC,EAAG0S,GACd9S,EAAIyO,CACR,CACA,OAAO/B,CACX,CACJ,CAyDW42C,CAAc1J,EACzB,CA0GkB2J,CAAOjO,GACfoH,EAAIvjC,OAAOy8B,OAAO,CACpBN,QACAG,OACAD,QACAD,KAAMhD,GAAQkD,GACd0C,KAAM,GACNmB,IAAK,GACL5qB,OAAS1wB,GAAQ,GAAIA,EAAKs3C,GAC1B3B,QAAU31C,IACN,GAAmB,iBAARA,EACP,MAAM,IAAIJ,MAAM,sDAAsDI,GAC1E,OAAO,IAAOA,GAAOA,EAAMs3C,CAAK,EAEpC+D,IAAMr7C,GAAQA,IAAQ,GACtBmV,MAAQnV,IAASA,EAAM,MAAS,GAChC6H,IAAM7H,GAAQ,IAAKA,EAAKs3C,GACxB4C,IAAK,CAACsL,EAAKC,IAAQD,IAAQC,EAC3B5zC,IAAM7R,GAAQ,GAAIA,EAAMA,EAAKs3C,GAC7BruC,IAAK,CAACu8C,EAAKC,IAAQ,GAAID,EAAMC,EAAKnO,GAClCpuC,IAAK,CAACs8C,EAAKC,IAAQ,GAAID,EAAMC,EAAKnO,GAClCn1C,IAAK,CAACqjD,EAAKC,IAAQ,GAAID,EAAMC,EAAKnO,GAClCpzC,IAAK,CAAClE,EAAKw2C,IArGZ,SAAekI,EAAG1+C,EAAKw2C,GAG1B,GAAIA,EAAQ,GACR,MAAM,IAAI52C,MAAM,sBACpB,GAAI42C,IAAU,GACV,OAAOkI,EAAEpD,IACb,GAAI9E,IAAU,GACV,OAAOx2C,EACX,IAAI+P,EAAI2uC,EAAEpD,IACNhoB,EAAItzB,EACR,KAAOw2C,EAAQ,IACPA,EAAQ,KACRzmC,EAAI2uC,EAAEv8C,IAAI4N,EAAGujB,IACjBA,EAAIorB,EAAE7sC,IAAIyhB,GACVkjB,IAAU,GAEd,OAAOzmC,CACX,CAmF6B21C,CAAMhH,EAAG1+C,EAAKw2C,GACnC3iC,IAAK,CAAC2xC,EAAKC,IAAQ,GAAID,EAAM7O,GAAO8O,EAAKnO,GAAQA,GAEjDqO,KAAO3lD,GAAQA,EAAMA,EACrB4lD,KAAM,CAACJ,EAAKC,IAAQD,EAAMC,EAC1BI,KAAM,CAACL,EAAKC,IAAQD,EAAMC,EAC1BK,KAAM,CAACN,EAAKC,IAAQD,EAAMC,EAC1BtrC,IAAMna,GAAQ22C,GAAO32C,EAAKs3C,GAC1Bz/B,KAAM+sC,EAAM/sC,MAAQ,CAAErH,GAAMq0C,EAAMnG,EAAGluC,IACrCkrC,YAAcqK,GAvFf,SAAuBrH,EAAGsH,GAC7B,MAAM3nD,EAAM,IAAIqB,MAAMsmD,EAAKhnD,QAErBinD,EAAiBD,EAAKhf,QAAO,CAACzyB,EAAKvU,EAAK1B,IACtCogD,EAAErD,IAAIr7C,GACCuU,GACXlW,EAAIC,GAAKiW,EACFmqC,EAAEv8C,IAAIoS,EAAKvU,KACnB0+C,EAAEpD,KAEC4K,EAAWxH,EAAEvkC,IAAI8rC,GAQvB,OANAD,EAAKG,aAAY,CAAC5xC,EAAKvU,EAAK1B,IACpBogD,EAAErD,IAAIr7C,GACCuU,GACXlW,EAAIC,GAAKogD,EAAEv8C,IAAIoS,EAAKlW,EAAIC,IACjBogD,EAAEv8C,IAAIoS,EAAKvU,KACnBkmD,GACI7nD,CACX,CAoE8B+nD,CAAc1H,EAAGqH,GAGvCM,KAAM,CAACphD,EAAG7C,EAAGP,IAAOA,EAAIO,EAAI6C,EAC5B+jC,QAAUhpC,GAAS+yB,EAAOohB,GAAgBn0C,EAAKw3C,GAAS,GAAgBx3C,EAAKw3C,GAC7EwC,UAAYl3B,IACR,GAAIA,EAAM9jB,SAAWw4C,EACjB,MAAM,IAAI53C,MAAM,0BAA0B43C,UAAc10B,EAAM9jB,UAClE,OAAO+zB,EAAO,GAAgBjQ,GAAS,GAAgBA,EAAM,IAGrE,OAAO3H,OAAOy8B,OAAO8G,EACzB,CI1SW4H,CAAM9B,QAAYhrC,OAAWA,EAAW,CAAE3B,KAxBrD,SAAiBlJ,GACb,MAAMitC,EAAI4I,GAEJpO,EAAMhzB,OAAO,GAAImjC,EAAMnjC,OAAO,GAAIojC,EAAOpjC,OAAO,IAAKqjC,EAAOrjC,OAAO,IAEnEsjC,EAAOtjC,OAAO,IAAKujC,EAAOvjC,OAAO,IAAKwjC,EAAOxjC,OAAO,IACpD1X,EAAMiD,EAAIA,EAAIA,EAAKitC,EACnB/vC,EAAMH,EAAKA,EAAKiD,EAAKitC,EACrBtvC,EAAMoqC,GAAK7qC,EAAIuqC,EAAKwF,GAAK/vC,EAAM+vC,EAC/B7uC,EAAM2pC,GAAKpqC,EAAI8pC,EAAKwF,GAAK/vC,EAAM+vC,EAC/BiL,EAAOnQ,GAAK3pC,EAAI,GAAK6uC,GAAKlwC,EAAMkwC,EAChCkL,EAAOpQ,GAAKmQ,EAAKL,EAAM5K,GAAKiL,EAAOjL,EACnCmL,EAAOrQ,GAAKoQ,EAAKL,EAAM7K,GAAKkL,EAAOlL,EACnCoL,EAAOtQ,GAAKqQ,EAAKJ,EAAM/K,GAAKmL,EAAOnL,EACnCqL,EAAQvQ,GAAKsQ,EAAKJ,EAAMhL,GAAKoL,EAAOpL,EACpCsL,EAAQxQ,GAAKuQ,EAAMN,EAAM/K,GAAKmL,EAAOnL,EACrCuL,EAAQzQ,GAAKwQ,EAAM9Q,EAAKwF,GAAK/vC,EAAM+vC,EACnCyB,EAAM3G,GAAKyQ,EAAMT,EAAM9K,GAAKkL,EAAOlL,EACnC0B,EAAM5G,GAAK2G,EAAIkJ,EAAK3K,GAAKlwC,EAAMkwC,EAC/Br+C,EAAOm5C,GAAK4G,EAAI,GAAK1B,GAC3B,IAAKlG,GAAGwE,IAAIxE,GAAG7jC,IAAItU,GAAOoR,GACtB,MAAM,IAAI/O,MAAM,2BACpB,OAAOrC,CACX,IAEa,GD9BN,SAAqBm7C,EAAU0O,GAClC,MAAM12B,EAAUvC,GAASsqB,GAAY,IAAKC,KAAa4L,GAAQn2B,KAC/D,OAAOhT,OAAOy8B,OAAO,IAAKlnB,EAAO02B,GAAU12B,UAC/C,CC2ByB22B,CAAY,CACjCpiD,EAAGme,OAAO,GACVhhB,EAAGghB,OAAO,GACVsyB,MACAllC,EAAGi0C,GAEH/M,GAAIt0B,OAAO,iFACXu0B,GAAIv0B,OAAO,iFACX3Q,EAAG2Q,OAAO,GACV21B,MAAM,EAONkB,KAAM,CACFG,KAAMh3B,OAAO,sEACbi3B,YAAcj1C,IACV,MAAMoL,EAAIi0C,GACJh7C,EAAK2Z,OAAO,sCACZ7X,GAAM,GAAM6X,OAAO,sCACnBxZ,EAAKwZ,OAAO,uCACZ1X,EAAKjC,EACL69C,EAAYlkC,OAAO,uCACnB2hC,EAAKL,GAAWh5C,EAAKtG,EAAGoL,GACxB+2C,EAAK7C,IAAYn5C,EAAKnG,EAAGoL,GAC/B,IAAI2tC,EAAK,GAAI/4C,EAAI2/C,EAAKt7C,EAAK89C,EAAK39C,EAAI4G,GAChC6tC,EAAK,IAAK0G,EAAKx5C,EAAKg8C,EAAK77C,EAAI8E,GACjC,MAAM0tC,EAAQC,EAAKmJ,EACblJ,EAAQC,EAAKiJ,EAKnB,GAJIpJ,IACAC,EAAK3tC,EAAI2tC,GACTC,IACAC,EAAK7tC,EAAI6tC,GACTF,EAAKmJ,GAAajJ,EAAKiJ,EACvB,MAAM,IAAI1nD,MAAM,uCAAyCwF,GAE7D,MAAO,CAAE84C,QAAOC,KAAIC,QAAOC,KAAI,IAGxC,GC5EI,SAASmJ,GAAYxqC,GACxB,KAAMA,aAAgBvd,YAClB,MAAM,IAAI8b,UAAU,+CAA+CyB,GAEvE,OAAO,IAAIyqC,aAAcne,OAAOtsB,EACpC,CAMO,SAAS,GAAY/X,EAAG7C,GAC3B,GAAI6C,EAAEjG,SAAWoD,EAAEpD,OACf,OAAO,EAEX,IAAK,IAAIV,EAAI,EAAGA,EAAI2G,EAAEjG,OAAQV,IAC1B,GAAI2G,EAAE3G,KAAO8D,EAAE9D,GACX,OAAO,EAGf,OAAO,CACX,CAEO,SAASopD,GAASv5B,GACrB,OAAQ/tB,IACJ,QAAaA,GACN+tB,EAAK/tB,GAEpB,CCLO,SAAS,GAAc8B,GAC1B,GAAmB,iBAARA,EACP,MAAM,IAAItC,MAAM,qEAAqEsC,GAEzF,MAAkB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,EACjC,CFmDYkhB,OAAO,GAmBL,GAAUk2B,gBCvGL,OACC,QAkCE,MAClB,MAAMqO,EAAkC,iBAAfnc,YAA2B,WAAYA,WAAaA,WAAWyE,YAASz2B,EAC3FouC,EAAgC,oBAAXlqD,QACG,mBAAnBA,OAAOmqD,SACdnqD,OAAOmqD,QAAQz2B,KAAK1zB,QAEdkqD,IAAgBD,GAAYC,EAAY,SAGrD,EATqB,GCcf,SAASE,GAAUrsC,GACtB,IAAIxW,EAAIwW,EACR,GAAiB,iBAANxW,EACP,MAAM,IAAIrF,MAAM,4DAA4DqF,GAIhF,OAFIA,EAAEjG,OAAS,IACXiG,EAAI,IAAIA,KACLA,CACX,CAiHO,SAAS,GAAYwW,EAAOzc,GAC/B,QAAqB,iBAAVyc,IAAuBA,EAAM0O,MAAM,0BAExB,IAAXnrB,GAA0BA,EAAS,GAAKyc,EAAMzc,SAAW,EAAI,EAAIA,EAGhF,CC7KO,MAUM,GAAgB,SAAU0a,GACnC,KAAMA,aAAiBja,YAEnB,MAAM,IAAIG,MADE,uDAAuD8Z,IAG3E,ECfM,GAAW0J,OAAO,GAIX,GAAuB,EAE9B2kC,GAAwB,CAAC,EACzBC,GAAyB,CAAC,EAChC,IAAK,IAAI1pD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAM2pD,EAAa3pD,EACb4pD,EAAgB,GAAJ5pD,EACZ4vB,EAAM5vB,EAAE2E,SAAS,IAAIya,cAC3BsqC,GAAuB95B,GAAO+5B,EAC9BD,GAAuB95B,EAAIi6B,eAAiBF,EAC5CF,GAAsB75B,GAAOg6B,EAC7BH,GAAsB75B,EAAIi6B,eAAiBD,CAC/C,CAMA,SAASE,GAAsB3gB,GAC3B,MAAM4gB,EAAU5gB,EAAIzoC,OACd8jB,EAAQ,IAAIrjB,WAAW4oD,EAAU,GACvC,IAAK,IAAI/pD,EAAI,EAAGA,EAAI+pD,EAAS/pD,GAAK,EAC9BwkB,EAAMxkB,EAAI,GAAKypD,GAAsBtgB,EAAInpC,IAAM0pD,GAAuBvgB,EAAInpC,EAAI,IAElF,OAAOwkB,CACX,CAIO,MAAM,GAAwBwlC,IACjC,GAAwB,OAApBA,EAAIxsC,MAAM,EAAG,GACb,MAAM,IAAIlc,MAAM,wDAGhB,OAAOwoD,GAAsBN,GAAUQ,GAC3C,EAIEC,GAAY7oD,MAAM8b,KAAK,CAAExc,OAAQ,MAAO,CAACgtB,EAAG1tB,IAAMA,EAAE2E,SAAS,IAAIslC,SAAS,EAAG,OACtE,GAAczlB,IACvB,IAAI2kB,EAAM,KACV,QAAcjuB,IAAVsJ,GAAwC,IAAjBA,EAAM9jB,OAC7B,OAAOyoC,EACX,IAAK,MAAMgB,KAAQ3lB,EACf2kB,GAAO8gB,GAAU9f,GAErB,OAAOhB,CAAG,EAGR+gB,GAAe,GACrB,IAAK,IAAIlqD,EAAI,EAAGA,GAAK,MAAeA,IAChCkqD,GAAalqD,GAAK8kB,OAAO9kB,GAOtB,MAAM,GAAgB,CAACwkB,EAAOU,GAAe,KAC5CA,GACAV,EAAMoxB,UAEV,MAAMzM,EAAM,GAAW3kB,GACvB,MAAY,OAAR2kB,EACO,GAEQ,IAAfA,EAAIzoC,OAEGwpD,GAAa1lC,EAAM,IAEX,IAAf2kB,EAAIzoC,OACGwpD,GAAwB,IAAX1lC,EAAM,GAAWA,EAAM,IAExCM,OAAOqkB,EAAI,EAcT,GAAcA,IACvB,GAAmB,iBAARA,EACP,MAAM,IAAI7nC,MAAM,4BAA4B6nC,4BAEhD,IAAK,mBAAmB1Z,KAAK0Z,GACzB,MAAM,IAAI7nC,MAAM,uDAAuD6nC,KAM3E,OAJAA,EAAMA,EAAI3rB,MAAM,IACR9c,OAAS,GAAM,IACnByoC,EAAMqgB,GAAUrgB,IAEb2gB,GAAsB3gB,EAAI,EAQxBghB,GAAYnqD,IACrB,IAAK2gB,OAAOywB,cAAcpxC,IAAMA,EAAI,EAChC,MAAM,IAAIsB,MAAM,qCAAqCtB,KAEzD,MAAO,KAAKA,EAAE2E,SAAS,KAAK,EAOnBylD,GAAcpqD,IACvB,MAAMmpC,EAAMghB,GAASnqD,GACrB,OAAO,GAAWmpC,EAAI,EAObkhB,GAAgB,CAAC3oD,EAAKwjB,GAAe,KAE9C,MAAMV,EAAQ,GAAQ,KAAOglC,GAAU9nD,EAAIiD,SAAS,MACpD,OAAOugB,EAAeV,EAAMoxB,UAAYpxB,CAAK,EAOpC,GAASA,GACX,IAAIrjB,WAAWqjB,GA+Bb,GAAgB,CAAC1iB,EAAKpB,KAC/B,GAAcoB,GAtBA,EAACA,EAAKpB,EAAQ6D,IACxBA,EACIzC,EAAIpB,OAASA,EACN,IAAIS,WAAW,IAAIW,KAAQ,GAAMpB,EAASoB,EAAIpB,UAElDoB,EAAIwjB,SAAS,EAAG5kB,GAGnBoB,EAAIpB,OAASA,EACN,IAAIS,WAAW,IAAI,GAAMT,EAASoB,EAAIpB,WAAYoB,IAEtDA,EAAIwjB,UAAU5kB,GAYlB4pD,CAAUxoD,EAAKpB,GAAQ,IA+BrB,GAAciG,IACvB,GAAcA,GAdC,CAACA,IAChB,IAAI4f,EAAQ5f,EAAE,GACd,KAAOA,EAAEjG,OAAS,GAA0B,MAArB6lB,EAAM5hB,YAEzB4hB,GADA5f,EAAIA,EAAE6W,MAAM,IACF,GAEd,OAAO7W,CAAC,EASD4jD,CAAW5jD,IA4BT,GAAW+mB,IACpB,GAAIA,QACA,OAAO,IAAIvsB,WAEf,GAAIC,MAAMgD,QAAQspB,IAAMA,aAAavsB,WACjC,OAAOA,WAAW+b,KAAKwQ,GAE3B,GAAiB,iBAANA,EAAgB,CACvB,IAAK,GAAYA,GACb,MAAM,IAAIpsB,MAAM,iHAAiHosB,KAErI,OAAO,GAAWA,EACtB,CACA,GAAiB,iBAANA,EACP,OAAO08B,GAAW18B,GAEtB,GAAiB,iBAANA,EAAgB,CACvB,GAAIA,EAAI,GACJ,MAAM,IAAIpsB,MAAM,wDAAwDosB,KAE5E,IAAIxb,EAAIwb,EAAE/oB,SAAS,IAGnB,OAFIuN,EAAExR,OAAS,IACXwR,EAAI,IAAMA,GACP,GAAqBA,EAChC,CACA,QAAkBgJ,IAAdwS,EAAEgd,QAEF,OAAOhd,EAAEgd,UAEb,MAAM,IAAIppC,MAAM,eAAe,EA6DtBkpD,GAA2B3Z,IACpC,IAAK,MAAO/pC,EAAG4mB,KAAM7Q,OAAOg7B,QAAQhH,GAChC,QAAU31B,IAANwS,GAAmBA,EAAEhtB,OAAS,GAAc,IAATgtB,EAAE,GACrC,MAAM,IAAIpsB,MAAM,GAAGwF,2CAA2C,GAAW4mB,KAEjF,EAOS,GAAehsB,GACjB,KAAOA,EAAIiD,SAAS,IAkBlB,GAAyBwY,GAC3B,GAAWktC,GAAcltC,IA0CvB,GAAc,IAAIktB,KAC3B,GAAsB,IAAlBA,EAAO3pC,OACP,OAAO2pC,EAAO,GAClB,MAAM3pC,EAAS2pC,EAAO3B,QAAO,CAAC/hC,EAAG1G,IAAQ0G,EAAI1G,EAAIS,QAAQ,GACnD4pC,EAAS,IAAInpC,WAAWT,GAC9B,IAAK,IAAIV,EAAI,EAAGuqC,EAAM,EAAGvqC,EAAIqqC,EAAO3pC,OAAQV,IAAK,CAC7C,MAAMC,EAAMoqC,EAAOrqC,GACnBsqC,EAAO9mB,IAAIvjB,EAAKsqC,GAChBA,GAAOtqC,EAAIS,MACf,CACA,OAAO4pC,CAAM,EC1ZJmgB,GAAa3lC,OAAO,sBAIpB4lC,GAAc5lC,OAAO,sEAQrB,IAFqBA,OAAO,kFACV,GAAUu1B,MAAMnoC,EACV,GAAUmoC,MAAMnoC,EAAI4S,OAAO,IAoBnD6lC,IAhBa7lC,OAAO,uEAQH,GAJE,sEAYG,GAJE,uEAYxB,GAAgB,GAJE,sEAQlB8lC,GAAmBzpD,WAAW+b,KAAK,CAAC,MAOpC,IADc4H,QAAQ,GACXA,OAAO,IAClB,GAAWA,OAAO,GAClB,GAAWA,OAAO,GAElB+lC,IADW/lC,OAAO,GACPA,OAAO,IAClBgmC,GAAWhmC,OAAO,GAClB,GAAYA,OAAO,IC/BhC,SAASkkB,GAAU5tB,EAAO5Z,EAAOC,GAC7B,GAAIA,EAAM2Z,EAAM1a,OACZ,MAAM,IAAIY,MAAM,kEAEpB,OAAO8Z,EAAMoC,MAAMhc,EAAOC,EAC9B,CAKA,SAASwnC,GAAavb,GAClB,GAAa,IAATA,EAAE,GACF,MAAM,IAAIpsB,MAAM,4BAEpB,OAAOkC,GAkHX,SAAoB0lC,GAEhB,IAAIC,EAAM,GACV,IAAK,IAAInpC,EAAI,EAAGA,EAAIkpC,EAAOxoC,OAAQV,IAC/BmpC,GAAOC,GAAYF,EAAOlpC,IAE9B,OAAOmpC,CACX,CAzHwB,CAAWzb,GACnC,CACA,SAAS4b,GAAajpC,EAAKqgB,GACvB,GAAIrgB,EAAM,GACN,OAAOc,WAAW+b,KAAK,CAAC7c,EAAMqgB,IAElC,MAAM6oB,EAAYC,GAAYnpC,GAExBqhB,EAAY8nB,GAAY9oB,EAAS,GADvB6oB,EAAU7oC,OAAS,GAEnC,OAAOS,WAAW+b,KAAK,GAAWwE,EAAY6nB,GAClD,CAmBA,SAASG,GAAQtuB,GACb,IAAI1a,EAAQipC,EAASjrB,EAAMkrB,EAAgB5U,EAC3C,MAAM6U,EAAU,GACVnoB,EAAYtG,EAAM,GACxB,GAAIsG,GAAa,IAEb,MAAO,CACHhD,KAAMtD,EAAMoC,MAAM,EAAG,GACrBssB,UAAW1uB,EAAMkK,SAAS,IAG7B,GAAI5D,GAAa,IAAM,CAWxB,GARAhhB,EAASghB,EAAY,IAGjBhD,EADc,MAAdgD,EACOvgB,WAAW+b,KAAK,IAGhB8rB,GAAU5tB,EAAO,EAAG1a,GAEhB,IAAXA,GAAgBge,EAAK,GAAK,IAC1B,MAAM,IAAIpd,MAAM,6EAEpB,MAAO,CACHod,OACAorB,UAAW1uB,EAAMkK,SAAS5kB,GAElC,CACK,GAAIghB,GAAa,IAAM,CAIxB,GADAioB,EAAUjoB,EAAY,IAClBtG,EAAM1a,OAAS,EAAIipC,EACnB,MAAM,IAAIroC,MAAM,mDAGpB,GADAZ,EAASuoC,GAAaD,GAAU5tB,EAAO,EAAGuuB,IACtCjpC,GAAU,GACV,MAAM,IAAIY,MAAM,6DAGpB,OADAod,EAAOsqB,GAAU5tB,EAAOuuB,EAASjpC,EAASipC,GACnC,CACHjrB,OACAorB,UAAW1uB,EAAMkK,SAAS5kB,EAASipC,GAE3C,CACK,GAAIjoB,GAAa,IAAM,CAIxB,IAFAhhB,EAASghB,EAAY,IACrBkoB,EAAiBZ,GAAU5tB,EAAO,EAAG1a,GAC9BkpC,EAAelpC,QAClBs0B,EAAI0U,GAAQE,GACZC,EAAQ9oC,KAAKi0B,EAAEtW,MACfkrB,EAAiB5U,EAAE8U,UAEvB,MAAO,CACHprB,KAAMmrB,EACNC,UAAW1uB,EAAMkK,SAAS5kB,GAElC,CACK,CAID,GAFAipC,EAAUjoB,EAAY,IACtBhhB,EAASuoC,GAAaD,GAAU5tB,EAAO,EAAGuuB,IACtCjpC,EAAS,GACT,MAAM,IAAIY,MAAM,uCAEpB,MAAMyoC,EAAcJ,EAAUjpC,EAC9B,GAAIqpC,EAAc3uB,EAAM1a,OACpB,MAAM,IAAIY,MAAM,qDAGpB,IADAsoC,EAAiBZ,GAAU5tB,EAAOuuB,EAASI,GACpCH,EAAelpC,QAClBs0B,EAAI0U,GAAQE,GACZC,EAAQ9oC,KAAKi0B,EAAEtW,MACfkrB,EAAiB5U,EAAE8U,UAEvB,MAAO,CACHprB,KAAMmrB,EACNC,UAAW1uB,EAAMkK,SAASykB,GAElC,CACJ,CD9FyBjlB,OAAO,IACPA,OAAO,IACPA,OAAO,IACPA,OAAO,IACNA,OAAO,KACPA,OAAO,KACPA,OAAO,KACRA,OAAO,IACNA,OAAO,KACPA,OAAO,KACPA,OAAO,KACJA,OAAO,qBACNA,OAAO,qBACPA,OAAO,qBE1EVA,OAAO,KD4JlC,MAAMskB,GAAchoC,MAAM8b,KAAK,CAAExc,OAAQ,MAAO,CAACspC,EAAIhqC,IAAMA,EAAE2E,SAAS,IAAIslC,SAAS,EAAG,OAStF,SAASzmC,GAAa0mC,GAClB,MAAMC,EAAOxpB,OAAOI,SAASmpB,EAAS,IACtC,GAAIvpB,OAAO6P,MAAM2Z,GACb,MAAM,IAAI7oC,MAAM,yBACpB,OAAO6oC,CACX,CAEA,SAAS,GAAWhB,GAChB,GAAmB,iBAARA,EACP,MAAM,IAAIlsB,UAAU,2CAA6CksB,GAErE,GAAIA,EAAIzoC,OAAS,EACb,MAAM,IAAIY,MAAM,6CACpB,MAAMwd,EAAQ,IAAI3d,WAAWgoC,EAAIzoC,OAAS,GAC1C,IAAK,IAAIV,EAAI,EAAGA,EAAI8e,EAAMpe,OAAQV,IAAK,CACnC,MAAMiF,EAAQ,EAAJjF,EACV8e,EAAM9e,GAAKwD,GAAa2lC,EAAI3rB,MAAMvY,EAAGA,EAAI,GAC7C,CACA,OAAO6Z,CACX,CAEA,SAAS,MAAeurB,GACpB,GAAsB,IAAlBA,EAAO3pC,OACP,OAAO2pC,EAAO,GAClB,MAAM3pC,EAAS2pC,EAAO3B,QAAO,CAAC/hC,EAAG1G,IAAQ0G,EAAI1G,EAAIS,QAAQ,GACnD4pC,EAAS,IAAInpC,WAAWT,GAC9B,IAAK,IAAIV,EAAI,EAAGuqC,EAAM,EAAGvqC,EAAIqqC,EAAO3pC,OAAQV,IAAK,CAC7C,MAAMC,EAAMoqC,EAAOrqC,GACnBsqC,EAAO9mB,IAAIvjB,EAAKsqC,GAChBA,GAAOtqC,EAAIS,MACf,CACA,OAAO4pC,CACX,CAKA,SAASd,GAAYgB,GACjB,GAAIA,EAAU,EACV,MAAM,IAAIlpC,MAAM,kDAEpB,MAAM6nC,EAAMqB,EAAQ7lC,SAAS,IAC7B,OAAOwkC,EAAIzoC,OAAS,EAAI,IAAIyoC,IAAQA,CACxC,CAMA,SAAS,GAAcvlC,GACnB,OAAOA,EAAIlD,QAAU,GAAgB,MAAXkD,EAAI,IAAyB,MAAXA,EAAI,EACpD,CASA,SAAS,GAAQ8pB,GACb,GAAIA,aAAavsB,WACb,OAAOusB,EAEX,GAAiB,iBAANA,EACP,OAAI,GAAcA,GACP,IArBA/mB,EASI,iBADC/C,EAa+B8pB,GAXxC9pB,EAEJ,GAAcA,GAAOA,EAAI4Z,MAAM,GAAK5Z,GAXlClD,OAAS,EAAI,IAAIiG,IAAMA,IAbfgkC,EAmCMjd,GAlChB,IAAIkd,aAAcC,OAAOF,IADpC,IAAqBA,EAYFhkC,EAQK/C,EAiBpB,GAAiB,iBAAN8pB,GAA+B,iBAANA,EAChC,OAAKA,EAGE,GAAW8b,GAAY9b,IAFnBvsB,WAAW+b,KAAK,IAI/B,GAAIwQ,QACA,OAAOvsB,WAAW+b,KAAK,IAE3B,MAAM,IAAI5b,MAAM,6CAA+CosB,EACnE,CACO,MAMM,GAvPN,SAASmd,EAAOzvB,GACnB,GAAIha,MAAMgD,QAAQgX,GAAQ,CACtB,MAAMzZ,EAAS,GACf,IAAIopD,EAAe,EACnB,IAAK,IAAI/qD,EAAI,EAAGA,EAAIob,EAAM1a,OAAQV,IAAK,CACnC,MAAMgrD,EAAUngB,EAAOzvB,EAAMpb,IAC7B2B,EAAOZ,KAAKiqD,GACZD,GAAgBC,EAAQtqD,MAC5B,CACA,OAAO,GAAY4oC,GAAayhB,EAAc,QAASppD,EAC3D,CACA,MAAMopC,EAAW,GAAQ3vB,GACzB,OAAwB,IAApB2vB,EAASrqC,QAAgBqqC,EAAS,GAAK,IAChCA,EAEJ,GAAYzB,GAAayB,EAASrqC,OAAQ,KAAMqqC,EAC3D,EAuOa,GAtMN,SAAgB3vB,EAAOse,GAAS,GACnC,GAAI,MAAOte,GAA4D,IAAjBA,EAAM1a,OACxD,OAAOS,WAAW+b,KAAK,IAE3B,MACM2sB,EAAUH,GADG,GAAQtuB,IAE3B,GAAIse,EACA,MAAO,CACHhb,KAAMmrB,EAAQnrB,KACdorB,UAAWD,EAAQC,UAAUtsB,SAGrC,GAAiC,IAA7BqsB,EAAQC,UAAUppC,OAClB,MAAM,IAAIY,MAAM,uCAEpB,OAAOuoC,EAAQnrB,IACnB,EExEMusC,GAA6BnmC,OAAO,GAAK,GAAK,GAC9CquB,GAAuBruB,OAAO,IAEpC,SAASomC,GAAQh5C,EAAGi5C,GAAK,GACrB,OAAIA,EACO,CAAEh3C,EAAGwM,OAAOzO,EAAI+4C,IAAax6C,EAAGkQ,OAAQzO,GAAKihC,GAAQ8X,KACzD,CAAE92C,EAAsC,EAAnCwM,OAAQzO,GAAKihC,GAAQ8X,IAAiBx6C,EAA4B,EAAzBkQ,OAAOzO,EAAI+4C,IACpE,CACA,SAASjwC,GAAMysC,EAAK0D,GAAK,GACrB,IAAIC,EAAK,IAAIrZ,YAAY0V,EAAI/mD,QACzB2qD,EAAK,IAAItZ,YAAY0V,EAAI/mD,QAC7B,IAAK,IAAIV,EAAI,EAAGA,EAAIynD,EAAI/mD,OAAQV,IAAK,CACjC,MAAM,EAAEmU,EAAC,EAAE1D,GAAMy6C,GAAQzD,EAAIznD,GAAImrD,IAChCC,EAAGprD,GAAIqrD,EAAGrrD,IAAM,CAACmU,EAAG1D,EACzB,CACA,MAAO,CAAC26C,EAAIC,EAChB,CACA,MCXMC,GAAU,GACVC,GAAY,GACZC,GAAa,GACb,GAAsB1mC,OAAO,GAC7B,GAAsBA,OAAO,GAC7B,GAAsBA,OAAO,GAC7B2mC,GAAsB3mC,OAAO,GAC7B4mC,GAAwB5mC,OAAO,KAC/B6mC,GAAyB7mC,OAAO,KACtC,IAAK,IAAItS,EAAQ,EAAGud,EAAI,GAAK3f,EAAI,EAAGC,EAAI,EAAGmC,EAAQ,GAAIA,IAAS,EAE3DpC,EAAGC,GAAK,CAACA,GAAI,EAAID,EAAI,EAAIC,GAAK,GAC/Bi7C,GAAQvqD,KAAK,GAAK,EAAIsP,EAAID,IAE1Bm7C,GAAUxqD,MAAQyR,EAAQ,IAAMA,EAAQ,GAAM,EAAK,IAEnD,IAAIhK,EAAI,GACR,IAAK,IAAIvD,EAAI,EAAGA,EAAI,EAAGA,IACnB8qB,GAAMA,GAAK,IAASA,GAAK07B,IAAOE,IAAWD,GACvC37B,EAAI,KACJvnB,GAAK,KAAS,IAAuBsc,OAAO7f,IAAM,IAE1DumD,GAAWzqD,KAAKyH,EACpB,CACA,MAAOojD,GAAaC,IAA+B7wC,GAAMwwC,IAAY,GAE/DM,GAAQ,CAAC33C,EAAG1D,EAAGU,IAAOA,EAAI,GDEjB,EAACgD,EAAG1D,EAAGU,IAAOV,GAAMU,EAAI,GAAQgD,IAAO,GAAKhD,ECFtB46C,CAAO53C,EAAG1D,EAAGU,GDDnC,EAACgD,EAAG1D,EAAGU,IAAOgD,GAAKhD,EAAMV,IAAO,GAAKU,ECCG66C,CAAO73C,EAAG1D,EAAGU,GAC9D86C,GAAQ,CAAC93C,EAAG1D,EAAGU,IAAOA,EAAI,GDEjB,EAACgD,EAAG1D,EAAGU,IAAOgD,GAAMhD,EAAI,GAAQV,IAAO,GAAKU,ECFtB+6C,CAAO/3C,EAAG1D,EAAGU,GDDnC,EAACgD,EAAG1D,EAAGU,IAAOV,GAAKU,EAAMgD,IAAO,GAAKhD,ECCGg7C,CAAOh4C,EAAG1D,EAAGU,GA+C7D,MAAMi7C,WAAela,EAExB,WAAA7vC,CAAYkvC,EAAU6Q,EAAQ9Q,EAAW+a,GAAY,EAAOC,EAAS,IAcjE,GAbAziC,QACAlnB,KAAK4uC,SAAWA,EAChB5uC,KAAKy/C,OAASA,EACdz/C,KAAK2uC,UAAYA,EACjB3uC,KAAK0pD,UAAYA,EACjB1pD,KAAK2pD,OAASA,EACd3pD,KAAK4gB,IAAM,EACX5gB,KAAK4pD,OAAS,EACd5pD,KAAKs6B,UAAW,EAChBt6B,KAAKw1B,WAAY,EAEjB51B,EAAO+uC,GAEH,GAAK3uC,KAAK4uC,UAAY5uC,KAAK4uC,UAAY,IACvC,MAAM,IAAIjwC,MAAM,4ClBhFT,IAACrB,EkBiFZ0C,KAAKiwB,MAAQ,IAAIzxB,WAAW,KAC5BwB,KAAK6pD,SlBlFOvsD,EkBkFO0C,KAAKiwB,MlBlFJ,IAAImf,YAAY9xC,EAAI8d,OAAQ9d,EAAI+d,WAAYja,KAAKwmB,MAAMtqB,EAAIT,WAAa,IkBmFhG,CACA,MAAAitD,GACSh4B,GACDud,EAAWrvC,KAAK6pD,SApErB,SAAiBr7C,EAAGm7C,EAAS,IAChC,MAAMj2C,EAAI,IAAI07B,YAAY,IAE1B,IAAK,IAAIv/B,EAAQ,GAAK85C,EAAQ95C,EAAQ,GAAIA,IAAS,CAE/C,IAAK,IAAIpC,EAAI,EAAGA,EAAI,GAAIA,IACpBiG,EAAEjG,GAAKe,EAAEf,GAAKe,EAAEf,EAAI,IAAMe,EAAEf,EAAI,IAAMe,EAAEf,EAAI,IAAMe,EAAEf,EAAI,IAC5D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC5B,MAAMs8C,GAAQt8C,EAAI,GAAK,GACjBu8C,GAAQv8C,EAAI,GAAK,GACjBw8C,EAAKv2C,EAAEs2C,GACPE,EAAKx2C,EAAEs2C,EAAO,GACdG,EAAKhB,GAAMc,EAAIC,EAAI,GAAKx2C,EAAEq2C,GAC1BK,EAAKd,GAAMW,EAAIC,EAAI,GAAKx2C,EAAEq2C,EAAO,GACvC,IAAK,IAAIr8C,EAAI,EAAGA,EAAI,GAAIA,GAAK,GACzBc,EAAEf,EAAIC,IAAMy8C,EACZ37C,EAAEf,EAAIC,EAAI,IAAM08C,CAExB,CAEA,IAAIC,EAAO77C,EAAE,GACT87C,EAAO97C,EAAE,GACb,IAAK,IAAI3I,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMJ,EAAQmjD,GAAU/iD,GAClBskD,EAAKhB,GAAMkB,EAAMC,EAAM7kD,GACvB2kD,EAAKd,GAAMe,EAAMC,EAAM7kD,GACvBkJ,EAAKg6C,GAAQ9iD,GACnBwkD,EAAO77C,EAAEG,GACT27C,EAAO97C,EAAEG,EAAK,GACdH,EAAEG,GAAMw7C,EACR37C,EAAEG,EAAK,GAAKy7C,CAChB,CAEA,IAAK,IAAI18C,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC7B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACpBiG,EAAEjG,GAAKe,EAAEd,EAAID,GACjB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpBe,EAAEd,EAAID,KAAOiG,GAAGjG,EAAI,GAAK,IAAMiG,GAAGjG,EAAI,GAAK,GACnD,CAEAe,EAAE,IAAMy6C,GAAYp5C,GACpBrB,EAAE,IAAM06C,GAAYr5C,EACxB,CACA6D,EAAE4M,KAAK,EACX,CAyBQiqC,CAAQvqD,KAAK6pD,QAAS7pD,KAAK2pD,QACtB73B,GACDud,EAAWrvC,KAAK6pD,SACpB7pD,KAAK4pD,OAAS,EACd5pD,KAAK4gB,IAAM,CACf,CACA,MAAA+uB,CAAO5zB,GACH8yB,EAAO7uC,MACP,MAAM,SAAE4uC,EAAQ,MAAE3e,GAAUjwB,KAEtBtC,GADNqe,EAAO,EAAQA,IACEhe,OACjB,IAAK,IAAI6iB,EAAM,EAAGA,EAAMljB,GAAM,CAC1B,MAAMyyC,EAAO/uC,KAAKC,IAAIutC,EAAW5uC,KAAK4gB,IAAKljB,EAAMkjB,GACjD,IAAK,IAAIvjB,EAAI,EAAGA,EAAI8yC,EAAM9yC,IACtB4yB,EAAMjwB,KAAK4gB,QAAU7E,EAAK6E,KAC1B5gB,KAAK4gB,MAAQguB,GACb5uC,KAAK8pD,QACb,CACA,OAAO9pD,IACX,CACA,MAAAy9B,GACI,GAAIz9B,KAAKs6B,SACL,OACJt6B,KAAKs6B,UAAW,EAChB,MAAM,MAAErK,EAAK,OAAEwvB,EAAM,IAAE7+B,EAAG,SAAEguB,GAAa5uC,KAEzCiwB,EAAMrP,IAAQ6+B,EACA,IAATA,GAAwB7+B,IAAQguB,EAAW,GAC5C5uC,KAAK8pD,SACT75B,EAAM2e,EAAW,IAAM,IACvB5uC,KAAK8pD,QACT,CACA,SAAAU,CAAUzmD,GACN8qC,EAAO7uC,MAAM,GACb,EAAM+D,GACN/D,KAAKy9B,SACL,MAAMgtB,EAAYzqD,KAAKiwB,OACjB,SAAE2e,GAAa5uC,KACrB,IAAK,IAAI4gB,EAAM,EAAGljB,EAAMqG,EAAIhG,OAAQ6iB,EAAMljB,GAAM,CACxCsC,KAAK4pD,QAAUhb,GACf5uC,KAAK8pD,SACT,MAAM3Z,EAAO/uC,KAAKC,IAAIutC,EAAW5uC,KAAK4pD,OAAQlsD,EAAMkjB,GACpD7c,EAAI8c,IAAI4pC,EAAU9nC,SAAS3iB,KAAK4pD,OAAQ5pD,KAAK4pD,OAASzZ,GAAOvvB,GAC7D5gB,KAAK4pD,QAAUzZ,EACfvvB,GAAOuvB,CACX,CACA,OAAOpsC,CACX,CACA,OAAA2mD,CAAQ3mD,GAEJ,IAAK/D,KAAK0pD,UACN,MAAM,IAAI/qD,MAAM,yCACpB,OAAOqB,KAAKwqD,UAAUzmD,EAC1B,CACA,GAAA4mD,CAAI9oC,GAEA,OADAjiB,EAAOiiB,GACA7hB,KAAK0qD,QAAQ,IAAIlsD,WAAWqjB,GACvC,CACA,UAAAyuB,CAAWvsC,GAEP,GADA/E,EAAO+E,EAAK/D,MACRA,KAAKs6B,SACL,MAAM,IAAI37B,MAAM,+BAGpB,OAFAqB,KAAKwqD,UAAUzmD,GACf/D,KAAKwqB,UACEzmB,CACX,CACA,MAAA6rC,GACI,OAAO5vC,KAAKswC,WAAW,IAAI9xC,WAAWwB,KAAK2uC,WAC/C,CACA,OAAAnkB,GACIxqB,KAAKw1B,WAAY,EACjBx1B,KAAKiwB,MAAM3P,KAAK,EACpB,CACA,UAAAkvB,CAAW/J,GACP,MAAM,SAAEmJ,EAAQ,OAAE6Q,EAAM,UAAE9Q,EAAS,OAAEgb,EAAM,UAAED,GAAc1pD,KAY3D,OAXAylC,IAAOA,EAAK,IAAIgkB,GAAO7a,EAAU6Q,EAAQ9Q,EAAW+a,EAAWC,IAC/DlkB,EAAGokB,QAAQhpC,IAAI7gB,KAAK6pD,SACpBpkB,EAAG7kB,IAAM5gB,KAAK4gB,IACd6kB,EAAGmkB,OAAS5pD,KAAK4pD,OACjBnkB,EAAGnL,SAAWt6B,KAAKs6B,SACnBmL,EAAGkkB,OAASA,EAEZlkB,EAAGga,OAASA,EACZha,EAAGkJ,UAAYA,EACflJ,EAAGikB,UAAYA,EACfjkB,EAAGjQ,UAAYx1B,KAAKw1B,UACbiQ,CACX,EAEJ,MAAMuO,GAAM,CAACyL,EAAQ7Q,EAAUD,IAAc,GAAgB,IAAM,IAAI8a,GAAO7a,EAAU6Q,EAAQ9Q,KASnFic,GAA6B5W,GAAI,EAAM,IAAK,IAK5C6W,GAA6B7W,GAAI,EAAM,IAAK,IAC5C8W,GAA6B9W,GAAI,EAAM,IAAK,IAC5C+W,GAA6B/W,GAAI,EAAM,GAAI,IC/M3CgX,GAAYvE,GAASmE,IACrB,GAAY,MACrB,MAAMzmD,EAAIsiD,GAASoE,IAEnB,OADA1mD,EAAEsrB,OAASo7B,GAAWp7B,OACftrB,CACV,EAJwB,GAKZ8mD,GAAYxE,GAASqE,IACrBI,GAAYzE,GAASsE,IC2MrBI,GAAe,SAAUC,EAAQC,GAAW,GAKrD,GAJA,GAAcD,GACVC,GAA8B,KAAlBD,EAAOrtD,SACnBqtD,EAAS,GAAU/S,gBAAgBqC,QAAQ0Q,GAAQhN,YAAW,GAAOvjC,MAAM,IAEzD,KAAlBuwC,EAAOrtD,OACP,MAAM,IAAIY,MAAM,sCAGpB,OAAO,GAAUysD,GAAQzoC,UAAU,GACvC,EACa2oC,GAAkBH,GAyDT,IAAI3sD,WAAW,GClR9B,MAAM+sD,GACT,WAAA7rD,CAAYmiB,GACR,GAAqB,KAAjBA,EAAM9jB,OACN,MAAM,IAAIY,MAAM,0BAEpBqB,KAAK6hB,MAAQA,CACjB,CAIA,WAAO2pC,GACH,OAAO,IAAID,GAAQ,GAAM,IAC7B,CAKA,iBAAOzwC,CAAW7Z,GACd,ID6DsB,SAAUwqD,GACpC,KRnD0B,SAAUhzC,GACpC,GAAqB,iBAAVA,EAEP,MAAM,IAAI9Z,MADE,oDAAoD8Z,IAGxE,CQ+CQ,CAAegzC,EACnB,CACA,MAAOjrD,GACH,OAAO,CACX,CACA,MAAO,sBAAsBssB,KAAK2+B,EACtC,CCrEaC,CAAezqD,GAChB,MAAM,IAAItC,MAAM,mBAEpB,OAAO,IAAI4sD,GAAQ,GAAQtqD,GAC/B,CAKA,oBAAO0qD,CAAcP,GACjB,KAAMA,aAAkB5sD,YACpB,MAAM,IAAIG,MAAM,mCAEpB,MAAMkjB,EAAQspC,GAAaC,GAC3B,OAAO,IAAIG,GAAQ1pC,EACvB,CAKA,qBAAOg5B,CAAeC,GAClB,KAAMA,aAAsBt8C,YACxB,MAAM,IAAIG,MAAM,oCAEpB,MAAMkjB,ED6LkB,SAAUi5B,GACtC,OAAOwQ,GAVoB,SAAUxQ,GAGrC,OAFA,GAAcA,GAEP,GAAUzC,gBAAgBwC,eAAeC,GAAYsD,YAAW,GAAOvjC,MAAM,EACxF,CAM2B+wC,CAAgB9Q,GAC3C,CC/LsB+Q,CAAiB/Q,GAC/B,OAAO,IAAIyQ,GAAQ1pC,EACvB,CAMA,eAAOiqC,CAASvxC,EAAMwxC,GAClB,GAAqB,iBAAVA,EACP,MAAM,IAAIptD,MAAM,iCAEpB,OAAO,IAAI4sD,GDgFY,SAAUhxC,EAAMwxC,GAG3C,OAFA,GAAcxxC,GACd,GAAcwxC,GACV,GAAcA,KAAW,GAGlB,GAAU,GAAW,CAACxxC,EAAM/b,WAAW+b,KAAK,OAAOoI,UAAU,IAGjE,GAAU,GAAW,CAACpI,EAAMwxC,KAASppC,UAAU,GAC1D,CC1F2BqpC,CAAgBzxC,EAAKsH,MAAO6lC,GAAcqE,IACjE,CAOA,gBAAOE,CAAU1xC,EAAM2xC,EAAMC,GACzB,KAAMD,aAAgB1tD,YAClB,MAAM,IAAIG,MAAM,oCAEpB,KAAMwtD,aAAoB3tD,YACtB,MAAM,IAAIG,MAAM,wCAEpB,OAAO,IAAI4sD,GDkFa,SAAUhxC,EAAM2xC,EAAMC,GAIlD,GAHA,GAAc5xC,GACd,GAAc2xC,GACd,GAAcC,GACM,KAAhB5xC,EAAKxc,OACL,MAAM,IAAIY,MAAM,oCAEpB,GAAoB,KAAhButD,EAAKnuD,OACL,MAAM,IAAIY,MAAM,oCAGpB,OADgB,GAAU,GAAY,GAAW,QAAS4b,EAAM2xC,EAAM,GAAUC,KACjExpC,UAAU,GAC7B,CC9F2BypC,CAAiB7xC,EAAKsH,MAAOqqC,EAAMC,GAC1D,CAIA,MAAAjrC,CAAOwqB,GACH,OAAO,GAAY1rC,KAAK6hB,MAAO6pB,EAAQ7pB,MAC3C,CAIA,MAAAnd,GACI,OAAO1E,KAAKkhB,OAAOqqC,GAAQC,OAC/B,CAKA,2BAAAa,GACI,MAAM3gB,EAAU,GAAc1rC,KAAK6hB,OAC7ByqC,EAAW,GACXC,EAAWpqC,OAAO,UACxB,OAAOupB,GAAW4gB,GAAY5gB,GAAW6gB,CAC7C,CAIA,QAAAvqD,GACI,OAAO,GAAWhC,KAAK6hB,MAC3B,CAIA,OAAAkmB,GACI,OAAO,IAAIvpC,WAAWwB,KAAK6hB,MAC/B,EC9GG,IAAI2qC,GAMAC,GCDA,GACAC,GAMJ,SAAS,GAAOj0C,EAAOk0C,GAC1B,GAAc,OAAVl0C,EACA,OAAO,KAEX,QAAcF,IAAVE,EACA,OAEJ,GAAqB,iBAAVA,IAAuB,GAAYA,GAC1C,MAAM,IAAI9Z,MAAM,sDAAsD8Z,KAErE,GAAqB,iBAAVA,IAAuBuF,OAAOywB,cAAch2B,GACxD,MAAM,IAAI9Z,MAAM,+FAEpB,MAAMK,EAAS,GAAQyZ,GACvB,OAAQk0C,GACJ,KAAK,GAAWnuD,WACZ,OAAOQ,EACX,KAAK,GAAWmjB,OACZ,OAAO,GAAcnjB,GACzB,KAAK,GAAWgf,OAAQ,CACpB,MAAM4uC,EAAS,GAAc5tD,GAC7B,GAAI4tD,EAASzqC,OAAOnE,OAAO6uC,kBACvB,MAAM,IAAIluD,MAAM,gGAEpB,OAAOqf,OAAO4uC,EAClB,CACA,KAAK,GAAWE,kBACZ,OAAO,GAAW9tD,GACtB,QACI,MAAM,IAAIL,MAAM,sBAE5B,ED1CA,SAAW6tD,GACPA,EAAoB,OAAI,SACxBA,EAAmB,MAAI,OACvBA,EAAoB,OAAI,QAC3B,CAJD,CAIGA,KAAgBA,GAAc,CAAC,IAElC,SAAWC,GACPA,EAAsB,OAAI,SAC1BA,EAAqB,MAAI,OACzBA,EAAoB,KAAI,MAC3B,CAJD,CAIGA,KAAkBA,GAAgB,CAAC,KCL3BC,GAKR,KAAe,GAAa,CAAC,IAJjBA,GAAmB,OAAI,GAAK,SACvCA,GAAWA,GAAmB,OAAI,GAAK,SACvCA,GAAWA,GAAuB,WAAI,GAAK,aAC3CA,GAAWA,GAA8B,kBAAI,GAAK,oBCH/C,MAAMK,GAMT,WAAArtD,CAAYiB,EAAOqsD,EAAgBthB,EAInCI,GACI9rC,KAAKW,MAAQA,EACbX,KAAKgtD,eAAiBA,EACtBhtD,KAAK0rC,QAAUA,EACf1rC,KAAK8rC,OAASA,CAClB,CACA,yBAAOmhB,CAAmBC,GACtB,MAAQvsD,MAAOwsD,EAAWH,eAAgBI,EAAoB1hB,QAAS2hB,EAAavhB,OAAQwhB,GAAgBJ,EACtGvsD,EAAQ,GAAOwsD,EAAW,GAAWhrC,QACrC6qC,EAAiB,GAAOI,EAAoB,GAAWjrC,QACvDupB,EAAU2hB,aAAuB9B,GAAU8B,EAAc,IAAI9B,GAAQ,GAAQ8B,IAC7EvhB,EAAS,GAAOwhB,EAAY,GAAWnrC,QAC7C,OAAO,IAAI4qC,GAAWpsD,EAAOqsD,EAAgBthB,EAASI,EAC1D,CACA,sBAAOyhB,CAAgBC,GACnB,GAA+B,IAA3BA,EAAgBzvD,OAChB,MAAMY,MAAM,oDAAoD6uD,EAAgBzvD,UAEpF,MAAO4C,EAAOqsD,EAAgBthB,EAASI,GAAU0hB,EACjD,OAAOT,GAAWE,mBAAmB,CAAEtsD,QAAOqsD,iBAAgBthB,UAASI,UAC3E,CAMA,mBAAO2hB,CAAaC,GAChB,MAAM,MAAE/sD,EAAK,eAAEqsD,EAAc,QAAEthB,EAAO,OAAEI,GAAW4hB,EAWnD,MAAO,CAVY,GAAO/sD,EAAO,GAAWwhB,UAAY,GAClD,IAAI3jB,WACJ,GAAOmC,EAAO,GAAWnC,YACH,GAAOwuD,EAAgB,GAAW7qC,UAAY,GACpE,IAAI3jB,WACJ,GAAOwuD,EAAgB,GAAWxuD,YACnBktC,aAAmB6f,GAAU7f,EAAQ7pB,MAAQ,GAAO6pB,EAAS,GAAWltC,YACzE,GAAOstC,EAAQ,GAAW3pB,UAAY,GACpD,IAAI3jB,WACJ,GAAOstC,EAAQ,GAAWttC,YAEpC,CACA,GAAAmvD,GACI,OAAOZ,GAAWU,aAAaztD,KACnC,CACA,OAAA4tD,GACI,MAAO,CACHjtD,MAAOX,KAAKW,MACZqsD,eAAgBhtD,KAAKgtD,eACrBthB,QAAS1rC,KAAK0rC,QAAQ7pB,MACtBiqB,OAAQ9rC,KAAK8rC,OAErB,CACA,MAAA/mC,GACI,MAAO,CACHpE,MAAO,GAAYX,KAAKW,OACxBqsD,eAAgB,GAAYhtD,KAAKgtD,gBACjCthB,QAAS,GAAW1rC,KAAK0rC,QAAQ7pB,OACjCiqB,OAAQ,GAAY9rC,KAAK8rC,QAEjC,EChEG,SAAS+hB,GAAO1N,EAASrF,EAAYgT,GACxC,MAAMzW,EAAM,GAAU4K,KAAK9B,EAASrF,GAC9B7gC,EAAMo9B,EAAIyJ,oBAMhB,MAAO,CAAE//C,EALCkZ,EAAIY,MAAM,EAAG,IAKXrM,EAJFyL,EAAIY,MAAM,GAAI,IAITkQ,OAHOxS,IAAZu1C,EACJ3rC,OAAOk1B,EAAIyI,SAAW,IACtB39B,OAAOk1B,EAAIyI,SAAW,IAAM39B,OAAO2rC,GAAW,GAExD,CAiBO,MAAMC,GAAY,SAAU5N,EAASp1B,EAAGhqB,EAAGyN,EAAGs/C,GACjD,MAAM/K,EAAY,GAAY,GAAchiD,EAAG,IAAK,GAAcyN,EAAG,KAC/DsxC,EAlBH,SAA8B/0B,EAAG+iC,GACpC,OAAI/iC,IAAM,IAAYA,IAAM,GACjBA,OACKxS,IAAZu1C,EACO/iC,EAAI,GAERA,GAAK+iC,EAAU,GAAW3rC,OAAO,IAC5C,CAWqB6rC,CAAqBjjC,EAAG+iC,GACzC,IAXJ,SAA4BhO,GACxB,OAAOA,IAAa,IAAYA,IAAa,EACjD,CASSmO,CAAmBnO,GACpB,MAAM,IAAInhD,MAAM,6BAIpB,OAFY,GAAUkhD,UAAUE,YAAYgD,GAAW9C,eAAejiC,OAAO8hC,IACpDI,iBAAiBC,GACtB/B,YAAW,GAAOvjC,MAAM,EAChD,cC5CO,MAAM,GAAS4rC,GAAS,GCKzByH,GAAwB,OAU9B,SAASC,GAASpyC,GACd,MAAMqyC,EAAO,IAAI5vD,WARH6vD,QASd,IAAK,IAAIhxD,EAAI,EAAGA,EAbY,KAaiBA,IAAK,CAC9C,MAAMu4B,EAAQ,IAAIp3B,WAAW,IAC7Bo3B,EAAM/U,IAAI9E,EAAK4G,SAAa,GAAJtlB,EAAkB,IAATA,EAAI,IAAU,GAC/C+wD,EAAKvtC,IAAI+U,EAAW,GAAJv4B,EACpB,CACA,OAAO+wD,CACX,CACO,MAsCME,GAAuB,CAACC,EAAYC,KAC7C,MAAMC,EAAwB,IAAIjwD,WAAW,IAG7C,OAFAiwD,EAAsB5tC,IAAI,CAAC2tC,GAAwB,GACnDC,EAAsB5tC,IAAI,GAAO0tC,GAAY5rC,SAAS,GAAI,GACnD8rC,CAAqB,ECnEzB,MAAMC,GACT,WAAAhvD,GACIM,KAAK2uD,QAAU,EACf3uD,KAAK4uD,qBAAuB,EAChC,CAKA,aAAMC,GACF,OAAI7uD,KAAK2uD,QAAU,GACf3uD,KAAK2uD,SAAW,EACT1gC,QAAQC,SAAQ,IAIpB,IAAID,SAASM,GAAavuB,KAAK4uD,qBAAqBxwD,KAAKmwB,IACpE,CAKA,OAAAugC,GAEI,GADA9uD,KAAK2uD,SAAW,EACZ3uD,KAAK2uD,QAAU,GAAK3uD,KAAK4uD,qBAAqB7wD,OAAS,EAEvDiiB,QAAQ0K,KAAK,wEAEZ,GAAqB,IAAjB1qB,KAAK2uD,SAAiB3uD,KAAK4uD,qBAAqB7wD,OAAS,EAAG,CAGjEiC,KAAK2uD,SAAW,EAChB,MAAMI,EAAe/uD,KAAK4uD,qBAAqBnpD,QAC3CspD,GACAA,GAAa,EAErB,CACJ,ECrCG,MAAMC,GACT,WAAAtvD,CAAYuvD,GACRjvD,KAAKkvD,UAAYD,GAAY,IAAIpV,GACrC,CACA,SAAMz5B,CAAI6M,GACN,MAAMkiC,EAAQliC,aAAezuB,WAAa,GAAqByuB,GAAOA,EAAIjrB,WAC1E,OAAOhC,KAAKkvD,UAAU9uC,IAAI+uC,EAC9B,CACA,SAAMC,CAAIniC,EAAK/tB,GACX,MAAMiwD,EAAQliC,aAAezuB,WAAa,GAAqByuB,GAAOA,EAAIjrB,WAC1EhC,KAAKkvD,UAAUruC,IAAIsuC,EAAOjwD,EAC9B,CACA,SAAMmwD,CAAIpiC,GACN,MAAMkiC,EAAQliC,aAAezuB,WAAa,GAAqByuB,GAAOA,EAAIjrB,WAC1EhC,KAAKkvD,UAAU9T,OAAO+T,EAC1B,CACA,WAAMG,CAAMC,GACR,IAAK,MAAMC,KAAMD,EACG,QAAZC,EAAG1zC,YACG9b,KAAKqvD,IAAIG,EAAGviC,KAEN,QAAZuiC,EAAG1zC,YACG9b,KAAKovD,IAAII,EAAGviC,IAAKuiC,EAAGh1C,MAGtC,CAMA,WAAAi1C,GACI,OAAO,IAAIT,GAAMhvD,KAAKkvD,UAC1B,CACA,IAAAQ,GACI,OAAOzhC,QAAQC,SACnB,ECpBG,MAAMyhC,GAAoBC,MAAOC,EAAKvkB,KACzC,MAAMvvB,EAAOiP,KAAKC,UAAU,CACxB4J,OAAQyW,EAAOzW,OACfyW,OAAQA,EAAOA,OACfD,QAAS,MACTpB,GAAI,IAEF7kC,QAAYguB,MAAMy8B,EAAK,CACzBC,QAAS,CACL,eAAgB,oBAEpBj7B,OAAQ,OACRk7B,KAAMh0C,IAEV,IAAK3W,EAAI4qD,GACL,MAAM,IAAIrxD,MAAM,iBAAiBqsB,KAAKC,UAAU,CAC5C4J,OAAQyW,EAAOzW,OACfo7B,OAAQ7qD,EAAI6qD,OACZ3oC,cAAeliB,EAAIwjC,OAAOsnB,OAAM,IACrB,qEAEZ,KAAM,MAIb,aAFmB9qD,EAAI+qD,QAEXxoB,MAAM,EAOTyoB,GAAeC,IACxB,GAAwB,iBAAbA,EACP,OAAOA,EAEN,GAAwB,iBAAbA,QAAqD93C,IAA5B83C,EAASC,eAC9C,OAAOD,EAASC,iBAAiBT,IAGjC,MAAM,IAAIlxD,MAAM,kDACpB,ECxDJ,+BA6CA,QAxCW,EAAA4xD,eAAiB,SAAU93C,GAC9B,IAAKpY,OAAOsb,SAASlD,GAAQ,CAC7B,IAAMtZ,EAAM,0DAAmDsZ,GAC/D,MAAM,IAAI9Z,MAAMQ,GAEpB,EAOO,EAAA2qD,OAAS,SAAU9lD,EAAWiN,GAEjC,YAFiC,IAAAA,IAAAA,EAAA,KACjCw4C,EAAO8G,eAAevsD,GACdiN,GACJ,KAAK,IACD,OAAO5Q,OAAOka,KAAKywC,GAAUhnD,IAEjC,KAAK,IACD,OAAO3D,OAAOka,KAAK,GAAKvW,IAE5B,KAAK,IACD,OAAO3D,OAAOka,KAAK0wC,GAAUjnD,IAEjC,KAAK,IACD,OAAO3D,OAAOka,KAAK2wC,GAAUlnD,IAEjC,QACI,MAAM,IAAIrF,MAAM,kCAA2BsS,IAGvD,EAMO,EAAAu/C,UAAY,SAAUxsD,GACzB,OAAOylD,EAAOK,OAAO9lD,EACzB,EACJ,EA7CA,aCAMysD,GAAO,GAAOD,UAIpB,cAII,WAAYE,GACR,QADQ,IAAAA,IAAAA,EAAA,IACJA,EAAO3yD,OAAS,EAChB,MAAM,IAAIY,MAAM,yBAGpB,IAAMwlC,EAAQ/iC,KAAKiB,KAAKjB,KAAKwpB,IAAI8lC,EAAO3yD,QAAUqD,KAAKwpB,IAAI,IAC3D,GAAIuZ,EAAQ,GACR,MAAM,IAAIxlC,MAAM,4BAGpBqB,KAAK0wD,OAASA,EAAOhwC,OACjBjiB,MAAM8b,KAEF9b,MAAM2C,KAAK6B,IAAI,EAAGkhC,GAASusB,EAAO3yD,SAClC,WAAM,UAAM,GAAN,KAGdiC,KAAK2wD,OAAS,CAAC3wD,KAAK0wD,QACpB1wD,KAAK4wD,aAAa5wD,KAAK0wD,OAC3B,CAiFJ,OA/EI,YAAAE,aAAA,SAAaC,GACT,GAAqB,IAAjBA,EAAM9yD,OACN,OAAO,EAKX,IADA,IAAM+yD,EAAY,GACTzzD,EAAI,EAAGA,EAAIwzD,EAAM9yD,OAAQV,GAAK,EAAG,CACtC,IAAMsE,EAAOkvD,EAAMxzD,GACbuE,EAAQivD,EAAMxzD,EAAI,GAElB0e,EAAO,UAAW2E,OAAO,CAAC/e,EAAMC,IACtCkvD,EAAU1yD,KAAKqyD,GAAK10C,IAIpB80C,EAAM9yD,OAAS,GAAM,GACrB+yD,EAAU1yD,KAAKyyD,EAAMA,EAAM9yD,OAAS,IAGxCiC,KAAK2wD,OAAOvyD,KAAK0yD,GACjB9wD,KAAK4wD,aAAaE,EACtB,EAEA,YAAAC,UAAA,WACI,OAAO/wD,KAAK0wD,MAChB,EAEA,YAAAM,UAAA,WACI,OAAOhxD,KAAK2wD,MAChB,EAEA,YAAAM,QAAA,WACI,OAAOjxD,KAAK2wD,OAAO3wD,KAAK2wD,OAAO5yD,OAAS,GAAG,EAC/C,EAEA,YAAAmzD,SAAA,SAASC,GAEL,IADA,IAAIxwD,GAAS,EACJtD,EAAI,EAAGA,EAAI2C,KAAK0wD,OAAO3yD,OAAQV,IACa,IAA7C,UAAWojB,QAAQ0wC,EAAMnxD,KAAK0wD,OAAOrzD,MACrCsD,EAAQtD,GAIhB,IAAM+zD,EAAQ,GACd,GAAIzwD,GAASX,KAAK+wD,YAAYhzD,OAC1B,KAAIszD,OAAY,EAChB,IAASh0D,EAAI,EAAGA,EAAI2C,KAAK2wD,OAAO5yD,OAAS,EAAGV,IAEpCg0D,EADA1wD,EAAQ,GAAM,EACCA,EAAQ,EAERA,EAAQ,EAE3BA,EAAQS,KAAKwmB,MAAMjnB,EAAQ,GAC3BywD,EAAMhzD,KAAK4B,KAAK2wD,OAAOtzD,GAAGg0D,GARd,CAWpB,OAAOD,CACX,EAEA,YAAAtO,OAAA,SAAOtoC,EAAO7Z,EAAOrE,EAAM80D,GACvB,IAAK3yD,MAAMgD,QAAQ2vD,KAAW52C,IAAUle,EACpC,OAAO,EAIX,IADA,IAAI4wB,EAAO1S,EACFnd,EAAI,EAAGA,EAAI+zD,EAAMrzD,OAAQV,IAAK,CACnC,IAAMi0D,EAAOF,EAAM/zD,GAEf6vB,EAAOujC,GADP9vD,EAAQ,GAAM,EACF,UAAW+f,OAAO,CAACwM,EAAMokC,IAEzB,UAAW5wC,OAAO,CAAC4wC,EAAMpkC,KAGzCvsB,EAAQS,KAAKwmB,MAAMjnB,EAAQ,GAG/B,OAA0C,IAAnC,UAAW8f,QAAQyM,EAAM5wB,EACpC,EACJ,EAxGA,wBCaA,2BA4GA,QApGW,EAAAuqD,UAAP,SAAiBrsC,GACb,IAAIxW,EAAIwW,EAER,GAAiB,iBAANxW,EACP,MAAM,IAAIrF,MAAM,mEAA4DqF,IAKhF,OAFIA,EAAEjG,OAAS,IAAGiG,EAAI,WAAIA,IAEnBA,CACX,EAEO,EAAA8jC,cAAP,SAAqB7mC,GACjB,GAAmB,iBAARA,EACP,MAAM,IAAItC,MAAM,4EAAqEsC,IAGzF,MAAkB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,EACjC,EAoBO,EAAAswD,YAAP,SAAmB/2C,EAAezc,GAC9B,QAAqB,iBAAVyc,IAAuBA,EAAM0O,MAAM,qBAE1CnrB,GAAUyc,EAAMzc,SAAW,EAAI,EAAIA,EAG3C,EAnDO,EAAAypD,SAAW,SAAUnqD,GACxB,IAAK2gB,OAAOywB,cAAcpxC,IAAMA,EAAI,EAChC,MAAM,IAAIsB,MAAM,4CAAqCtB,IAEzD,MAAO,YAAKA,EAAE2E,SAAS,IAC3B,EAsBO,EAAAwvD,eAAiB,SAACvwD,GACrB,GAAmB,iBAARA,EACP,MAAM,IAAItC,MAAM,wEAAiEsC,IAGrF,OAAOwwD,EAAW3pB,cAAc7mC,GAAOA,EAAI4Z,MAAM,GAAK5Z,CAC1D,EAOO,EAAAywD,YAAc,SAAUr0D,GAC3B,IAAMmpC,EAAMirB,EAAWjK,SAASnqD,GAChC,OAAOgD,OAAOka,KAAKk3C,EAAW5K,UAAUrgB,EAAI3rB,MAAM,IAAK,MAC3D,EAWO,EAAA7V,SAAW,SAAU+lB,GACxB,GAAIA,QACA,OAAO1qB,OAAOgF,YAAY,GAG9B,GAAIhF,OAAOsb,SAASoP,GAChB,OAAO1qB,OAAOka,KAAKwQ,GAGvB,GAAItsB,MAAMgD,QAAQspB,IAAMA,aAAavsB,WACjC,OAAO6B,OAAOka,KAAKwQ,GAGvB,GAAiB,iBAANA,EAAgB,CACvB,IAAK0mC,EAAWF,YAAYxmC,GACxB,MAAM,IAAIpsB,MACN,qHAA8GosB,IAGtH,OAAO1qB,OAAOka,KAAKk3C,EAAW5K,UAAU4K,EAAWD,eAAezmC,IAAK,OAG3E,GAAiB,iBAANA,EACP,OAAO0mC,EAAWC,YAAY3mC,GAGlC,GAAI,KAAGhrB,KAAKgrB,GAAI,CACZ,GAAIA,EAAEpkB,QACF,MAAM,IAAIhI,MAAM,uDAAgDosB,IAEpE,OAAOA,EAAE9lB,YAAY5E,QAGzB,GAAI0qB,EAAE3oB,QAEF,OAAO/B,OAAOka,KAAKwQ,EAAE3oB,WAGzB,GAAI2oB,EAAE/lB,SACF,OAAO3E,OAAOka,KAAKwQ,EAAE/lB,YAGzB,MAAM,IAAIrG,MAAM,eACpB,EAMO,EAAAgzD,YAAc,SAAU13C,GAE3B,MAAO,MADPA,EAAMw3C,EAAWzsD,SAASiV,IACRjY,SAAS,MAC/B,EACJ,EA5GA,aChBA,MAAM4vD,GAA8B,iBAAhBC,aAChBA,aAC2B,mBAApBA,YAAYC,IACjBD,YACApmC,KACAhB,GAAS,IAAIsnC,IAEbC,GAA8B,iBAAZtoC,SAA0BA,QAAUA,QAAU,CAAC,EAEjEuoC,GAAc,CAAC9yD,EAAK2c,EAAMpd,EAAM8pB,KACH,mBAAxBwpC,GAAQC,YACTD,GAAQC,YAAY9yD,EAAK2c,EAAMpd,EAAM8pB,GACrCxI,QAAQC,MAAM,IAAIvhB,MAASod,MAAS3c,IAAM,EAEpD,IAAI+yD,GAAK3nB,WAAW4nB,gBAChBC,GAAK7nB,WAAW8nB,YAEpB,QAAkB,IAAPH,GAAoB,CAE3BE,GAAK,MACDE,QACAC,SAAW,GACXC,OACAC,SAAU,EACV,gBAAA9hC,CAAiBzgB,EAAGsY,GAChBxoB,KAAKuyD,SAASn0D,KAAKoqB,EACvB,GAGJ0pC,GAAK,MACD,WAAAxyD,GACIgzD,GACJ,CACAC,OAAS,IAAIP,GACb,KAAA9sB,CAAMktB,GACF,IAAIxyD,KAAK2yD,OAAOF,QAAhB,CAGAzyD,KAAK2yD,OAAOH,OAASA,EAErBxyD,KAAK2yD,OAAOF,SAAU,EAEtB,IAAK,MAAMjqC,KAAMxoB,KAAK2yD,OAAOJ,SACzB/pC,EAAGgqC,GAEPxyD,KAAK2yD,OAAOL,UAAUE,EATZ,CAUd,GAEJ,IAAII,EAAsE,MAA7CZ,GAAQroC,KAAKkpC,4BAC1C,MAAMH,EAAiB,KACdE,IAELA,GAAyB,EACzBX,GAAY,maAM+D,sBAAuB,UAAWS,GAAe,CAEpI,CAGalvD,OAAO,QADpB,MAEMsvD,GAAYvjD,GAAMA,GAAKA,IAAMnO,KAAKwmB,MAAMrY,IAAMA,EAAI,GAAKmS,SAASnS,GAUhEwjD,GAAgBrxD,GAASoxD,GAASpxD,GAElCA,GAAON,KAAK6B,IAAI,EAAG,GACfzE,WACAkD,GAAON,KAAK6B,IAAI,EAAG,IACf+vD,YACAtxD,GAAON,KAAK6B,IAAI,EAAG,IACfmsC,YACA1tC,GAAOsc,OAAO6uC,iBACVoG,GACA,KAThB,KAWN,MAAMA,WAAkBx0D,MACpB,WAAAiB,CAAY4D,GACR4jB,MAAM5jB,GACNtD,KAAKsgB,KAAK,EACd,EAEJ,MAAM4yC,GACFC,KACAp1D,OAEAq1D,UAAuB,EACvB,aAAO3jC,CAAO/tB,GACV,MAAM2xD,EAAUN,GAAarxD,GAC7B,IAAK2xD,EACD,MAAO,GACXH,IAAM,GAAgB,EACtB,MAAM1kD,EAAI,IAAI0kD,GAAMxxD,EAAK2xD,GAEzB,OADAH,IAAM,GAAgB,EACf1kD,CACX,CACA,WAAA9O,CAAYgC,EAAK2xD,GAEb,IAAKH,IAAM,EACP,MAAM,IAAI54C,UAAU,2CAGxBta,KAAKmzD,KAAO,IAAIE,EAAQ3xD,GACxB1B,KAAKjC,OAAS,CAClB,CACA,IAAAK,CAAKmR,GACDvP,KAAKmzD,KAAKnzD,KAAKjC,UAAYwR,CAC/B,CACA,GAAAkiB,GACI,OAAOzxB,KAAKmzD,OAAOnzD,KAAKjC,OAC5B,EAWG,MAAMu1D,GAIT,GACA,GACA,GACA,GACA,GAIAC,IAIAC,cAIAC,aAIAC,eAIAC,eAIAC,WAIAC,eAIAC,YAIAC,aAIAC,gBAIAC,yBAIAC,mBAIAC,uBAIAC,2BAIAC,iBAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAUA,4BAAOC,CAAsB1zD,GACzB,MAAO,CAEH2zD,OAAQ3zD,GAAE,EACV4zD,KAAM5zD,GAAE,EACR6zD,MAAO7zD,GAAE,EACT8zD,OAAQ9zD,GAAE,EACV+zD,QAAS/zD,GAAE,EACXg0D,QAASh0D,GAAE,EACXgY,KAAMhY,GAAE,EACR+X,KAAM/X,GAAE,EACR,QAAIy4B,GACA,OAAOz4B,GAAE,CACb,EACA,QAAIijC,GACA,OAAOjjC,GAAE,CACb,EACAi0D,KAAMj0D,GAAE,EAERk0D,kBAAoBhmD,GAAMlO,GAAE,EAAmBkO,GAC/CimD,gBAAiB,CAAC5wD,EAAGxD,EAAOiyB,EAASzB,IAAYvwB,GAAE,EAAiBuD,EAAGxD,EAAOiyB,EAASzB,GACvF6jC,WAAar0D,GAAUC,GAAE,EAAYD,GACrCs0D,QAAUriC,GAAYhyB,GAAE,EAASgyB,GACjCsiC,SAAWtiC,GAAYhyB,GAAE,EAAUgyB,GACnCuiC,QAAUx0D,GAAUC,GAAE,EAASD,GAEvC,CAKA,OAAIe,GACA,OAAO1B,MAAK,CAChB,CAIA,WAAIo1D,GACA,OAAOp1D,MAAK,CAChB,CAIA,kBAAIq1D,GACA,OAAOr1D,MAAK,CAChB,CAIA,QAAIsD,GACA,OAAOtD,MAAK,CAChB,CAIA,eAAIs1D,GACA,OAAOt1D,MAAK,CAChB,CAIA,WAAIu1D,GACA,OAAOv1D,MAAK,CAChB,CAIA,gBAAIw1D,GACA,OAAOx1D,MAAK,CAChB,CACA,WAAAN,CAAYkzB,GACR,MAAM,IAAElxB,EAAM,EAAC,IAAE6xD,EAAG,cAAEC,EAAgB,EAAC,aAAEC,EAAY,eAAEC,EAAc,eAAEC,EAAc,WAAEC,EAAU,QAAE2B,EAAO,aAAEC,EAAY,eAAE3B,EAAc,YAAEC,EAAW,QAAEsB,EAAU,EAAC,aAAErB,EAAe,EAAC,gBAAEC,EAAe,YAAEsB,EAAW,yBAAErB,EAAwB,mBAAEC,EAAkB,2BAAEE,EAA0B,uBAAED,EAAsB,iBAAEE,GAAsBzhC,EAC5U,GAAY,IAARlxB,IAAcoxD,GAASpxD,GACvB,MAAM,IAAI4Y,UAAU,4CAExB,MAAMm7C,EAAY/zD,EAAMqxD,GAAarxD,GAAOjD,MAC5C,IAAKg3D,EACD,MAAM,IAAI92D,MAAM,sBAAwB+C,GAM5C,GAJA1B,MAAK,EAAO0B,EACZ1B,MAAK,EAAWo1D,EAChBp1D,KAAK+zD,aAAeA,GAAgB/zD,MAAK,EACzCA,KAAKg0D,gBAAkBA,EACnBh0D,KAAKg0D,gBAAiB,CACtB,IAAKh0D,MAAK,IAAaA,KAAK+zD,aACxB,MAAM,IAAIz5C,UAAU,sEAExB,GAAoC,mBAAzBta,KAAKg0D,gBACZ,MAAM,IAAI15C,UAAU,sCAE5B,CACA,QAAoB/B,IAAhB+8C,GACuB,mBAAhBA,EACP,MAAM,IAAIh7C,UAAU,+CAkCxB,GAhCAta,MAAK,EAAes1D,EACpBt1D,MAAK,IAAoBs1D,EACzBt1D,MAAK,EAAU,IAAI65C,IACnB75C,MAAK,EAAW,IAAIvB,MAAMiD,GAAK4e,UAAK/H,GACpCvY,MAAK,EAAW,IAAIvB,MAAMiD,GAAK4e,UAAK/H,GACpCvY,MAAK,EAAQ,IAAIy1D,EAAU/zD,GAC3B1B,MAAK,EAAQ,IAAIy1D,EAAU/zD,GAC3B1B,MAAK,EAAQ,EACbA,MAAK,EAAQ,EACbA,MAAK,EAAQkzD,GAAMzjC,OAAO/tB,GAC1B1B,MAAK,EAAQ,EACbA,MAAK,EAAkB,EACA,mBAAZu1D,IACPv1D,MAAK,EAAWu1D,GAEQ,mBAAjBC,GACPx1D,MAAK,EAAgBw1D,EACrBx1D,MAAK,EAAY,KAGjBA,MAAK,OAAgBuY,EACrBvY,MAAK,OAAYuY,GAErBvY,MAAK,IAAgBA,MAAK,EAC1BA,MAAK,IAAqBA,MAAK,EAC/BA,KAAK6zD,iBAAmBA,EACxB7zD,KAAK8zD,cAAgBA,EACrB9zD,KAAKi0D,2BAA6BA,EAClCj0D,KAAKo0D,6BAA+BA,EACpCp0D,KAAKm0D,yBAA2BA,EAChCn0D,KAAKq0D,mBAAqBA,EAEA,IAAtBr0D,KAAK+zD,aAAoB,CACzB,GAAsB,IAAlB/zD,MAAK,IACA8yD,GAAS9yD,MAAK,GACf,MAAM,IAAIsa,UAAU,mDAG5B,IAAKw4C,GAAS9yD,KAAK+zD,cACf,MAAM,IAAIz5C,UAAU,wDAExBta,MAAK,GACT,CAWA,GAVAA,KAAK4zD,aAAeA,EACpB5zD,KAAKk0D,qBAAuBA,EAC5Bl0D,KAAK0zD,iBAAmBA,EACxB1zD,KAAK2zD,iBAAmBA,EACxB3zD,KAAKwzD,cACDV,GAASU,IAAoC,IAAlBA,EACrBA,EACA,EACVxzD,KAAKyzD,eAAiBA,EACtBzzD,KAAKuzD,IAAMA,GAAO,EACdvzD,KAAKuzD,IAAK,CACV,IAAKT,GAAS9yD,KAAKuzD,KACf,MAAM,IAAIj5C,UAAU,+CAExBta,MAAK,GACT,CAEA,GAAkB,IAAdA,MAAK,GAA2B,IAAbA,KAAKuzD,KAA+B,IAAlBvzD,MAAK,EAC1C,MAAM,IAAIsa,UAAU,oDAExB,IAAKta,KAAKyzD,eAAiBzzD,MAAK,IAASA,MAAK,EAAU,CACpD,MAAMtB,EAAO,sBApUN,CAACA,IAAU+rB,GAAOirC,IAAIh3D,GAqUzBi3D,CAAWj3D,KACX+rB,GAAOziB,IAAItJ,GAGXuzD,GAFY,gGAEK,wBAAyBvzD,EAAM40D,IAExD,CACJ,CAIA,eAAAsC,CAAgB3oC,GACZ,OAAOjtB,MAAK,EAAQ01D,IAAIzoC,GAAOhF,IAAW,CAC9C,CACA,KACI,MAAMusC,EAAO,IAAIvB,GAAUjzD,MAAK,GAC1Bu0D,EAAS,IAAItB,GAAUjzD,MAAK,GAClCA,MAAK,EAAQw0D,EACbx0D,MAAK,EAAUu0D,EACfv0D,MAAK,EAAc,CAACW,EAAO4yD,EAAK10D,EAAQ+yD,GAAKE,SAGzC,GAFAyC,EAAO5zD,GAAiB,IAAR4yD,EAAY10D,EAAQ,EACpC21D,EAAK7zD,GAAS4yD,EACF,IAARA,GAAavzD,KAAKyzD,aAAc,CAChC,MAAM5tD,EAAIgwD,YAAW,KACb71D,MAAK,EAASW,IACdX,KAAKo7C,OAAOp7C,MAAK,EAASW,GAC9B,GACD4yD,EAAM,GAGL1tD,EAAEiwD,OACFjwD,EAAEiwD,OAGV,GAEJ91D,MAAK,EAAiBW,IAClB4zD,EAAO5zD,GAAyB,IAAhB6zD,EAAK7zD,GAAeixD,GAAKE,MAAQ,CAAC,EAEtD9xD,MAAK,EAAa,CAACiwD,EAAQtvD,KACvB,GAAI6zD,EAAK7zD,GAAQ,CACb,MAAM4yD,EAAMiB,EAAK7zD,GACX9B,EAAQ01D,EAAO5zD,GAErB,IAAK4yD,IAAQ10D,EACT,OACJoxD,EAAOsD,IAAMA,EACbtD,EAAOpxD,MAAQA,EACfoxD,EAAO6B,IAAMiE,GAAaC,IAC1B,MAAMC,EAAMhG,EAAO6B,IAAMjzD,EACzBoxD,EAAOiG,aAAe3C,EAAM0C,CAChC,GAIJ,IAAIF,EAAY,EAChB,MAAMC,EAAS,KACX,MAAMzmD,EAAIqiD,GAAKE,MACf,GAAI9xD,KAAKwzD,cAAgB,EAAG,CACxBuC,EAAYxmD,EACZ,MAAM1J,EAAIgwD,YAAW,IAAOE,EAAY,GAAI/1D,KAAKwzD,eAG7C3tD,EAAEiwD,OACFjwD,EAAEiwD,OAGV,CACA,OAAOvmD,CAAC,EAEZvP,KAAK41D,gBAAkB3oC,IACnB,MAAMtsB,EAAQX,MAAK,EAAQogB,IAAI6M,GAC/B,QAAc1U,IAAV5X,EACA,OAAO,EAEX,MAAM4yD,EAAMiB,EAAK7zD,GACX9B,EAAQ01D,EAAO5zD,GACrB,OAAK4yD,GAAQ10D,EAIN00D,IADMwC,GAAaC,KAAYn3D,GAF3BopB,GAGK,EAEpBjoB,MAAK,EAAWW,IACZ,MAAM6N,EAAI+lD,EAAO5zD,GACXkF,EAAI2uD,EAAK7zD,GACf,QAASkF,KAAO2I,IAAMunD,GAAaC,KAAYxnD,EAAI3I,CAAC,CAE5D,CAEA,GAAiB,OACjB,GAAa,OACb,GAAc,OAEd,GAAW,KAAM,EACjB,KACI,MAAM4uD,EAAQ,IAAIxB,GAAUjzD,MAAK,GACjCA,MAAK,EAAkB,EACvBA,MAAK,EAASy0D,EACdz0D,MAAK,EAAkBW,IACnBX,MAAK,GAAmBy0D,EAAM9zD,GAC9B8zD,EAAM9zD,GAAS,CAAC,EAEpBX,MAAK,EAAe,CAACmE,EAAG4mB,EAAGznB,EAAM0wD,KAG7B,GAAIh0D,MAAK,EAAmB+qB,GACxB,OAAO,EAEX,IAAK+nC,GAASxvD,GAAO,CACjB,IAAI0wD,EAUA,MAAM,IAAI15C,UAAU,6HATpB,GAA+B,mBAApB05C,EACP,MAAM,IAAI15C,UAAU,sCAGxB,GADAhX,EAAO0wD,EAAgBjpC,EAAG5mB,IACrB2uD,GAASxvD,GACV,MAAM,IAAIgX,UAAU,2DAQhC,CACA,OAAOhX,CAAI,EAEftD,MAAK,EAAe,CAACW,EAAO2C,EAAM2sD,KAE9B,GADAwE,EAAM9zD,GAAS2C,EACXtD,MAAK,EAAU,CACf,MAAMo1D,EAAUp1D,MAAK,EAAWy0D,EAAM9zD,GACtC,KAAOX,MAAK,EAAkBo1D,GAC1Bp1D,MAAK,GAAO,EAEpB,CACAA,MAAK,GAAmBy0D,EAAM9zD,GAC1BsvD,IACAA,EAAOkG,UAAY7yD,EACnB2sD,EAAOmG,oBAAsBp2D,MAAK,EACtC,CAER,CACA,GAAkBq2D,MAClB,GAAe,CAACA,EAAIC,EAAIC,KAAT,EACf,GAAe,CAACC,EAAInvB,EAAI/jC,EAAM0wD,KAC1B,GAAI1wD,GAAQ0wD,EACR,MAAM,IAAI15C,UAAU,oEAExB,OAAO,CAAC,EAEZ,GAAC,EAAS,WAAEs5C,EAAa5zD,KAAK4zD,YAAe,CAAC,GAC1C,GAAI5zD,MAAK,EACL,IAAK,IAAI3C,EAAI2C,MAAK,EACTA,MAAK,EAAc3C,MAGpBu2D,GAAe5zD,MAAK,EAAS3C,WACvBA,GAENA,IAAM2C,MAAK,IAIX3C,EAAI2C,MAAK,EAAM3C,EAI/B,CACA,GAAC,EAAU,WAAEu2D,EAAa5zD,KAAK4zD,YAAe,CAAC,GAC3C,GAAI5zD,MAAK,EACL,IAAK,IAAI3C,EAAI2C,MAAK,EACTA,MAAK,EAAc3C,MAGpBu2D,GAAe5zD,MAAK,EAAS3C,WACvBA,GAENA,IAAM2C,MAAK,IAIX3C,EAAI2C,MAAK,EAAM3C,EAI/B,CACA,GAAcsD,GACV,YAAkB4X,IAAV5X,GACJX,MAAK,EAAQogB,IAAIpgB,MAAK,EAASW,MAAYA,CACnD,CAKA,QAACu0C,GACG,IAAK,MAAM73C,KAAK2C,MAAK,SACQuY,IAArBvY,MAAK,EAAS3C,SACOkb,IAArBvY,MAAK,EAAS3C,IACb2C,MAAK,EAAmBA,MAAK,EAAS3C,WACjC,CAAC2C,MAAK,EAAS3C,GAAI2C,MAAK,EAAS3C,IAGnD,CAOA,SAACo5D,GACG,IAAK,MAAMp5D,KAAK2C,MAAK,SACQuY,IAArBvY,MAAK,EAAS3C,SACOkb,IAArBvY,MAAK,EAAS3C,IACb2C,MAAK,EAAmBA,MAAK,EAAS3C,WACjC,CAAC2C,MAAK,EAAS3C,GAAI2C,MAAK,EAAS3C,IAGnD,CAKA,KAAC0vB,GACG,IAAK,MAAM1vB,KAAK2C,MAAK,IAAY,CAC7B,MAAMmE,EAAInE,MAAK,EAAS3C,QACdkb,IAANpU,GACCnE,MAAK,EAAmBA,MAAK,EAAS3C,YACjC8G,EAEd,CACJ,CAOA,MAACuyD,GACG,IAAK,MAAMr5D,KAAK2C,MAAK,IAAa,CAC9B,MAAMmE,EAAInE,MAAK,EAAS3C,QACdkb,IAANpU,GACCnE,MAAK,EAAmBA,MAAK,EAAS3C,YACjC8G,EAEd,CACJ,CAKA,OAAC+pC,GACG,IAAK,MAAM7wC,KAAK2C,MAAK,SAEPuY,IADAvY,MAAK,EAAS3C,IAEnB2C,MAAK,EAAmBA,MAAK,EAAS3C,YACjC2C,MAAK,EAAS3C,GAGhC,CAOA,QAACs5D,GACG,IAAK,MAAMt5D,KAAK2C,MAAK,SAEPuY,IADAvY,MAAK,EAAS3C,IAEnB2C,MAAK,EAAmBA,MAAK,EAAS3C,YACjC2C,MAAK,EAAS3C,GAGhC,CAKA,CAACmG,OAAOq/B,YACJ,OAAO7iC,KAAKk1C,SAChB,CAKA,IAAA0hB,CAAKpuC,EAAIquC,EAAa,CAAC,GACnB,IAAK,MAAMx5D,KAAK2C,MAAK,IAAY,CAC7B,MAAM+qB,EAAI/qB,MAAK,EAAS3C,GAClBmd,EAAQxa,MAAK,EAAmB+qB,GAChCA,EAAE+rC,qBACF/rC,EACN,QAAcxS,IAAViC,GAEAgO,EAAGhO,EAAOxa,MAAK,EAAS3C,GAAI2C,MAC5B,OAAOA,KAAKogB,IAAIpgB,MAAK,EAAS3C,GAAIw5D,EAE1C,CACJ,CAOA,OAAA7pC,CAAQxE,EAAIuuC,EAAQ/2D,MAChB,IAAK,MAAM3C,KAAK2C,MAAK,IAAY,CAC7B,MAAM+qB,EAAI/qB,MAAK,EAAS3C,GAClBmd,EAAQxa,MAAK,EAAmB+qB,GAChCA,EAAE+rC,qBACF/rC,OACQxS,IAAViC,GAEJgO,EAAG/Q,KAAKs/C,EAAOv8C,EAAOxa,MAAK,EAAS3C,GAAI2C,KAC5C,CACJ,CAKA,QAAAg3D,CAASxuC,EAAIuuC,EAAQ/2D,MACjB,IAAK,MAAM3C,KAAK2C,MAAK,IAAa,CAC9B,MAAM+qB,EAAI/qB,MAAK,EAAS3C,GAClBmd,EAAQxa,MAAK,EAAmB+qB,GAChCA,EAAE+rC,qBACF/rC,OACQxS,IAAViC,GAEJgO,EAAG/Q,KAAKs/C,EAAOv8C,EAAOxa,MAAK,EAAS3C,GAAI2C,KAC5C,CACJ,CAKA,UAAAi3D,GACI,IAAIC,GAAU,EACd,IAAK,MAAM75D,KAAK2C,MAAK,EAAU,CAAE4zD,YAAY,IACrC5zD,MAAK,EAAS3C,KACd2C,KAAKo7C,OAAOp7C,MAAK,EAAS3C,IAC1B65D,GAAU,GAGlB,OAAOA,CACX,CAOA,IAAAtqB,CAAK3f,GACD,MAAM5vB,EAAI2C,MAAK,EAAQogB,IAAI6M,GAC3B,QAAU1U,IAANlb,EACA,OACJ,MAAM0tB,EAAI/qB,MAAK,EAAS3C,GAClBmd,EAAQxa,MAAK,EAAmB+qB,GAChCA,EAAE+rC,qBACF/rC,EACN,QAAcxS,IAAViC,EACA,OACJ,MAAMgjB,EAAQ,CAAEhjB,SAChB,GAAIxa,MAAK,GAASA,MAAK,EAAS,CAC5B,MAAMuzD,EAAMvzD,MAAK,EAAM3C,GACjBwB,EAAQmB,MAAK,EAAQ3C,GAC3B,GAAIk2D,GAAO10D,EAAO,CACd,MAAMs4D,EAAS5D,GAAO3B,GAAKE,MAAQjzD,GACnC2+B,EAAM+1B,IAAM4D,EACZ35B,EAAM3+B,MAAQ4sB,KAAKqmC,KACvB,CACJ,CAIA,OAHI9xD,MAAK,IACLw9B,EAAMl6B,KAAOtD,MAAK,EAAO3C,IAEtBmgC,CACX,CAKA,IAAA45B,GACI,MAAM95D,EAAM,GACZ,IAAK,MAAMD,KAAK2C,MAAK,EAAS,CAAE4zD,YAAY,IAAS,CACjD,MAAM3mC,EAAMjtB,MAAK,EAAS3C,GACpB0tB,EAAI/qB,MAAK,EAAS3C,GAClBmd,EAAQxa,MAAK,EAAmB+qB,GAChCA,EAAE+rC,qBACF/rC,EACN,QAAcxS,IAAViC,QAA+BjC,IAAR0U,EACvB,SACJ,MAAMuQ,EAAQ,CAAEhjB,SAChB,GAAIxa,MAAK,GAASA,MAAK,EAAS,CAC5Bw9B,EAAM+1B,IAAMvzD,MAAK,EAAM3C,GAGvB,MAAM44D,EAAMrE,GAAKE,MAAQ9xD,MAAK,EAAQ3C,GACtCmgC,EAAM3+B,MAAQuC,KAAKwmB,MAAM6D,KAAKqmC,MAAQmE,EAC1C,CACIj2D,MAAK,IACLw9B,EAAMl6B,KAAOtD,MAAK,EAAO3C,IAE7BC,EAAIsuB,QAAQ,CAACqB,EAAKuQ,GACtB,CACA,OAAOlgC,CACX,CAMA,IAAAksB,CAAKlsB,GACD0C,KAAKu5B,QACL,IAAK,MAAOtM,EAAKuQ,KAAUlgC,EAAK,CAC5B,GAAIkgC,EAAM3+B,MAAO,CAOb,MAAMo3D,EAAMxqC,KAAKqmC,MAAQt0B,EAAM3+B,MAC/B2+B,EAAM3+B,MAAQ+yD,GAAKE,MAAQmE,CAC/B,CACAj2D,KAAK6gB,IAAIoM,EAAKuQ,EAAMhjB,MAAOgjB,EAC/B,CACJ,CAOA,GAAA3c,CAAI1c,EAAG4mB,EAAGssC,EAAa,CAAC,GACpB,QAAU9+C,IAANwS,EAEA,OADA/qB,KAAKo7C,OAAOj3C,GACLnE,KAEX,MAAM,IAAEuzD,EAAMvzD,KAAKuzD,IAAG,MAAE10D,EAAK,eAAEg1D,EAAiB7zD,KAAK6zD,eAAc,gBAAEG,EAAkBh0D,KAAKg0D,gBAAe,OAAE/D,GAAYoH,EACzH,IAAI,YAAEvD,EAAc9zD,KAAK8zD,aAAgBuD,EACzC,MAAM/zD,EAAOtD,MAAK,EAAamE,EAAG4mB,EAAGssC,EAAW/zD,MAAQ,EAAG0wD,GAG3D,GAAIh0D,KAAK+zD,cAAgBzwD,EAAOtD,KAAK+zD,aAOjC,OANI9D,IACAA,EAAOpvC,IAAM,OACbovC,EAAOqH,sBAAuB,GAGlCt3D,KAAKo7C,OAAOj3C,GACLnE,KAEX,IAAIW,EAAuB,IAAfX,MAAK,OAAcuY,EAAYvY,MAAK,EAAQogB,IAAIjc,GAC5D,QAAcoU,IAAV5X,EAEAA,EAAwB,IAAfX,MAAK,EACRA,MAAK,EACiB,IAAtBA,MAAK,EAAMjC,OACPiC,MAAK,EAAMyxB,MACXzxB,MAAK,IAAUA,MAAK,EAChBA,MAAK,GAAO,GACZA,MAAK,EACnBA,MAAK,EAASW,GAASwD,EACvBnE,MAAK,EAASW,GAASoqB,EACvB/qB,MAAK,EAAQ6gB,IAAI1c,EAAGxD,GACpBX,MAAK,EAAMA,MAAK,GAASW,EACzBX,MAAK,EAAMW,GAASX,MAAK,EACzBA,MAAK,EAAQW,EACbX,MAAK,IACLA,MAAK,EAAaW,EAAO2C,EAAM2sD,GAC3BA,IACAA,EAAOpvC,IAAM,OACjBizC,GAAc,MAEb,CAED9zD,MAAK,EAAYW,GACjB,MAAM42D,EAASv3D,MAAK,EAASW,GAC7B,GAAIoqB,IAAMwsC,EAAQ,CACd,GAAIv3D,MAAK,GAAmBA,MAAK,EAAmBu3D,GAAS,CACzDA,EAAOC,kBAAkBlyB,MAAM,IAAI3mC,MAAM,aACzC,MAAQm4D,qBAAsBtoD,GAAM+oD,OAC1Bh/C,IAAN/J,GAAoBqlD,IAChB7zD,MAAK,GACLA,MAAK,IAAWwO,EAAGrK,EAAG,OAEtBnE,MAAK,GACLA,MAAK,GAAW5B,KAAK,CAACoQ,EAAGrK,EAAG,QAGxC,MACU0vD,IACF7zD,MAAK,GACLA,MAAK,IAAWu3D,EAAQpzD,EAAG,OAE3BnE,MAAK,GACLA,MAAK,GAAW5B,KAAK,CAACm5D,EAAQpzD,EAAG,SAMzC,GAHAnE,MAAK,EAAgBW,GACrBX,MAAK,EAAaW,EAAO2C,EAAM2sD,GAC/BjwD,MAAK,EAASW,GAASoqB,EACnBklC,EAAQ,CACRA,EAAOpvC,IAAM,UACb,MAAM42C,EAAWF,GAAUv3D,MAAK,EAAmBu3D,GAC7CA,EAAOT,qBACPS,OACWh/C,IAAbk/C,IACAxH,EAAOwH,SAAWA,EAC1B,CACJ,MACSxH,IACLA,EAAOpvC,IAAM,SAErB,CAWA,GAVY,IAAR0yC,GAAcvzD,MAAK,GACnBA,MAAK,IAELA,MAAK,IACA8zD,GACD9zD,MAAK,EAAYW,EAAO4yD,EAAK10D,GAE7BoxD,GACAjwD,MAAK,EAAWiwD,EAAQtvD,KAE3BkzD,GAAkB7zD,MAAK,GAAoBA,MAAK,EAAW,CAC5D,MAAM03D,EAAK13D,MAAK,EAChB,IAAI23D,EACJ,KAAQA,EAAOD,GAAIjyD,SACfzF,MAAK,OAAmB23D,EAEhC,CACA,OAAO33D,IACX,CAKA,GAAAyxB,GACI,IACI,KAAOzxB,MAAK,GAAO,CACf,MAAMd,EAAMc,MAAK,EAASA,MAAK,GAE/B,GADAA,MAAK,GAAO,GACRA,MAAK,EAAmBd,IACxB,GAAIA,EAAI43D,qBACJ,OAAO53D,EAAI43D,0BAGd,QAAYv+C,IAARrZ,EACL,OAAOA,CAEf,CACJ,CACA,QACI,GAAIc,MAAK,GAAoBA,MAAK,EAAW,CACzC,MAAM03D,EAAK13D,MAAK,EAChB,IAAI23D,EACJ,KAAQA,EAAOD,GAAIjyD,SACfzF,MAAK,OAAmB23D,EAEhC,CACJ,CACJ,CACA,GAAO9C,GACH,MAAMx7B,EAAOr5B,MAAK,EACZmE,EAAInE,MAAK,EAASq5B,GAClBtO,EAAI/qB,MAAK,EAASq5B,GA4BxB,OA3BIr5B,MAAK,GAAmBA,MAAK,EAAmB+qB,GAChDA,EAAEysC,kBAAkBlyB,MAAM,IAAI3mC,MAAM,aAE/BqB,MAAK,GAAeA,MAAK,KAC1BA,MAAK,GACLA,MAAK,IAAW+qB,EAAG5mB,EAAG,SAEtBnE,MAAK,GACLA,MAAK,GAAW5B,KAAK,CAAC2sB,EAAG5mB,EAAG,WAGpCnE,MAAK,EAAgBq5B,GAEjBw7B,IACA70D,MAAK,EAASq5B,QAAQ9gB,EACtBvY,MAAK,EAASq5B,QAAQ9gB,EACtBvY,MAAK,EAAM5B,KAAKi7B,IAED,IAAfr5B,MAAK,GACLA,MAAK,EAAQA,MAAK,EAAQ,EAC1BA,MAAK,EAAMjC,OAAS,GAGpBiC,MAAK,EAAQA,MAAK,EAAMq5B,GAE5Br5B,MAAK,EAAQo7C,OAAOj3C,GACpBnE,MAAK,IACEq5B,CACX,CASA,GAAAq8B,CAAIvxD,EAAGyzD,EAAa,CAAC,GACjB,MAAM,eAAEjE,EAAiB3zD,KAAK2zD,eAAc,OAAE1D,GAAW2H,EACnDj3D,EAAQX,MAAK,EAAQogB,IAAIjc,GAC/B,QAAcoU,IAAV5X,EAAqB,CACrB,MAAMoqB,EAAI/qB,MAAK,EAASW,GACxB,GAAIX,MAAK,EAAmB+qB,SACGxS,IAA3BwS,EAAE+rC,qBACF,OAAO,EAEX,IAAK92D,MAAK,EAASW,GAQf,OAPIgzD,GACA3zD,MAAK,EAAeW,GAEpBsvD,IACAA,EAAOyF,IAAM,MACb11D,MAAK,EAAWiwD,EAAQtvD,KAErB,EAEFsvD,IACLA,EAAOyF,IAAM,QACb11D,MAAK,EAAWiwD,EAAQtvD,GAEhC,MACSsvD,IACLA,EAAOyF,IAAM,QAEjB,OAAO,CACX,CAQA,IAAAmC,CAAK1zD,EAAG2zD,EAAc,CAAC,GACnB,MAAM,WAAElE,EAAa5zD,KAAK4zD,YAAekE,EACnCn3D,EAAQX,MAAK,EAAQogB,IAAIjc,GAC/B,QAAcoU,IAAV5X,IACEizD,GAAc5zD,MAAK,EAASW,GAC9B,OAEJ,MAAMoqB,EAAI/qB,MAAK,EAASW,GAExB,OAAOX,MAAK,EAAmB+qB,GAAKA,EAAE+rC,qBAAuB/rC,CACjE,CACA,GAAiB5mB,EAAGxD,EAAOiyB,EAASzB,GAChC,MAAMpG,OAAcxS,IAAV5X,OAAsB4X,EAAYvY,MAAK,EAASW,GAC1D,GAAIX,MAAK,EAAmB+qB,GACxB,OAAOA,EAEX,MAAMgtC,EAAK,IAAI7F,IACT,OAAES,GAAW//B,EAEnB+/B,GAAQhiC,iBAAiB,SAAS,IAAMonC,EAAGzyB,MAAMqtB,EAAOH,SAAS,CAC7DG,OAAQoF,EAAGpF,SAEf,MAAMqF,EAAY,CACdrF,OAAQoF,EAAGpF,OACX//B,UACAzB,WAEE0E,EAAK,CAAC9K,EAAGktC,GAAc,KACzB,MAAM,QAAExF,GAAYsF,EAAGpF,OACjBuF,EAActlC,EAAQyhC,uBAA0B97C,IAANwS,EAYhD,GAXI6H,EAAQq9B,SACJwC,IAAYwF,GACZrlC,EAAQq9B,OAAOkI,cAAe,EAC9BvlC,EAAQq9B,OAAOmI,WAAaL,EAAGpF,OAAOH,OAClC0F,IACAtlC,EAAQq9B,OAAOoI,mBAAoB,IAGvCzlC,EAAQq9B,OAAOqI,eAAgB,GAGnC7F,IAAYyF,IAAgBD,EAC5B,OAAOM,EAAUR,EAAGpF,OAAOH,QAG/B,MAAMgG,EAAK1pD,EAgBX,OAfI9O,MAAK,EAASW,KAAWmO,SACfyJ,IAANwS,EACIytC,EAAG1B,qBACH92D,MAAK,EAASW,GAAS63D,EAAG1B,qBAG1B92D,KAAKo7C,OAAOj3C,IAIZyuB,EAAQq9B,SACRr9B,EAAQq9B,OAAOwI,cAAe,GAClCz4D,KAAK6gB,IAAI1c,EAAG4mB,EAAGitC,EAAUplC,WAG1B7H,CAAC,EASNwtC,EAAarnC,IACf,MAAM,QAAEuhC,GAAYsF,EAAGpF,OACjB+F,EAAoBjG,GAAW7/B,EAAQuhC,uBACvCP,EAAa8E,GAAqB9lC,EAAQwhC,2BAC1CuE,EAAW/E,GAAchhC,EAAQqhC,yBACjCuE,EAAK1pD,EAgBX,GAfI9O,MAAK,EAASW,KAAWmO,IAGZ6pD,QAAwCpgD,IAA5BigD,EAAG1B,qBAIlB4B,IAKN14D,MAAK,EAASW,GAAS63D,EAAG1B,sBAP1B92D,KAAKo7C,OAAOj3C,IAUhByvD,EAIA,OAHIhhC,EAAQq9B,aAAsC13C,IAA5BigD,EAAG1B,uBACrBlkC,EAAQq9B,OAAO2I,eAAgB,GAE5BJ,EAAG1B,qBAET,GAAI0B,EAAGK,aAAeL,EACvB,MAAMtnC,CACV,EAqBA0B,EAAQq9B,SACRr9B,EAAQq9B,OAAO6I,iBAAkB,GACrC,MAAMhqD,EAAI,IAAImf,SArBA,CAAC7oB,EAAK2zD,KAChB,MAAMC,EAAMh5D,MAAK,IAAemE,EAAG4mB,EAAGitC,GAClCgB,GAAOA,aAAe/qC,SACtB+qC,EAAIv2B,MAAK1X,GAAK3lB,OAAUmT,IAANwS,OAAkBxS,EAAYwS,IAAIguC,GAKxDhB,EAAGpF,OAAOhiC,iBAAiB,SAAS,KAC3BiC,EAAQyhC,mBACTzhC,EAAQuhC,yBACR/uD,OAAImT,GAEAqa,EAAQuhC,yBACR/uD,EAAM2lB,GAAK8K,EAAG9K,GAAG,IAEzB,GACF,IAIuB0X,KAAK5M,GA3DtB3E,IACJ0B,EAAQq9B,SACRr9B,EAAQq9B,OAAOgJ,eAAgB,EAC/BrmC,EAAQq9B,OAAOmI,WAAalnC,GAEzBqnC,EAAUrnC,MAuDfsnC,EAAKt+C,OAAO0zB,OAAO9+B,EAAG,CACxB0oD,kBAAmBO,EACnBjB,qBAAsB/rC,EACtB8tC,gBAAYtgD,IAUhB,YARcA,IAAV5X,GAEAX,KAAK6gB,IAAI1c,EAAGq0D,EAAI,IAAKR,EAAUplC,QAASq9B,YAAQ13C,IAChD5X,EAAQX,MAAK,EAAQogB,IAAIjc,IAGzBnE,MAAK,EAASW,GAAS63D,EAEpBA,CACX,CACA,GAAmB1pD,GACf,IAAK9O,MAAK,EACN,OAAO,EACX,MAAMmB,EAAI2N,EACV,QAAU3N,GACNA,aAAa8sB,SACb9sB,EAAEspC,eAAe,yBACjBtpC,EAAEq2D,6BAA6BtF,EACvC,CACA,WAAM9+B,CAAMjvB,EAAG+0D,EAAe,CAAC,GAC3B,MAAM,WAENtF,EAAa5zD,KAAK4zD,WAAU,eAAEF,EAAiB1zD,KAAK0zD,eAAc,mBAAEQ,EAAqBl0D,KAAKk0D,mBAAkB,IAEhHX,EAAMvzD,KAAKuzD,IAAG,eAAEM,EAAiB7zD,KAAK6zD,eAAc,KAAEvwD,EAAO,EAAC,gBAAE0wD,EAAkBh0D,KAAKg0D,gBAAe,YAAEF,EAAc9zD,KAAK8zD,YAAW,yBAEtIG,EAA2Bj0D,KAAKi0D,yBAAwB,2BAAEG,EAA6Bp0D,KAAKo0D,2BAA0B,iBAAEC,EAAmBr0D,KAAKq0D,iBAAgB,uBAAEF,EAAyBn0D,KAAKm0D,uBAAsB,QAAEhjC,EAAO,aAAEgoC,GAAe,EAAK,OAAElJ,EAAM,OAAE0C,GAAYuG,EAC3Q,IAAKl5D,MAAK,EAGN,OAFIiwD,IACAA,EAAO78B,MAAQ,OACZpzB,KAAKogB,IAAIjc,EAAG,CACfyvD,aACAF,iBACAQ,qBACAjE,WAGR,MAAMr9B,EAAU,CACZghC,aACAF,iBACAQ,qBACAX,MACAM,iBACAvwD,OACA0wD,kBACAF,cACAG,2BACAG,6BACAD,yBACAE,mBACApE,SACA0C,UAEJ,IAAIhyD,EAAQX,MAAK,EAAQogB,IAAIjc,GAC7B,QAAcoU,IAAV5X,EAAqB,CACjBsvD,IACAA,EAAO78B,MAAQ,QACnB,MAAMtkB,EAAI9O,MAAK,EAAiBmE,EAAGxD,EAAOiyB,EAASzB,GACnD,OAAQriB,EAAE+pD,WAAa/pD,CAC3B,CACK,CAED,MAAMic,EAAI/qB,MAAK,EAASW,GACxB,GAAIX,MAAK,EAAmB+qB,GAAI,CAC5B,MAAMquC,EAAQxF,QAAyCr7C,IAA3BwS,EAAE+rC,qBAM9B,OALI7G,IACAA,EAAO78B,MAAQ,WACXgmC,IACAnJ,EAAO2I,eAAgB,IAExBQ,EAAQruC,EAAE+rC,qBAAwB/rC,EAAE8tC,WAAa9tC,CAC5D,CAGA,MAAMoqC,EAAUn1D,MAAK,EAASW,GAC9B,IAAKw4D,IAAiBhE,EASlB,OARIlF,IACAA,EAAO78B,MAAQ,OACnBpzB,MAAK,EAAYW,GACb+yD,GACA1zD,MAAK,EAAeW,GAEpBsvD,GACAjwD,MAAK,EAAWiwD,EAAQtvD,GACrBoqB,EAIX,MAAMjc,EAAI9O,MAAK,EAAiBmE,EAAGxD,EAAOiyB,EAASzB,GAE7CkoC,OADsC9gD,IAA3BzJ,EAAEgoD,sBACUlD,EAM7B,OALI3D,IACAA,EAAO78B,MAAQ+hC,EAAU,QAAU,UAC/BkE,GAAYlE,IACZlF,EAAO2I,eAAgB,IAExBS,EAAWvqD,EAAEgoD,qBAAwBhoD,EAAE+pD,WAAa/pD,CAC/D,CACJ,CAOA,GAAAsR,CAAIjc,EAAG0yD,EAAa,CAAC,GACjB,MAAM,WAAEjD,EAAa5zD,KAAK4zD,WAAU,eAAEF,EAAiB1zD,KAAK0zD,eAAc,mBAAEQ,EAAqBl0D,KAAKk0D,mBAAkB,OAAEjE,GAAY4G,EAChIl2D,EAAQX,MAAK,EAAQogB,IAAIjc,GAC/B,QAAcoU,IAAV5X,EAAqB,CACrB,MAAM6Z,EAAQxa,MAAK,EAASW,GACtB24D,EAAWt5D,MAAK,EAAmBwa,GAGzC,OAFIy1C,GACAjwD,MAAK,EAAWiwD,EAAQtvD,GACxBX,MAAK,EAASW,IACVsvD,IACAA,EAAO7vC,IAAM,SAEZk5C,GASGrJ,GACA2D,QAC+Br7C,IAA/BiC,EAAMs8C,uBACN7G,EAAO2I,eAAgB,GAEpBhF,EAAap5C,EAAMs8C,0BAAuBv+C,IAb5C27C,GACDl0D,KAAKo7C,OAAOj3C,GAEZ8rD,GAAU2D,IACV3D,EAAO2I,eAAgB,GACpBhF,EAAap5C,OAAQjC,KAY5B03C,IACAA,EAAO7vC,IAAM,OAMbk5C,EACO9+C,EAAMs8C,sBAEjB92D,MAAK,EAAYW,GACb+yD,GACA1zD,MAAK,EAAeW,GAEjB6Z,GAEf,CACSy1C,IACLA,EAAO7vC,IAAM,OAErB,CACA,GAAStR,EAAGS,GACRvP,MAAK,EAAMuP,GAAKT,EAChB9O,MAAK,EAAM8O,GAAKS,CACpB,CACA,GAAY5O,GASJA,IAAUX,MAAK,IACXW,IAAUX,MAAK,EACfA,MAAK,EAAQA,MAAK,EAAMW,GAGxBX,MAAK,EAASA,MAAK,EAAMW,GAAQX,MAAK,EAAMW,IAEhDX,MAAK,EAASA,MAAK,EAAOW,GAC1BX,MAAK,EAAQW,EAErB,CAKA,OAAOwD,GACH,IAAI+yD,GAAU,EACd,GAAmB,IAAfl3D,MAAK,EAAa,CAClB,MAAMW,EAAQX,MAAK,EAAQogB,IAAIjc,GAC/B,QAAcoU,IAAV5X,EAEA,GADAu2D,GAAU,EACS,IAAfl3D,MAAK,EACLA,KAAKu5B,YAEJ,CACDv5B,MAAK,EAAgBW,GACrB,MAAMoqB,EAAI/qB,MAAK,EAASW,GAexB,GAdIX,MAAK,EAAmB+qB,GACxBA,EAAEysC,kBAAkBlyB,MAAM,IAAI3mC,MAAM,aAE/BqB,MAAK,GAAeA,MAAK,KAC1BA,MAAK,GACLA,MAAK,IAAW+qB,EAAG5mB,EAAG,UAEtBnE,MAAK,GACLA,MAAK,GAAW5B,KAAK,CAAC2sB,EAAG5mB,EAAG,YAGpCnE,MAAK,EAAQo7C,OAAOj3C,GACpBnE,MAAK,EAASW,QAAS4X,EACvBvY,MAAK,EAASW,QAAS4X,EACnB5X,IAAUX,MAAK,EACfA,MAAK,EAAQA,MAAK,EAAMW,QAEvB,GAAIA,IAAUX,MAAK,EACpBA,MAAK,EAAQA,MAAK,EAAMW,OAEvB,CACD,MAAM44D,EAAKv5D,MAAK,EAAMW,GACtBX,MAAK,EAAMu5D,GAAMv5D,MAAK,EAAMW,GAC5B,MAAM64D,EAAKx5D,MAAK,EAAMW,GACtBX,MAAK,EAAMw5D,GAAMx5D,MAAK,EAAMW,EAChC,CACAX,MAAK,IACLA,MAAK,EAAM5B,KAAKuC,EACpB,CAER,CACA,GAAIX,MAAK,GAAoBA,MAAK,GAAWjC,OAAQ,CACjD,MAAM25D,EAAK13D,MAAK,EAChB,IAAI23D,EACJ,KAAQA,EAAOD,GAAIjyD,SACfzF,MAAK,OAAmB23D,EAEhC,CACA,OAAOT,CACX,CAIA,KAAA39B,GACI,IAAK,MAAM54B,KAASX,MAAK,EAAU,CAAE4zD,YAAY,IAAS,CACtD,MAAM7oC,EAAI/qB,MAAK,EAASW,GACxB,GAAIX,MAAK,EAAmB+qB,GACxBA,EAAEysC,kBAAkBlyB,MAAM,IAAI3mC,MAAM,gBAEnC,CACD,MAAMwF,EAAInE,MAAK,EAASW,GACpBX,MAAK,GACLA,MAAK,IAAW+qB,EAAG5mB,EAAG,UAEtBnE,MAAK,GACLA,MAAK,GAAW5B,KAAK,CAAC2sB,EAAG5mB,EAAG,UAEpC,CACJ,CAgBA,GAfAnE,MAAK,EAAQu5B,QACbv5B,MAAK,EAASsgB,UAAK/H,GACnBvY,MAAK,EAASsgB,UAAK/H,GACfvY,MAAK,GAASA,MAAK,IACnBA,MAAK,EAAMsgB,KAAK,GAChBtgB,MAAK,EAAQsgB,KAAK,IAElBtgB,MAAK,GACLA,MAAK,EAAOsgB,KAAK,GAErBtgB,MAAK,EAAQ,EACbA,MAAK,EAAQ,EACbA,MAAK,EAAMjC,OAAS,EACpBiC,MAAK,EAAkB,EACvBA,MAAK,EAAQ,EACTA,MAAK,GAAoBA,MAAK,EAAW,CACzC,MAAM03D,EAAK13D,MAAK,EAChB,IAAI23D,EACJ,KAAQA,EAAOD,GAAIjyD,SACfzF,MAAK,OAAmB23D,EAEhC,CACJ,ECp5CG,MAAM8B,GAIT,WAAA/5D,CAAY08B,GAERp8B,KAAK05D,OAAS,CACVC,MAAO,CACHC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAEZC,GAAI,CACAH,MAAO,EACPC,KAAM,EACNC,OAAQ,IAGhB95D,KAAK+5D,GAAK39B,EAAK29B,GACf/5D,KAAKg6D,UAAY59B,EAAK49B,WAAa,EACnCh6D,KAAKi6D,cAAgB79B,EAAK69B,eAAiBxN,GAAchvC,OAEzDzd,KAAKk6D,YAAc,GACfl6D,KAAKg6D,UAAY,IAEjBh6D,KAAKm6D,OAAS,IAAI7G,GAAS,CACvB5xD,IAAK1B,KAAKg6D,UACVtG,gBAAgB,IAG5B,CAKA,cAAA0G,CAAeF,GACXl6D,KAAKk6D,YAAc,GACnB,IAAK,IAAI78D,EAAI,EAAGA,EAAI68D,EAAYn8D,OAAQV,IACpC2C,KAAKk6D,YAAY97D,KAAK,CAClB9B,KAAM49D,EAAY78D,GAAGf,KACrB+9D,YAAa,IAAIxgB,IAAIqgB,EAAY78D,GAAGg9D,cAGhD,CAIA,cAAAC,GACI,OAAOt6D,KAAKk6D,YAAYn8D,OAAS,CACrC,CAKA,UAAAw8D,CAAWj+D,GACP0D,KAAKk6D,YAAY97D,KAAK,CAAEi8D,YAAa,IAAIxgB,IAAOv9C,QACpD,CAIA,YAAMk+D,GACF,MAAM,YAAEH,GAAgBr6D,KAAKk6D,YAAYzoC,MACzC,GAAKzxB,KAAKs6D,iBAoBL,CAED,MAAMG,EAAqBz6D,KAAKk6D,YAAYl6D,KAAKk6D,YAAYn8D,OAAS,GAAGs8D,YACzE,IAAK,MAAOptC,EAAKzS,KAAU6/C,EAAYnlB,UACnCulB,EAAmB55C,IAAIoM,EAAKzS,EAEpC,KA1B4B,CAExB,MAAMkgD,EAAU,GAChB,IAAK,MAAOztC,EAAKzS,KAAU6/C,EAAYnlB,eACrB38B,IAAViC,EACAkgD,EAAQt8D,KAAK,CACT0d,KAAM,MACNmR,IAAK,GAAqBA,KAI9BytC,EAAQt8D,KAAK,CACT0d,KAAM,MACNmR,IAAK,GAAqBA,GAC1BzS,gBAINxa,KAAKsvD,MAAMoL,EACrB,CAQJ,CAIA,YAAMC,GACF,MAAM,KAAEr+D,GAAS0D,KAAKk6D,YAAYzoC,MAClC,OAAOn1B,CACX,CAIA,SAAM8jB,CAAI6M,GACN,MAAM2tC,EAAS,GAAqB3tC,GACpC,QAAoB1U,IAAhBvY,KAAKm6D,OAAsB,CAC3B,MAAM3/C,EAAQxa,KAAKm6D,OAAO/5C,IAAIw6C,GAE9B,GADA56D,KAAK05D,OAAOC,MAAMC,OAAS,OACbrhD,IAAViC,EAEA,OADAxa,KAAK05D,OAAOC,MAAME,MAAQ,EACnBr/C,CAEf,CAEA,IAAK,IAAI7Z,EAAQX,KAAKk6D,YAAYn8D,OAAS,EAAG4C,GAAS,EAAGA,IACtD,GAAIX,KAAKk6D,YAAYv5D,GAAO05D,YAAY3E,IAAIkF,GACxC,OAAO56D,KAAKk6D,YAAYv5D,GAAO05D,YAAYj6C,IAAIw6C,GAIvD,MAAMpgD,QAAcxa,KAAK+5D,GAAG35C,IAAIw6C,EAAQ,CACpCC,YAAarO,GAAY/uC,OACzBw8C,cAAej6D,KAAKi6D,gBAExBj6D,KAAK05D,OAAOK,GAAGH,OAAS,OACVrhD,IAAViC,IACAxa,KAAK05D,OAAOK,GAAGF,MAAQ,GAE3B,MAAMiB,OAAwBviD,IAAViC,EACdA,aAAiBhc,WACbgc,EACA,GAAqBA,QACzBjC,EAON,OANAvY,KAAKm6D,QAAQt5C,IAAI+5C,EAAQE,GACrB96D,KAAKs6D,kBAGLt6D,KAAKk6D,YAAYl6D,KAAKk6D,YAAYn8D,OAAS,GAAGs8D,YAAYx5C,IAAI+5C,EAAQE,GAEnEA,CACX,CAIA,SAAM1L,CAAIniC,EAAKzS,GACX,MAAMogD,EAAS,GAAqB3tC,GACpC,GAAIjtB,KAAKs6D,iBAELt6D,KAAKk6D,YAAYl6D,KAAKk6D,YAAYn8D,OAAS,GAAGs8D,YAAYx5C,IAAI+5C,EAAQpgD,OAErE,CACD,MAAMugD,EAAW/6D,KAAKi6D,gBAAkBxN,GAAcuO,MAAQxgD,EAAQ,GAAqBA,SACrFxa,KAAK+5D,GAAG3K,IAAIwL,EAAQG,EAAU,CAChCF,YAAarO,GAAY/uC,OACzBw8C,cAAej6D,KAAKi6D,gBAExBj6D,KAAK05D,OAAOK,GAAGD,QAAU,OACLvhD,IAAhBvY,KAAKm6D,SACLn6D,KAAKm6D,OAAOt5C,IAAI+5C,EAAQpgD,GACxBxa,KAAK05D,OAAOC,MAAMG,QAAU,EAEpC,CACJ,CAIA,SAAMzK,CAAIpiC,GACN,MAAM2tC,EAAS,GAAqB3tC,GAChCjtB,KAAKs6D,iBAELt6D,KAAKk6D,YAAYl6D,KAAKk6D,YAAYn8D,OAAS,GAAGs8D,YAAYx5C,IAAI+5C,OAAQriD,UAIhEvY,KAAK+5D,GAAG1K,IAAIuL,EAAQ,CACtBC,YAAarO,GAAY/uC,SAE7Bzd,KAAK05D,OAAOK,GAAGD,QAAU,OACLvhD,IAAhBvY,KAAKm6D,SACLn6D,KAAKm6D,OAAOt5C,IAAI+5C,OAAQriD,GACxBvY,KAAK05D,OAAOC,MAAMG,QAAU,GAGxC,CAIA,WAAMxK,CAAMC,GACR,GAAIvvD,KAAKs6D,iBACL,IAAK,MAAM9K,KAAMD,EACG,QAAZC,EAAG1zC,WACG9b,KAAKovD,IAAII,EAAGviC,IAAKuiC,EAAGh1C,OAET,QAAZg1C,EAAG1zC,YACF9b,KAAKqvD,IAAIG,EAAGviC,SAIzB,CACD,MAAMguC,EAAe1L,EAAQ7iC,KAAK8iC,IAC9B,MAAM0L,EAAc,CAChBjuC,IAAK,GAAqBuiC,EAAGviC,KAC7BzS,MAAmB,QAAZg1C,EAAG1zC,KAAiB0zC,EAAGh1C,WAAQjC,EACtCuD,KAAM0zC,EAAG1zC,KACTsgB,KAAM,IAAKozB,EAAGpzB,KAAW69B,cAAej6D,KAAKi6D,gBAKjD,MAHgB,QAAZzK,EAAG1zC,MAAkB9b,KAAKi6D,gBAAkBxN,GAAchvC,SAC1Dy9C,EAAY1gD,MAAQ,GAAqB0gD,EAAY1gD,QAElD0gD,CAAW,UAEhBl7D,KAAK+5D,GAAGzK,MAAM2L,EACxB,CACJ,CACA,KAAAE,CAAMtnB,GAAQ,GACV,MAAMsnB,EAAQ,IAAKn7D,KAAK05D,OAAQp2D,KAAMtD,KAAKm6D,QAAQ72D,MAAQ,GAe3D,OAdIuwC,IACA7zC,KAAK05D,OAAS,CACVC,MAAO,CACHC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAEZC,GAAI,CACAH,MAAO,EACPC,KAAM,EACNC,OAAQ,KAIbqB,CACX,CAIA,WAAA1L,GACI,OAAO,IAAIgK,GAAa,CACpBM,GAAI/5D,KAAK+5D,GACTC,UAAWh6D,KAAKg6D,UAChBC,cAAej6D,KAAKi6D,eAE5B,CACA,IAAAvK,GACI,OAAOzhC,QAAQC,SACnB,ECtPG,MAAMktC,GACT,WAAA17D,GACIM,KAAKq7D,UAAY,IAAI58D,MAAM,IAAI6hB,KAAK,MACpCtgB,KAAKs7D,OAAS,IAClB,CACA,gBAAOC,CAAUj+D,GACb,MAAMg0D,EAAO,IAAI8J,GAGjB,OAFA9J,EAAK+J,UAAY/9D,EAAIud,MAAM,EAAG,IAC9By2C,EAAKgK,OAASh+D,EAAI,IACXg0D,CACX,CACA,KAAA92C,CAAMuQ,GAIF,OAHIA,UACA/qB,KAAKs7D,OAASvwC,GAEX/qB,KAAKs7D,QAAUt7D,KAAKs7D,OAAOv9D,OAAS,EAAIiC,KAAKs7D,OAAS,IACjE,CACA,SAAAE,CAAUn+D,EAAG0tB,GACT/qB,KAAKq7D,UAAUh+D,GAAK0tB,CACxB,CACA,GAAA4iC,GACI,MAAO,IAAI3tD,KAAKq7D,UAAWr7D,KAAKs7D,OACpC,CACA,SAAAG,GACI,OAAO,GAAWz7D,KAAK2tD,MAC3B,CACA,SAAA+N,CAAUr+D,GACN,MAAM8D,EAAInB,KAAKq7D,UAAUh+D,GACzB,OAAU,OAAN8D,GAAcA,EAAEpD,OAAS,EAClBoD,EAGA,IAEf,CACA,WAAAw6D,GACI,MAAM9wB,EAAW,GACjB,IAAK,IAAIxtC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAM8D,EAAInB,KAAKq7D,UAAUh+D,GACf,OAAN8D,GAAcA,EAAEpD,OAAS,GACzB8sC,EAASzsC,KAAK,CAACf,EAAG8D,GAE1B,CACA,OAAO0pC,CACX,ECxCG,SAAS,GAAa5d,EAAK2uC,GAa9B,OAXI3uC,EAAIlvB,OAAS,EACbkvB,EAAIrB,QAAQ,IAIZqB,EAAIrB,QAAQ,GACZqB,EAAIrB,QAAQ,IAEZgwC,IACA3uC,EAAI,IAAM,GAEPA,CACX,CCbO,SAAS4uC,GAAe5uC,GAC3B,MAAM6uC,EAAO,GAAQ7uC,GACf8uC,EAAU,GAChB,IAAK,IAAI1+D,EAAI,EAAGA,EAAIy+D,EAAK/9D,OAAQV,IAAK,CAClC,IAAI0T,EAAQ,EAAJ1T,EACR0+D,EAAQhrD,GAAK+qD,EAAKz+D,IAAM,IACtB0T,EACFgrD,EAAQhrD,GAAK+qD,EAAKz+D,GAAK,EAC3B,CACA,OAAO0+D,CACX,CAMO,SAASC,GAAe1+D,GAC3B,MAAM2c,EAAM,IAAIzb,WAAWlB,EAAIS,OAAS,GACxC,IAAK,IAAIV,EAAI,EAAGA,EAAI4c,EAAIlc,OAAQV,IAAK,CACjC,IAAI0T,EAAQ,EAAJ1T,EACR4c,EAAI5c,IAAMC,EAAIyT,IAAM,GAAKzT,IAAMyT,EACnC,CACA,OAAOkJ,CACX,CASO,SAASgiD,GAAelpB,EAAIC,GAC/B,MAAMkpB,EAAY96D,KAAKC,IAAI0xC,EAAGh1C,OAAQi1C,EAAGj1C,QACzC,IAAIqH,EAAM,EACV,IAAK,IAAI/H,EAAI,EAAGA,EAAI6+D,EAAW7+D,IAAK,CAChC,GAAI01C,EAAG11C,GAAK21C,EAAG31C,GAAI,CACf+H,GAAO,EACP,KACJ,CACK,GAAI2tC,EAAG11C,GAAK21C,EAAG31C,GAAI,CACpB+H,EAAM,EACN,KACJ,CACJ,CASA,OARY,IAARA,IACI2tC,EAAGh1C,OAASi1C,EAAGj1C,OACfqH,GAAO,EAEF2tC,EAAGh1C,OAASi1C,EAAGj1C,SACpBqH,EAAM,IAGPA,CACX,CAOO,SAAS+2D,GAAqBC,EAAMC,GACvC,IAAIh/D,EAAI,EACR,KAAO++D,EAAK/+D,KAAOg/D,EAAKh/D,IAAM++D,EAAKr+D,OAASV,GACxCA,IAEJ,OAAOA,CACX,CCtEO,MAAMi/D,GACT,WAAA58D,CAAYq8D,EAASvhD,EAAOohD,GACxB57D,KAAKu8D,SAAWR,EAChB/7D,KAAKs7D,OAAS9gD,EACdxa,KAAKw8D,YAAcZ,CACvB,CACA,gBAAOa,CAAUxvC,GACb,OFewB/tB,EEfD+tB,GFgBnB,GAAK,EACH/tB,EAAI2b,MAAM,GAGV3b,EAAI2b,MAAM,GALjB,IAAyB3b,CEd5B,CACA,GAAA+tB,CAAI9oB,GAIA,YAHUoU,IAANpU,IACAnE,KAAKu8D,SAAWp4D,GAEbnE,KAAKu8D,SAAS1hD,MAAM,EAC/B,CACA,SAAA6hD,GACI,OAAO18D,KAAKu8D,SAASx+D,MACzB,CACA,KAAAyc,CAAMuQ,GAIF,YAHUxS,IAANwS,IACA/qB,KAAKs7D,OAASvwC,GAEX/qB,KAAKs7D,MAChB,CACA,UAAAqB,GACI,OAAO,GAAa38D,KAAKu8D,SAAS1hD,MAAM,GAAI7a,KAAKw8D,YACrD,CACA,GAAA7O,GACI,MAAO,CAACqO,GAAeh8D,KAAK28D,cAAe38D,KAAKs7D,OACpD,CACA,SAAAG,GACI,OAAO,GAAWz7D,KAAK2tD,MAC3B,ECjCG,MAAMiP,WAAsBN,GAC/B,WAAA58D,CAAYq8D,EAASvhD,GACjB0M,MAAM60C,EAASvhD,GAAO,EAC1B,CACA,gBAAOqiD,CAAU5vC,GACb,OAAO,GAAaA,GAAK,EAC7B,ECNG,MAAM6vC,WAAiBR,GAC1B,WAAA58D,CAAYq8D,EAASvhD,GACjB0M,MAAM60C,EAASvhD,GAAO,EAC1B,CACA,gBAAOqiD,CAAU5vC,GACb,OAAO,GAAaA,GAAK,EAC7B,ECFG,SAAS8vC,GAAcpP,GAC1B,GAAmB,KAAfA,EAAI5vD,OACJ,OAAOq9D,GAAWG,UAAU5N,GAE3B,GAAmB,IAAfA,EAAI5vD,OAAc,CACvB,MAAMg+D,EAAUF,GAAelO,EAAI,IACnC,OAAiBoO,EL4BV,GAAK,EK3BD,IAAIe,GAASA,GAASL,UAAUV,GAAUpO,EAAI,IAElD,IAAIiP,GAAcA,GAAcH,UAAUV,GAAUpO,EAAI,GACnE,CAEI,MAAM,IAAIhvD,MAAM,eAExB,CACO,SAASq+D,GAAUztD,GACtB,OAAO9Q,MAAMgD,QAAQ8N,MAAQA,aAAa/Q,WAC9C,eCtBO,MAAMy+D,GAAc,EAAY,YCchCrN,eAAgBsN,GAAUC,EAAUC,EAAa,GAAIC,EAAUzN,MAAO0N,EAAWv4B,KAAlB6qB,EAAgC5sB,EAAS4sB,MAAO0N,EAAWv4B,KAAS,EAAMw4B,EAAU,IAAIxL,KAC1J,IAAI,GAAYoL,EAAUn9D,KAAKw9D,iBAG/B,IACI,MAAMlM,QAAatxD,KAAKy9D,WAAWN,GACnC,QAAa5kD,IAAT+4C,GAAsBiM,EAAQ7H,IAAI,EAAM11D,KAAKktB,KAAKokC,EAAKmK,eACvD,OAOJ,GALA8B,EAAQv1D,IAAI,EAAMhI,KAAKktB,KAAKokC,EAAKmK,qBAC3B4B,EAAQ/L,EAAM8L,SACVp6B,EAAOsuB,EAAM8L,UACb,CAAE9L,KAAMA,EAAM8L,eAEpB9L,aAAgB8J,GAChB,IAAK,MAAOsC,EAAQC,KAAcrM,EAAK+J,UAAUnmB,UAAW,CACxD,MAAM0oB,EAAU,IAAIR,EAAYM,GAC1BG,EAAaF,aAAqBn/D,WAAam/D,EAAY39D,KAAKktB,KAAK,GAAWywC,UAC/ET,GAAU/sC,KAAKnwB,KAAfk9D,CAAqBW,EAAYD,EAASP,EAASr6B,EAAQu6B,EACtE,MAEC,GAAIjM,aAAgBsL,GAAe,CACpC,MAAMe,EAAYrM,EAAK92C,QACjBojD,EAAU,IAAIR,KAAe9L,EAAKiL,gBACjCW,GAAU/sC,KAAKnwB,KAAfk9D,CAAqBS,EAAWC,EAASP,EAASr6B,EAAQu6B,EACrE,CACJ,CACA,MAAO/8D,GACH,MACJ,CACJ,eCpBO,MAAMs9D,WAAuB,GAAAnpC,SAChC,WAAAj1B,CAAYq+D,GACR72C,MAAM,CAAE+P,YAAY,IACpBj3B,KAAK+9D,KAAOA,EACZ/9D,KAAKg+D,UAAW,CACpB,CACA,WAAM5lC,GACF,IAAIp4B,KAAKg+D,SAAT,CAGAh+D,KAAKg+D,UAAW,EAChB,SAhCgBpO,OAAOmO,EAAMV,WAmB3BU,EAAKE,SAASF,EAAKzhE,QAlBJszD,MAAOsO,EAAS5M,EAAMrkC,EAAKkxC,KAC5C,IAAIC,EAAUnxC,EACVqkC,aAAgBwL,IAChBsB,EAAUnxC,EAAIvM,OAAO4wC,EAAKrkC,OAE1BowC,EAAQa,EAAS5M,EAAM8M,EAASD,IAE3B7M,aAAgB8J,IAAc9J,EAAK92C,QAExC6iD,EAAQa,EAAS5M,EAAM8M,EAASD,GAInB,OAAT7M,GACA6M,EAAeE,YAAY/M,EAAMrkC,EAEzC,GAE0C,EAchCqxC,CAAgBt+D,KAAK+9D,MAAMnO,MAAO1/C,EAAGohD,EAAMrkC,EAAKkxC,KACrC,OAAT7M,IACAtxD,KAAK5B,KAAK,CACN6uB,IAAK+uC,GAAe/uC,GACpBzS,MAAO82C,EAAK92C,UAEhB2jD,EAAeE,YAAY/M,EAAMrkC,GACrC,GAER,CACA,MAAOhN,GACH,GAAsB,uBAAlBA,EAAMqH,QAIN,MAAMrH,CAEd,CACAjgB,KAAK5B,KAAK,KArBV,CAsBJ,ECxDG,MAAMmgE,GAOT,WAAA7+D,CAAY8+D,GACRx+D,KAAKw+D,YAAcA,EACnBx+D,KAAKy+D,gBAAkB,EACvBz+D,KAAK0+D,MAAQ,EACjB,CAUA,cAAAC,CAAeC,EAAUp2C,GACjBxoB,KAAKy+D,gBAAkBz+D,KAAKw+D,aAC5Bx+D,KAAKy+D,kBACLj2C,GAAG,KAEC,GADAxoB,KAAKy+D,kBACDz+D,KAAK0+D,MAAM3gE,OAAS,EAAG,CACvBiC,KAAK0+D,MAAMG,MAAK,CAAC76D,EAAG7C,IAAMA,EAAEy9D,SAAW56D,EAAE46D,WACzC,MAAMzsB,EAAOnyC,KAAK0+D,MAAMj5D,QACxBzF,KAAK2+D,eAAexsB,EAAKysB,SAAUzsB,EAAK3pB,GAC5C,MAIJxoB,KAAK0+D,MAAMtgE,KAAK,CAAEwgE,WAAUp2C,MAEpC,CAMA,QAAA8R,GACI,OAAgC,IAAzBt6B,KAAKy+D,eAChB,ECvCG,MAAMK,GAOT,WAAAp/D,CAAYq/D,EAAQhB,EAAM19C,GACtBrgB,KAAK++D,OAASA,EACd/+D,KAAKg/D,aAAe,IAAIT,GAAwBl+C,GAChDrgB,KAAK+9D,KAAOA,EACZ/9D,KAAKkuB,QAAU,OACfluB,KAAKmuB,OAAS,MAClB,CAQA,oBAAa8wC,CAAQF,EAAQhB,EAAMzhE,EAAM+jB,GACrC,MAAM6+C,EAAW,IAAIJ,GAAeC,EAAQhB,EAAM19C,GAAY,WACxD6+C,EAASC,UAAU7iE,EAC7B,CACA,eAAM6iE,CAAU7iE,GAEZ,OAAO,IAAI2xB,SAAQ2hC,MAAO1hC,EAASC,KAG/B,IAAImjC,EAFJtxD,KAAKkuB,QAAUA,EACfluB,KAAKmuB,OAASA,EAEd,IACImjC,QAAatxD,KAAK+9D,KAAKN,WAAWnhE,EACtC,CACA,MAAO2jB,GACH,OAAOjgB,KAAKmuB,OAAOlO,EACvB,CACAjgB,KAAKo/D,YAAY9iE,EAAMg1D,EAAM,GAAG,GAExC,CAMA,WAAA+M,CAAY/M,EAAMrkC,EAAM,IACpB,GAAIqkC,aAAgBwL,GAChB,OAEJ,IAAIjyB,EAOJ,GANIymB,aAAgBsL,GAChB/xB,EAAW,CAAC,CAACymB,EAAKrkC,MAAOqkC,EAAK92C,UAEzB82C,aAAgB8J,KACrBvwB,EAAWymB,EAAKqK,cAAcjvC,KAAKvrB,GAAM,CAAC,CAACA,EAAE,IAAKA,EAAE,OAEnD0pC,EAGL,IAAK,MAAMw0B,KAASx0B,EAAU,CAC1B,MAAMy0B,EAAeD,EAAM,GACrBE,EAAWF,EAAM,GACjBG,EAAWvyC,EAAIvM,OAAO4+C,GACtBV,EAAWY,EAASzhE,OAC1BiC,KAAKy/D,gBAAgBF,EAAUC,EAAUZ,EAC7C,CACJ,CAOA,eAAAa,CAAgBvB,EAASjxC,EAAM,GAAI2xC,GAC/B5+D,KAAKg/D,aAAaL,eAAeC,GAAY3xC,EAAIlvB,QAAQ6xD,MAAO8P,IAC5D,IAAI/B,EACJ,IACIA,QAAkB39D,KAAK+9D,KAAKN,WAAWS,EAC3C,CACA,MAAOj+C,GACH,OAAOjgB,KAAKmuB,OAAOlO,EACvB,CACAy/C,IACA1/D,KAAKo/D,YAAYlB,EAASP,EAAW1wC,EAAI,GAEjD,CAQA,eAAA0yC,CAAgBrO,EAAMrkC,EAAM,GAAI2yC,EAAYhB,GACxC,KAAMtN,aAAgB8J,IAClB,MAAM,IAAIz8D,MAAM,wBAEpB,MAAM4gE,EAAWjO,EAAKoK,UAAUkE,GAChC,IAAKL,EACD,MAAM,IAAI5gE,MAAM,sCAEpB,MAAM6gE,EAAWvyC,EAAIpS,QACrB2kD,EAASphE,KAAKwhE,GACd,MAAMC,EAAOjB,GAAYY,EAASzhE,OAClCiC,KAAKy/D,gBAAgBF,EAAUC,EAAUK,EAC7C,CACA,WAAAT,CAAYlB,EAAS5M,EAAMrkC,EAAM,IAC7BjtB,KAAK++D,OAAOb,EAAS5M,EAAMrkC,EAAKjtB,MAC5BA,KAAKg/D,aAAa1kC,YAElBt6B,KAAKkuB,SAEb,ECrGG,MAAM,GAOT,WAAAxuB,CAAY08B,GAaR,IAAI69B,EACJ,GAbAj6D,KAAK8/D,MAAQ,CACTC,eAAe,EACfC,sBAAuB,GACvBC,eAAW1nD,EACX2nD,oBAAoB,EACpBC,gBAAgB,EAChBnG,UAAW,EACXC,cAAexN,GAAchvC,QAEjCzd,KAAKogE,MAAQ,IAAI1R,GACjB1uD,KAAKqgE,OAAS,GAAM,QACpBrgE,KAAKsgE,iBAAmBpD,GAAU/sC,KAAKnwB,WAE1BuY,IAAT6jB,EAAoB,CAGpB,QAA4B7jB,IAAxB6jB,GAAM69B,oBAA2C1hD,IAAZ6jB,EAAK29B,GAC1C,MAAM,IAAIp7D,MAAM,yDAEpBqB,KAAK8/D,MAAQ,IAAK9/D,KAAK8/D,SAAU1jC,GACjCp8B,KAAK8/D,MAAME,sBACP5jC,EAAKmkC,QAAQC,aAAahQ,WAAap0B,EAAK4jC,uBAAyB,GACzE/F,OACgB1hD,IAAZ6jB,EAAK29B,GAAmB39B,EAAK69B,eAAiBxN,GAAchvC,OAASgvC,GAAcuO,KAC3F,MAIIf,EAAgBxN,GAAcuO,MAElCh7D,KAAK4pB,MACiB,oBAAXrpB,SAAyBmpB,SAASC,KAAKC,OAAOnI,SAAS,WAAY,GAC9EzhB,KAAK6qB,MAAQ7qB,KAAK4pB,MACZ,CAACtC,EAAS8B,EAAa,MACrB,IAAIwB,EAAM5qB,KAAKqgE,OACf,IAAK,MAAM/oD,KAAQ8R,EACfwB,EAAMA,EAAIoB,OAAO1U,GAErBsT,EAAItD,EAAQ,EAEd,IAAIpX,KAAJ,EACNlQ,KAAKivD,SAAS7yB,GAAM29B,IAAM,IAAI/K,GAASiL,GACvCj6D,KAAKw9D,gBAAkBx9D,KAAKktB,KAAK+6B,IACjCjoD,KAAKygE,SAAWzgE,KAAKw9D,gBAAgBz/D,OACrCiC,KAAK0gE,MAAQ1gE,KAAKw9D,gBACdphC,GAAM9/B,MACN0D,KAAK1D,KAAK8/B,EAAK9/B,MAEnB0D,KAAK4pB,OACD5pB,KAAK6qB,MAAM,+BACR,GAAW7qB,KAAK1D,2BACd0D,KAAK8/D,MAAMC,qCACP//D,KAAK8/D,MAAMI,uCACdlgE,KAAK8/D,MAAMK,qCACTngE,KAAK8/D,MAAM9F,qCAE3B,CASA,4BAAa2G,CAAgBvP,EAAOwP,EAAUC,GAAmB,GAC7D,MAAM9C,EAAO,IAAI,GAAK6C,GAChBtkE,QAAayhE,EAAK+C,gBAAgB1P,EAAOyP,GAG/C,OAFA9C,EAAKzhE,KAAKA,SACJyhE,EAAKgD,cACJhD,CACX,CAWA,wBAAaiD,CAAY/zC,EAAKmkC,EAAOh1B,GACjC,IACI,MAAM6kC,QAAkB,GAAKN,gBAAgBvP,EAAOh1B,GAEpD,aADoB6kC,EAAU7gD,IAAI6M,GAAK,EAE3C,CACA,MAAOoB,GACH,MAAM,IAAI1vB,MAAM,yBACpB,CACJ,CAeA,uBAAOuiE,CAAiBC,EAAUC,EAAUC,EAASt0C,EAAMmhB,EAAQkjB,EAAOh1B,GACtE,OAAO8kC,GAAiBC,EAAUC,GAAYvF,GAAeuF,GAAWC,GAAWxF,GAAewF,GAAUt0C,EAAKL,KAAKvoB,GAAMA,IAAGuoB,IAAImvC,IAAiB3tB,EAAQkjB,EAAOh1B,GAAM4jC,uBAAyB,GACtM,CAOA,sBAAasB,CAAUlQ,EAAOh1B,GAC1B,MAAM2hC,QAAa,GAAKtuC,OAAO2M,GAC/B,GAAIA,GAAM9/B,OAAS,GAAY8/B,EAAK9/B,KAAMyhE,EAAK7wC,KAAKkkC,EAAM,KACtD,MAAM,IAAIzyD,MAAM,0BAEpB,MAAMrC,QAAayhE,EAAK+C,gBAAgB1P,GAGxC,OAFA2M,EAAKzhE,KAAKA,SACJyhE,EAAKgD,cACJhD,CACX,CAcA,gBAAAmD,CAAiBC,EAAUC,EAAUC,EAASt0C,EAAMmhB,EAAQkjB,GACxD,OAAO8P,GAAiBC,EAAUC,GAAYvF,GAAe77D,KAAKuhE,WAAWH,IAAYC,GAAWxF,GAAe77D,KAAKuhE,WAAWF,IAAWt0C,EAAKL,KAAKvoB,GAAMnE,KAAKuhE,WAAWp9D,KAAIuoB,IAAImvC,IAAiB3tB,EAAQkjB,EAAOpxD,KAAK8/D,MAAME,sBACrO,CAOA,iBAAMwB,CAAYv0C,GACdjtB,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,2BAA2B,GAAWoC,KAAQ,CAAC,iBACxE,MAAM,MAAE5F,SAAgBrnB,KAAKyhE,SAASzhE,KAAKuhE,WAAWt0C,IAChDne,EAAIuY,EAAMqF,KAAKg1C,GACVA,EAAUjG,cAGrB,OADAz7D,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,uBAAuBxD,EAAMtpB,gBAAiB,CAAC,iBACjE+Q,CACX,CASA,qBAAMgyD,CAAgB1P,EAAOyP,GAAmB,GAC5C7gE,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,WAAWumC,EAAMrzD,4BAA6B,CAAC,eACxE,MAAMwxD,EAAU6B,EAAM1kC,KAAKi1C,IACvB,IAAI10C,EAAMzuB,WAAW+b,KAAKva,KAAKktB,KAAKy0C,IAEpC,OADA10C,EAAMjtB,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAWhzC,GAAOA,EAC/D,CACHnR,KAAM,MACNmR,MACAzS,MAAOmnD,EACV,IAEL,GAAId,QACmBtoD,IAAfg3C,EAAQ,IAAmC,OAAfA,EAAQ,KAC/B,GAAYvvD,KAAK1D,OAAQizD,EAAQ,GAAGtiC,KACrC,MAAM,IAAItuB,MAAM,2DAK5B,SADMqB,KAAK4hE,IAAItS,MAAMC,QACFh3C,IAAfg3C,EAAQ,GACR,OAAOA,EAAQ,GAAGtiC,GAE1B,CAUA,iBAAM+zC,CAAYG,EAAUl0C,EAAKmkC,GAC7BpxD,KAAK4pB,OACD5pB,KAAK6qB,MAAM,6BAA6B,GAAWoC,gBAAkB,GAAWk0C,kBAAyB/P,EAAMrzD,sBACpH,CAAC,iBACA,MAAMkjE,EAAY,IAAI,GAAK,CACvB3kE,KAAM6kE,EACNnB,sBAAuBhgE,KAAK8/D,MAAME,sBAClCO,OAAQvgE,KAAK8/D,MAAMS,SAEvB,UACUU,EAAUH,gBAAgB1P,GAAO,EAC3C,CACA,MAAO5wD,GACH,MAAM,IAAI7B,MAAM,4BACpB,CACA,IACIqB,KAAK4pB,OACD5pB,KAAK6qB,MAAM,sCAAsC,GAAWoC,qBAAwB,CAChF,iBAER,MAAMzS,QAAcymD,EAAU7gD,IAAIpgB,KAAKuhE,WAAWt0C,IAAM,GAExD,OADAjtB,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,iBAAkB,CAAC,iBACrCrQ,CACX,CACA,MAAO6T,GACH,KAAoB,uBAAhBA,EAAI/G,QACE,IAAI3oB,MAAM,0BAGV0vB,CAEd,CACJ,CAQA,eAAMizC,CAAUlQ,GAEZ,SADMpxD,KAAK8gE,gBAAgB1P,GAAO,GAC9B,GAAYpxD,KAAK1D,OAAQ0D,KAAKw9D,uBAAiCjlD,IAAb64C,EAAM,GAAkB,CAC1E,IAAIyQ,EAAUrjE,WAAW+b,KAAKva,KAAKktB,KAAKkkC,EAAM,KAE9CyQ,EAAU7hE,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAW4B,GAAWA,EAC9E7hE,KAAK1D,KAAKulE,SACJ7hE,KAAK+gE,aACf,CAEJ,CACA,mBAAatxC,CAAO2M,GAChB,MAAM0lC,EAAiB1lC,GAAMmkC,QAAQC,aAAahQ,WAAap0B,GAAM4jC,uBAAyB,GAC9F,IAAI/yC,EAAMgwC,GACV,MAAMxiD,EAAW2hB,GAAM69B,gBAAkBxN,GAAcuO,MAAQvO,GAAcuO,MAAQvO,GAAchvC,OAOnG,IAN4B,IAAxB2e,GAAM2jC,gBACN9yC,EAAM60C,EAAerqD,UAAKc,EAAW0kD,UAEjB1kD,IAApB6jB,GAAM6jC,YACNhzC,EAAM,GAAYmP,EAAK6jC,UAAWhzC,SAErB1U,IAAb6jB,GAAM29B,KAAiD,IAA7B39B,GAAM8jC,mBAChC,QAAmB3nD,IAAf6jB,GAAM9/B,KAAoB,CAC1B,MAAMA,QAAa8/B,GAAM29B,GAAG35C,IAAI,GAAqB6M,GAAM,CACvD4tC,YAAarO,GAAY/uC,OACzBw8C,cAAex/C,KAGf2hB,EAAK9/B,KADW,iBAATA,EACK,GAAqBA,GAGrBA,CAEpB,YAEU8/B,GAAM29B,GAAG3K,IAAI,GAAqBniC,GAAOxS,IAAagyC,GAAcuO,MAAQ5+B,EAAK9/B,KAAO,GAAqB8/B,EAAK9/B,MAAQ,CAC5Hu+D,YAAarO,GAAY/uC,OACzBw8C,cAAex/C,KAI3B,OAAO,IAAI,GAAK2hB,EACpB,CACA,QAAA6yB,CAAS8K,EAAIE,GACT,QAAW1hD,IAAPwhD,EAAkB,CAClB,GAAIA,aAAcN,GACd,MAAM,IAAI96D,MAAM,8CAEpBqB,KAAK4hE,IAAM,IAAInI,GAAa,CAAEM,KAAIC,UAAWh6D,KAAK8/D,MAAM9F,UAAWC,iBACvE,CACA,OAAOj6D,KAAK4hE,GAChB,CAIA,IAAAtlE,CAAKke,GACD,QAAcjC,IAAViC,EAAqB,CAKrB,GAJc,OAAVA,IACAA,EAAQxa,KAAKw9D,iBAEjBx9D,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,mBAAmB,GAAWrQ,MACnDA,EAAMzc,SAAWiC,KAAKygE,SACtB,MAAM,IAAI9hE,MAAM,kCAAkCqB,KAAKygE,uBAAuBjmD,EAAMzc,gBAExFiC,KAAK0gE,MAAQlmD,CACjB,CACA,OAAOxa,KAAK0gE,KAChB,CAIA,eAAMqB,CAAUzlE,GACZ,IAEI,OAAiB,aADG0D,KAAKy9D,WAAWnhE,EAExC,CACA,MAAO2jB,GACH,GAAsB,uBAAlBA,EAAMqH,QACN,OAAO,GAAYhrB,EAAM0D,KAAKw9D,iBAG9B,MAAMv9C,CAEd,CACJ,CAOA,SAAMG,CAAI6M,EAAK+0C,GAAiB,GAC5BhiE,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,QAAQ,GAAWoC,KAAQ,CAAC,QACrD,MAAM,KAAEqkC,EAAI,UAAErzC,SAAoBje,KAAKyhE,SAASzhE,KAAKuhE,WAAWt0C,GAAM+0C,GACtE,IAAIxnD,EAAQ,KAKZ,OAJI82C,GAA6B,IAArBrzC,EAAUlgB,SAClByc,EAAQ82C,EAAK92C,SAEjBxa,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,UAAoB,OAAVrQ,EAAiB,OAAS,GAAWA,KAAU,CAAC,QAC5EA,CACX,CAQA,SAAM40C,CAAIniC,EAAKzS,EAAOynD,GAAmB,GAGrC,GAFAjiE,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,QAAQ,GAAWoC,KAAQ,CAAC,QACrDjtB,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,UAAoB,OAAVrQ,EAAiB,OAAS,GAAWyS,KAAQ,CAAC,QAC7EjtB,KAAK8/D,MAAMI,qBAAwD,IAAlC,GAAYjzC,EAAKgwC,IAClD,MAAM,IAAIt+D,MAAM,qBAAqB4nD,GAAY0W,mCAGrD,GAAc,OAAVziD,GAAmC,IAAjBA,EAAMzc,OACxB,OAAOiC,KAAKqvD,IAAIpiC,SAEdjtB,KAAKogE,MAAMvR,UACjB,MAAM0S,EAAaU,EAAmBh1C,EAAMjtB,KAAKuhE,WAAWt0C,GAC5D,IAAuD,IAAnD,GAAYjtB,KAAK1D,OAAQ0D,KAAKw9D,uBAExBx9D,KAAKkiE,mBAAmBX,EAAY/mD,OAEzC,CAED,MAAM,UAAEyD,EAAS,MAAEoJ,SAAgBrnB,KAAKyhE,SAASF,GACjD,IAAIY,EAAM,GACV,GAAIniE,KAAK8/D,MAAMK,eAAgB,CAC3B,MAAMjhE,QAAYc,KAAKogB,IAAI6M,GAGf,OAAR/tB,IAA4C,IAA5B,GAAYA,EAAKsb,KAMjC2nD,EADqB96C,EAAMqF,KAAKlsB,GAAMR,KAAKktB,KAAK1sB,EAAEi7D,eAC/B/uC,KAAKlsB,IAEb,CACHsb,KAAM,MACNmR,IAHQjtB,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAWz/D,GAAKA,EAItE47B,KAAM,CACFy+B,YAAarO,GAAYwO,WAK7C,OAEMh7D,KAAKoiE,YAAYb,EAAY/mD,EAAOyD,EAAWoJ,GACjDrnB,KAAK8/D,MAAMK,sBAELngE,KAAK4hE,IAAItS,MAAM6S,EAE7B,OACMniE,KAAK+gE,cACX/gE,KAAKogE,MAAMtR,SACf,CAOA,SAAMO,CAAIpiC,EAAKg1C,GAAmB,GAC9BjiE,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,QAAQ,GAAWoC,KAAQ,CAAC,cAC/CjtB,KAAKogE,MAAMvR,UACjB,MAAM0S,EAAaU,EAAmBh1C,EAAMjtB,KAAKuhE,WAAWt0C,IACtD,KAAEqkC,EAAI,MAAEjqC,SAAgBrnB,KAAKyhE,SAASF,GAC5C,IAAIY,EAAM,GAENniE,KAAK8/D,MAAMK,gBAA2B,OAAT7O,IAI7B6Q,EAHqB96C,EAAMqF,KAAKlsB,GAAMR,KAAKktB,KAAK1sB,EAAEi7D,eAG/B/uC,KAAKlsB,IAEb,CACHsb,KAAM,MACNmR,IAHQjtB,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAWz/D,GAAKA,EAItE47B,KAAM,CACFy+B,YAAarO,GAAYwO,YAKrC1J,SACMtxD,KAAKqiE,YAAYd,EAAYl6C,GAEnCrnB,KAAK8/D,MAAMK,sBAELngE,KAAK4hE,IAAItS,MAAM6S,SAEnBniE,KAAK+gE,cACX/gE,KAAKogE,MAAMtR,SACf,CAOA,cAAM2S,CAASx0C,EAAK+0C,GAAiB,EAAOM,EAAc,CACtDj7C,MAAO,KAEP,MAAMk7C,EAAY1G,GAAe5uC,GAC3Bu1C,EAASD,EAAUxkE,OACnBspB,EAAQ5oB,MAAM8b,KAAK,CAAExc,OAAQykE,IACnC,IAAIC,EAAW,EACf,IAAK,IAAIplE,EAAI,EAAGA,EAAIilE,EAAYj7C,MAAMtpB,OAAS,EAAGV,IAC9CgqB,EAAMhqB,GAAKilE,EAAYj7C,MAAMhqB,GAC7BolE,GAAYp7C,EAAMhqB,aAAc+9D,GAAa,EAAI/zC,EAAMhqB,GAAGq/D,YAE9D18D,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,WAAW03C,EAAUxkE,aAAawkE,KAAc,CAAC,cAC1E,IAAI56B,EAAS,KACb,MAAM01B,EAAUzN,MAAO1/C,EAAGohD,EAAMoR,EAAavE,KAEzC,GADA92C,EAAMo7C,GAAYnR,EACdA,aAAgB8J,GAChB,GAAIqH,IAAaD,EACb76B,EAAS,CAAE2pB,OAAMrzC,UAAW,GAAIoJ,aAE/B,CACD,MAAMs7C,EAAcJ,EAAUE,GAC9BziE,KAAK4pB,OACD5pB,KAAK6qB,MAAM,sCAAsC83C,KAAgB,CAC7D,YACA,eAER,MAAMC,EAAatR,EAAKoK,UAAUiH,GAClC3iE,KAAK4pB,OACD5pB,KAAK6qB,MAAqB,OAAf+3C,EACL,OACAA,aAAsBpkE,WAClB,aAAa,GAAWokE,KACxB,aAAaA,EAAW5gE,aAAc,CAAC,YAAa,aAAc2gE,EAAY3gE,aACvF4gE,GAIDH,IACAtE,EAAewB,gBAAgBrO,EAAMoR,EAAaC,IAJlDh7B,EAAS,CAAE2pB,KAAM,KAAMrzC,UAAWskD,EAAU1nD,MAAM4nD,GAAWp7C,QAMrE,MAEC,GAAIiqC,aAAgBwL,GAAU,CAC/B,MAAM+F,EAAYJ,EAClB,GAAID,EAASC,EAAWnR,EAAKrkC,MAAMlvB,OAE/B,YADA4pC,EAAS,CAAE2pB,KAAM,KAAMrzC,UAAWskD,EAAU1nD,MAAMgoD,GAAYx7C,UAGlE,IAAK,MAAMljB,KAAKmtD,EAAKrkC,MAAO,CACxB,GAAI9oB,IAAMo+D,EAAUE,GAEhB,YADA96B,EAAS,CAAE2pB,KAAM,KAAMrzC,UAAWskD,EAAU1nD,MAAMgoD,GAAYx7C,UAGlEo7C,GACJ,CACA96B,EAAS,CAAE2pB,OAAMrzC,UAAW,GAAIoJ,QACpC,MACK,GAAIiqC,aAAgBsL,GAAe,CACpC58D,KAAK4pB,OACD5pB,KAAK6qB,MAAM,iDAAiDymC,EAAKrkC,yBAAyBs1C,EAAU1nD,MAAM4nD,EAAUA,EAAWnR,EAAKrkC,MAAMlvB,2BAA2BwkE,EAAU1nD,MAAM4nD,EAAUA,EAAWnR,EAAKrkC,MAAMlvB,QAAQiE,aACzNsvD,EAAKrkC,MAAMjrB,4BACpB,CAAC,YAAa,kBACb,MAAM6gE,EAAYJ,EAClB,IAAK,MAAMt+D,KAAKmtD,EAAKrkC,MAAO,CAExB,GADAjtB,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,aAAaymC,EAAK92C,UAAW,CAAC,YAAa,kBAChErW,IAAMo+D,EAAUE,GAEhB,YADA96B,EAAS,CAAE2pB,KAAM,KAAMrzC,UAAWskD,EAAU1nD,MAAMgoD,GAAYx7C,UAGlEo7C,GACJ,CACAtE,EAAeE,YAAY/M,EAAMoR,EACrC,GAEEI,EAAeR,EAAYj7C,MAAMi7C,EAAYj7C,MAAMtpB,OAAS,GAC5Dc,OAAyB0Z,IAAjBuqD,EAA6B9iE,KAAKktB,KAAK41C,GAAcrH,aAAez7D,KAAK1D,OACvF,IACI0D,KAAK4pB,OACD5pB,KAAK6qB,MAAM,0BAAsCtS,IAAjBuqD,EAA6B,OAAS,WAAW,GAAWjkE,KAAU,CAAC,oBACrGmB,KAAKi+D,SAASp/D,EAAOw+D,EAC/B,CACA,MAAOp9C,GACH,GAAsB,uBAAlBA,EAAMqH,SAAoC06C,EAC1C,MAAM/hD,CAEd,CAeA,OAde,OAAX0nB,IACAA,EAAS,CAAE2pB,KAAM,KAAMrzC,UAAW,GAAIoJ,UAE1CrnB,KAAK4pB,OACD5pB,KAAK6qB,MAAsB,OAAhB8c,EAAO2pB,KACZ,yBAAyBuK,GAAe5uC,KACxC,wBAAyB,CAAC,cACpC0a,EAAOtgB,MAAQsgB,EAAOtgB,MAAM2b,QAAQxiC,QAAY+X,IAAN/X,IAC1CR,KAAK4pB,OACD5pB,KAAK6qB,MAAM,6BACY,OAAhB8c,EAAO2pB,KAAgB,OAAS3pB,EAAO2pB,KAAK5xD,YAAY4X,gCAClDqwB,EAAO1pB,yBAAyB0pB,EAAOtgB,MAC/CqF,KAAKlsB,GAAMA,EAAEd,YAAY4X,OACzB/Y,KAAK,QAAS,CAAC,cACjBopC,CACX,CAOA,cAAMs2B,CAAS3hE,EAAM+gE,SACXyB,GAAeG,QAAQ5B,EAASr9D,KAAM1D,EAChD,CAMA,kBAAMymE,CAAa1F,GACf,UAAW,MAAM,KAAE/L,EAAI,WAAE8L,KAAgBp9D,KAAKsgE,iBAAiBtgE,KAAK1D,cAC1D+gE,EAAQ/L,EAAM8L,EAE5B,CAMA,uBAAM4F,CAAkB3F,GACpB,UAAW,MAAM,KAAE/L,EAAI,WAAE8L,KAAgBp9D,KAAKsgE,iBAAiBtgE,KAAK1D,OAAQ,QAAIic,GAAWq3C,MAAO0B,GACvFA,aAAgBwL,IAAaxL,aAAgB8J,IAA+B,OAAjB9J,EAAK92C,gBAEjE6iD,EAAQ/L,EAAM8L,EAE5B,CAKA,wBAAM8E,CAAmBj1C,EAAKzS,GAC1B,MACM6tC,EADU,IAAIyU,GAASjB,GAAe5uC,GAAMzS,GAC1BihD,YACxBz7D,KAAK1D,KAAK0D,KAAKktB,KAAKm7B,IACpB,IAAIwZ,EAAU7hE,KAAK1D,OACnBulE,EAAU7hE,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAW4B,GAAWA,QACxE7hE,KAAK4hE,IAAIxS,IAAIyS,EAASxZ,SACtBroD,KAAK+gE,aACf,CAIA,gBAAMtD,CAAWnM,GACb,GAAI0L,GAAU1L,GAAO,CACjB,MAAMpqB,EAAU61B,GAAczL,GAE9B,OADAtxD,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAGqc,EAAQxnC,YAAY4X,OAAQ,CAAC,cAAe,aACjE4vB,CACX,CACAlnC,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAM,GAAWymC,KAAW,CAAC,cAAe,YACrE,MAAMrkC,EAAMjtB,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAW3O,GAAQA,EACvE92C,QAAexa,KAAK4hE,IAAIxhD,IAAI6M,IAAS,KAC3C,GAAc,OAAVzS,EAEA,MAAM,IAAI7b,MAAM,sBAEpB,MAAMuoC,EN1lBP,SAAoBoqB,GACvB,MAAM2R,EAAc,GAAWzkE,WAAW+b,KAAK+2C,IAC/C,IAAK0L,GAAUiG,GACX,MAAM,IAAItkE,MAAM,gBAEpB,OAAOo+D,GAAckG,EACzB,CMolBwBC,CAAW1oD,GAE3B,OADAxa,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAGqc,EAAQxnC,YAAY4X,mBAAoB,CAAC,cAAe,YAC7E4vB,CACX,CASA,iBAAMk7B,CAAYj+D,EAAGqW,EAAO2oD,EAAc97C,GACtC,MAAM+7C,EAAS,GACTC,EAAWh8C,EAAMoK,MACvB,IAAK4xC,EACD,MAAM,IAAI1kE,MAAM,mBAGpB,MAAMsuB,EAAM4uC,GAAe13D,GAE3B,IAAIm/D,GAAY,EAChB,GAAID,aAAoBvG,GAAU,CAC9B,IAAIhvD,EAAI,EACR,IAAK,IAAIzQ,EAAI,EAAGA,EAAIgqB,EAAMtpB,OAAQV,IAAK,CACnC,MAAMkS,EAAI8X,EAAMhqB,GACZkS,aAAa6rD,GACbttD,IAGAA,GAAKyB,EAAE0d,MAAMlvB,MAErB,CACIo+D,GAAqBkH,EAASp2C,MAAOA,EAAIpS,MAAM/M,MAAQu1D,EAASp2C,MAAMlvB,QAC9C,IAAxBolE,EAAaplE,SACbulE,GAAY,EAEpB,CACA,GAAIA,EAEAD,EAAS7oD,MAAMA,GACf6M,EAAMjpB,KAAKilE,QAEV,GAAIA,aAAoBjI,GAEzB,GADA/zC,EAAMjpB,KAAKilE,GACiB,IAAxBF,EAAaplE,OAAc,CAE3BolE,EAAa19D,QAEb,MAAM89D,EAAU,IAAIzG,GAASqG,EAAc3oD,GAC3C6M,EAAMjpB,KAAKmlE,EACf,MAEIF,EAAS7oD,MAAMA,OAGlB,CAED,MAAM6mD,EAAUgC,EAASp2C,MACnBu2C,EAAiBrH,GAAqBkF,EAAS8B,GAC/CM,EAAgB,IAAIrI,GAE1B,GAAuB,IAAnBoI,EAAsB,CACtB,MAAME,EAASL,EAASp2C,MAAMpS,MAAM,EAAG2oD,GACjCG,EAAa,IAAI/G,GAAc8G,EAAQlpD,GAC7C6M,EAAMjpB,KAAKulE,GACXtC,EAAQr4C,OAAO,EAAGw6C,GAClBL,EAAan6C,OAAO,EAAGw6C,EAC3B,CAEA,GADAn8C,EAAMjpB,KAAKqlE,GACY,IAAnBpC,EAAQtjE,OAAc,CACtB,MAAM6lE,EAAYvC,EAAQ57D,QAC1B,GAAuB,IAAnB47D,EAAQtjE,QAAgBslE,aAAoBvG,GAAU,CAEtDuG,EAASp2C,IAAIo0C,GACb,MAAMwC,EAAgB7jE,KAAK8jE,YAAYT,GAAU,EAAOD,GACxDK,EAAcjI,UAAUoI,EAAWC,EACvC,MAGI7jE,KAAK8jE,YAAYT,GAAU,EAAOD,GAAQ,GAC1CK,EAAcjI,UAAUoI,EAAWP,EAAS7oD,QAEpD,MAEIipD,EAAcjpD,MAAM6oD,EAAS7oD,SAEjC,GAA4B,IAAxB2oD,EAAaplE,OAAc,CAC3BolE,EAAa19D,QAEb,MAAMs+D,EAAc,IAAIjH,GAASqG,EAAc3oD,GAC/C6M,EAAMjpB,KAAK2lE,EACf,MAEIN,EAAcjpD,MAAMA,EAE5B,OACMxa,KAAKgkE,UAAU/2C,EAAK5F,EAAO+7C,EACrC,CAKA,iBAAMf,CAAYl+D,EAAGkjB,GAkDjB,IAAIg8C,EAAWh8C,EAAMoK,MACrB,QAAiBlZ,IAAb8qD,EACA,MAAM,IAAI1kE,MAAM,qBACpB,IAAIslE,EAAa58C,EAAMoK,MACvB,MAAM89B,EAAU,GAChB,IAAItiC,EAAM4uC,GAAe13D,GACzB,IAAK8/D,EAGD,YADAjkE,KAAK1D,KAAK0D,KAAKw9D,iBAGnB,GAAI6F,aAAoBjI,GACpBiI,EAAS7oD,MAAM,UAEd,CAGD,KAAMypD,aAAsB7I,IACxB,MAAM,IAAIz8D,MAAM,wBAEpB,MAAMulE,EAAcb,EAASp2C,MAC7BA,EAAIjE,OAAOiE,EAAIlvB,OAASmmE,EAAYnmE,QAEpCiC,KAAK8jE,YAAYT,GAAU,EAAO9T,GAAS,GAC3C0U,EAAWzI,UAAUvuC,EAAIwE,MAAO,MAChC4xC,EAAWY,EACXA,EAAa58C,EAAMoK,KACvB,CAGA,MAAM0yC,EAAcd,EAAS1H,cAE7B,GAA2B,IAAvBwI,EAAYpmE,OAAc,CAE1B,MAAM6kE,EAAauB,EAAY,GAAG,GAC5BC,EAAgBD,EAAY,GAAG,GAOjCnkE,KAAK8/D,MAAMK,gBACX5Q,EAAQnxD,KAAK,CACT0d,KAAM,MACNmR,IAAK21C,IAMb31C,EApGsB,EAACA,EAAK22C,EAAWhB,EAAYqB,EAAY58C,KAE/D,GAAI48C,SAAmDA,aAAsB7I,GAAY,CAKrF,GAHI6I,SACA58C,EAAMjpB,KAAK6lE,GAEXrB,aAAsBxH,GAAY,CAIlC,MAAMiJ,EAAgB,IAAIzH,GAAc,CAACgH,GAAY,MACrDv8C,EAAMjpB,KAAKimE,GACXp3C,EAAI7uB,KAAKwlE,EACb,KACK,CACD,MAAMQ,EAAgBxB,EAAW31C,MAGjCm3C,EAAcx4C,QAAQg4C,GACtBhB,EAAW31C,IAAIm3C,EAAcvpD,MAAM,IACnCoS,EAAMA,EAAIvM,OAAO0jD,EACrB,CACA/8C,EAAMjpB,KAAKwkE,EACf,KACK,CAED,IAAI0B,EAAYL,EAAWh3C,MAC3B,GAAI21C,aAAsBxH,GAEtBkJ,EAAUlmE,KAAKwlE,GACf32C,EAAI7uB,KAAKwlE,GACTK,EAAWh3C,IAAIq3C,GACfj9C,EAAMjpB,KAAK6lE,OAEV,CACD,MAAMG,EAAgBxB,EAAW31C,MAIjCm3C,EAAcx4C,QAAQg4C,GACtB32C,EAAMA,EAAIvM,OAAO0jD,GACjBE,EAAYA,EAAU5jD,OAAO0jD,GAC7BxB,EAAW31C,IAAIq3C,EACnB,CACAj9C,EAAMjpB,KAAKwkE,EACf,CACA,OAAO31C,CAAG,EAqDJs3C,CAAkBt3C,EAAKm3C,QAFLpkE,KAAKy9D,WAAWmF,GAEeqB,EAAY58C,SAC7DrnB,KAAKgkE,UAAU/2C,EAAK5F,EAAOkoC,EAErC,MAGQ0U,GACA58C,EAAMjpB,KAAK6lE,GAEf58C,EAAMjpB,KAAKilE,SACLrjE,KAAKgkE,UAAU/2C,EAAK5F,EAAOkoC,EAEzC,CAQA,eAAMyU,CAAU/2C,EAAK5F,EAAOkoC,GACxB,IAAIiV,EAEJ,KAAOn9C,EAAMtpB,QAAQ,CACjB,MAAMuzD,EAAOjqC,EAAMoK,MACnB,GAAI6/B,aAAgBwL,GAChB7vC,EAAIjE,OAAOiE,EAAIlvB,OAASuzD,EAAKrkC,MAAMlvB,aAElC,GAAIuzD,aAAgBsL,GACrB3vC,EAAIjE,OAAOiE,EAAIlvB,OAASuzD,EAAKrkC,MAAMlvB,QAC/BymE,GACAlT,EAAK92C,MAAMgqD,QAGd,GAAIlT,aAAgB8J,IACjBoJ,EAAU,CACV,MAAMZ,EAAY32C,EAAIwE,MACtB6/B,EAAKkK,UAAUoI,EAAWY,EAC9B,CAEJA,EAAWxkE,KAAK8jE,YAAYxS,EAAuB,IAAjBjqC,EAAMtpB,OAAcwxD,EAC1D,CACIiV,GACAxkE,KAAK1D,KAAKkoE,SAERxkE,KAAK4hE,IAAItS,MAAMC,SACfvvD,KAAK+gE,aACf,CAUA,WAAA+C,CAAYxS,EAAMmT,EAAUlV,EAASmV,GAAS,GAC1C,MAAMrc,EAAUiJ,EAAKmK,YACrB,GAAIpT,EAAQtqD,QAAU,IAAM0mE,EAAU,CAClC,MAAMD,EAAWxkE,KAAKktB,KAAKm7B,GACrBp7B,EAAMjtB,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAWuE,GAAYA,EAgBjF,OAfIE,EACI1kE,KAAK8/D,MAAMK,gBACX5Q,EAAQnxD,KAAK,CACT0d,KAAM,MACNmR,QAKRsiC,EAAQnxD,KAAK,CACT0d,KAAM,MACNmR,MACAzS,MAAO6tC,IAGRmc,CACX,CACA,OAAOlT,EAAK3D,KAChB,CAeA,WAAM2B,CAAM6S,EAAKF,GACb,IAAK,MAAMzS,KAAM2S,EACb,GAAgB,QAAZ3S,EAAG1zC,KAAgB,CACnB,GAAiB,OAAb0zC,EAAGh1C,YAA+BjC,IAAbi3C,EAAGh1C,MACxB,MAAM,IAAI7b,MAAM,oCAEdqB,KAAKovD,IAAII,EAAGviC,IAAKuiC,EAAGh1C,MAAOynD,EACrC,KACqB,QAAZzS,EAAG1zC,YACF9b,KAAKqvD,IAAIG,EAAGviC,IAAKg1C,SAGzBjiE,KAAK+gE,aACf,CAKA,2BAAM4D,GACF,MAAMC,EAAQ,CACV,GAAqB5kE,KAAK1D,QAC1B,GAAqB0D,KAAKuhE,WAAWtE,MAEzC,IAAK,MAAM4H,KAAS7kE,KAAK4hE,IAAI7H,GAAG7K,UAAUniC,OAAQ,CAC9C,GAAI63C,EAAMnjD,SAASojD,GAGf,SAGJ,IAAIhnD,GAAQ,EACZ,UACU7d,KAAKi+D,SAASj+D,KAAK1D,QAAQszD,eAAgBsO,EAAS5M,EAAMrkC,EAAK63C,GACjE,IAAIjnD,EAAJ,CAIA,GAAIyzC,aAAgB8J,GAAY,CAC5B,IAAK,MAAMjpB,KAAQmf,EAAK+J,UAEpB,GAAa,OAATlpB,GAAiB,GAAqBA,KAAU0yB,EAEhD,YADAhnD,GAAQ,GAKhBinD,EAAWzG,YAAY/M,EAAMrkC,EACjC,CACA,GAAIqkC,aAAgBsL,GAAe,CAE/B,GAAI,GAAqBtL,EAAK92C,WAAaqqD,EAEvC,YADAhnD,GAAQ,GAGZinD,EAAWzG,YAAY/M,EAAMrkC,EACjC,CAnBA,CAoBJ,GACJ,CACA,MACI,OAAO,CACX,CACA,IAAKpP,EACD,OAAO,CAEf,CACA,OAAO,CACX,CAKA,gBAAAknD,GACI,OAAO,IAAI,GAAW/kE,KAC1B,CAcA,WAAAyvD,CAAYuV,GAAqB,EAAM5oC,GACnC,MAAM2hC,EAAO,IAAI,GAAK,IACf/9D,KAAK8/D,MACR/F,GAAI/5D,KAAK4hE,IAAI7H,GAAGtK,cAChBnzD,KAAM0D,KAAK1D,OACX09D,UAAW,KACP59B,GAAQ,CAAC,IAKjB,OAHI4oC,GAAsBhlE,KAAKs6D,kBAC3ByD,EAAK6D,IAAIxH,eAAep6D,KAAK4hE,IAAI1H,aAE9B6D,CACX,CAIA,iBAAMgD,GACF,GAAI/gE,KAAK8/D,MAAMI,mBAAoB,CAC/BlgE,KAAK4pB,OACD5pB,KAAK6qB,MAAM,mCAAmC,GAAW7qB,KAAK1D,wBAAwB,GAAW0D,KAAKuhE,WAAWtE,OAAiB,CAAC,iBACvI,IAAIhwC,EAAMjtB,KAAKuhE,WAAWtE,IAC1BhwC,EAAMjtB,KAAK8/D,MAAMG,UAAY,GAAYjgE,KAAK8/D,MAAMG,UAAWhzC,GAAOA,QAChEjtB,KAAK4hE,IAAIxS,IAAIniC,EAAKjtB,KAAK1D,OACjC,CACJ,CAOA,kBAAM2oE,CAAa5H,SAWTr9D,KAAKi+D,SAASj+D,KAAK1D,QAVJszD,MAAOsO,EAAS5M,EAAMrkC,EAAKkxC,KACxCnB,GAAUkB,GACG,OAAT5M,GACA6M,EAAeE,YAAY/M,EAAMrkC,GAIrCowC,EAAQa,EAAS5M,EAAMrkC,EAAKkxC,EAChC,GAGR,CAMA,UAAAoD,CAAWt0C,GACP,OAAIjtB,KAAK8/D,MAAMC,cACJ//D,KAAKktB,KAAKD,GAEdA,CACX,CACA,IAAAC,CAAK/tB,GACD,OAAOX,WAAW+b,KAAKva,KAAK8/D,MAAME,sBAAsBvoD,UAAKc,EAAWpZ,GAC5E,CAIA,cAAAm7D,GACI,OAAOt6D,KAAK4hE,IAAItH,gBACpB,CAKA,UAAAC,GACIv6D,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAG,GAAW7qB,KAAK1D,UAAW,CAAC,eACxD0D,KAAK4hE,IAAIrH,WAAWv6D,KAAK1D,OAC7B,CAMA,YAAMk+D,GACF,IAAKx6D,KAAKs6D,iBACN,MAAM,IAAI37D,MAAM,0CAEpBqB,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAG,GAAW7qB,KAAK1D,UAAW,CAAC,iBAClD0D,KAAKogE,MAAMvR,gBACX7uD,KAAK4hE,IAAIpH,eACTx6D,KAAK+gE,cACX/gE,KAAKogE,MAAMtR,SACf,CAMA,YAAM6L,GACF,IAAK36D,KAAKs6D,iBACN,MAAM,IAAI37D,MAAM,0CAEpBqB,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAG,GAAW7qB,KAAK1D,UAAW,CAAC,SAAU,iBAC5D0D,KAAKogE,MAAMvR,UACjB7uD,KAAK1D,WAAW0D,KAAK4hE,IAAIjH,gBACnB36D,KAAK+gE,cACX/gE,KAAKogE,MAAMtR,UACX9uD,KAAK4pB,OAAS5pB,KAAK6qB,MAAM,GAAG,GAAW7qB,KAAK1D,UAAW,CAAC,SAAU,SACtE,CAIA,gBAAA4oE,GACIllE,KAAK4pB,OACD5pB,KAAK6qB,MAAM,YAAY7qB,KAAK4hE,IAAI1H,YAAYn8D,sBAAuB,CAAC,sBACxEiC,KAAK4hE,IAAI1H,YAAc,EAC3B,ECllCJtK,eAAeuV,GAAMpH,EAAMqH,EAAQ/F,EAAOpyC,EAAKrM,EAAKykD,EAAYh+C,GAC5D,GAAIg4C,aAAiBjE,GAAY,CAK7B,GAAIiK,EACA,IAAK,IAAIhoE,EAAI,EAAGA,EAAI4vB,EAAIrM,GAAMvjB,IAC1BgiE,EAAM7D,UAAUn+D,EAAG,WAIvB,IAAK,IAAIA,EAAI4vB,EAAIrM,GAAO,EAAGvjB,EAAI,GAAIA,IAC/BgiE,EAAM7D,UAAUn+D,EAAG,MAI3BgqB,EAAMjpB,KAAKihE,GAEX,MAAMzmD,EAAOymD,EAAM3D,UAAUzuC,EAAIrM,IAC3B0kD,EAAS1sD,SAAemlD,EAAKN,WAAW7kD,GAC9C,OAAOusD,GAAMpH,EAAMsB,EAAOiG,EAAQr4C,EAAKrM,EAAM,EAAGykD,EAAYh+C,EAChE,CACK,GAAIg4C,aAAiBzC,IAAiByC,aAAiBvC,GAAU,CAMlE,GAAI7vC,EAAIlvB,OAAS6iB,EAAMy+C,EAAM3C,aACmD,IAA5ET,GAAeoD,EAAM9C,SAAUtvC,EAAIpS,MAAM+F,EAAKA,EAAMy+C,EAAM3C,cAa1D,OAZI2I,EACIpJ,GAAeoD,EAAM9C,SAAUtvC,EAAIpS,MAAM+F,IAAQ,GAEjDwkD,EAAO5J,UAAUvuC,EAAIrM,EAAM,GAAI,MAI/Bq7C,GAAeoD,EAAM9C,SAAUtvC,EAAIpS,MAAM+F,IAAQ,GAEjDwkD,EAAO5J,UAAUvuC,EAAIrM,EAAM,GAAI,MAGhCA,EAAM,EAEjB,GAAIy+C,aAAiBvC,GAIjB,OADAsI,EAAO5J,UAAUvuC,EAAIrM,EAAM,GAAI,MACxBA,EAAM,EAEZ,CACD,MAAM0kD,QAAevH,EAAKN,WAAW4B,EAAM7kD,SAC3C,OAAI8qD,aAAkBxI,IAGlBsI,EAAO5J,UAAUvuC,EAAIrM,EAAM,GAAI,MACxBA,EAAM,IAGjByG,EAAMjpB,KAAKihE,GAEJ8F,GAAMpH,EAAMsB,EAAOiG,EAAQr4C,EAAKrM,EAAMy+C,EAAM3C,YAAa2I,EAAYh+C,GAChF,CACJ,CACK,GAAc,OAAVg4C,EACL,OAAOz+C,EAAM,EAGb,MAAM,IAAIjiB,MAAM,eAExB,CAiMAixD,eAAeoR,GAAYG,EAAUl0C,EAAKmkC,EAAO4O,GAC7C,MAAMiB,QAAkB,GAAKK,UAAUlQ,EAAO,CAC1C90D,KAAM6kE,EACNnB,0BAEJ,IACI,MAAMxlD,QAAcymD,EAAU7gD,IAAI6M,GAAK,GACvC,MAAO,CACH8wC,KAAMkD,EACNzmD,QAER,CACA,MAAO6T,GACH,KAAoB,uBAAhBA,EAAI/G,QACE,IAAI3oB,MAAM,0BAGV0vB,CAEd,CACJ,CAOAuhC,eAAe2V,GAAgBxH,EAAM9wC,GACjC,IAAIrM,EAAM,EACN0wC,QAAayM,EAAKN,WAAWM,EAAKzhE,QACtC,KAAgB,OAATg1D,GACH,GAAIA,aAAgB8J,GAAY,CAC5B,IAAK,IAAI/9D,EAAI4vB,EAAIrM,GAAO,EAAGvjB,EAAI,GAAIA,IAC/B,GAA0B,OAAtBi0D,EAAKoK,UAAUr+D,GACf,OAAO,EAGf,MAAMub,EAAO04C,EAAKoK,UAAUzuC,EAAIrM,IAChC0wC,EAAO14C,SAAemlD,EAAKN,WAAW7kD,GACtCgI,GAAO,CACX,KACK,MAAI0wC,aAAgBsL,IAQpB,IAAItL,aAAgBwL,GACrB,OAAO,EAGP,MAAM,IAAIn+D,MAAM,eACpB,CAZI,GAAIsuB,EAAIlvB,OAAS6iB,EAAM0wC,EAAKoL,aACkD,IAA1ET,GAAe3K,EAAKiL,SAAUtvC,EAAIpS,MAAM+F,EAAKA,EAAM0wC,EAAKoL,cACxD,OAAOT,GAAe3K,EAAKiL,SAAUtvC,EAAIpS,MAAM+F,IAAQ,EAE3DA,GAAO0wC,EAAKoL,YACZpL,QAAayM,EAAKN,WAAWnM,EAAKgK,OAOtC,CAEJ,OAAO,CACX,CA6BO1L,eAAesR,GAAiBC,EAAUC,EAAUC,EAASt0C,EAAMmhB,EAAQkjB,EAAO4O,GACrF,GAAIjzC,EAAKhvB,SAAWmwC,EAAOnwC,OACvB,MAAM,IAAIY,MAAM,wCAGpB,IAAK,IAAItB,EAAI,EAAGA,EAAI0vB,EAAKhvB,OAAS,EAAGV,IACjC,GAAI4+D,GAAelvC,EAAK1vB,GAAI0vB,EAAK1vB,EAAI,KAAO,EACxC,MAAM,IAAIsB,MAAM,sBAIxB,IAAK,MAAM6b,KAAS0zB,EAChB,GAAqB,IAAjB1zB,EAAMzc,OACN,MAAM,IAAIY,MAAM,kBAIxB,GAAc,OAAVyyD,GAA+B,OAAbgQ,GAAiC,OAAZC,EAAkB,CACzD,MAAMtD,EAAO,IAAI,GAAK,CAAEiC,0BACxB,IAAK,IAAI3iE,EAAI,EAAGA,EAAI0vB,EAAKhvB,OAAQV,UACvB0gE,EAAK3O,IAAI4M,GAAejvC,EAAK1vB,IAAK6wC,EAAO7wC,IAEnD,IAAK,GAAY8jE,EAAUpD,EAAKzhE,QAC5B,MAAM,IAAIqC,MAAM,6CAEpB,OAAO,CACX,CACA,GAAc,OAAVyyD,GAA+B,OAAbgQ,GAAiC,OAAZC,GAEnB,IAAhBt0C,EAAKhvB,OAAc,CACnB,MAAM,KAAEggE,EAAI,MAAEvjD,SAAgBwmD,GAAYG,EAAUnF,GAAeoF,GAAWhQ,EAAO4O,GACrF,GAAc,OAAVxlD,SAAyB+qD,GAAgBxH,EAAMqD,GAC/C,MAAM,IAAIziE,MAAM,8CAEpB,OAAO,CACX,CAEJ,GAAc,OAAVyyD,GAA+B,OAAbgQ,GAAiC,OAAZC,EACvC,MAAM,IAAI1iE,MAAM,sFAGpB,GAAoB,IAAhBouB,EAAKhvB,QAAsD,IAAtCk+D,GAAemF,EAAUC,GAAgB,CAC9D,MAAM,KAAEtD,EAAI,MAAEvjD,SAAgBwmD,GAAYG,EAAUnF,GAAeoF,GAAWhQ,EAAO4O,GACrF,GAA0C,IAAtC/D,GAAemF,EAAUr0C,EAAK,IAC9B,MAAM,IAAIpuB,MAAM,kEAEpB,GAAc,OAAV6b,IAAmB,GAAYA,EAAO0zB,EAAO,IAC7C,MAAM,IAAIvvC,MAAM,6CAEpB,OAAO4mE,GAAgBxH,EAAMqD,EACjC,CAEA,GAAInF,GAAemF,EAAUC,IAAY,EACrC,MAAM,IAAI1iE,MAAM,yEAEpB,GAAIyiE,EAASrjE,SAAWsjE,EAAQtjE,OAC5B,MAAM,IAAIY,MAAM,oGAEpB,MAAMo/D,QAAa,GAAKuD,UAAUlQ,EAAO,CACrC4O,wBACA1jE,KAAM6kE,IAGJqE,QA9UV5V,eAA6BmO,EAAMp8D,EAAMC,GAErC,IAKI6jE,EACAC,EANA9kD,EAAM,EAENwkD,EAAS,KAET9T,QAAayM,EAAKN,WAAWM,EAAKzhE,QAItC,MAAM+qB,EAAQ,GAGd,OACI,GAAIiqC,aAAgBsL,IAAiBtL,aAAgBwL,GAAU,CAgB3D,GAdAz1C,EAAMjpB,KAAKkzD,GAEPmU,EADA9jE,EAAK5D,OAAS6iB,EAAM0wC,EAAKoL,YACTT,GAAet6D,EAAKkZ,MAAM+F,GAAM0wC,EAAKiL,UAGrCN,GAAet6D,EAAKkZ,MAAM+F,EAAKA,EAAM0wC,EAAKoL,aAAcpL,EAAKiL,UAG7EmJ,EADA9jE,EAAM7D,OAAS6iB,EAAM0wC,EAAKoL,YACTT,GAAer6D,EAAMiZ,MAAM+F,GAAM0wC,EAAKiL,UAGtCN,GAAer6D,EAAMiZ,MAAM+F,EAAKA,EAAM0wC,EAAKoL,aAAcpL,EAAKiL,UAG7D,IAAlBkJ,GAA0C,IAAnBC,EACvB,MAEJ,GAAIpU,aAAgBwL,GAEhB,MAAM,IAAIn+D,MAAM,gBAGpBymE,EAAS9T,EACT1wC,GAAO0wC,EAAKoL,YACZpL,QAAayM,EAAKN,WAAWnM,EAAK92C,QACtC,KACK,MAAI82C,aAAgB8J,IA0CrB,MAAM,IAAIz8D,MAAM,gBA1CiB,CAEjC0oB,EAAMjpB,KAAKkzD,GACX,MAAMqU,EAAWrU,EAAKoK,UAAU/5D,EAAKif,IAC/BglD,EAAYtU,EAAKoK,UAAU95D,EAAMgf,IAEvC,GAAiB,OAAb+kD,GAAmC,OAAdC,EACrB,MAGJ,GAAMD,aAAoBnnE,WAkBrB,CACD,KAAMonE,aAAqBpnE,YACvB,MAEJ,IAAK,GAAYmnE,EAAUC,GACvB,KAER,KAzBuC,CACnC,GAAIA,aAAqBpnE,WACrB,MAEJ,GAAImnE,EAAS5nE,SAAW6nE,EAAU7nE,OAC9B,MAEJ,IAAIunC,GAAQ,EACZ,IAAK,IAAIjoC,EAAI,EAAGA,EAAIsoE,EAAS5nE,OAAQV,IACjC,IAAK,GAAYsoE,EAAStoE,GAAIuoE,EAAUvoE,IAAK,CACzCioC,GAAQ,EACR,KACJ,CAEJ,GAAIA,EACA,KAER,CAUA8/B,EAAS9T,EACTA,QAAayM,EAAKN,WAAWkI,GAC7B/kD,GAAO,CACX,CAGA,CAGJ,MAAMojD,EAAY,CAAC/2C,EAAK5F,IACb02C,EAAKiG,UAAU/2C,EAAK5F,EAAO,IAEtC,GAAIiqC,aAAgBsL,IAAiBtL,aAAgBwL,GAAU,CAS3D,MAAM+I,EAAmCjW,MAAO3iC,GAC7B,OAAXm4C,IAGJ/9C,EAAMoK,MACN2zC,EAAO5J,UAAUvuC,EAAIrM,EAAM,GAAI,YACzBojD,EAAU/2C,EAAIpS,MAAM,EAAG+F,EAAM,GAAIyG,IAChC,GAEX,IAAuB,IAAnBo+C,IAA4C,IAApBC,EACxB,MAAM,IAAI/mE,MAAM,iBAEpB,GAAsB,IAAlB8mE,GAA0C,IAAnBC,EACvB,MAAM,IAAI/mE,MAAM,iBAEpB,GAAsB,IAAlB8mE,GAA0C,IAAnBC,EAEvB,OAAOG,EAAiClkE,GAG5C,GAAuB,IAAnB+jE,EAAsB,CACtB,GAAIpU,aAAgBwL,GAChB,OAAO+I,EAAiClkE,GAE5C,MAAM09D,QAActB,EAAKN,WAAWnM,EAAKgK,QACzC,GAAI+D,aAAiBvC,GACjB,OAAO+I,EAAiClkE,GAE5C,MAAMmkE,QAAeX,GAAMpH,EAAMzM,EAAM+N,EAAO19D,EAAKkZ,MAAM+F,GAAM0wC,EAAKoL,aAAa,EAAOr1C,GAExF,aADM28C,EAAUriE,EAAKkZ,MAAM,EAAG+F,EAAMklD,GAASz+C,IACtC,CACX,CAEA,GAAsB,IAAlBo+C,EAAqB,CACrB,GAAInU,aAAgBwL,GAChB,OAAO+I,EAAiCjkE,GAE5C,MAAMy9D,QAActB,EAAKN,WAAWnM,EAAKgK,QACzC,GAAI+D,aAAiBvC,GACjB,OAAO+I,EAAiCjkE,GAE5C,MAAMkkE,QAAeX,GAAMpH,EAAMzM,EAAM+N,EAAOz9D,EAAMiZ,MAAM+F,GAAM0wC,EAAKoL,aAAa,EAAMr1C,GAExF,aADM28C,EAAUpiE,EAAMiZ,MAAM,EAAG+F,EAAMklD,GAASz+C,IACvC,CACX,CACA,OAAO,CACX,CACK,GAAIiqC,aAAgB8J,GAAY,CAEjC,IAAK,IAAI/9D,EAAIsE,EAAKif,GAAO,EAAGvjB,EAAIuE,EAAMgf,GAAMvjB,IACxCi0D,EAAKkK,UAAUn+D,EAAG,MAEtB,CAMI,MAAM0oE,EAAS,IAAI1+C,GACbzO,EAAO04C,EAAKoK,UAAU/5D,EAAKif,IAC3By+C,EAAQzmD,SAAemlD,EAAKN,WAAW7kD,GACvCktD,QAAeX,GAAMpH,EAAMzM,EAAM+N,EAAO19D,EAAKkZ,MAAM+F,GAAM,GAAG,EAAOmlD,SACnE/B,EAAUriE,EAAKkZ,MAAM,EAAG+F,EAAMklD,GAASC,EACjD,CACA,CACI,MAAMA,EAAS,IAAI1+C,GACbzO,EAAO04C,EAAKoK,UAAU95D,EAAMgf,IAC5By+C,EAAQzmD,SAAemlD,EAAKN,WAAW7kD,GACvCktD,QAAeX,GAAMpH,EAAMzM,EAAM+N,EAAOz9D,EAAMiZ,MAAM+F,GAAM,GAAG,EAAMmlD,SACnE/B,EAAUpiE,EAAMiZ,MAAM,EAAG+F,EAAMklD,GAASC,EAClD,CACA,OAAO,CACX,CAEI,MAAM,IAAIpnE,MAAM,eAExB,CA8JwBqnE,CAAcjI,EAAMqD,EAAUC,GAC9CmE,GACAzH,EAAKzhE,KAAKyhE,EAAKP,iBAGnB,IAAK,IAAIngE,EAAI,EAAGA,EAAI0vB,EAAKhvB,OAAQV,UACvB0gE,EAAK3O,IAAI4M,GAAejvC,EAAK1vB,IAAK6wC,EAAO7wC,IAGnD,IAAK,GAAY0gE,EAAKzhE,OAAQ6kE,GAC1B,MAAM,IAAIxiE,MAAM,kDAEpB,OAAO4mE,GAAgBxH,EAAMhxC,EAAKA,EAAKhvB,OAAS,GACpD,CC1bO,MAAM,GAAS,CAClBkoE,QAAS,CACL3uD,KAAM,UACNw2C,QAAS,EACToY,UAAW,EACXC,gBAAiB,WACjBC,UAAW,CACPtqD,KAAM,MACNuqD,UAAW,SACXC,OAAQ,CAAC,GAEbC,QAAS,0BACT1W,IAAK,wBACL2W,QAAS,CACLC,SAAU,IACVC,WAAY,YACZ3a,MAAO,qBACP4a,UAAW,sEAEfC,UAAW,CACP,CACItvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,MACPC,SAAU,cAEd,CACIxvD,KAAM,MACNuvD,MAAO,MACPC,SAAU,cAEd,CACIxvD,KAAM,mBACNuvD,MAAO,OACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,OACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,MACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,MACPC,SAAU,cAEd,CACIxvD,KAAM,aACNuvD,MAAO,MACPC,SAAU,cAEd,CACIxvD,KAAM,WACNuvD,MAAO,OACPC,SAAU,cAEd,CACIxvD,KAAM,cACNuvD,MAAO,KACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,eACNuvD,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,cACNuvD,MAAO,OACPC,SAAU,cAEd,CAGIxvD,KAAM,QACNyvD,IAAK,0BACLF,MAAO,SACPC,SAAU,cAEd,CACIxvD,KAAM,wBACNuvD,MAAO,KACPC,SAAU,MAEd,CACIxvD,KAAM,WACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,eAGlBG,eAAgB,CACZ,CACIC,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,qBACVb,QAAS,mCAEb,CACIW,GAAI,cACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,gBACVb,QAAS,8BAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,gBACVb,QAAS,wBAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,mBACVb,QAAS,yBAGjBc,YAAa,CACT,6FAGRC,OAAQ,CACJhwD,KAAM,SACNw2C,QAAS,EACToY,UAAW,EACXC,gBAAiB,WACjBC,UAAW,CACPtqD,KAAM,MACNuqD,UAAW,SACXkB,OAAQ,CACJC,OAAQ,GACRC,MAAO,MAGflB,QAAS,gCACT1W,IAAK,oCACL2W,QAAS,CACLQ,UAAW,aACXP,SAAU,SACVC,WAAY,EACZ3a,MAAO,qBACP4a,UAAW,gPAEfC,UAAW,CACP,CACItvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,mBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,WACNuvD,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,QACPC,SAAU,cAEd,CAGIxvD,KAAM,QACNyvD,IAAK,WACLF,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,wBACNuvD,MAAO,KACPC,SAAU,MAEd,CACIxvD,KAAM,WACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,eAGlBG,eAAgB,CACZ,CACIC,GAAI,eACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,uBAEb,CACIW,GAAI,eACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,uBAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,uBAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,uBAEb,CACIW,GAAI,cACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,gCAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,8BAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,8BAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,+BAGjBc,YAAa,CACT,4FAGRK,QAAS,CACLpwD,KAAM,UACNw2C,QAAS,SACToY,UAAW,SACXC,gBAAiB,WACjBC,UAAW,CACPtqD,KAAM,MACNuqD,UAAW,SACXC,OAAQ,CAAC,GAEbC,QAAS,sCACT1W,IAAK,qDACL2W,QAAS,CACLQ,UAAW,aACXP,SAAU,IACVC,WAAY,OACZ3a,MAAO,qBACP4a,UAAW,sEAEfC,UAAW,CACP,CACItvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,mBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,WACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,cACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,EACPC,SAAU,cAEd,CAGIxvD,KAAM,QACNyvD,IAAK,oBACLF,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,wBACNuvD,MAAO,QACPC,SAAU,cAEd,CACIxvD,KAAM,WACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,eAGlBG,eAAgB,CACZ,CACIC,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,QAEb,CACIW,GAAI,gBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,QAEb,CACIW,GAAI,iBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,MAEb,CACIW,GAAI,eACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,aAGjBc,YAAa,CACT,6FAGRM,QAAS,CACLrwD,KAAM,UACNw2C,QAAS,KACToY,UAAW,KACXC,gBAAiB,QACjBC,UAAW,CACPtqD,KAAM,MACNuqD,UAAW,UAEfE,QAAS,qCACT1W,IAAK,0CACL2W,QAAS,CACLoB,cAAe,aACflB,WAAY,OACZC,UAAW,KACXF,SAAU,YACV1a,MAAO,qBACPib,UAAW,cAEfJ,UAAW,CACP,CACItvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,mBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,YACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,iBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,aACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,WACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,cACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,QACNyvD,IAAK,IACLF,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,wBACNuvD,MAAO,EACPC,SAAU,cAEd,CACIxvD,KAAM,WACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,cAEd,CACIxvD,KAAM,SACNuvD,MAAO,KACPG,UAAW,aACXF,SAAU,eAGlBG,eAAgB,CACZ,CACIC,GAAI,iBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,cAEb,CACIW,GAAI,kBACJC,KAAM,MACNl9B,GAAI,mIACJm9B,SAAU,GACVb,QAAS,eAGjBc,YAAa,CACT,6FAGRQ,UAAW,CACPvwD,KAAM,YACNw2C,QAAS,MACToY,UAAW,MACXC,gBAAiB,SACjBC,UAAW,CACPtqD,KAAM,MACNuqD,UAAW,UAEfE,QAAS,uFACT1W,IAAK,4CACL2W,QAAS,CACLE,WAAY,OACZC,UAAW,KACXF,SAAU,YACV1a,MAAO,qBACPib,UAAW,cAEfJ,UAAW,CACP,CACItvD,KAAM,aACNuvD,MAAO,GAEX,CACIvvD,KAAM,YACNuvD,MAAO,GAEX,CACIvvD,KAAM,mBACNuvD,MAAO,GAEX,CACIvvD,KAAM,iBACNuvD,MAAO,GAEX,CACIvvD,KAAM,YACNuvD,MAAO,GAEX,CACIvvD,KAAM,iBACNuvD,MAAO,GAEX,CACIvvD,KAAM,aACNuvD,MAAO,GAEX,CACIvvD,KAAM,WACNuvD,MAAO,GAEX,CACIvvD,KAAM,SACNuvD,MAAO,GAEX,CACIvvD,KAAM,SACNuvD,MAAO,GAEX,CACIvvD,KAAM,QACNyvD,IAAK,IACLF,MAAO,GAEX,CACIvvD,KAAM,wBACNuvD,MAAO,GAEX,CACIvvD,KAAM,WACNuvD,MAAO,KACPG,UAAW,KAEf,CACI1vD,KAAM,SACNuvD,MAAO,KACPG,UAAW,eAGnBC,eAAgB,GAChBI,YAAa,KChoBrB,IAAIS,GAAQ,CACR,EAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,SAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,SACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAE9D,oBAAfC,aACPD,GAAQ,IAAIC,WAAWD,KCvCpB,IAAIE,GAuCAC,GAsBAC,GAMAC,GAMAC,GCzEPC,IDCJ,SAAWL,GACPA,EAAMA,EAAe,QAAI,GAAK,UAC9BA,EAAMA,EAAc,OAAI,GAAK,SAC7BA,EAAMA,EAAe,QAAI,UAAY,UACrCA,EAAMA,EAAe,QAAI,MAAS,UAClCA,EAAMA,EAAiB,UAAI,OAAS,WACvC,CAND,CAMGA,KAAUA,GAAQ,CAAC,IAMjBA,GAAMM,QAGQ,GAAW,sEAEzBN,GAAMO,OAGQ,GAAW,sEAEzBP,GAAMQ,QAGQ,GAAW,sEAEzBR,GAAMS,QAGQ,GAAW,sEAEzBT,GAAMU,UAGQ,GAAW,sEAI9B,SAAWT,GACPA,EAAqB,WAAI,aACzBA,EAAoB,UAAI,YACxBA,EAAc,IAAI,MAClBA,EAA2B,iBAAI,mBAC/BA,EAAyB,eAAI,iBAC7BA,EAAoB,UAAI,YACxBA,EAAyB,eAAI,iBAC7BA,EAAqB,WAAI,aACzBA,EAAmB,SAAI,WACvBA,EAAsB,YAAI,cAC1BA,EAAiB,OAAI,SACrBA,EAAiB,OAAI,SACrBA,EAAuB,aAAI,eAC3BA,EAAsB,YAAI,cAC1BA,EAAgC,sBAAI,wBACpCA,EAAgB,MAAI,QACpBA,EAAmB,SAAI,WACvBA,EAAiB,OAAI,SACrBA,EAAiB,OAAI,QACxB,CApBD,CAoBGA,KAAaA,GAAW,CAAC,IAE5B,SAAWC,GACPA,EAA4B,aAAI,MAChCA,EAA2B,YAAI,MAC/BA,EAAgC,iBAAI,KACvC,CAJD,CAIGA,KAAkBA,GAAgB,CAAC,IAEtC,SAAWC,GACPA,EAA2B,OAAI,SAC/BA,EAA2B,OAAI,SAC/BA,EAA2B,OAAI,QAClC,CAJD,CAIGA,KAAuBA,GAAqB,CAAC,IAEhD,SAAWC,GAMPA,EAA4B,eAAI,kBAMhCA,EAA2B,cAAI,iBAM/BA,EAAyB,YAAI,eAM7BA,EAAuB,UAAI,cAM3BA,EAA6B,gBAAI,mBAMjCA,EAAgC,mBAAI,qBACvC,CArCD,CAqCGA,KAAgBA,GAAc,CAAC,IC9GlC,SAAWC,GACPA,EAAiB,SAAI,WACrBA,EAAc,MAAI,QAClBA,EAAe,OAAI,SACnBA,EAAc,MAAI,OACrB,CALD,CAKGA,KAAWA,GAAS,CAAC,IACjB,MAAMM,GAAO,CAChB,KAAM,CACFpC,QAAS,4BACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASa,WAC1BC,aAAc,GACdC,UAAW,CACPC,OAAQ,CACJl+C,EAAG,IACHsH,EAAG,iCAEP62C,MAAO,CACHn+C,EAAG,IACHsH,EAAG,kCAIf,KAAM,CACFk0C,QAAS,sCACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASmB,OAC1BL,aAAc,CAAC,MACfM,UAAW,CACPC,4BAA6B,CACzBv+C,EAAG,EACHsH,EAAG,uCAEPk3C,qBAAsB,CAClBx+C,EAAG,EACHsH,EAAG,uCAEPm3C,eAAgB,CACZz+C,EAAG,IACHsH,EAAG,6CAIf,KAAM,CACFk0C,QAAS,iCACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASyB,SAC1BX,aAAc,GACdC,UAAW,CACPW,SAAU,CACN5+C,EAAG,EACHsH,EAAG,mCAEPu3C,UAAW,CACP7+C,EAAG,EACHsH,EAAG,oCAEPw3C,QAAS,CACL9+C,EAAG,GACHsH,EAAG,oCAIf,KAAM,CACFk0C,QAAS,kBACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAAS6B,UAC1Bf,aAAc,GACdC,UAAW,CACPe,mBAAoB,CAChBh/C,EAAG,EACHsH,EAAG,6DAIf,KAAM,CACFk0C,QAAS,6BACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASa,WAC1BC,aAAc,IAElB,KAAM,CACFxC,QAAS,8CACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASa,WAC1BC,aAAc,GACdC,UAAW,CACPgB,UAAW,CACPj/C,EAAG,KACHsH,EAAG,iFAEP43C,kBAAmB,CACfl/C,EAAG,KACHsH,EAAG,mEAEP63C,gBAAiB,CACbn/C,EAAG,IACHsH,EAAG,0EAEP83C,sBAAuB,CACnBp/C,EAAG,KACHsH,EAAG,mEAEP+3C,qBAAsB,CAClBr/C,EAAG,IACHsH,EAAG,yDAEPg4C,sBAAuB,CACnBt/C,EAAG,IACHsH,EAAG,yDAEPi4C,wBAAyB,CACrBv/C,EAAG,MACHsH,EAAG,sEAEPk4C,yBAA0B,CACtBx/C,EAAG,KACHsH,EAAG,0EAEP5a,KAAM,CACFsT,EAAG,EACHsH,EAAG,+BAEPm4C,SAAU,CACNz/C,EAAG,EACHsH,EAAG,mCAEPo4C,aAAc,CACV1/C,EAAG,EACHsH,EAAG,uCAEPq4C,WAAY,CACR3/C,EAAG,EACHsH,EAAG,qCAEPs4C,QAAS,CACL5/C,EAAG,EACHsH,EAAG,kCAEPu4C,YAAa,CACT7/C,EAAG,EACHsH,EAAG,sCAEPw4C,YAAa,CACT9/C,EAAG,EACHsH,EAAG,sCAEPy4C,YAAa,CACT//C,EAAG,EACHsH,EAAG,sCAEP04C,MAAO,CACHhgD,EAAG,EACHsH,EAAG,gCAEP24C,OAAQ,CACJjgD,EAAG,EACHsH,EAAG,mCAIf,KAAM,CACFk0C,QAAS,wBACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASyB,SAC1BX,aAAc,CAAC,KAAM,MACrBC,UAAW,CACPiC,yBAA0B,CACtBlgD,EAAG,KACHsH,EAAG,0DAEP64C,sBAAuB,CACnBngD,EAAG,KACHsH,EAAG,4DAIf,KAAM,CACFk0C,QAAS,yEACT1W,IAAK,0FACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASa,WAC1BC,aAAc,GACdoC,GAAI,CACAC,sBAAuB,CACnBrgD,EAAG5I,OAAO,8CACVkQ,EAAG,2DAEPg5C,mBAAoB,CAChBtgD,EAAG5I,OAAO,KACVkQ,EAAG,4EAIf,KAAM,CACFk0C,QAAS,4BACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASqD,OAC1BvC,aAAc,GACdC,UAAW,CACPuC,KAAM,CACFxgD,EAAG,KACHsH,EAAG,+BAEPm5C,SAAU,CACNzgD,EAAG,EACHsH,EAAG,mCAEPo5C,sBAAuB,CACnB1gD,EAAG,KACHsH,EAAG,uDAIf,KAAM,CACFk0C,QAAS,iBACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASqD,OAC1BvC,aAAc,GACdC,UAAW,CACP0C,QAAS,CACL3gD,EAAG,EACHsH,EAAG,oCAIf,KAAM,CACFk0C,QAAS,uBACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASmB,OAC1BL,aAAc,CAAC,MACfM,UAAW,CACPsC,kBAAmB,CACf5gD,EAAG,EACHsH,EAAG,8FAGX22C,UAAW,CACP4C,mBAAoB,CAChB7gD,EAAG,EACHsH,EAAG,+CAEPw5C,yBAA0B,CACtB9gD,EAAG,KACHsH,EAAG,gFAIf,KAAM,CACFk0C,QAAS,6BACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASqD,OAC1BvC,aAAc,CAAC,OAEnB,KAAM,CACFxC,QAAS,mDACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASmB,OAC1BL,aAAc,IAElB,KAAM,CACFxC,QAAS,6CACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAAS6D,YAC1B/C,aAAc,GACd9lE,IAAK,CACD8oE,oBAAqB,CACjBhhD,EAAG,KACHsH,EAAG,4DAIf,KAAM,CACFk0C,QAAS,sDACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASa,WAC1BC,aAAc,IAElB,KAAM,CACFxC,QAAS,gBACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASqD,OAC1BvC,aAAc,CAAC,OAEnB,KAAM,CACFxC,QAAS,wBACT1W,IAAK,0CACLI,OAAQ,SACR4Y,gBAAiBZ,GAASqD,OAC1BvC,aAAc,CAAC,MACfM,UAAW,CAAC,EACZL,UAAW,CAAC,EACZmC,GAAI,CAAC,EACLloE,IAAK,CAAC,GAEV,KAAM,CACFsjE,QAAS,sCACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASqD,OAC1BvC,aAAc,IAElB,KAAM,CACFxC,QAAS,oBACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASa,WAC1BC,aAAc,GACdC,UAAW,CACPgD,MAAO,CACHjhD,EAAG,EACHsH,EAAG,kCAIf,KAAM,CACFk0C,QAAS,2BACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASgE,eAC1BlD,aAAc,GACdC,UAAW,CACPkD,iBAAkB,CACdnhD,EAAG,EACHsH,EAAG,6EAGX84C,GAAI,CACAgB,gBAAiB,CACbphD,EAAG,MACHsH,EAAG,oEAIf,KAAM,CACFk0C,QAAS,qCACT1W,IAAK,0CACLI,OAAQoY,GAAOc,MACfN,gBAAiBZ,GAASqD,OAC1BvC,aAAc,GACd9lE,IAAK,CACD8oE,oBAAqB,CACjBhhD,EAAG,MACHsH,EAAG,4DAIf,KAAM,CACFk0C,QAAS,6CACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASqD,OAC1BvC,aAAc,GACdC,UAAW,CACPoD,WAAY,CACRrhD,EAAG,EACHsH,EAAG,+DAIf,KAAM,CACFk0C,QAAS,+BACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASoE,OAC1BtD,aAAc,GACdC,UAAW,CAAC,EACZmC,GAAI,CACAmB,sBAAuB,CACnBvhD,EAAG,KACHsH,EAAG,+FAIf,KAAM,CACFk0C,QAAS,0BACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASsE,MAC1BxD,aAAc,CAAC,KAAM,KAAM,KAAM,MACjCM,UAAW,CACPmD,eAAgB,CACZzhD,EAAG,OACHsH,EAAG,sCAEPo6C,sBAAuB,CACnB1hD,EAAG,OACHsH,EAAG,0CAEPq6C,mBAAoB,CAChB3hD,EAAG,OACHsH,EAAG,wCAEPs6C,2BAA4B,CACxB5hD,EAAG,QACHsH,EAAG,8EAGX22C,UAAW,CACP4D,iBAAkB,CACd7hD,EAAG,KACHsH,EAAG,mCAEPw6C,gBAAiB,CACb9hD,EAAG,EACHsH,EAAG,gCAEPy6C,qCAAsC,CAClC/hD,EAAG,IACHsH,EAAG,2DAEP06C,SAAU,CACNhiD,EAAG,EACHsH,EAAG,oCAGX26C,SAAU,CACNC,yBAA0B,CACtBliD,EAAG,EACHsH,EAAG,6DAEP66C,qBAAsB,CAClBniD,EAAG,KACHsH,EAAG,mDAIf,KAAM,CACFk0C,QAAS,8CACT1W,IAAK,0CACLI,OAAQoY,GAAOO,OACfC,gBAAiBZ,GAASsE,MAC1BxD,aAAc,IAElB,KAAM,CACFxC,QAAS,iDACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASkF,YAC1BpE,aAAc,GACd9lE,IAAK,CACD8oE,oBAAqB,CACjBhhD,EAAG,MACHsH,EAAG,4DAIf,KAAM,CACFk0C,QAAS,qCACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASmF,SAC1BrE,aAAc,GACdC,UAAW,CACPqE,MAAO,CACHtiD,EAAG,EACHsH,EAAG,kCAIf,KAAM,CACFk0C,QAAS,wCACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASqD,OAC1BvC,aAAc,IAElB,KAAM,CACFxC,QAAS,4DACT1W,IAAK,6CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASqD,OAC1BvC,aAAc,IAElB,KAAM,CACFxC,QAAS,qBACT1W,IAAK,0CACLI,OAAQoY,GAAOoB,MACfZ,gBAAiBZ,GAASsE,MAC1BxD,aAAc,CAAC,MACfC,UAAW,CACPsE,YAAa,CACTviD,EAAG,EACHsH,EAAG,yCCpfZ,IAAI,IACX,SAAWg2C,GACPA,EAAc,MAAI,QAClBA,EAAe,OAAI,SACnBA,EAAc,MAAI,OACrB,CAJD,CAIG,KAAW,GAAS,CAAC,IACjB,MAAMzB,GAAY,CACrB2G,WAAY,CACRj2D,KAAM,aACNivD,QAAS,mCACT1W,IAAK,GACLI,OAAQ,GAAOkZ,MACfE,UAAW,CACPmE,YAAa,CACTziD,EAAG,IACHsH,EAAG,qCAEPo7C,qBAAsB,CAClB1iD,EAAG,KACHsH,EAAG,mEAEPs5C,kBAAmB,CACf5gD,EAAG,EACHsH,EAAG,8FAGX22C,UAAW,CACPnpE,KAAM,CACFkrB,EAAG,EACHsH,EAAG,0DAEPq7C,IAAK,CACD3iD,EAAG,GACHsH,EAAG,8BAEPs7C,QAAS,CACL5iD,EAAG,GACHsH,EAAG,wDAEPm+B,UAAW,CACPzlC,EAAG,GACHsH,EAAG,+BAEPu7C,cAAe,CACX7iD,EAAG,EACHsH,EAAG,8CAEP04C,MAAO,CACHhgD,EAAG,GACHsH,EAAG,gCAEPw7C,UAAW,CACP9iD,EAAG,IACHsH,EAAG,+DAEPy7C,YAAa,CACT/iD,EAAG,IACHsH,EAAG,uEAEP07C,aAAc,CACVhjD,EAAG,KACHsH,EAAG,6DAEP27C,SAAU,CACNjjD,EAAG,EACHsH,EAAG,mCAEPzH,IAAK,CACDG,EAAG,IACHsH,EAAG,8BAEP47C,QAAS,CACLljD,EAAG,EACHsH,EAAG,uCAEP67C,SAAU,CACNnjD,EAAG,IACHsH,EAAG,+HAEP5C,OAAQ,CACJ1E,EAAG,KACHsH,EAAG,iCAEP5a,KAAM,CACFsT,EAAG,GACHsH,EAAG,+BAEP87C,YAAa,CACTpjD,EAAG,KACHsH,EAAG,uCAEP+7C,kBAAmB,CACfrjD,EAAG,IACHsH,EAAG,qDAEPg8C,eAAgB,CACZtjD,EAAG,KACHsH,EAAG,iEAEPu5C,mBAAoB,CAChB7gD,EAAG,KACHsH,EAAG,+CAEPi8C,OAAQ,CACJvjD,EAAG,EACHsH,EAAG,0JAEPk8C,aAAc,CACVxjD,EAAG,IACHsH,EAAG,kEAEPm8C,WAAY,CACRzjD,EAAG,IACHsH,EAAG,IAEPo8C,GAAI,CACA1jD,EAAG,KACHsH,EAAG,4EAEPq8C,WAAY,CACR3jD,EAAG,KACHsH,EAAG,0CAEPs8C,WAAY,CACR5jD,EAAG,EACHsH,EAAG,wHAEPu8C,cAAe,CACX7jD,EAAG,GACHsH,EAAG,iIAEPnvB,KAAM,CACF6nB,EAAG,EACHsH,EAAG,0GAEPw8C,UAAW,CACP9jD,EAAG,IACHsH,EAAG,IAEPy8C,OAAQ,CACJ/jD,EAAG,GACHsH,EAAG,IAEP08C,WAAY,CACRhkD,EAAG,GACHsH,EAAG,IAEP28C,UAAW,CACPjkD,EAAG,IACHsH,EAAG,IAEP48C,cAAe,CACXlkD,EAAG,IACHsH,EAAG,IAEP68C,SAAU,CACNnkD,EAAG,GACHsH,EAAG,IAEP88C,aAAc,CACVpkD,EAAG,EACHsH,EAAG,IAEP+8C,KAAM,CACFrkD,EAAG,EACHsH,EAAG,+BAEPrqB,IAAK,CACD+iB,EAAG,EACHsH,EAAG,8BAEPnxB,IAAK,CACD6pB,EAAG,EACHsH,EAAG,8BAEPpqB,IAAK,CACD8iB,EAAG,EACHsH,EAAG,8BAEPzf,IAAK,CACDmY,EAAG,EACHsH,EAAG,8BAEPg9C,KAAM,CACFtkD,EAAG,EACHsH,EAAG,+BAEPxvB,IAAK,CACDkoB,EAAG,EACHsH,EAAG,8BAEPi9C,KAAM,CACFvkD,EAAG,EACHsH,EAAG,+BAEPk9C,OAAQ,CACJxkD,EAAG,EACHsH,EAAG,iCAEPm9C,OAAQ,CACJzkD,EAAG,EACHsH,EAAG,iCAEPo9C,WAAY,CACR1kD,EAAG,EACHsH,EAAG,qCAEPnd,GAAI,CACA6V,EAAG,EACHsH,EAAG,6BAEPvd,GAAI,CACAiW,EAAG,EACHsH,EAAG,6BAEPq9C,IAAK,CACD3kD,EAAG,EACHsH,EAAG,8BAEPs9C,IAAK,CACD5kD,EAAG,EACHsH,EAAG,8BAEP/c,GAAI,CACAyV,EAAG,EACHsH,EAAG,6BAEPu9C,OAAQ,CACJ7kD,EAAG,EACHsH,EAAG,iCAEPlrB,IAAK,CACD4jB,EAAG,EACHsH,EAAG,8BAEPtrB,GAAI,CACAgkB,EAAG,EACHsH,EAAG,6BAEP9qB,IAAK,CACDwjB,EAAG,EACHsH,EAAG,8BAEPw9C,IAAK,CACD9kD,EAAG,EACHsH,EAAG,8BAEPmV,KAAM,CACFzc,EAAG,EACHsH,EAAG,+BAEPqZ,QAAS,CACL3gB,EAAG,EACHsH,EAAG,kCAEPs4C,QAAS,CACL5/C,EAAG,GACHsH,EAAG,kCAEPy9C,OAAQ,CACJ/kD,EAAG,EACHsH,EAAG,iCAEP09C,OAAQ,CACJhlD,EAAG,EACHsH,EAAG,iCAEP29C,UAAW,CACPjlD,EAAG,EACHsH,EAAG,oCAEP49C,aAAc,CACVllD,EAAG,EACHsH,EAAG,uCAEP69C,aAAc,CACVnlD,EAAG,EACHsH,EAAG,uCAEP89C,aAAc,CACVplD,EAAG,EACHsH,EAAG,uCAEP+9C,SAAU,CACNrlD,EAAG,EACHsH,EAAG,mCAEPg+C,SAAU,CACNtlD,EAAG,EACHsH,EAAG,mCAEPi+C,SAAU,CACNvlD,EAAG,EACHsH,EAAG,mCAEPu4C,YAAa,CACT7/C,EAAG,GACHsH,EAAG,sCAEPw4C,YAAa,CACT9/C,EAAG,GACHsH,EAAG,sCAEPk+C,UAAW,CACPxlD,EAAG,GACHsH,EAAG,oCAEPm+C,SAAU,CACNzlD,EAAG,EACHsH,EAAG,mCAEP20C,UAAW,CACPj8C,EAAG,EACHsH,EAAG,oCAEPzyB,OAAQ,CACJmrB,EAAG,EACHsH,EAAG,iCAEPq0C,WAAY,CACR37C,EAAG,EACHsH,EAAG,qCAEPo+C,SAAU,CACN1lD,EAAG,EACHsH,EAAG,mCAEPZ,IAAK,CACD1G,EAAG,EACHsH,EAAG,8BAEPq+C,MAAO,CACH3lD,EAAG,EACHsH,EAAG,gCAEPs+C,OAAQ,CACJ5lD,EAAG,EACHsH,EAAG,iCAEPu+C,QAAS,CACL7lD,EAAG,EACHsH,EAAG,kCAEP24C,OAAQ,CACJjgD,EAAG,EACHsH,EAAG,iCAEPw+C,KAAM,CACF9lD,EAAG,EACHsH,EAAG,+BAEPy+C,MAAO,CACH/lD,EAAG,GACHsH,EAAG,gCAEP0+C,GAAI,CACAhmD,EAAG,EACHsH,EAAG,6BAEP2+C,MAAO,CACHjmD,EAAG,EACHsH,EAAG,gCAEP4+C,IAAK,CACDlmD,EAAG,EACHsH,EAAG,8BAEPj0B,KAAM,CACF2sB,EAAG,EACHsH,EAAG,+BAEP6+C,IAAK,CACDnmD,EAAG,EACHsH,EAAG,8BAEPpV,KAAM,CACF8N,EAAG,EACHsH,EAAG,+BAEPm4C,SAAU,CACNz/C,EAAG,GACHsH,EAAG,mCAEP8+C,OAAQ,CACJpmD,EAAG,EACHsH,EAAG,iCAEP++C,QAAS,CACLrmD,EAAG,EACHsH,EAAG,kCAEPg/C,aAAc,CACVtmD,EAAG,EACHsH,EAAG,wCAGX84C,GAAI,CACAmG,WAAY,CACRvmD,EAAG,KACHsH,EAAG,oCAEPk/C,gBAAiB,CACbxmD,EAAG,KACHsH,EAAG,sCAEPm/C,iBAAkB,CACdzmD,EAAG,GACHsH,EAAG,iDAGXpvB,IAAK,CACDwuE,kBAAmB,CACf1mD,EAAG,OACHsH,EAAG,+CAEPq/C,uBAAwB,CACpB3mD,EAAG,KACHsH,EAAG,wEAEPs/C,cAAe,CACX5mD,EAAG,GACHsH,EAAG,4GAEPu/C,cAAe,CACX7mD,EAAG,IACHsH,EAAG,yCAEPw/C,eAAgB,CACZ9mD,EAAG,IACHsH,EAAG,0CAEPy/C,YAAa,CACT/mD,EAAG5I,OAAO,uBACVkQ,EAAG,sDAEP05C,oBAAqB,CACjBhhD,EAAG,EACHsH,EAAG,4DAIf0/C,UAAW,CACPz6D,KAAM,YACNivD,QAAS,uDACT1W,IAAK,yCACLI,OAAQ,GAAOkZ,MACfH,UAAW,CACPyB,aAAc,CACV1/C,EAAG,GACHsH,EAAG,yCAIf2/C,IAAK,CACD16D,KAAM,MACNivD,QAAS,sBACT1W,IAAK,yCACLI,OAAQ,GAAOkZ,OAEnB8I,iBAAkB,CACd36D,KAAM,mBACNivD,QAAS,yDACT1W,IAAK,yCACLI,OAAQ,GAAOkZ,MACfH,UAAW,CACP+B,MAAO,CACHhgD,EAAG,IACHsH,EAAG,4BAEP5a,KAAM,CACFsT,EAAG,IACHsH,EAAG,sDAEPu4C,YAAa,CACT7/C,EAAG,IACHsH,EAAG,sCAEPw4C,YAAa,CACT9/C,EAAG,IACHsH,EAAG,sCAEPs4C,QAAS,CACL5/C,EAAG,IACHsH,EAAG,kCAEPo4C,aAAc,CACV1/C,EAAG,IACHsH,EAAG,uCAEPm4C,SAAU,CACNz/C,EAAG,IACHsH,EAAG,mCAEPg/C,aAAc,CACVtmD,EAAG,IACHsH,EAAG,yCAIf6/C,eAAgB,CACZ56D,KAAM,iBACNivD,QAAS,qHACT1W,IAAK,yCACLI,OAAQ,GAAOkZ,MACfH,UAAW,CACP2E,QAAS,CACL5iD,EAAG,GACHsH,EAAG,yDAGX84C,GAAI,CACAgH,YAAa,CACTpnD,EAAG,MACHsH,EAAG,qCAIf+/C,UAAW,CACP96D,KAAM,YACNivD,QAAS,yEACT1W,IAAK,yCACLI,OAAQ,GAAOkZ,MACfH,UAAW,CACPe,mBAAoB,CAChBh/C,EAAG,GACHsH,EAAG,2DAEPggD,MAAO,CACHtnD,EAAG,IACHsH,EAAG,2CAEPigD,MAAO,CACHvnD,EAAG,IACHsH,EAAG,iDAEPkgD,UAAW,CACPxnD,EAAG,IACHsH,EAAG,+CAEPmgD,cAAe,CACXznD,EAAG,IACHsH,EAAG,6DAEPsoC,OAAQ,CACJ5vC,EAAG,EACHsH,EAAG,iCAEPq4C,WAAY,CACR3/C,EAAG,IACHsH,EAAG,qCAEPogD,eAAgB,CACZ1nD,EAAG,EACHsH,EAAG,yCAEPqgD,eAAgB,CACZ3nD,EAAG,EACHsH,EAAG,0CAGXpvB,IAAK,CACD6uE,YAAa,CACT/mD,EAAG5I,OAAO,uBACVkQ,EAAG,sDAEP05C,oBAAqB,CACjBhhD,EAAG,IACHsH,EAAG,4DAIfsgD,eAAgB,CACZr7D,KAAM,iBACNivD,QAAS,sEACT1W,IAAK,0CACLI,OAAQ,GAAOkZ,MACfH,UAAW,CACP4J,iBAAkB,CACd7nD,EAAG,IACHsH,EAAG,yDAEPwgD,iBAAkB,CACd9nD,EAAG,IACHsH,EAAG,6CAEPygD,kBAAmB,CACf/nD,EAAG,IACHsH,EAAG,iDAEP0gD,kBAAmB,CACfhoD,EAAG,IACHsH,EAAG,wCAEP2gD,qBAAsB,CAClBjoD,EAAG,KACHsH,EAAG,8EAEP4gD,qBAAsB,CAClBloD,EAAG,KACHsH,EAAG,0EAEP6gD,0BAA2B,CACvBnoD,EAAG,MACHsH,EAAG,sEAEPjc,IAAK,CACD2U,EAAG,EACHsH,EAAG,8BAEP8gD,IAAK,CACDpoD,EAAG,EACHsH,EAAG,8BAEP+gD,IAAK,CACDroD,EAAG,EACHsH,EAAG,8BAEPy4C,YAAa,CACT//C,EAAG,IACHsH,EAAG,sCAEPghD,QAAS,CACLtoD,EAAG,KACHsH,EAAG,mCAGXpvB,IAAK,CACD6uE,YAAa,CACT/mD,EAAG5I,OAAO,uBACVkQ,EAAG,uDAEP05C,oBAAqB,CACjBhhD,EAAG,IACHsH,EAAG,4DAIfihD,WAAY,CACRh8D,KAAM,aACNivD,QAAS,0FACT1W,IAAK,0CACLI,OAAQ,GAAOkZ,MACfH,UAAW,CACP4J,iBAAkB,CACd7nD,EAAG,KACHsH,EAAG,0BAEPwgD,iBAAkB,CACd9nD,EAAG,KACHsH,EAAG,0BAEPygD,kBAAmB,CACf/nD,EAAG,KACHsH,EAAG,0BAEP0gD,kBAAmB,CACfhoD,EAAG,KACHsH,EAAG,0BAEP2gD,qBAAsB,CAClBjoD,EAAG,KACHsH,EAAG,0BAEP4gD,qBAAsB,CAClBloD,EAAG,KACHsH,EAAG,0BAEP6gD,0BAA2B,CACvBnoD,EAAG,KACHsH,EAAG,4BAIfkhD,SAAU,CACNj8D,KAAM,WACNivD,QAAS,2EACT1W,IAAK,0CACLI,OAAQ,GAAOkZ,MACfE,UAAW,CAAC,EACZL,UAAW,CACPwK,YAAa,CACTzoD,EAAG,EACHsH,EAAG,kDAEPggD,MAAO,CACHtnD,EAAG,IACHsH,EAAG,2CAEPigD,MAAO,CACHvnD,EAAG,IACHsH,EAAG,iDAEPkgD,UAAW,CACPxnD,EAAG,KACHsH,EAAG,+CAEPmgD,cAAe,CACXznD,EAAG,KACHsH,EAAG,6DAEPu8C,cAAe,CACX7jD,EAAG,GACHsH,EAAG,iIAEPohD,uBAAwB,CACpB1oD,EAAG,KACHsH,EAAG,uEAEP+3C,qBAAsB,CAClBr/C,EAAG,IACHsH,EAAG,yDAEPg4C,sBAAuB,CACnBt/C,EAAG,IACHsH,EAAG,yDAEPqhD,qBAAsB,CAClB3oD,EAAG,IACHsH,EAAG,yDAEPi4C,wBAAyB,CACrBv/C,EAAG,MACHsH,EAAG,sEAEP83C,sBAAuB,CACnBp/C,EAAG,IACHsH,EAAG,mEAEPk4C,yBAA0B,CACtBx/C,EAAG,KACHsH,EAAG,0EAEPw5C,yBAA0B,CACtB9gD,EAAG,KACHsH,EAAG,8EAEPs4C,QAAS,CACL5/C,EAAG,IACHsH,EAAG,kCAEPy4C,YAAa,CACT//C,EAAG,IACHsH,EAAG,sCAEPshD,QAAS,CACL5oD,EAAG,EACHsH,EAAG,kCAEPuhD,YAAa,CACT7oD,EAAG,EACHsH,EAAG,sCAEP04C,MAAO,CACHhgD,EAAG,IACHsH,EAAG,kCAIfwhD,YAAa,CACTv8D,KAAM,cACNivD,QAAS,kCACT1W,IAAK,0CACLI,OAAQ,GAAOkZ,MACflmE,IAAK,CACD8oE,oBAAqB,CACjBhhD,EAAG,IACHsH,EAAG,4DAIfyhD,OAAQ,CACJx8D,KAAM,SACNivD,QAAS,0DACT1W,IAAK,0CACLI,OAAQ,GAAOkZ,MACf4K,KAAM,CAAC,KAAM,KAAM,KAAM,OAE7BC,OAAQ,CACJ18D,KAAM,SACNivD,QAAS,sDACT1W,IAAK,mGACLI,OAAQ,GAAOkZ,MACf4K,KAAM,CAAC,KAAM,KAAM,KAAM,OAE7BE,aAAc,CACV38D,KAAM,eACNivD,QAAS,kCACT1W,IAAK,6GACLI,OAAQ,GAAOkZ,MACf4K,KAAM,CAAC,OAEXG,YAAa,CACT58D,KAAM,cACNivD,QAAS,qDACT1W,IAAK,4GACLI,OAAQ,GAAOkZ,MACf4K,KAAM,CAAC,OAEXI,MAAO,CACH78D,KAAM,QACNivD,QAAS,gEACT1W,IAAK,qGACLI,OAAQ,GAAOkZ,MACf/C,UAAW,CACPtqD,KAAM,MACNuqD,UAAW,SACX+N,OAAQ,CAAC,GAEbL,KAAM,CAAC,KAAM,OAEjBM,sBAAuB,CACnB/8D,KAAM,wBACNivD,QAAS,sDACT1W,IAAK,0CACLI,OAAQ,GAAOkZ,MACf4K,KAAM,IAEVO,SAAU,CACNh9D,KAAM,WACNivD,QAAS,gHACT1W,IAAK,wGACLI,OAAQ,GAAOkZ,MACf4K,KAAM,CAAC,KAAM,KAAM,KAAM,OAE7BQ,OAAQ,CACJj9D,KAAM,SACNivD,QAAS,sQACT1W,IAAK,sGACLI,OAAQ,GAAOkZ,MACf4K,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAEzCS,OAAQ,CACJl9D,KAAM,SACNivD,QAAS,kHACT1W,IAAK,sGACLI,OAAQ,GAAOwZ,MACfsK,KAAM,CAAC,QC5yBf,SAASU,GAAgBtkB,EAAMukB,GAAuB,GAClD,MAAM,KAAEp9D,EAAI,OAAEqyB,EAAM,WAAE+8B,EAAU,QAAEiO,EAAO,SAAElO,EAAQ,SAAE+J,EAAQ,cAAE5I,EAAa,cAAEgN,GAAmBzkB,EACjG,IAAI,UAAEwW,EAAS,UAAEK,EAAS,MAAEjb,GAAUoE,EACtC,MAAM0kB,EAAmB72D,OAAOgpD,IAC1B,QAAElZ,GAAYnkB,EAepB,GAbkB,KAAdg9B,IACAA,EAAY,MAGX,GAAcK,KACfA,EAAYxf,GAASppC,SAAS4oD,KAGb,KAAjBjb,EAAMhuD,SACNguD,EAhCR,SAAqBA,GACjB,OAAKA,GAAmB,QAAVA,EAGV,GAAcA,GACP,K5C6Be,CAAC9qD,IAC3B,GAAmB,iBAARA,EACP,MAAM,IAAItC,MAAM,iEAAiEsC,GACrF,OAAO,GAAcA,GAAOA,EAAI4Z,MAAM,GAAK5Z,CAAG,E4ChC5B,CAAe8qD,GAAOzkB,SAAS,GAAI,KAE9C,KAAOykB,EAAMzkB,SAAS,GAAI,KALtB,oBAMf,CAwBgBwtC,CAAY/oB,IAIpBpiB,EAAOorC,cAAgBprC,EAAOqrC,YAC9B,MAAM,IAAIr2E,MAAM,gKAEpB,MAAM2sC,EAAS,CACXh0B,OACAw2C,UACAoY,UAAWpY,EACX0Y,QAAS,CACLQ,YACAP,WACAC,aACA3a,QACA4a,YACAgO,UACAnE,WACA5I,gBACAgN,iBAEJK,cAAU18D,EACVquD,UAAW,GACXK,eAAgB,GAChBb,eAA6B7tD,IAAlBoxB,EAAO49B,OACZ,CACEzrD,KAAM,MACNuqD,UAAW,SACXkB,OAAQ,CAIJC,OAAQ79B,EAAO49B,OAAOC,QAAU79B,EAAO49B,OAAO2N,mBAC9CzN,MAAO99B,EAAO49B,OAAOE,OAAS99B,EAAO49B,OAAO4N,cAGlD,CACEr5D,KAAM,MACNuqD,UAAW,SACXC,OAAQ,CAAC,IAGf8O,EAAU,CACZ,CAACnN,GAASoN,WAAY,CAAE/9D,KAAM,kBAC9B,CAAC2wD,GAASqN,KAAM,CAAEh+D,KAAM,gBACxB,CAAC2wD,GAASsN,kBAAmB,CAAEj+D,KAAM,eACrC,CAAC2wD,GAASgE,gBAAiB,CAAE30D,KAAM,eACnC,CAAC2wD,GAAS6B,WAAY,CAAExyD,KAAM,kBAC9B,CAAC2wD,GAASuN,gBAAiB,CAAEl+D,KAAM,uBACnC,CAAC2wD,GAASwN,YAAa,CAAEn+D,KAAM,mBAC/B,CAAC2wD,GAASyB,UAAW,CAAEpyD,KAAM,iBAC7B,CAAC2wD,GAAS6D,aAAc,CAAEx0D,KAAM,oBAChC,CAAC2wD,GAASmB,QAAS,CAAE9xD,KAAM,eAC3B,CAAC2wD,GAASqD,QAAS,CAAEh0D,KAAM,eAC3B,CAAC2wD,GAASyN,uBAAwB,CAAEp+D,KAAM,iBAAkBq+D,UAAWjB,GACvE,CAACzM,GAASmF,UAAW,CAAE91D,KAAM,eAAgBq+D,WAAW,EAAMC,aAAa,GAC3E,CAAC3N,GAASoE,QAAS,CAAE/0D,KAAM,aAAcq+D,WAAW,EAAMC,aAAa,GACvE,CAAC3N,GAAS4N,QAAS,CAAEv+D,KAAM,aAAcq+D,WAAW,EAAMC,aAAa,IAGrEE,EAAa57D,OAAO6S,KAAKqoD,GAASrvC,QAAO,CAACzyB,EAAKyiE,KACjDziE,EAAI8hE,EAAQW,GAAMz+D,MAAQy+D,EACnBziE,IACR,CAAC,GACE0iE,EAAsB97D,OAAO6S,KAAK4c,GAAQ3G,QAAQ/V,QAA4B1U,IAApBu9D,EAAW7oD,SAAsC1U,IAAhBoxB,EAAO1c,IAAsC,OAAhB0c,EAAO1c,KACrIqe,EAAOs7B,UAAYoP,EACdtpD,KAAKupD,IAAc,CACpB3+D,KAAMw+D,EAAWG,GACjBpP,OAAsD,IAA/CuO,EAAQU,EAAWG,IAAYL,aAAqD,iBAAtBjsC,EAAOssC,GACtE,KACAtsC,EAAOssC,GACbjP,WAA0D,IAA/CoO,EAAQU,EAAWG,IAAYL,aAAqD,iBAAtBjsC,EAAOssC,GAC1EtsC,EAAOssC,QACP19D,MAELyqB,QAAQkzC,GAAwB,OAAfA,EAAKrP,YAAqCtuD,IAAnB29D,EAAKlP,YAClD17B,EAAOs7B,UAAU/H,MAAK,SAAU76D,EAAG7C,GAC/B,OAAQ6C,EAAE6iE,OAAS5+C,MAAa9mB,EAAE0lE,OAAS5+C,IAC/C,IACAqjB,EAAOs7B,UAAU/H,MAAK,SAAU76D,EAAG7C,GAE/B,OAAQ6C,EAAEgjE,WAAa,IAAM7lE,EAAE6lE,WAAa,EAChD,IAGA,IAAK,MAAMmP,KAAM7qC,EAAOs7B,UAChBuP,EAAGnP,YAAc6N,IACjBsB,EAAGnP,UAAY,GAGvB,QAAuCzuD,IAAnCoxB,EAAOysC,wBAAuC,CAM9C,MAAMC,EAAc,CAChB/+D,KAAM2wD,GAASsE,MACfxF,IAAKp9B,EAAOysC,wBACZvP,MAAO,MAGLyP,EAAiBhrC,EAAOs7B,UAAU2P,WAAWJ,IAAuC,IAAhCf,EAAQe,EAAG7+D,OAAOq+D,aACpD,IAApBW,EACAhrC,EAAOs7B,UAAU59C,OAAOstD,EAAgB,EAAGD,GAG3C/qC,EAAOs7B,UAAUxoE,KAAKi4E,EAE9B,CACA,MAAMG,EAAiBlrC,EAAOs7B,UAAU7oE,OAAS,EAAIutC,EAAOs7B,UAAU/rD,OAAO,GAAG,QAAKtC,EAGrF,OAFA+yB,EAAO2pC,SAAWuB,GAAgBl/D,KAClCg0B,EAAOs7B,UAAUh7C,QAAQ,CAAEtU,KAAM2wD,GAASa,WAAYjC,MAAO,IACtDv7B,CACX,CC1IO,MAAMmrC,GACT,WAAA/2E,CAAY08B,GACRp8B,KAAK02E,MAAQ,GACb12E,KAAK22E,aAAe,CAAC,EACrB32E,KAAK42E,oBAAsB,GAC3B52E,KAAKsvB,OAAS,IAAI,GAAAxB,aAClB9tB,KAAK62E,cAAgBz6C,EAAK06C,cAAgB,GAC1C92E,KAAK+2E,aAAe/2E,KAAKg3E,SAAS56C,EAAK66C,OACvCj3E,KAAKk3E,iBAAmBl3E,KAAK+2E,aAAa5Q,iBAAmB8B,GAASmF,SAEtEptE,KAAKm3E,iBAAmBn3E,KAAK4mE,YAAYl6C,KAAKypD,GAAO,CACjDA,EAAG7+D,KACH,GAAe6+D,EAAG7+D,QACbtX,KAAK+2E,aAAaK,iBAAmBp3E,KAAK+2E,aAAaK,gBAAgBjB,EAAG7+D,UAEnFtX,KAAKq3E,UAAYr3E,KAAKk3E,sBACA3+D,IAAlB6jB,EAAK64C,UACLj1E,KAAKs3E,YAAYl7C,EAAK64C,UAEtB74C,EAAK23C,MACL/zE,KAAKu3E,QAAQn7C,EAAK23C,MAEtB/zE,KAAKwgE,aAAepkC,EAAKokC,cAAgB,CAAC,EACI,IAA1CtmD,OAAO6S,KAAK/sB,KAAK22E,cAAc54E,SAC/BiC,KAAKw3E,oBACLx3E,KAAKy3E,2BAEb,CAyBA,aAAOh0C,CAAOi0C,EAAmBt7C,EAAO,CAAC,GACrC,MAAMu7C,EAAYv7C,EAAKu7C,WAAa,UAC9BC,EAAsB,IAAKnB,GAAOoB,gBAAgBF,IAExD,GADAC,EAA0B,KAAI,eACG,iBAAtBF,EACP,OAAO,IAAIjB,GAAO,CACdQ,MAAO,IACAW,KACAF,MAEJt7C,IAIP,GAAIs7C,IAAsBtP,GAAY0P,eAClC,OAAOrB,GAAOhzC,OAAO,CACjBnsB,KAAM8wD,GAAY0P,eAClBhqB,QAAS,IACToY,UAAW,KACZ9pC,GAEP,GAAIs7C,IAAsBtP,GAAY2P,cAClC,OAAOtB,GAAOhzC,OAAO,CACjBnsB,KAAM8wD,GAAY2P,cAClBjqB,QAAS,MACToY,UAAW,OACZ9pC,GAEP,GAAIs7C,IAAsBtP,GAAY4P,YAClC,OAAOvB,GAAOhzC,OAAO,CACjBnsB,KAAM8wD,GAAY4P,YAClBlqB,QAAS,MACToY,UAAW,OACZ9pC,GAEP,GAAIs7C,IAAsBtP,GAAY6P,UAClC,OAAOxB,GAAOhzC,OAAO,CACjBnsB,KAAM8wD,GAAY6P,UAClBnqB,QAAS,IACToY,UAAW,KACZ9pC,GAEP,GAAIs7C,IAAsBtP,GAAY8P,gBAClC,OAAOzB,GAAOhzC,OAAO,CACjBnsB,KAAM8wD,GAAY8P,gBAClBpqB,QAAS,GACToY,UAAW,IAGf,CAAE+O,SAAUhN,GAASmB,UAAWhtC,IAEpC,GAAIs7C,IAAsBtP,GAAY+P,mBAClC,OAAO1B,GAAOhzC,OAAO,CACjBnsB,KAAM8wD,GAAY+P,mBAClBrqB,QAAS,GACToY,UAAW,IAGf,CAAE+O,SAAUhN,GAASmB,UAAWhtC,IAEpC,MAAM,IAAIz9B,MAAM,gBAAgB+4E,kBAExC,CAOA,sBAAOU,CAAgBC,GAAa,MAAEpB,EAAK,KAAElD,EAAI,YAAEuE,EAAW,SAAErD,EAAQ,qBAAEP,EAAoB,aAAElU,IAC5F,MAAM+X,EDuBP,SAA0BpoB,EAAM74C,EAAMo9D,GACzC,IACI,MAAM8D,EAAW,CAAC,SAAU,aAAc,WAAY,QAAS,SAC/D,GAAIA,EAASp2B,MAAM5N,KAAYA,KAAS2b,KAAQ,CAC5C,MAAMsoB,EAAeD,EAASx1C,QAAQwR,KAAYA,KAAS2b,KAC3D,MAAM,IAAIxxD,MAAM,gDAAgD85E,aACpE,CAIA,YAHalgE,IAATjB,IACA64C,EAAK74C,KAAOA,GAETm9D,GAAgBtkB,EAAMukB,EACjC,CACA,MAAOl0E,GACH,MAAM,IAAI7B,MAAM,kCAAkC6B,EAAE8mB,UACxD,CACJ,CCtC8BoxD,CAAiBL,EAAapB,EAAOvC,GACrDnU,EAAS,IAAIkW,GAAO,CACtBQ,MAAOsB,EAAcjhE,MAAQ,SAC7Bw/D,aAAc,CAACyB,GACfxE,OACAkB,SAAUA,GAAYsD,EAActD,SACpCzU,iBAKJ,YAHoBjoD,IAAhB+/D,GACA/X,EAAOoY,cAAcL,GAElB/X,CACX,CAMA,yBAAOqY,CAAmB9qB,GACtB,MAAM+qB,EAAoB74E,KAAK84E,uBAC/B,OAAOC,QAAQF,EAAyB,MAAE/qB,EAAQ9rD,YACtD,CACA,sBAAO61E,CAAgBZ,EAAOH,GAC1B,MAAM+B,EAAoB74E,KAAK84E,qBAAqBhC,GACpD,GAAqB,iBAAVG,GAAuC,iBAAVA,EAAoB,CAExD,GADAA,EAAQA,EAAMj1E,WACV62E,EAAyB,MAAE5B,GAE3B,OAAO4B,EADMA,EAAyB,MAAE5B,IAG5C,MAAM,IAAIt4E,MAAM,iBAAiBs4E,kBACrC,CACA,QAAiC1+D,IAA7BsgE,EAAkB5B,GAClB,OAAO4B,EAAkB5B,GAE7B,MAAM,IAAIt4E,MAAM,mBAAmBs4E,kBACvC,CAOA,QAAAD,CAASC,GACL,GAAqB,iBAAVA,GAAuC,iBAAVA,GAAuC,iBAAVA,EACjEj3E,KAAK+2E,aAAeN,GAAOoB,gBAAgBZ,EAAOj3E,KAAK62E,mBAEtD,IAAqB,iBAAVI,EAaZ,MAAM,IAAIt4E,MAAM,sBAbgB,CAChC,GAAIqB,KAAK62E,cAAc94E,OAAS,EAC5B,MAAM,IAAIY,MAAM,0FAEpB,MAAM65E,EAAW,CAAC,YAAa,UAAW,YAAa,kBACvD,IAAK,MAAMQ,KAASR,EAChB,KAAMQ,KAAS/B,GACX,MAAM,IAAIt4E,MAAM,qCAAqCq6E,KAG7Dh5E,KAAK+2E,aAAeE,CACxB,CAGA,CACA,IAAK,MAAMd,KAAMn2E,KAAK4mE,YAClB,QAAiBruD,IAAb49D,EAAGtP,MACH,MAAM,IAAIloE,MAAM,+CAGxB,OAAOqB,KAAK+2E,YAChB,CAKA,WAAAO,CAAYrC,GACR,IAAI1lD,GAAW,EACf,IAAK,MAAM0pD,KAAaj5E,KAAKm3E,iBACrB8B,EAAU,KAAOhE,IACbj1E,KAAKq3E,YAAcpC,IACnBj1E,KAAKq3E,UAAYpC,EACjBj1E,KAAKw3E,oBACLx3E,KAAKy3E,2BACLz3E,KAAKsvB,OAAOK,KAAK,kBAAmBslD,IAExC1lD,GAAW,GAGnB,IAAKA,EACD,MAAM,IAAI5wB,MAAM,sBAAsBs2E,kBAE9C,CAYA,aAAAiE,CAAc98C,GACV,MAAM+8C,EAAc,GAAO/8C,EAAK+8C,YAAa,GAAWh3D,QAClDi3D,EAAK,GAAOh9C,EAAKg9C,GAAI,GAAWj3D,QAChC6kD,EAAY,GAAO5qC,EAAK4qC,UAAW,GAAW7kD,QAE9Ck3D,EAAMr5E,KAAK4mE,YAAY5jC,QAAQmzC,GAAoB,OAAbA,EAAGtP,OAA8B,OAAXsP,EAAGpP,UAA2BxuD,IAAX49D,EAAGpP,UAAuCxuD,IAAjB49D,EAAGnP,YAC3GsS,EAAaD,EAAI9C,WAAWJ,GAAkB,OAAXA,EAAGpP,UAA2BxuD,IAAX49D,EAAGpP,MAI/D,GAHoBsS,EACfx+D,MAAMy+D,EAAa,GACnB/C,WAAWJ,GAAkB,OAAXA,EAAGpP,UAA2BxuD,IAAX49D,EAAGpP,OAC1B,EACf,MAAMpoE,MAAM,0DAMhB,IAAI46E,EAAUF,EAAI9C,WAAWJ,QAAwB59D,IAAhB4gE,GAA0C,OAAbhD,EAAGtP,OAAkB1kD,OAAOg0D,EAAGtP,OAASsS,QACvF5gE,IAAdyuD,QAA4CzuD,IAAjB49D,EAAGnP,WAA2B7kD,OAAOg0D,EAAGnP,WAAaA,IACrF,IAAiB,IAAbuS,EAEAA,EAAUF,EAAIt7E,YAEb,GAAgB,IAAZw7E,EAGL,MAAM56E,MAAM,8CAchB,QAXkB4Z,IAAdyuD,IAKAuS,GAJiBF,EACZx+D,MAAM,EAAG0+D,GACTtmC,UACAsjC,WAAWJ,GAAoB,OAAbA,EAAGtP,YAA6BtuD,IAAX49D,EAAGpP,OAInDwS,GAAoB,EAGO,OAAvBF,EAAIE,GAAS1S,YAA6CtuD,IAA3B8gE,EAAIE,GAASvS,WAExCoS,SAAmCj3D,OAAOk3D,EAAIE,GAASxS,KAAOqS,KAE9DG,GAAW,QAIf,GAAID,GAAc,GAAdA,MAAmBF,EAAiC,CACpD,GAAIG,GAAWD,GAAcn3D,OAAOk3D,EAAIC,GAAYvS,KAAOqS,EACvD,MAAMz6E,MAAM,+EAEX,GAAI46E,EAAUD,GAAcn3D,OAAOk3D,EAAIC,GAAYvS,KAAOqS,EAC3D,MAAMz6E,MAAM,8EAEpB,CAEJ,MAAM66E,EAAeD,EAGrB,KAAOA,EAAUF,EAAIt7E,OAAS,GAEtBs7E,EAAIE,GAAS1S,QAAUwS,EAAIE,EAAU,GAAG1S,OACxCwS,EAAIE,GAASvS,YAAcqS,EAAIE,EAAU,GAAGvS,UAHnBuS,KAOjC,QAAkBhhE,IAAdyuD,EAAyB,CAIzB,GAHqBqS,EAChBx+D,MAAM,EAAG2+D,GACTzzC,QAAO,CAACzyB,EAAK6iE,IAAO/0E,KAAKM,IAAIsc,OAAOm4D,EAAGnP,WAAa,KAAM1zD,IAAM,GAClD0zD,EACf,MAAMroE,MAAM,4EAKhB,GAHqB06E,EAChBx+D,MAAM0+D,EAAU,GAChBxzC,QAAO,CAACzyB,EAAK6iE,IAAO/0E,KAAKC,IAAI2c,OAAOm4D,EAAGnP,WAAaA,GAAY1zD,IAAM0K,OAAOgpD,IAC/DA,EACf,MAAMroE,MAAM,uEAEpB,CAEA,OADiB06E,EAAIE,GACLjiE,IACpB,CAYA,aAAAmiE,CAAcr9C,GACV,MAAM64C,EAAWj1E,KAAKk5E,cAAc98C,GAEpC,OADAp8B,KAAKs3E,YAAYrC,GACVA,CACX,CAMA,YAAAyE,CAAazE,GACT,MAAMoE,EAAMr5E,KAAK4mE,YACjB,IAAK,MAAMuP,KAAMkD,EACb,GAAIlD,EAAS,OAAMlB,EACf,OAAOkB,EAEf,OAAO,IACX,CAKA,OAAAoB,CAAQxD,EAAO,IACX,IAAK,MAAM4F,KAAO5F,EAAM,CACpB,KAAM4F,KAAOhR,IACT,MAAM,IAAIhqE,MAAM,GAAGg7E,mBAEvB,MAAMC,EAAQ55E,KAAK65E,YAAYlR,GAAKgR,GAAsB,iBAC1D,IAAKC,EACD,MAAM,IAAIj7E,MAAM,GAAGg7E,qCAAuC35E,KAAKi1E,gCAAgC2E,IAEvG,CACA55E,KAAK02E,MAAQ3C,EACb/zE,KAAKw3E,oBACLx3E,KAAKy3E,2BACL,IAAK,MAAMkC,KAAO5F,EACd,QAA+Bx7D,IAA3BowD,GAAKgR,GAAK5Q,aACV,IAAK,MAAMgN,KAAQpN,GAAKgR,GAAK5Q,aACzB,IAAMgL,EAAKtyD,SAASs0D,KAAS/1E,KAAK85E,eAAe/D,GAC7C,MAAM,IAAIp3E,MAAM,GAAGg7E,kBAAoB5D,yCAK3D,CAIA,qBAAAgE,CAAsBzuC,GAClBtrC,KAAK22E,aAAwB,UAAI,IAC1B32E,KAAK22E,aAAwB,aAC7BrrC,EAAkB,WAEzBtrC,KAAK22E,aAAwB,UAAI,IAC1B32E,KAAK22E,aAAwB,aAC7BrrC,EAAkB,WAEzBtrC,KAAK22E,aAAkB,IAAI,IACpB32E,KAAK22E,aAAkB,OACvBrrC,EAAY,KAEnBtrC,KAAK22E,aAAuB,SAAI,IACzB32E,KAAK22E,aAAuB,YAC5BrrC,EAAiB,UAExBtrC,KAAK22E,aAAiB,GAAI,IACnB32E,KAAK22E,aAAiB,MACtBrrC,EAAW,GAEtB,CAIA,iBAAAksC,GACIx3E,KAAK22E,aAAe,CAAC,EAErB,MAAM1B,EAAWj1E,KAAKi1E,WACtB,IAAK,MAAMgE,KAAaj5E,KAAKm3E,iBAAkB,CAE3C,GAAI,SAAU8B,EAAU,GAAI,CACxB,MAAMe,EAASf,EAAU,GAAS,KAClC,IAAK,MAAMU,KAAOK,EAAQ,CACtB,KAAML,KAAOhR,IACT,MAAM,IAAIhqE,MAAM,GAAGg7E,mBAEvB35E,KAAK+5E,sBAAsBpR,GAAKgR,GACpC,CAEJ,MAEI35E,KAAK+5E,sBAAsBd,EAAU,IAEzC,GAAIA,EAAU,KAAOhE,EACjB,KACR,CAEA,IAAK,MAAM0E,KAAO35E,KAAK02E,MAAO,CAC1B,KAAMiD,KAAOhR,IACT,MAAM,IAAIhqE,MAAM,GAAGg7E,mBAEvB35E,KAAK+5E,sBAAsBpR,GAAKgR,GACpC,CACJ,CACA,wBAAAlC,GACIz3E,KAAK42E,oBAAsB,GAC3B,IAAK,MAAMqC,KAAaj5E,KAAKm3E,iBAAkB,CAC3C,MAAMhB,EAAK8C,EAAU,GACjBj5E,KAAK65E,YAAY1D,EAAS,OAAM,SAAUA,IAC1Cn2E,KAAK42E,oBAAsB52E,KAAK42E,oBAAoBl2D,OAAOy1D,EAAS,MAE5E,CACAn2E,KAAK42E,oBAAsB52E,KAAK42E,oBAAoBl2D,OAAO1gB,KAAK02E,MACpE,CAYA,KAAAsC,CAAMiB,EAAO3iE,GAGT,IAAIkD,EAAQ,KAKZ,YAJiCjC,IAA7BvY,KAAK22E,aAAasD,SACiB1hE,IAAnCvY,KAAK22E,aAAasD,GAAO3iE,KACzBkD,EAAQxa,KAAK22E,aAAasD,GAAO3iE,GAAMyT,GAEpC5I,OAAO3H,GAAS,EAC3B,CAQA,eAAA0/D,CAAgBD,EAAO3iE,EAAM29D,GACzB,IAAIz6D,EAAQ,KACZ,IAAK,MAAMy+D,KAAaj5E,KAAKm3E,iBAAkB,CAE3C,GAAI,SAAU8B,EAAU,GAAI,CACxB,MAAMe,EAASf,EAAU,GAAS,KAClC,IAAK,MAAMU,KAAOK,EAAQ,CACtB,MAAMG,EAAWn6E,KAAKo6E,WAAWH,EAAO3iE,EAAMqiE,GAC9Cn/D,EAA4B,iBAAb2/D,EAAwBA,EAAW3/D,CACtD,CAEJ,WAEgCjC,IAAxB0gE,EAAU,GAAGgB,SACiB1hE,IAA9B0gE,EAAU,GAAGgB,GAAO3iE,KACpBkD,EAAQy+D,EAAU,GAAGgB,GAAO3iE,GAAMyT,GAG1C,GAAIkuD,EAAU,KAAOhE,EACjB,KACR,CACA,OAAO9yD,OAAO3H,GAAS,EAC3B,CAQA,UAAA4/D,CAAWH,EAAO3iE,EAAMqiE,GACpB,KAAMA,KAAOhR,IACT,MAAM,IAAIhqE,MAAM,GAAGg7E,mBAEvB,MAAMU,EAAY1R,GAAKgR,GACvB,KAAMM,KAASI,GACX,OAEJ,QAA+B9hE,IAA3B8hE,EAAUJ,GAAO3iE,GACjB,OAEJ,MAAMkD,EAAQ6/D,EAAUJ,GAAO3iE,GAAMyT,EACrC,OAAO5I,OAAO3H,EAClB,CAUA,YAAA8/D,CAAaL,EAAO3iE,EAAM6hE,EAAaC,EAAIpS,GACvC,MAAMiO,EAAWj1E,KAAKk5E,cAAc,CAAEC,cAAaC,KAAIpS,cACvD,OAAOhnE,KAAKk6E,gBAAgBD,EAAO3iE,EAAM29D,EAC7C,CAUA,cAAA6E,CAAeH,GACX,QAAI35E,KAAK42E,oBAAoBn1D,SAASk4D,EAI1C,CAOA,uBAAAY,CAAwBtF,EAAUkE,GAC9BA,EAAc,GAAOA,EAAa,GAAWh3D,QAC7C8yD,EAAWA,GAAYj1E,KAAKq3E,UAC5B,MAAMmD,EAAUx6E,KAAKy6E,cAAcxF,GACnC,MAAuB,iBAAZuF,GAAwBA,IAAY,IAAYrB,GAAeqB,CAI9E,CAMA,aAAAE,CAAcvB,GACV,OAAOn5E,KAAKu6E,wBAAwB,KAAMpB,EAC9C,CAQA,mBAAAwB,CAAoBC,EAAWC,GAC3BD,EAAYA,GAAa56E,KAAKq3E,UAC9B,MAAMzQ,EAAY5mE,KAAK4mE,YACvB,IAAIkU,GAAU,EAAGC,GAAU,EACvBp6E,EAAQ,EACZ,IAAK,MAAMw1E,KAAMvP,EACTuP,EAAS,OAAMyE,IACfE,EAASn6E,GACTw1E,EAAS,OAAM0E,IACfE,EAASp6E,GACbA,GAAS,EAEb,OAAOm6E,GAAUC,IAAsB,IAAZA,CAC/B,CAMA,WAAAlB,CAAY5E,GACR,OAAOj1E,KAAK26E,oBAAoB,KAAM1F,EAC1C,CAMA,aAAAwF,CAAcxF,GACVA,EAAWA,GAAYj1E,KAAKq3E,UAC5B,MAAMxQ,EAAQ7mE,KAAK05E,aAAazE,IAAmB,MACnD,OAAIpO,QACO,KAEJ1kD,OAAO0kD,EAClB,CACA,iBAAAmU,CAAkB/F,GACdA,EAAWA,GAAYj1E,KAAKq3E,UAC5B,MAAMrQ,EAAYhnE,KAAK05E,aAAazE,IAAuB,UAC3D,OAAIjO,QACO,KAEJ7kD,OAAO6kD,EAClB,CAMA,QAAAiU,CAAStB,GACL,IAAK,MAAMV,KAAaj5E,KAAKm3E,iBAAkB,CAC3C,MAAMhB,EAAK8C,EAAU,GACrB,GAAI,SAAU9C,GAENA,EAAS,KAAE10D,SAASk4D,GACpB,OAAO35E,KAAKy6E,cAAcxB,EAAU,GAGhD,CACA,OAAO,IACX,CAMA,YAAAiC,CAAavB,GACT,IAAK,MAAMV,KAAaj5E,KAAKm3E,iBAAkB,CAC3C,MAAMhB,EAAK8C,EAAU,GACrB,GAAI,SAAU9C,GAENA,EAAS,KAAE10D,SAASk4D,GACpB,OAAO35E,KAAKg7E,kBAAkB/B,EAAU,GAGpD,CACA,OAAO,IACX,CAMA,WAAAkC,CAAYlG,GACRA,EAAWA,GAAYj1E,KAAKq3E,UAC5B,MAAMtQ,EAAM/mE,KAAK05E,aAAazE,IAAiB,IAC/C,OAAIlO,QACO,KAEJ5kD,OAAO4kD,EAClB,CAMA,4BAAAqU,CAA6BnG,GACzBA,EAAWA,GAAYj1E,KAAKq3E,UAC5B,MAAMgC,EAAMr5E,KAAK4mE,YACjB,IAAI2S,EAAUF,EAAI9C,WAAWJ,GAAOA,EAAG7+D,OAAS29D,IAOhD,GAJIA,IAAahN,GAASsE,QACtBgN,GAAW,GAGXA,EAAU,EACV,OAAO,KAEX,IAAI8B,EAAoBhC,EAAIE,GAASvS,WAAaqS,EAAIE,GAAS1S,MAC/DwU,EACIA,QACMr9D,OAAOq9D,GACP,KACV,MAAMC,EAASjC,EAAIx+D,MAAM0+D,EAAU,GAAG3iB,MAAMuf,IACxC,IAAIoF,EAAgBpF,EAAGnP,WAAamP,EAAGtP,MAGvC,OAFA0U,EACIA,QAAwDv9D,OAAOu9D,GAAiB,KAC5EpF,EAAG7+D,OAAS2wD,GAASsE,OAArB4J,MACJoF,GAEAA,IAAkBF,CAAkB,IAG5C,QAAe9iE,IAAX+iE,EACA,OAAO,KAEX,MAAME,EAAcF,EAAOtU,WAAasU,EAAOzU,MAC/C,OAAI2U,QACO,KAEJr5D,OAAOq5D,EAClB,CAOA,aAAAC,CAAcxG,EAAUqD,GACpB,IAAIoD,EAAU,IAAIl9E,WAAW,GACzBm9E,EAAkB,EACtB,IAAK,MAAMxF,KAAMn2E,KAAK4mE,YAAa,CAC/B,MAAM,MAAEC,EAAK,UAAEG,EAAS,KAAE1vD,GAAS6+D,EAGnC,IAAIyF,EAAc5U,GAAaH,EAK/B,GAJA+U,EAA8B,OAAhBA,EAAuB59D,OAAO49D,GAAe,KAIhC,iBAAhBA,GACS,IAAhBA,GACAA,IAAgBD,GAChBrkE,IAAS2wD,GAASsE,MAAO,CACzB,MAAMsP,EAAe,GAAW,KAAOD,EAAY55E,SAAS,IAAIslC,SAAS,GAAI,MAC7Eo0C,EAAU,GAAYA,EAASG,GAC/BF,EAAkBC,CACtB,CACA,GAAIzF,EAAG7+D,OAAS29D,EACZ,KACR,CACA,MAAM6G,EAAa,GAAYxD,EAAaoD,GAI5C,OADiB,GAAWj0B,GL3rBxB,EAACruC,EAAS2iE,KAClB,IAAIC,EAAmB,IAAbD,EAAiB,GAAMA,EACjC,IAAK,IAAIp7E,EAAQ,EAAGA,EAAQyY,EAAQrb,OAAQ4C,IACxCq7E,EAAMlU,GAA+B,KAAxBkU,EAAM5iE,EAAQzY,KAAmBq7E,IAAQ,EAE1D,OAAOA,CAAQ,EAGRA,CKmrB0CF,ELnrB7BC,KAAc,IKmrB+B,ILprBhD,IAAUA,CKsrB3B,CAMA,QAAAjV,CAASmO,EAAUqD,GACfrD,EAAWA,GAAYj1E,KAAKq3E,UAC5B,MAAMt7D,EAAO/b,KAAK05E,aAAazE,GAC/B,GAAa,OAATl5D,GACiB,OAAhBA,GAAM8qD,YAAsCtuD,IAApBwD,GAAMirD,gBAAyCzuD,IAAdwD,GAAMgrD,IAEhE,MAAM,IAAIpoE,MADE,yDAGhB,GAAIod,SAAM+qD,SACN,OAAO/qD,EAAK+qD,SAEhB,IAAKwR,EACD,MAAM,IAAI35E,MAAM,iDACpB,OAAOqB,KAAKy7E,cAAcxG,EAAUqD,EACxC,CAMA,mBAAA2D,CAAoBnV,GAChB,MAAMoV,EAAWl8E,KAAK4mE,YAAY5jC,QAAQmzC,GAC/BA,EAAGrP,WAAaA,IAE3B,OAAOoV,EAASn+E,QAAU,EAAIm+E,EAASA,EAASn+E,OAAS,GAAK,IAClE,CAMA,aAAA46E,CAAcL,GACV,IAAK,MAAMnC,KAAMn2E,KAAK4mE,YAAa,CAC/B,MAAMgV,EAAczF,EAAGnP,WAAamP,EAAGtP,MAClB,OAAhBsP,EAAGrP,eAAqCvuD,IAAhB49D,EAAGrP,UAC3B,MAAC8U,QAAwE,IAAXzF,EAAGpP,MAClEoP,EAAGrP,SAAW9mE,KAAK8mE,SAASqP,EAAG7+D,KAAMghE,GAE7C,CACJ,CAKA,OAAA9R,GACI,OAAOxmE,KAAK+2E,aAAavQ,OAC7B,CAKA,SAAAI,GACI,MAAMyS,EAAMr5E,KAAK+2E,aAAanQ,UAI9B,YAH0CruD,IAAtCvY,KAAK+2E,aAAaK,iBAClBp3E,KAAK+2E,aAAaK,gBAEfiC,CACX,CAKA,cAAApS,GACI,OAAOjnE,KAAK+2E,aAAa9P,cAC7B,CAKA,WAAAI,GACI,OAAOrnE,KAAK+2E,aAAa1P,WAC7B,CAKA,QAAA4N,GACI,OAAOj1E,KAAKq3E,SAChB,CAKA,OAAAvpB,GACI,OAAO3rC,OAAOniB,KAAK+2E,aAAajpB,QACpC,CAKA,SAAAquB,GACI,OAAOn8E,KAAK+2E,aAAaz/D,IAC7B,CAKA,SAAA4uD,GACI,OAAO/jD,OAAOniB,KAAK+2E,aAAa7Q,UACpC,CAMA,IAAA6N,GACI,OAAO/zE,KAAK02E,KAChB,CAOA,aAAA0F,GACI,MAAMnH,EAAWj1E,KAAKi1E,WACtB,IAAIz6D,EACJ,IAAK,MAAMy+D,KAAaj5E,KAAKm3E,iBAIzB,GAHI,cAAe8B,EAAU,KACzBz+D,EAAQy+D,EAAU,GAAc,UAAQ,MAExCA,EAAU,KAAOhE,EACjB,MAER,OAAOz6D,GAASxa,KAAK+2E,aAAwB,UAAQ,IACzD,CAUA,kBAAAsF,GACI,MAAMpH,EAAWj1E,KAAKi1E,WACtB,IAAIz6D,EACJ,IAAK,MAAMy+D,KAAaj5E,KAAKm3E,iBAIzB,GAHI,cAAe8B,EAAU,KACzBz+D,EAAQy+D,EAAU,GAAc,UAAa,WAE7CA,EAAU,KAAOhE,EACjB,MAER,OAAOz6D,GAASxa,KAAK+2E,aAAwB,UAAa,SAC9D,CAcA,eAAAuF,GACI,MAAMrH,EAAWj1E,KAAKi1E,WACtB,IAAIz6D,EACJ,IAAK,MAAMy+D,KAAaj5E,KAAKm3E,iBAAkB,CAC3C,GAAI,cAAe8B,EAAU,GAAI,CAE7B,MAAMtvC,EAASsvC,EAAU,GACnB5S,EAAY18B,EAAkB,UAAa,UACjDnvB,EAAQmvB,EAAkB,UAAE08B,EAChC,CACA,GAAI4S,EAAU,KAAOhE,EACjB,KACR,CACA,OAAQz6D,GAASxa,KAAK+2E,aAAwB,UAAE/2E,KAAKq8E,uBAAyB,CAAC,CACnF,CAIA,IAAAn5E,GACI,MAAMA,EAAOgX,OAAO0zB,OAAO1zB,OAAOuV,OAAOvV,OAAO4W,eAAe9wB,OAAQA,MAEvE,OADAkD,EAAKosB,OAAS,IAAI,GAAAxB,aACX5qB,CACX,CACA,2BAAO41E,CAAqBhC,GACxB,MAAMrqD,EAAQ,CAAC,EACf,IAAK,MAAOnV,EAAM2yB,KAAO/vB,OAAOg7B,QAAQ8yB,IACpCv7C,EAAMwd,GAAM3yB,EAAKmF,cAErB,MAAM8/D,EAAS,IAAK,IACpB,GAAIzF,EACA,IAAK,MAAMG,KAASH,EAAc,CAC9B,MAAM,KAAEx/D,GAAS2/D,EACjBxqD,EAAMwqD,EAAMnpB,QAAQ9rD,YAAcsV,EAClCilE,EAAOjlE,GAAQ2/D,CACnB,CAGJ,OADAsF,EAAO9vD,MAAQA,EACR8vD,CACX,EC96BG,IAAIC,GAuCAC,IAtCX,SAAWD,GAKPA,EAAWA,EAAmC,uBAAI,KAAO,yBAKzDA,EAAWA,EAA6B,iBAAI,MAAQ,mBAKpDA,EAAWA,EAAoC,wBAAI,MAAQ,0BAK3DA,EAAWA,EAA+B,mBAAI,MAAQ,oBACzD,CArBD,CAqBGA,KAAeA,GAAa,CAAC,IAkBhC,SAAWC,GACPA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAmC,kBAAI,GAAK,oBAC5DA,EAAgBA,EAAkC,iBAAI,GAAK,mBAC3DA,EAAgBA,EAA6B,YAAI,GAAK,aACzD,CALD,CAKGA,KAAoBA,GAAkB,CAAC,IC1CnC,MAAMC,GACT,wBAAOC,CAAkBC,GACrB,IAAIC,EACAC,EACJ,GDgBD,SAA2BrkE,GAC9B,GAAqB,IAAjBA,EAAM1a,OACN,OAAO,EAEX,MAAMg/E,EAAYtkE,EAAM,GACxB,QAAIha,MAAMgD,QAAQs7E,EAItB,CAEYC,CC3BaJ,GAcZ,CACDE,EAAmBF,GAAc,GAEjC,MAAMzsB,EAAO,GACb,IAAK,IAAI9yD,EAAI,EAAGA,EAAIy/E,EAAiB/+E,OAAQV,IAAK,CAC9C,MAAM0e,EAAO+gE,EAAiBz/E,GACxBquC,EAAU,GAAW3vB,EAAK,IAC1BkhE,EAAc,GACpB,IAAK,IAAI9qC,EAAO,EAAGA,EAAOp2B,EAAK,GAAGhe,OAAQo0C,IACtC8qC,EAAY7+E,KAAK,GAAW2d,EAAK,GAAGo2B,KAExC,MAAM+qC,EAAW,CACbxxC,UACAuxC,eAEJ9sB,EAAK/xD,KAAK8+E,EACd,CACAL,EAAiB1sB,CACrB,KAhC8B,CAC1B0sB,EAAiBD,EACjB,MAAMO,EAAgB,GACtB,IAAK,IAAI9/E,EAAI,EAAGA,EAAIu/E,EAAW7+E,OAAQV,IAAK,CACxC,MAAM80C,EAAOyqC,EAAWv/E,GAClB+/E,EAAe,GAAWjrC,EAAKzG,SAC/B2xC,EAAe,GACrB,IAAK,IAAI18E,EAAQ,EAAGA,EAAQwxC,EAAK8qC,YAAYl/E,OAAQ4C,IACjD08E,EAAaj/E,KAAK,GAAW+zC,EAAK8qC,YAAYt8E,KAElDw8E,EAAc/+E,KAAK,CAACg/E,EAAcC,GACtC,CACAP,EAAmBK,CACvB,CAoBA,MAAO,CACHN,iBACAD,WAAYE,EAEpB,CACA,uBAAOQ,CAAiBV,GACpB,IAAK,IAAI3vD,EAAM,EAAGA,EAAM2vD,EAAW7+E,OAAQkvB,IAAO,CAC9C,MAAMswD,EAAiBX,EAAW3vD,GAC5Bye,EAAU6xC,EAAe,GACzBC,EAAeD,EAAe,GACpC,QAA0BhlE,IAAtBglE,EAAe,GACf,MAAM,IAAI5+E,MAAM,wGAEpB,GAAuB,KAAnB+sC,EAAQ3tC,OACR,MAAM,IAAIY,MAAM,mEAEpB,IAAK,IAAI8+E,EAAc,EAAGA,EAAcD,EAAaz/E,OAAQ0/E,IACzD,GAAyC,KAArCD,EAAaC,GAAa1/E,OAC1B,MAAM,IAAIY,MAAM,uEAG5B,CACJ,CACA,wBAAO++E,CAAkBd,GACrB,MAAMe,EAAiB,GACvB,IAAK,IAAIh9E,EAAQ,EAAGA,EAAQi8E,EAAW7+E,OAAQ4C,IAAS,CACpD,MAAMwxC,EAAOyqC,EAAWj8E,GAClBi9E,EAAW,CACblyC,QAAS,GAAW,GAAcyG,EAAK,GAAI,KAC3C8qC,YAAa,IAEXO,EAAerrC,EAAK,GAC1B,IAAK,IAAI0rC,EAAO,EAAGA,EAAOL,EAAaz/E,OAAQ8/E,IAAQ,CACnD,MAAMJ,EAAcD,EAAaK,GACjCD,EAASX,YAAY7+E,KAAK,GAAW,GAAcq/E,EAAa,KACpE,CACAE,EAAev/E,KAAKw/E,EACxB,CACA,OAAOD,CACX,CACA,wBAAOG,CAAkBlB,EAAYrc,GACjC,MAAM0K,EAA2B1K,EAAOyY,MAAM,YAAa,4BACrD9N,EAAwB3K,EAAOyY,MAAM,YAAa,yBACxD,IAAI+E,EAAQ,EACZ,IAAK,IAAIp9E,EAAQ,EAAGA,EAAQi8E,EAAW7+E,OAAQ4C,IAG3Co9E,GAFanB,EAAWj8E,GACE,GACJ5C,OAG1B,OADkB6+E,EAAW7+E,OACVigB,OAAOktD,GAAyB6S,EAAQ//D,OAAOitD,EACtE,EAEG,SAAS+S,GAAYC,GACxB,OAAO,GAAW,KAAOA,EAAOj8E,SAAS,IAAIslC,SAAS,EAAG,KAC7D,CCzFO,MAAM42C,GACT,WAAAx+E,CAAYy+E,EAAQ/hD,GAChBp8B,KAAK25D,MAAQ,CACTzsC,UAAM3U,EACN6lE,aAAS7lE,EACT8lE,kBAAc9lE,GAOlBvY,KAAKs+E,mBAAqB,GAS1Bt+E,KAAKu+E,cAAgBvW,GAAMM,QAC3B,MAAM,MAAEvc,EAAK,SAAE0a,EAAQ,GAAEhhC,EAAE,MAAEjrB,EAAK,KAAEuB,EAAI,EAAEgP,EAAC,EAAEhqB,EAAC,EAAEyN,EAAC,KAAEsN,GAASqiE,EAC5Dn+E,KAAKw+E,MAAQxgE,OAAO,GAAc,GAAQlC,KAC1C9b,KAAKy+E,UAAYriD,EACjB,MAAMsiD,EAAM,GAAe,KAAPj5C,EAAY,KAAOA,GACjCk5C,EAAK,GAAc,KAAN5zD,EAAW,KAAOA,GAC/B6zD,EAAK,GAAc,KAAN79E,EAAW,KAAOA,GAC/B89E,EAAK,GAAc,KAANrwE,EAAW,KAAOA,GACrCxO,KAAK+rD,MAAQ,GAAc,GAAkB,KAAVA,EAAe,KAAOA,IACzD/rD,KAAKymE,SAAW,GAAc,GAAqB,KAAbA,EAAkB,KAAOA,IAC/DzmE,KAAKylC,GAAKi5C,EAAI3gF,OAAS,EAAI,IAAIwtD,GAAQmzB,QAAOnmE,EAC9CvY,KAAKwa,MAAQ,GAAc,GAAkB,KAAVA,EAAe,KAAOA,IACzDxa,KAAK+b,KAAO,GAAiB,KAATA,EAAc,KAAOA,GACzC/b,KAAK+qB,EAAI4zD,EAAG5gF,OAAS,EAAI,GAAc4gF,QAAMpmE,EAC7CvY,KAAKe,EAAI69E,EAAG7gF,OAAS,EAAI,GAAc6gF,QAAMrmE,EAC7CvY,KAAKwO,EAAIqwE,EAAG9gF,OAAS,EAAI,GAAc8gF,QAAMtmE,EAC7CvY,KAAK8+E,gCAAgC,CAAEtkE,MAAOxa,KAAKwa,MAAOzZ,EAAGf,KAAKe,EAAGyN,EAAGxO,KAAKwO,IAE7ExO,KAAK8+E,gCAAgC,CAAErY,SAAUzmE,KAAKymE,UAAY,IAElEzmE,KAAK8+E,gCAAgC,CAAE/yB,MAAO/rD,KAAK+rD,OAAS,IAAI,GAChE,MAAMgzB,OAA6BxmE,IAAZvY,KAAKylC,IAAgC,OAAZzlC,KAAKylC,GAC/Cu5C,EAA6B5iD,EAAK4iD,6BAA8B,EAChEze,EAASnkC,EAAKmkC,QAAUvgE,KAAKi/E,aAC/BF,GAAkBxe,EAAOuZ,eAAe,QAAwC,IAA/BkF,GDtDtD,SAA8Bze,EAAQxiE,GACzC,MAAMouE,EAAkB5L,EAAOyY,MAAM,KAAM,mBAC3C,GAAI7M,GAAmBhqD,OAAOpkB,GAAUouE,EACpC,MAAM,IAAIxtE,MAAM,6DAA6DZ,sBAA2BwiE,EAAOyY,MAAM,KAAM,qBAEnI,CCkDYkG,CAAqB3e,EAAQvgE,KAAK+b,KAAKhe,OAE/C,CAMA,QAAI+d,GACA,OAAO9b,KAAKw+E,KAChB,CAiBA,QAAAW,CAASC,GACL,OAAOp/E,KAAKs+E,mBAAmB78D,SAAS29D,EAC5C,CAKA,mBAAAC,GACI,MAAMx4D,EAAS,GAOf,OANI7mB,KAAKs/E,aAAet/E,KAAKu/E,mBACzB14D,EAAOzoB,KAAK,qBAEZ4B,KAAKw/E,aAAex/E,KAAKymE,UACzB5/C,EAAOzoB,KAAK,8BAA8B4B,KAAKymE,2BAA2BzmE,KAAKw/E,gBAE5E34D,CACX,CAKA,OAAA6tB,GAEI,OAAyB,IADV10C,KAAKq/E,sBACNthF,MAClB,CAIA,UAAAyhF,GACI,MAAMC,EAAQz/E,KAAKugE,OAAOyY,MAAM,YAAa,MAC7C,IAAI0G,EAAM1/E,KAAK2/E,aAGf,GAFIF,IACAC,GAAOD,GACPz/E,KAAKugE,OAAOsZ,YAAY,cAAgB75E,KAAK4/E,oBAAqB,CAClE,MAAMC,EAAgB7/E,KAAKugE,OAAOyY,MAAM,YAAa,cACjD6G,IACAH,GAAOG,EACf,CACA,OAAOH,CACX,CAIA,UAAAC,GACI,MAAMhR,EAAa3uE,KAAKugE,OAAOyY,MAAM,YAAa,cAC5CpK,EAAgB5uE,KAAKugE,OAAOyY,MAAM,YAAa,iBACrD,IAAI8G,EAAO,GACX,IAAK,IAAIziF,EAAI,EAAGA,EAAI2C,KAAK+b,KAAKhe,OAAQV,IACjB,IAAjB2C,KAAK+b,KAAK1e,GAAYyiF,GAAQnR,EAAemR,GAAQlR,EAEzD,SAAiBr2D,IAAZvY,KAAKylC,IAAgC,OAAZzlC,KAAKylC,KAAgBzlC,KAAKugE,OAAOuZ,eAAe,MAAO,CACjF,MAAMiG,EAAa59D,OAAO/gB,KAAKiB,KAAKrC,KAAK+b,KAAKhe,OAAS,KAEvD+hF,GADqB9/E,KAAKugE,OAAOyY,MAAM,YAAa,oBAAsB+G,CAE9E,CACA,OAAOD,CACX,CAIA,iBAAAF,GACI,YAAmBrnE,IAAZvY,KAAKylC,IAA6C,IAAzBzlC,KAAKylC,GAAG5jB,MAAM9jB,MAClD,CACA,QAAAuhF,GACI,MAAM,EAAEv0D,EAAC,EAAEhqB,EAAC,EAAEyN,GAAMxO,KACpB,YAAUuY,IAANwS,QAAyBxS,IAANxX,QAAyBwX,IAAN/J,CAM9C,CAIA,eAAA+wE,GACI,IAEI,MAAMv8B,EAAYhjD,KAAKggF,qBACvB,OAAwC,IAAjC,GAAWh9B,GAAWjlD,MACjC,CACA,MAAOyC,GACH,OAAO,CACX,CACJ,CAIA,gBAAAy/E,GACI,OAAO,IAAI10B,GAAQD,GAAgBtrD,KAAKggF,sBAC5C,CAUA,IAAA/9B,CAAKnH,GACD,GAA0B,KAAtBA,EAAW/8C,OAAe,CAC1B,MAAMoB,EAAMa,KAAKkgF,UAAU,2CAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CAKA,IAAIghF,GAAc,EACdngF,KAAK8b,OAAS2gE,GAAgB2D,QAC9BpgF,KAAKugE,OAAOsZ,YAAY,oBACvB75E,KAAKm/E,SAAS3C,GAAW6D,0BAC1BrgF,KAAKs+E,mBAAmBlgF,KAAKo+E,GAAW6D,wBACxCF,GAAc,GAElB,MAAMhgC,EAAUngD,KAAKsgF,yBACfC,EAAiBvgF,KAAKugE,OAAOC,cAAc3S,QAAUA,IACrD,EAAE9iC,EAAC,EAAEhqB,EAAC,GAAQw/E,EAAepgC,EAASrF,GACtC2zB,EAAKzuE,KAAKwgF,aAAaz1D,EAAGhqB,EAAGyN,GAAG,GAEtC,GAAI2xE,EAAa,CACb,MAAMx/E,EAAQX,KAAKs+E,mBAAmB1/E,QAAQ49E,GAAW6D,wBACrD1/E,GAAS,GACTX,KAAKs+E,mBAAmBt1D,OAAOroB,EAAO,EAE9C,CACA,OAAO8tE,CACX,CAIA,MAAA1pE,GACI,MAAO,CACH+W,KAAM,GAAYqG,OAAOniB,KAAK8b,OAC9BiwC,MAAO,GAAY/rD,KAAK+rD,OACxB0a,SAAU,GAAYzmE,KAAKymE,UAC3BhhC,QAAgBltB,IAAZvY,KAAKylC,GAAmBzlC,KAAKylC,GAAGzjC,gBAAauW,EACjDiC,MAAO,GAAYxa,KAAKwa,OACxBuB,KAAM,GAAW/b,KAAK+b,MACtBgP,OAAcxS,IAAXvY,KAAK+qB,EAAkB,GAAY/qB,KAAK+qB,QAAKxS,EAChDxX,OAAcwX,IAAXvY,KAAKe,EAAkB,GAAYf,KAAKe,QAAKwX,EAChD/J,OAAc+J,IAAXvY,KAAKwO,EAAkB,GAAYxO,KAAKwO,QAAK+J,EAExD,CASA,UAAA0mE,CAAW1e,EAAQzS,GAEf,QAAgBv1C,IAAZu1C,EAAuB,CACvB,MAAM2yB,EAAgB,GAAc,GAAQ3yB,IAC5C,GAAIyS,EAAQ,CACR,GAAIA,EAAOzS,YAAc2yB,EAAe,CACpC,MAAMthF,EAAMa,KAAKkgF,UAAU,4DAA4DO,gBAA4BlgB,EAAOzS,WAC1H,MAAM,IAAInvD,MAAMQ,EACpB,CAGA,OAAOohE,EAAOr9D,MAClB,CAEI,OAAIuzE,GAAOmC,mBAAmB6H,GAGnB,IAAIhK,GAAO,CAAEQ,MAAOwJ,IAKpBhK,GAAOhzC,OAAO,CACjBnsB,KAAM,eACN4uD,UAAWua,EACX3yB,QAAS2yB,GACV,CAAE9I,UAAW33E,KAAKu+E,eAGjC,CAII,OAAOhe,GAAQr9D,QAAU,IAAIuzE,GAAO,CAAEQ,MAAOj3E,KAAKu+E,eAE1D,CAOA,+BAAAO,CAAgC5wC,EAAQj9B,EAAO,IAAKyvE,GAAc,GAC9D,IAAK,MAAOzzD,EAAKzS,KAAUN,OAAOg7B,QAAQhH,GACtC,OAAQj9B,GACJ,KAAK,GACD,GAAIyvE,GACA,QAAcnoE,IAAViC,GAAuBA,GAASstC,GAAY,CAC5C,MAAM3oD,EAAMa,KAAKkgF,UAAU,GAAGjzD,uDAAyDzS,KACvF,MAAM,IAAI7b,MAAMQ,EACpB,OAGA,QAAcoZ,IAAViC,GAAuBA,EAAQstC,GAAY,CAC3C,MAAM3oD,EAAMa,KAAKkgF,UAAU,GAAGjzD,8CAAgDzS,KAC9E,MAAM,IAAI7b,MAAMQ,EACpB,CAEJ,MACJ,KAAK,IACD,GAAIuhF,GACA,QAAcnoE,IAAViC,GAAuBA,GAASutC,GAAa,CAC7C,MAAM5oD,EAAMa,KAAKkgF,UAAU,GAAGjzD,yDAA2DzS,KACzF,MAAM,IAAI7b,MAAMQ,EACpB,OAGA,QAAcoZ,IAAViC,GAAuBA,EAAQutC,GAAa,CAC5C,MAAM5oD,EAAMa,KAAKkgF,UAAU,GAAGjzD,gDAAkDzS,KAChF,MAAM,IAAI7b,MAAMQ,EACpB,CAEJ,MACJ,QAAS,CACL,MAAMA,EAAMa,KAAKkgF,UAAU,4BAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,EAGZ,CACA,wBAAOwhF,CAAkBzyC,GACrB,MAAM0yC,EAAa,CACf,QACA,WACA,WACA,KACA,QACA,OACA,IACA,IACA,IACA,OACA,UACA,eACA,WAEJ,IAAK,MAAO3zD,EAAKzS,KAAUN,OAAOg7B,QAAQhH,GACtC,GAAI0yC,EAAWn/D,SAASwL,IAChBxuB,MAAMgD,QAAQ+Y,GACd,MAAM,IAAI7b,MAAM,GAAGsuB,uBAInC,CAKA,sBAAA4zD,GACI,IAAI3zD,EAAO,GACX,IACIA,EAAOltB,KAAKs/E,WAAa,GAAWt/E,KAAKktB,QAAU,0BACvD,CACA,MAAO1sB,GACH0sB,EAAO,OACX,CACA,IAAIoyD,EAAW,GACf,IACIA,EAAWt/E,KAAKs/E,WAAWt9E,UAC/B,CACA,MAAOxB,GACH0sB,EAAO,OACX,CACA,IAAIipD,EAAK,GACT,IACIA,EAAKn2E,KAAKugE,OAAO0U,UACrB,CACA,MAAOz0E,GACH21E,EAAK,OACT,CACA,IAAI2K,EAAU,WAAW9gF,KAAK8b,aAAaoR,WAAcltB,KAAK+rD,eAAe/rD,KAAKwa,SAElF,OADAsmE,GAAW,UAAUxB,QAAenJ,IAC7B2K,CACX,EClXG,SAASC,GAAetS,EAAIuS,GAC/B,MAAMnhB,EAAO4O,EAAGwS,qBACVC,EAAUzS,EAAG0S,aAAeH,EAE5BI,GADqBvhB,EAAOqhB,EAAUrhB,EAAOqhB,GACbF,EACtC,OAAOvS,EAAGhI,SAAW2a,EAAW3S,EAAGj0D,KACvC,CACO,SAAS6mE,GAAwB5S,EAAIuS,GACxC,QAAgBzoE,IAAZyoE,GAAyBA,EAAUvS,EAAG0S,aACtC,MAAM,IAAIxiF,MAAM,yBAGpB,MAAM2iF,EAAe7S,EAAG0S,aAAeH,EACvC,OAAOvS,EAAGwS,qBAAuBK,EAAe7S,EAAGwS,qBAAuBK,CAC9E,CCVO,SAASC,GAAS9S,EAAItvE,GACzB,MAAO,GAAGA,MAAQsvE,EAAG+S,aACzB,CAaO,SAAS7B,GAAWlR,EAAIgT,GAC3B,GAAIhT,EAAG9U,MAAMykB,SAAW3P,EAAG9U,MAAMykB,QAAQnJ,WAAaxG,EAAGlO,OAAO0U,WAC5D,OAAOxG,EAAG9U,MAAMykB,QAAQ5jE,MAE5B,MAAMslE,EAAO5B,GAAgBz+E,UAAUkgF,WAAWxvD,KAAKs+C,EAA1CyP,IAAmDuD,GAAa,IAO7E,OANIvnE,OAAOwnE,SAASjT,KAChBA,EAAG9U,MAAMykB,QAAU,CACf5jE,MAAOslE,EACP7K,SAAUxG,EAAGlO,OAAO0U,aAGrB6K,CACX,CACO,SAAS5yD,GAAKuhD,GACjB,IAAKA,EAAG6Q,WAAY,CAChB,MAAMngF,EAAMoiF,GAAS9S,EAAI,wDACzB,MAAM,IAAI9vE,MAAMQ,EACpB,CACA,MAAM2iE,EAAiB2M,EAAGlO,OAAOC,aAAahQ,WAAa,GAC3D,OAAIt2C,OAAOwnE,SAASjT,IACXA,EAAG9U,MAAMzsC,OACVuhD,EAAG9U,MAAMzsC,KAAO40C,EAAe2M,EAAGhT,cAE/BgT,EAAG9U,MAAMzsC,MAEb40C,EAAe2M,EAAGhT,YAC7B,CAKO,SAASkmB,GAAclT,GAC1B,MAAM,EAAEjgE,GAAMigE,EACd,GAAIA,EAAGlO,OAAOsZ,YAAY,mBAAsBthE,IAAN/J,GAAmBA,EAAI,GAAuB,CACpF,MAAMrP,EAAMoiF,GAAS9S,EAAI,gFACzB,MAAM,IAAI9vE,MAAMQ,EACpB,CACJ,CACO,SAAS6gF,GAAmBvR,GAC/B,QAA8Bl2D,IAA1Bk2D,EAAG9U,MAAM0kB,aACT,OAAO5P,EAAG9U,MAAM0kB,aAEpB,MAAMl+B,EAAUsuB,EAAGmT,+BACb,EAAE72D,EAAC,EAAEhqB,EAAC,EAAEyN,GAAMigE,EACpBkT,GAAclT,GACd,IACI,MACMoT,GADoBpT,EAAGlO,OAAOC,aAAazS,WAAaA,IAC7B5N,EAASp1B,EAAG,GAAsBhqB,GAAI,GAAsByN,GAAIigE,EAAG0Q,SAAS3C,GAAW6D,wBAA0B5R,EAAGlO,OAAOzS,eAAYv1C,GAIxK,OAHI2B,OAAOwnE,SAASjT,KAChBA,EAAG9U,MAAM0kB,aAAewD,GAErBA,CACX,CACA,MAAOrhF,GACH,MAAMrB,EAAMoiF,GAAS9S,EAAI,qBACzB,MAAM,IAAI9vE,MAAMQ,EACpB,CACJ,CACO,SAAS,GAAwBiiF,EAAUJ,GAC9C,QAAgBzoE,IAAZyoE,GAAyBA,EAAUI,EACnC,MAAM,IAAIziF,MAAM,yBAEpB,YAAgB4Z,IAAZyoE,EACOI,EAEJA,EAAWJ,CACtB,CChFO,SAASV,GAAuB7R,GAEnC,OADuBA,EAAGlO,OAAOC,aAAahQ,WAAa,IACrCie,EAAGqT,mBAC7B,CACO,SAASrmB,GAAUgT,EAAI5uE,GAC1B,OAAO,GAAYm+E,GAAYvP,EAAG3yD,MAAO,GAAWjc,GAAQ4uE,EAAG9gB,OACnE,CACO,SAASo0B,GAAgBtT,GAC5B,MAAM,EAAE1jD,GAAM0jD,EACd,QAAUl2D,IAANwS,GAAmBA,IAAM,IAAYA,IAAM,GAAU,CACrD,MAAM5rB,EAAMoiF,GAAS9S,EAAI,2DACzB,MAAM,IAAI9vE,MAAMQ,EACpB,CACJ,CCbO,SAAS,GAAWsvE,GACvB,OAAO,GAAkBA,EAAItsD,OAAOu6D,GAAYoB,kBAAkBrP,EAAGmO,WAAYnO,EAAGlO,SACxF,CCQO,MAAMyhB,WAAoC9D,GAQ7C,WAAAx+E,CAAYy+E,EAAQ/hD,EAAO,CAAC,GACxBlV,MAAM,IAAKi3D,EAAQriE,KAAM2gE,GAAgBwF,kBAAoB7lD,GAC7D,MAAM,QAAE0xB,EAAO,WAAE8uB,EAAU,aAAEuE,EAAY,qBAAEF,GAAyB9C,EAGpE,GAFAn+E,KAAKugE,OAASvgE,KAAKi/E,WAAW7iD,EAAKmkC,OAAQzS,GAC3C9tD,KAAK8tD,QAAU9tD,KAAKugE,OAAOzS,WACc,IAArC9tD,KAAKugE,OAAOuZ,eAAe,MAC3B,MAAM,IAAIn7E,MAAM,kCAEpBqB,KAAKs+E,mBAAqBt+E,KAAKs+E,mBAAmB59D,OAAO,CAAC,KAAM,KAAM,OAEtE,MAAMwhE,EAAiBxF,GAAYC,kBAAkBC,GAAc,IAYnE,GAXA58E,KAAK48E,WAAasF,EAAetF,WACjC58E,KAAK68E,eAAiBqF,EAAerF,eAErCH,GAAYY,iBAAiBt9E,KAAK48E,YAClC58E,KAAKmhF,aAAe,GAAc,GAAyB,KAAjBA,EAAsB,KAAOA,IACvEnhF,KAAKihF,qBAAuB,GAAc,GAAiC,KAAzBA,EAA8B,KAAOA,IACvFjhF,KAAK8+E,gCAAgC,CACjCqC,aAAcnhF,KAAKmhF,aACnBF,qBAAsBjhF,KAAKihF,uBAE/B/C,GAAgByC,kBAAkBxC,GAC9Bn+E,KAAKymE,SAAWzmE,KAAKmhF,aAAep5B,GAAa,CACjD,MAAM5oD,EAAMa,KAAKkgF,UAAU,+DAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAIa,KAAKmhF,aAAenhF,KAAKihF,qBAAsB,CAC/C,MAAM9hF,EAAMa,KAAKkgF,UAAU,mGAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAwBa,MACxB,GAAqBA,OACNo8B,GAAMua,QAAU,IAE3Bz8B,OAAOy8B,OAAO32C,KAEtB,CAWA,iBAAOmiF,CAAWhE,EAAQ/hD,EAAO,CAAC,GAC9B,OAAO,IAAI4lD,GAA4B7D,EAAQ/hD,EACnD,CAOA,uBAAOgmD,CAAiBC,EAAYjmD,EAAO,CAAC,GACxC,IACI,IADA,GAAYimD,EAAW1/D,SAAS,EAAG,GAAIq7D,GAAYvB,GAAgBwF,mBAEnE,MAAM,IAAItjF,MAAM,sFAAsF89E,GAAgBwF,+BAA+B,GAAWI,EAAW1/D,SAAS,EAAG,OAE3L,MAAMurB,EAAS,GAAWm0C,EAAW1/D,SAAS,IAC9C,IAAKlkB,MAAMgD,QAAQysC,GACf,MAAM,IAAIvvC,MAAM,8CAEpB,OAAOqjF,GAA4Bz0B,gBAAgBrf,EAAQ9R,EAC/D,CAOA,sBAAOmxB,CAAgBrf,EAAQ9R,EAAO,CAAC,GACnC,GAAsB,IAAlB8R,EAAOnwC,QAAkC,KAAlBmwC,EAAOnwC,OAC9B,MAAM,IAAIY,MAAM,yGAEpB,MAAOmvD,EAAS/B,EAAOk1B,EAAsBE,EAAc1a,EAAUhhC,EAAIjrB,EAAOuB,EAAM6gE,EAAY7xD,EAAGhqB,EAAGyN,GAAM0/B,EAG9G,OAFAluC,KAAK2gF,kBAAkB,CAAE7yB,UAAS/iC,MAClC88B,GAAwB,CAAEkE,QAAOk1B,uBAAsBE,eAAc1a,WAAUjsD,QAAOuQ,IAAGhqB,IAAGyN,MACrF,IAAIwzE,GAA4B,CACnCl0B,QAAS,GAAcA,GACvB/B,QACAk1B,uBACAE,eACA1a,WACAhhC,KACAjrB,QACAuB,OACA6gE,WAAYA,GAAc,GAC1B7xD,OAASxS,IAANwS,EAAkB,GAAcA,QAAKxS,EACxCxX,IACAyN,KACD4tB,EACP,CAIA,UAAAujD,GACI,OAAO,GAAmB3/E,KAC9B,CAKA,uBAAAqhF,CAAwBL,GACpB,OAAO,GAAgChhF,KAAMghF,EACjD,CAKA,cAAAD,CAAeC,EAAU,IACrB,OAAO,GAAuBhhF,KAAMghF,EACxC,CAcA,GAAArzB,GACI,MAAO,CACH,GAAsB3tD,KAAK8tD,SAC3B,GAAsB9tD,KAAK+rD,OAC3B,GAAsB/rD,KAAKihF,sBAC3B,GAAsBjhF,KAAKmhF,cAC3B,GAAsBnhF,KAAKymE,eACfluD,IAAZvY,KAAKylC,GAAmBzlC,KAAKylC,GAAG5jB,MAAQ,IAAIrjB,WAAW,GACvD,GAAsBwB,KAAKwa,OAC3Bxa,KAAK+b,KACL/b,KAAK48E,gBACMrkE,IAAXvY,KAAK+qB,EAAkB,GAAsB/qB,KAAK+qB,GAAK,IAAIvsB,WAAW,QAC3D+Z,IAAXvY,KAAKe,EAAkB,GAAsBf,KAAKe,GAAK,IAAIvC,WAAW,QAC3D+Z,IAAXvY,KAAKwO,EAAkB,GAAsBxO,KAAKwO,GAAK,IAAIhQ,WAAW,GAE9E,CAWA,SAAAi9D,GACI,OAAO,GAAkBz7D,KAC7B,CAYA,gBAAA8hF,GACI,OAAO,GAAkB9hF,KAAMA,KAAK2tD,MAAM9yC,MAAM,EAAG,GACvD,CAQA,sBAAAylE,GACI,OAAO,GAA+BtgF,KAC1C,CAOA,IAAAktB,GACI,OAAO,GAAYltB,KACvB,CAIA,2BAAA4hF,GACI,OAAO5hF,KAAKsgF,wBAChB,CAIA,kBAAAN,GACI,OAAO,GAA0BhgF,KACrC,CACA,YAAAwgF,CAAaz1D,EAAGhqB,EAAGyN,EAAG8zE,GAAW,GAC7BvhF,EAAI,GAAQA,GACZyN,EAAI,GAAQA,GACZ,MAAM4tB,EAAO,IAAKp8B,KAAKy+E,UAAWle,OAAQvgE,KAAKugE,QAC/C,OAAOyhB,GAA4BG,WAAW,CAC1Cr0B,QAAS9tD,KAAK8tD,QACd/B,MAAO/rD,KAAK+rD,MACZk1B,qBAAsBjhF,KAAKihF,qBAC3BE,aAAcnhF,KAAKmhF,aACnB1a,SAAUzmE,KAAKymE,SACfhhC,GAAIzlC,KAAKylC,GACTjrB,MAAOxa,KAAKwa,MACZuB,KAAM/b,KAAK+b,KACX6gE,WAAY58E,KAAK48E,WACjB7xD,EAAGu3D,EAAWv3D,EAAI,GAAYA,EAC9BhqB,EAAG,GAAcA,GACjByN,EAAG,GAAcA,IAClB4tB,EACP,CAIA,MAAAr3B,GACI,MAAM44E,EAAiBjB,GAAYgB,kBAAkB19E,KAAK48E,YAE1D,MAAO,IADU11D,MAAMniB,SAGnB+oD,QAAS,GAAY9tD,KAAK8tD,SAC1BmzB,qBAAsB,GAAYjhF,KAAKihF,sBACvCE,aAAc,GAAYnhF,KAAKmhF,cAC/BvE,WAAYe,EAEpB,CAIA,QAAA6D,GACI,IAAIA,EAAWxhF,KAAK6gF,yBAEpB,OADAW,GAAY,iBAAiBxhF,KAAKmhF,qCAAqCnhF,KAAKihF,uBACrEO,CACX,CAOA,SAAAtB,CAAU/gF,GACN,OAAO,GAAgBa,KAAMb,EACjC,ECpQG,MAAMojF,WAAqCrE,GAQ9C,WAAAx+E,CAAYy+E,EAAQ/hD,EAAO,CAAC,GACxBlV,MAAM,IAAKi3D,EAAQriE,KAAM2gE,GAAgB+F,mBAAqBpmD,GAC9D,MAAM,QAAE0xB,EAAO,WAAE8uB,EAAU,SAAEwE,GAAajD,EAI1C,GAHAn+E,KAAKugE,OAASvgE,KAAKi/E,WAAW7iD,EAAKmkC,OAAQzS,GAC3C9tD,KAAK8tD,QAAU9tD,KAAKugE,OAAOzS,WAEtB9tD,KAAKugE,OAAOuZ,eAAe,MAC5B,MAAM,IAAIn7E,MAAM,kCAEpBqB,KAAKs+E,mBAAqBt+E,KAAKs+E,mBAAmB59D,OAAO,CAAC,KAAM,OAEhE,MAAMwhE,EAAiBxF,GAAYC,kBAAkBC,GAAc,IAUnE,GATA58E,KAAK48E,WAAasF,EAAetF,WACjC58E,KAAK68E,eAAiBqF,EAAerF,eAErCH,GAAYY,iBAAiBt9E,KAAK48E,YAClC58E,KAAKohF,SAAW,GAAc,GAAqB,KAAbA,EAAkB,KAAOA,IAC/DphF,KAAK8+E,gCAAgC,CACjCsC,SAAUphF,KAAKohF,WAEnBlD,GAAgByC,kBAAkBxC,GAC9Bn+E,KAAKohF,SAAWphF,KAAKymE,SAAW1e,GAAa,CAC7C,MAAM5oD,EAAMa,KAAKkgF,UAAU,iDAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAwBa,MACxB,GAAqBA,OACNo8B,GAAMua,QAAU,IAE3Bz8B,OAAOy8B,OAAO32C,KAEtB,CAWA,iBAAOmiF,CAAWhE,EAAQ/hD,EAAO,CAAC,GAC9B,OAAO,IAAImmD,GAA6BpE,EAAQ/hD,EACpD,CAOA,uBAAOgmD,CAAiBC,EAAYjmD,EAAO,CAAC,GACxC,IACI,IADA,GAAYimD,EAAW1/D,SAAS,EAAG,GAAIq7D,GAAYvB,GAAgB+F,oBAEnE,MAAM,IAAI7jF,MAAM,sFAAsF89E,GAAgB+F,gCAAgC,GAAWH,EAAW1/D,SAAS,EAAG,OAE5L,MAAMurB,EAAS,GAAW1vC,WAAW+b,KAAK8nE,EAAW1/D,SAAS,KAC9D,IAAKlkB,MAAMgD,QAAQysC,GACf,MAAM,IAAIvvC,MAAM,8CAEpB,OAAO4jF,GAA6Bh1B,gBAAgBrf,EAAQ9R,EAChE,CAOA,sBAAOmxB,CAAgBrf,EAAQ9R,EAAO,CAAC,GACnC,GAAsB,IAAlB8R,EAAOnwC,QAAkC,KAAlBmwC,EAAOnwC,OAC9B,MAAM,IAAIY,MAAM,yGAEpB,MAAOmvD,EAAS/B,EAAOq1B,EAAU3a,EAAUhhC,EAAIjrB,EAAOuB,EAAM6gE,EAAY7xD,EAAGhqB,EAAGyN,GAAK0/B,EAInF,OAHAluC,KAAK2gF,kBAAkB,CAAE7yB,UAAS/iC,MAClC88B,GAAwB,CAAEkE,QAAOq1B,WAAU3a,WAAUjsD,QAAOuQ,IAAGhqB,IAAGyN,MAE3D,IAAI+zE,GAA6B,CACpCz0B,QAAS,GAAcA,GACvB/B,QACAq1B,WACA3a,WACAhhC,KACAjrB,QACAuB,OACA6gE,WAAYA,GATQ,GAUpB7xD,OAASxS,IAANwS,EAAkB,GAAcA,QAAKxS,EACxCxX,IACAyN,KACD4tB,EACP,CACA,uBAAAilD,CAAwBL,GACpB,OAAO,GAA+BhhF,KAAKohF,SAAUJ,EACzD,CAIA,UAAArB,GACI,OAAO,GAAmB3/E,KAC9B,CAIA,cAAA+gF,GACI,OAAO/gF,KAAKymE,SAAWzmE,KAAKohF,SAAWphF,KAAKwa,KAChD,CAcA,GAAAmzC,GACI,MAAO,CACH,GAAsB3tD,KAAK8tD,SAC3B,GAAsB9tD,KAAK+rD,OAC3B,GAAsB/rD,KAAKohF,UAC3B,GAAsBphF,KAAKymE,eACfluD,IAAZvY,KAAKylC,GAAmBzlC,KAAKylC,GAAG5jB,MAAQ,IAAIrjB,WAAW,GACvD,GAAsBwB,KAAKwa,OAC3Bxa,KAAK+b,KACL/b,KAAK48E,gBACMrkE,IAAXvY,KAAK+qB,EAAkB,GAAsB/qB,KAAK+qB,GAAK,IAAIvsB,WAAW,QAC3D+Z,IAAXvY,KAAKe,EAAkB,GAAsBf,KAAKe,GAAK,IAAIvC,WAAW,QAC3D+Z,IAAXvY,KAAKwO,EAAkB,GAAsBxO,KAAKwO,GAAK,IAAIhQ,WAAW,GAE9E,CAWA,SAAAi9D,GACI,OAAO,GAAkBz7D,KAC7B,CAYA,gBAAA8hF,GACI,OAAO,GAAkB9hF,KAAMA,KAAK2tD,MAAM9yC,MAAM,EAAG,GACvD,CAQA,sBAAAylE,GACI,OAAO,GAA+BtgF,KAC1C,CAOA,IAAAktB,GACI,OAAO,GAAYltB,KACvB,CAIA,2BAAA4hF,GACI,OAAO5hF,KAAKsgF,wBAChB,CAIA,kBAAAN,GACI,OAAO,GAA0BhgF,KACrC,CACA,YAAAwgF,CAAaz1D,EAAGhqB,EAAGyN,EAAG8zE,GAAW,GAC7BvhF,EAAI,GAAQA,GACZyN,EAAI,GAAQA,GACZ,MAAM4tB,EAAO,IAAKp8B,KAAKy+E,UAAWle,OAAQvgE,KAAKugE,QAC/C,OAAOgiB,GAA6BJ,WAAW,CAC3Cr0B,QAAS9tD,KAAK8tD,QACd/B,MAAO/rD,KAAK+rD,MACZq1B,SAAUphF,KAAKohF,SACf3a,SAAUzmE,KAAKymE,SACfhhC,GAAIzlC,KAAKylC,GACTjrB,MAAOxa,KAAKwa,MACZuB,KAAM/b,KAAK+b,KACX6gE,WAAY58E,KAAK48E,WACjB7xD,EAAGu3D,EAAWv3D,EAAI,GAAYA,EAC9BhqB,EAAG,GAAcA,GACjByN,EAAG,GAAcA,IAClB4tB,EACP,CAIA,MAAAr3B,GACI,MAAM44E,EAAiBjB,GAAYgB,kBAAkB19E,KAAK48E,YAE1D,MAAO,IADU11D,MAAMniB,SAGnB+oD,QAAS,GAAY9tD,KAAK8tD,SAC1BszB,SAAU,GAAYphF,KAAKohF,UAC3BxE,WAAYe,EAEpB,CAIA,QAAA6D,GACI,IAAIA,EAAWxhF,KAAK6gF,yBAGpB,OADAW,GAAY,aAAaxhF,KAAKohF,4BAA4BphF,KAAK48E,YAAY7+E,QAAU,IAC9EyjF,CACX,CAOA,SAAAtB,CAAU/gF,GACN,OAAO,GAAgBa,KAAMb,EACjC,EC7NG,MAAM,WAA+B++E,GAQxC,WAAAx+E,CAAYy+E,EAAQ/hD,EAAO,CAAC,GACxBlV,MAAM,IAAKi3D,EAAQriE,KAAM2gE,GAAgBgG,aAAermD,GACxD,MAAM,QAAE0xB,EAAO,WAAE8uB,EAAU,aAAEuE,EAAY,qBAAEF,EAAoB,iBAAEyB,GAAqBvE,EAGtF,GAFAn+E,KAAKugE,OAASvgE,KAAKi/E,WAAW7iD,EAAKmkC,OAAQzS,GAC3C9tD,KAAK8tD,QAAU9tD,KAAKugE,OAAOzS,WACc,IAArC9tD,KAAKugE,OAAOuZ,eAAe,MAC3B,MAAM,IAAIn7E,MAAM,kCAEpB,IAAyC,IAArCqB,KAAKugE,OAAOuZ,eAAe,MAC3B,MAAM,IAAIn7E,MAAM,kCAEpBqB,KAAKs+E,mBAAqBt+E,KAAKs+E,mBAAmB59D,OAAO,CAAC,KAAM,KAAM,OAEtE,MAAMwhE,EAAiBxF,GAAYC,kBAAkBC,GAAc,IAYnE,GAXA58E,KAAK48E,WAAasF,EAAetF,WACjC58E,KAAK68E,eAAiBqF,EAAerF,eAErCH,GAAYY,iBAAiBt9E,KAAK48E,YAClC58E,KAAKmhF,aAAe,GAAc,GAAyB,KAAjBA,EAAsB,KAAOA,IACvEnhF,KAAKihF,qBAAuB,GAAc,GAAiC,KAAzBA,EAA8B,KAAOA,IACvFjhF,KAAK8+E,gCAAgC,CACjCqC,aAAcnhF,KAAKmhF,aACnBF,qBAAsBjhF,KAAKihF,uBAE/B/C,GAAgByC,kBAAkBxC,GAC9Bn+E,KAAKymE,SAAWzmE,KAAKmhF,aAAep5B,GAAa,CACjD,MAAM5oD,EAAMa,KAAKkgF,UAAU,+DAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAIa,KAAKmhF,aAAenhF,KAAKihF,qBAAsB,CAC/C,MAAM9hF,EAAMa,KAAKkgF,UAAU,mGAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACAa,KAAK0iF,iBAAmB,GAAc,GAAqC,MAA5BA,GAAoB,IAAa,KAAOA,IACvF1iF,KAAK2iF,qBAAuBxE,EAAOwE,qBAAuB,IAAIj2D,KAAKk2D,GAAO,GAAQA,KAClF,GAAwB5iF,MACxB,GAAqBA,MACrB,IAAK,MAAMktB,KAAQltB,KAAK2iF,oBAAqB,CACzC,GAAoB,KAAhBz1D,EAAKnvB,OAAe,CACpB,MAAMoB,EAAMa,KAAKkgF,UAAU,oCAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAIgjB,OAAO+K,EAAK,MAAQltB,KAAKugE,OAAOyY,MAAM,WAAY,4BAA6B,CAC/E,MAAM75E,EAAMa,KAAKkgF,UAAU,6DAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACJ,CACA,GAAIa,KAAK2iF,oBAAoB5kF,OC3FH,ED2FgC,CACtD,MAAMoB,EAAMa,KAAKkgF,UAAU,kCAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACK,GAAwC,IAApCa,KAAK2iF,oBAAoB5kF,OAAc,CAC5C,MAAMoB,EAAMa,KAAKkgF,UAAU,uCAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,QAAgBoZ,IAAZvY,KAAKylC,GAAkB,CACvB,MAAMtmC,EAAMa,KAAKkgF,UAAU,sEAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACAa,KAAK6iF,MAAQ1E,EAAO0E,OAAOn2D,KAAK0hC,GAAS,GAAQA,KACjDpuD,KAAK8iF,eAAiB3E,EAAO2E,gBAAgBp2D,KAAK6hC,GAAe,GAAQA,KACzEvuD,KAAK+iF,UAAY5E,EAAO4E,WAAWr2D,KAAK0kC,GAAU,GAAQA,MAC3Ch1B,GAAMua,QAAU,IAE3Bz8B,OAAOy8B,OAAO32C,KAEtB,CACA,iBAAOmiF,CAAWhE,EAAQ/hD,GACtB,QAAwC7jB,IAApC6jB,GAAMmkC,QAAQC,cAAcwiB,IAC5B,MAAM,IAAIrkF,MAAM,4FAEpB,MAAMqkF,EAAM5mD,EAAKmkC,OAAOC,aAAawiB,IACrC,QAAyBzqE,IAArB4lE,EAAO8E,UAAyB,CAChC,QAAqB1qE,IAAjB4lE,EAAO0E,MACP,MAAM,IAAIlkF,MAAM,oEAEpB,QAA8B4Z,IAA1B4lE,EAAO2E,eACP,MAAM,IAAInkF,MAAM,sEAEpB,QAAmC4Z,IAA/B4lE,EAAOwE,oBACP,MAAM,IAAIhkF,MAAM,uEAEpB,QAAyB4Z,IAArB4lE,EAAO4E,UACP,MAAM,IAAIpkF,MAAM,iEAEpBw/E,EAAO0E,MvC3GK,CAACpqE,IACrB,MAAMsD,EAAO,EAAYtD,GACnB/a,EAAMqe,EAAKlf,WACjB,GAAY,IAARa,EACA,MAAMiB,MAAM,qBAEhB,GAAIjB,EAvBwBwwD,OAwBxB,MAAMvvD,MAAM,0BAEhB,MAAMukF,EAAY9hF,KAAKiB,KAAK3E,EAAMwwD,IAC5Bi1B,EAzBV,SAAoBpnE,EAAMmnE,GACtB,MAAMC,EAAQ,IAAI3kF,WAAW0kF,EAAYh1B,IAAuB5tC,KAAK,GAGrE,OAFA6iE,EAAMtiE,IAAI9E,GACVonE,EAAMpnE,EAAKlf,YAAc,IAClBsmF,CACX,CAoBkBC,CAAWrnE,EAAMmnE,GACzBL,EAAQ,GACd,IAAK,IAAIxlF,EAAI,EAAGA,EAAI6lF,EAAW7lF,IAAK,CAChC,MACM+wD,EAAOD,GADCg1B,EAAMxgE,SAAStlB,EAAI6wD,IAAwB7wD,EAAI,GAAK6wD,KAElE20B,EAAMzkF,KAAKgwD,EACf,CACA,OAAOy0B,CAAK,EuC0FWQ,CAASlF,EAAO8E,UAAUl9C,QAAO,CAACzyB,EAAKgwE,IAAQhwE,EAAMgwE,KACpEnF,EAAO2E,evCzFe,EAACE,EAAKH,KACpC,MAAMU,EAAc,GACpB,IAAK,MAAMn1B,KAAQy0B,EACfU,EAAYnlF,KAAK4kF,EAAIQ,oBAAoBp1B,IAE7C,OAAOm1B,CAAW,EuCoFcE,CAAmBT,EAAK7E,EAAO0E,OACvD1E,EAAOwE,oBvC3DyB,CAACY,IACzC,MAAMG,EAAS,GACf,IAAK,MAAMn1B,KAAcg1B,EACrBG,EAAOtlF,KAAKkwD,GAAqBC,EAAY,IAEjD,OAAOm1B,CAAM,EuCsDwBC,CAA6BxF,EAAO2E,gBACjE3E,EAAO4E,UvCpFU,EAACC,EAAKH,EAAOU,IACvBV,EAAMn2D,KAAI,CAAC0hC,EAAM34C,IAAQutE,EAAIY,oBAAoBx1B,EAAMm1B,EAAY9tE,MuCmFvDouE,CAAcb,EAAK7E,EAAO0E,MAAO1E,EAAO2E,eAC/D,CACA,OAAO,IAAI,GAAuB3E,EAAQ/hD,EAC9C,CAKA,uBAAAilD,CAAwBL,GACpB,OAAO,GAAgChhF,KAAMghF,EACjD,CAQA,gCAAO8C,CAA0B3F,EAAQ/hD,GACrC,QAAwC7jB,IAApC6jB,GAAMmkC,QAAQC,cAAcwiB,IAC5B,MAAM,IAAIrkF,MAAM,4FAMpB,OAJW,GAAuBwjF,WAAW,IACtChE,EACE0E,WAAOtqE,EAAWuqE,oBAAgBvqE,EAAWwqE,eAAWxqE,GAC9D6jB,EAEP,CAOA,uBAAOgmD,CAAiBC,EAAYjmD,EAAO,CAAC,GACxC,QAAuC7jB,IAAnC6jB,EAAKmkC,QAAQC,cAAcwiB,IAC3B,MAAM,IAAIrkF,MAAM,4FAEpB,IAAyF,IAArF,GAAY0jF,EAAW1/D,SAAS,EAAG,GAAIq7D,GAAYvB,GAAgBgG,cACnE,MAAM,IAAI9jF,MAAM,sFAAsF89E,GAAgBgG,0BAA0B,GAAWJ,EAAW1/D,SAAS,EAAG,OAEtL,MAAMurB,EAAS,GAAWm0C,EAAW1/D,SAAS,IAC9C,IAAKlkB,MAAMgD,QAAQysC,GACf,MAAM,IAAIvvC,MAAM,8CAEpB,OAAO,GAAuB4uD,gBAAgBrf,EAAQ9R,EAC1D,CAOA,sBAAOmxB,CAAgBrf,EAAQ9R,EAAO,CAAC,GACnC,QAAuC7jB,IAAnC6jB,EAAKmkC,QAAQC,cAAcwiB,IAC3B,MAAM,IAAIrkF,MAAM,4FAEpB,GAAsB,KAAlBuvC,EAAOnwC,QAAmC,KAAlBmwC,EAAOnwC,OAC/B,MAAM,IAAIY,MAAM,0GAEpB,MAAOmvD,EAAS/B,EAAOk1B,EAAsBE,EAAc1a,EAAUhhC,EAAIjrB,EAAOuB,EAAM6gE,EAAY8F,EAAkBC,EAAqB53D,EAAGhqB,EAAGyN,GAAM0/B,EAarJ,OAZAluC,KAAK2gF,kBAAkB,CAAE7yB,UAAS/iC,MAClC88B,GAAwB,CACpBkE,QACAk1B,uBACAE,eACA1a,WACAjsD,QACAkoE,mBACA33D,IACAhqB,IACAyN,MAEG,IAAI,GAAuB,CAC9Bs/C,QAAS,GAAcA,GACvB/B,QACAk1B,uBACAE,eACA1a,WACAhhC,KACAjrB,QACAuB,OACA6gE,WAAYA,GAAc,GAC1B8F,mBACAC,sBACA53D,OAASxS,IAANwS,EAAkB,GAAcA,QAAKxS,EACxCxX,IACAyN,KACD4tB,EACP,CAOA,yCAAO2nD,CAAmC1B,EAAYjmD,GAClD,IAAKA,IAASA,EAAKmkC,OACf,MAAM,IAAI5hE,MAAM,yDAEpB,QAAuC4Z,IAAnC6jB,EAAKmkC,QAAQC,cAAcwiB,IAC3B,MAAM,IAAIrkF,MAAM,4FAEpB,IAAyF,IAArF,GAAY0jF,EAAW1/D,SAAS,EAAG,GAAIq7D,GAAYvB,GAAgBgG,cACnE,MAAM,IAAI9jF,MAAM,sFAAsF89E,GAAgBgG,0BAA0B,GAAWJ,EAAW1/D,SAAS,EAAG,OAGtL,MAAMqhE,EAAkB,GAAW3B,EAAW1/D,SAAS,IACvD,GAA+B,IAA3BqhE,EAAgBjmF,OAChB,MAAMY,MAAM,6DAEhB,MAAOslF,EAAUpB,EAAOC,EAAgBC,GAAaiB,EAE/CE,EAAY,GAAuB32B,gBAAgB02B,EAAU,IAAK7nD,EAAMua,QAAQ,IACtF,QAAqBp+B,IAAjB2rE,EAAUz+C,GACV,MAAM9mC,MAAM,+DAEhB,MAAMwlF,EAAUnmE,OAAOoe,EAAKmkC,OAAOyY,MAAM,WAAY,6BAWrD,MA9PsC,EAAC2J,EAAqBE,EAAOU,EAAaR,EAAWoB,EAASnB,KACxG,GAAML,EAAoB5kF,SAAW8kF,EAAM9kF,QAAU8kF,EAAM9kF,SAAWwlF,EAAYxlF,OAC9E,MAAM,IAAIY,MAAM,uEAEpB,GAAmC,IAA/BgkF,EAAoB5kF,OACpB,MAAM,IAAIY,MAAM,wCAEpB,IAAI+1C,EACJ,IACIA,EAAUsuC,EAAIoB,wBAAwBvB,EAAOU,EAAaR,EAC9D,CACA,MAAO9iE,GACH,MAAM,IAAIthB,MAAM,6CAA6CshB,IACjE,CACA,IAAKy0B,EACD,MAAM,IAAI/1C,MAAM,uDAEpB,IAAK,IAAI8O,EAAI,EAAGA,EAAIk1E,EAAoB5kF,OAAQ0P,IAE5C,IAAK,GADyB6gD,GAAqBi1B,EAAY91E,GAAI02E,GAC3BxB,EAAoBl1E,IACxD,MAAM,IAAI9O,MAAM,gCAAgC8O,iCAExD,EA8NI42E,CAAsCH,EAAUvB,oBAAqBE,EAAOC,EAAgBC,EAAWoB,EAAS/nD,EAAKmkC,OAAOC,aAAawiB,KAEzIkB,EAAUrB,MAAQA,EAClBqB,EAAUpB,eAAiBA,EAC3BoB,EAAUnB,UAAYA,GAEP3mD,GAAMua,SAAU,IAE3Bz8B,OAAOy8B,OAAOutC,GAEXA,CACX,CAIA,UAAAvE,GACI,OAAO,GAAmB3/E,KAC9B,CAKA,cAAA+gF,CAAeC,EAAU,IACrB,OAAO,GAAuBhhF,KAAMghF,EACxC,CAcA,GAAArzB,GACI,MAAO,CACH,GAAsB3tD,KAAK8tD,SAC3B,GAAsB9tD,KAAK+rD,OAC3B,GAAsB/rD,KAAKihF,sBAC3B,GAAsBjhF,KAAKmhF,cAC3B,GAAsBnhF,KAAKymE,eACfluD,IAAZvY,KAAKylC,GAAmBzlC,KAAKylC,GAAG5jB,MAAQ,IAAIrjB,WAAW,GACvD,GAAsBwB,KAAKwa,OAC3Bxa,KAAK+b,KACL/b,KAAK48E,WACL,GAAsB58E,KAAK0iF,kBAC3B1iF,KAAK2iF,yBACMpqE,IAAXvY,KAAK+qB,EAAkB,GAAsB/qB,KAAK+qB,GAAK,IAAIvsB,WAAW,QAC3D+Z,IAAXvY,KAAKe,EAAkB,GAAsBf,KAAKe,GAAK,IAAIvC,WAAW,QAC3D+Z,IAAXvY,KAAKwO,EAAkB,GAAsBxO,KAAKwO,GAAK,IAAIhQ,WAAW,GAE9E,CAWA,SAAAi9D,GACI,OAAO,GAAkBz7D,KAC7B,CAIA,uBAAAskF,GACI,QAAmB/rE,IAAfvY,KAAK6iF,YACmBtqE,IAAxBvY,KAAK8iF,qBACcvqE,IAAnBvY,KAAK+iF,UACL,MAAM,IAAIpkF,MAAM,2FAEpB,OAAO,GAAkBqB,KAAM,CAACA,KAAK2tD,MAAO3tD,KAAK6iF,MAAO7iF,KAAK8iF,eAAgB9iF,KAAK+iF,WACtF,CAYA,gBAAAjB,GACI,OAAO,GAAkB9hF,KAAMA,KAAK2tD,MAAM9yC,MAAM,EAAG,IACvD,CAQA,sBAAAylE,GACI,OAAO,GAA+BtgF,KAC1C,CAOA,IAAAktB,GACI,OAAO,GAAYltB,KACvB,CACA,2BAAA4hF,GACI,OAAO5hF,KAAKsgF,wBAChB,CAIA,kBAAAN,GACI,OAAO,GAA0BhgF,KACrC,CACA,MAAA+E,GACI,MAAM44E,EAAiBjB,GAAYgB,kBAAkB19E,KAAK48E,YAE1D,MAAO,IADU11D,MAAMniB,SAGnB+oD,QAAS,GAAY9tD,KAAK8tD,SAC1BmzB,qBAAsB,GAAYjhF,KAAKihF,sBACvCE,aAAc,GAAYnhF,KAAKmhF,cAC/BvE,WAAYe,EACZ+E,iBAAkB,GAAY1iF,KAAK0iF,kBACnCC,oBAAqB3iF,KAAK2iF,oBAAoBj2D,KAAKQ,GAAS,GAAWA,KAE/E,CACA,YAAAszD,CAAaz1D,EAAGhqB,EAAGyN,EAAG8zE,GAAW,GAC7BvhF,EAAI,GAAQA,GACZyN,EAAI,GAAQA,GACZ,MAAM4tB,EAAO,IAAKp8B,KAAKy+E,UAAWle,OAAQvgE,KAAKugE,QAC/C,OAAO,GAAuB4hB,WAAW,CACrCr0B,QAAS9tD,KAAK8tD,QACd/B,MAAO/rD,KAAK+rD,MACZk1B,qBAAsBjhF,KAAKihF,qBAC3BE,aAAcnhF,KAAKmhF,aACnB1a,SAAUzmE,KAAKymE,SACfhhC,GAAIzlC,KAAKylC,GACTjrB,MAAOxa,KAAKwa,MACZuB,KAAM/b,KAAK+b,KACX6gE,WAAY58E,KAAK48E,WACjB7xD,EAAGu3D,EAAWv3D,EAAI,GAAYA,EAC9BhqB,EAAG,GAAcA,GACjByN,EAAG,GAAcA,GACjBk0E,iBAAkB1iF,KAAK0iF,iBACvBC,oBAAqB3iF,KAAK2iF,oBAC1BE,MAAO7iF,KAAK6iF,MACZC,eAAgB9iF,KAAK8iF,eACrBC,UAAW/iF,KAAK+iF,WACjB3mD,EACP,CAIA,QAAAolD,GACI,IAAIA,EAAWxhF,KAAK6gF,yBAEpB,OADAW,GAAY,iBAAiBxhF,KAAKmhF,qCAAqCnhF,KAAKihF,uBACrEO,CACX,CAOA,SAAAtB,CAAU/gF,GACN,OAAO,GAAgBa,KAAMb,EACjC,CAIA,QAAAolF,GACI,OAAOvkF,KAAK2iF,oBAAoB5kF,MACpC,EE7aJ,SAASymF,GAAYn9C,EAAIymB,GACrB,MAAM/iC,EAAI/M,OAAOqpB,GACXo9C,EAAmC,EAAlBzmE,OAAO8vC,GAC9B,OAAO/iC,IAAM05D,EAAiB,IAAM15D,IAAM05D,EAAiB,EAC/D,CAIO,MAAMC,WAA0BxG,GAQnC,WAAAx+E,CAAYy+E,EAAQ/hD,EAAO,CAAC,GAKxB,GAJAlV,MAAM,IAAKi3D,EAAQriE,KAAM2gE,GAAgB2D,QAAUhkD,GACnDp8B,KAAKugE,OAASvgE,KAAK2kF,aAAa3kF,KAAK+qB,EAAGqR,EAAKmkC,QAC7CvgE,KAAK8hE,eAAiB9hE,KAAKugE,OAAOC,aAAahQ,WAAa,GAC5DxwD,KAAKohF,SAAW,GAAc,GAA4B,KAApBjD,EAAOiD,SAAkB,KAAOjD,EAAOiD,WACzEphF,KAAKohF,SAAWphF,KAAKymE,SAAW1e,GAAa,CAC7C,MAAM5oD,EAAMa,KAAKkgF,UAAU,4DAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACAa,KAAK8+E,gCAAgC,CAAEsC,SAAUphF,KAAKohF,WACtDlD,GAAgByC,kBAAkBxC,GAC9Bn+E,KAAKugE,OAAOsZ,YAAY,oBACnB75E,KAAKs/E,WAUFkF,GAAYxkF,KAAK+qB,EAAG/qB,KAAKugE,OAAOzS,YAChC9tD,KAAKs+E,mBAAmBlgF,KAAKo+E,GAAW6D,wBAV5CrgF,KAAKs+E,mBAAmBlgF,KAAKo+E,GAAW6D,0BAcjCjkD,GAAMua,QAAU,IAE3Bz8B,OAAOy8B,OAAO32C,KAEtB,CASA,iBAAOmiF,CAAWhE,EAAQ/hD,EAAO,CAAC,GAC9B,OAAO,IAAIsoD,GAAkBvG,EAAQ/hD,EACzC,CAMA,uBAAOgmD,CAAiBC,EAAYjmD,EAAO,CAAC,GACxC,MAAM8R,EAAS,GAAWm0C,GAC1B,IAAK5jF,MAAMgD,QAAQysC,GACf,MAAM,IAAIvvC,MAAM,8CAEpB,OAAOqB,KAAKutD,gBAAgBrf,EAAQ9R,EACxC,CAMA,sBAAOmxB,CAAgBrf,EAAQ9R,EAAO,CAAC,GAGnC,GAAsB,IAAlB8R,EAAOnwC,QAAkC,IAAlBmwC,EAAOnwC,OAC9B,MAAM,IAAIY,MAAM,+FAEpB,MAAOotD,EAAOq1B,EAAU3a,EAAUhhC,EAAIjrB,EAAOuB,EAAMgP,EAAGhqB,EAAGyN,GAAK0/B,EAE9D,OADA2Z,GAAwB,CAAEkE,QAAOq1B,WAAU3a,WAAUjsD,QAAOuQ,IAAGhqB,IAAGyN,MAC3D,IAAIk2E,GAAkB,CACzB34B,QACAq1B,WACA3a,WACAhhC,KACAjrB,QACAuB,OACAgP,IACAhqB,IACAyN,KACD4tB,EACP,CACA,uBAAAilD,CAAwBL,GACpB,OAAO,GAA+BhhF,KAAKohF,SAAUJ,EACzD,CAcA,GAAArzB,GACI,MAAO,CACH,GAAsB3tD,KAAK+rD,OAC3B,GAAsB/rD,KAAKohF,UAC3B,GAAsBphF,KAAKymE,eACfluD,IAAZvY,KAAKylC,GAAmBzlC,KAAKylC,GAAG5jB,MAAQ,IAAIrjB,WAAW,GACvD,GAAsBwB,KAAKwa,OAC3Bxa,KAAK+b,UACMxD,IAAXvY,KAAK+qB,EAAkB,GAAsB/qB,KAAK+qB,GAAK,IAAIvsB,WAAW,QAC3D+Z,IAAXvY,KAAKe,EAAkB,GAAsBf,KAAKe,GAAK,IAAIvC,WAAW,QAC3D+Z,IAAXvY,KAAKwO,EAAkB,GAAsBxO,KAAKwO,GAAK,IAAIhQ,WAAW,GAE9E,CAUA,SAAAi9D,GACI,OAAO,GAAWz7D,KAAK2tD,MAC3B,CAcA,gBAAAm0B,GACI,MAAMx6D,EAAU,CACZ,GAAsBtnB,KAAK+rD,OAC3B,GAAsB/rD,KAAKohF,UAC3B,GAAsBphF,KAAKymE,eACfluD,IAAZvY,KAAKylC,GAAmBzlC,KAAKylC,GAAG5jB,MAAQ,IAAIrjB,WAAW,GACvD,GAAsBwB,KAAKwa,OAC3Bxa,KAAK+b,MAOT,OALI/b,KAAKm/E,SAAS3C,GAAW6D,0BACzB/4D,EAAQlpB,KAAK,GAAsB4B,KAAKugE,OAAOzS,YAC/CxmC,EAAQlpB,KAAK,GAAW,GAAQ,KAChCkpB,EAAQlpB,KAAK,GAAW,GAAQ,MAE7BkpB,CACX,CAKA,sBAAAg5D,GACI,MAAMh5D,EAAUtnB,KAAK8hF,mBACrB,OAAO9hF,KAAK8hE,eAAe,GAAWx6C,GAC1C,CAIA,UAAAq4D,GACI,OAAO,GAAkB3/E,KAC7B,CAIA,cAAA+gF,GACI,OAAO/gF,KAAKymE,SAAWzmE,KAAKohF,SAAWphF,KAAKwa,KAChD,CAOA,IAAA0S,GACI,OAAO,GAAYltB,KACvB,CAIA,2BAAA4hF,GACI,IAAK5hF,KAAKs/E,WAAY,CAClB,MAAMngF,EAAMa,KAAKkgF,UAAU,kCAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,OAAOa,KAAKsgF,wBAChB,CAIA,kBAAAN,GACI,OAAO,GAA0BhgF,KACrC,CACA,YAAAwgF,CAAaz1D,EAAGhqB,EAAGyN,EAAG8zE,GAAW,GAC7BvhF,EAAI,GAAQA,GACZyN,EAAI,GAAQA,GACR8zE,GAAYtiF,KAAKm/E,SAAS3C,GAAW6D,0BACrCt1D,GAAK/qB,KAAKugE,OAAOzS,UAAY,GAAW3F,IAE5C,MAAM/rB,EAAO,IAAKp8B,KAAKy+E,UAAWle,OAAQvgE,KAAKugE,QAC/C,OAAOmkB,GAAkBvC,WAAW,CAChCp2B,MAAO/rD,KAAK+rD,MACZq1B,SAAUphF,KAAKohF,SACf3a,SAAUzmE,KAAKymE,SACfhhC,GAAIzlC,KAAKylC,GACTjrB,MAAOxa,KAAKwa,MACZuB,KAAM/b,KAAK+b,KACXgP,IACAhqB,EAAG,GAAcA,GACjByN,EAAG,GAAcA,IAClB4tB,EACP,CAIA,MAAAr3B,GAEI,MAAO,IADUmiB,MAAMniB,SAGnBq8E,SAAU,GAAYphF,KAAKohF,UAEnC,CAIA,YAAAuD,CAAat9C,EAAIk5B,GACb,IAAIkgB,EACJ,MAAM11D,OAAWxS,IAAP8uB,EAAmBrpB,OAAOqpB,QAAM9uB,EAE1C,QAAUA,IAANwS,GAGIA,EAAI,IAAY,KAANA,GAAkB,KAANA,EACtB,MAAM,IAAIpsB,MAAM,oFAAoFosB,KAI5G,QAAUxS,IAANwS,GACM,IAANA,KACEw1C,GAAUA,EAAOsZ,YAAY,oBACzB,KAAN9uD,GACM,KAANA,EACA,GAAIw1C,GACA,IAAKikB,GAAYriE,OAAO4I,GAAIw1C,EAAOzS,WAC/B,MAAM,IAAInvD,MAAM,+BAA+BosB,kBAAkBw1C,EAAOzS,+FAG3E,CAED,IAAI82B,EAEAA,GADC75D,EAAI,IAAM,GAAM,EACR,GAGA,GAGb01D,EAAgBt+D,OAAO4I,EAAI65D,GAAU,EACzC,CAEJ,OAAO5kF,KAAKi/E,WAAW1e,EAAQkgB,EACnC,CAIA,QAAAe,GACI,IAAIA,EAAWxhF,KAAK6gF,yBAEpB,OADAW,GAAY,aAAaxhF,KAAKohF,WACvBI,CACX,CAOA,SAAAtB,CAAU/gF,GACN,OAAO,GAAgBa,KAAMb,EACjC,ECvSG,MAAM0lF,GAET,WAAAnlF,GAAgB,CAOhB,iBAAOyiF,CAAWhE,EAAQM,EAAY,CAAC,GACnC,GAAM,SAAUN,QAA2B5lE,IAAhB4lE,EAAOriE,KAI7B,CACD,GZyCL,SAAwBqiE,GAE3B,OADengE,OAAO,GAAc,GAAQmgE,EAAOriE,UACjC2gE,GAAgB2D,MACtC,CY5CgB0E,CAAe3G,GACf,OAAOuG,GAAkBvC,WAAWhE,EAAQM,GAE3C,GZ0CV,SAAmCN,GAEtC,OADengE,OAAO,GAAc,GAAQmgE,EAAOriE,UACjC2gE,GAAgB+F,iBACtC,CY7CqBuC,CAA0B5G,GAC/B,OAAOoE,GAA6BJ,WAAWhE,EAAQM,GAEtD,GZ2CV,SAAkCN,GAErC,OADengE,OAAO,GAAc,GAAQmgE,EAAOriE,UACjC2gE,GAAgBwF,gBACtC,CY9CqB+C,CAAyB7G,GAC9B,OAAO6D,GAA4BG,WAAWhE,EAAQM,GAErD,GZ4CV,SAA6BN,GAEhC,OADengE,OAAO,GAAc,GAAQmgE,EAAOriE,UACjC2gE,GAAgBgG,WACtC,CY/CqBwC,CAAoB9G,GACzB,OAAO,GAAuBgE,WAAWhE,EAAQM,GAGjD,MAAM,IAAI9/E,MAAM,8BAA8Bw/E,GAAQriE,qBAE9D,CAlBI,OAAO4oE,GAAkBvC,WAAWhE,EAAQM,EAmBpD,CAOA,yBAAOyG,CAAmBnpE,EAAM0iE,EAAY,CAAC,GACzC,KAAI1iE,EAAK,IAAM,KAcX,OAAO2oE,GAAkBtC,iBAAiBrmE,EAAM0iE,GAZhD,OAAQ1iE,EAAK,IACT,KAAK0gE,GAAgB+F,kBACjB,OAAOD,GAA6BH,iBAAiBrmE,EAAM0iE,GAC/D,KAAKhC,GAAgBwF,iBACjB,OAAOD,GAA4BI,iBAAiBrmE,EAAM0iE,GAC9D,KAAKhC,GAAgBgG,YACjB,OAAO,GAAuBL,iBAAiBrmE,EAAM0iE,GACzD,QACI,MAAM,IAAI9/E,MAAM,4BAA4Bod,EAAK,cAMjE,CAUA,wBAAOopE,CAAkBppE,EAAM0iE,EAAY,CAAC,GACxC,GAAI1iE,aAAgBvd,WAChB,OAAOwB,KAAKklF,mBAAmBnpE,EAAM0iE,GAEpC,GAAIhgF,MAAMgD,QAAQsa,GAEnB,OAAO2oE,GAAkBn3B,gBAAgBxxC,EAAM0iE,GAG/C,MAAM,IAAI9/E,MAAM,gDAExB,CAQA,gCAAaymF,CAAoB/0B,EAAUg1B,EAAQ5G,GAC/C,MAAM6G,EAAOl1B,GAAYC,GACnB8tB,QAAexuB,GAAkB21B,EAAM,CACzCzwD,OAAQ,2BACRyW,OAAQ,CAAC+5C,KAEb,GAAe,OAAXlH,EACA,MAAM,IAAIx/E,MAAM,kCAEpB,OAAOkmF,GAAmBU,QAAQpH,EAAQM,EAC9C,CAQA,oBAAa8G,CAAQpH,EAAQM,EAAY,CAAC,GACtC,OAAOoG,GAAmB1C,WC7GD,CAACqD,IAC9B,MAAMC,EAAWvrE,OAAO0zB,OAAO,CAAC,EAAG43C,GAsBnC,OArBAC,EAAShf,SAAW,GAAOgf,EAAShf,UAAYgf,EAASxU,IAAK,GAAW9uD,QACzEsjE,EAAS1pE,UAAyBxD,IAAlBktE,EAAS1pE,KAAqB0pE,EAAShtE,MAAQgtE,EAAS1pE,KAExE0pE,EAASrE,cAAiC7oE,IAAtBktE,EAASrE,SAAyBj/D,OAAOsjE,EAASrE,eAAY7oE,EAClFktE,EAASjrE,WAA2BjC,IAAnBktE,EAASjrE,MAAsB2H,OAAOsjE,EAASjrE,YAASjC,EAEzEktE,EAAShgD,GACW,OAAhBggD,EAAShgD,SAA+BltB,IAAhBktE,EAAShgD,GAC3B,GAAc,GAAQggD,EAAShgD,IAAK,IACpC,KAMVggD,EAAS16D,EAAmB,QAAf06D,EAAS16D,EAAc,KAAO06D,EAAS16D,EACpD06D,EAAS1kF,EAAmB,QAAf0kF,EAAS1kF,EAAc,KAAO0kF,EAAS1kF,EACpD0kF,EAASj3E,EAAmB,QAAfi3E,EAASj3E,EAAc,KAAOi3E,EAASj3E,EACjC,OAAfi3E,EAAS16D,GAA6B,OAAf06D,EAAS1kF,GAA6B,OAAf0kF,EAASj3E,IACvDi3E,EAAS16D,EAAI,GAAO06D,EAAS16D,EAAG,GAAW5I,SAExCsjE,CAAQ,EDsF0BC,CAAkBvH,GAASM,EACpE,EE9GG,MCKM,GAAc,SAAUhmE,GACjC,QAAcF,IAAVE,EAAJ,CAEA,IAAK,GAAYA,GAAQ,CAErB,IADc,IAAIoU,OAAO,SACdC,KAAKrU,GAEZ,MAAM,IAAI9Z,MADE,+HAA+H8Z,KAG/I,MAAO,KAAO2F,SAAS3F,EAAO,IAAIzW,SAAS,GAC/C,CACA,OAAOyW,CATa,CAUxB,ECZMktE,GAAoBxjE,OAAO,oBAI1B,MAAMyjE,GAQT,WAAAlmF,CAAYmmF,EAAYzpD,EAAO,CAAC,GAC5Bp8B,KAAK25D,MAAQ,CACTzsC,UAAM3U,GAEN6jB,EAAKmkC,OACLvgE,KAAKugE,OAASnkC,EAAKmkC,OAAOr9D,OAG1BlD,KAAKugE,OAAS,IAAIkW,GAAO,CACrBQ,MAAOjP,GAAMM,UAGrBtoE,KAAK8hE,eAAiB9hE,KAAKugE,OAAOC,aAAahQ,WAAa,GAC5D,MAAMs1B,EAA8B1pD,EAAK2pD,gCAAiC,EACpEC,EAAW,CACbC,WAAY,GAAM,IAClBC,UAAWl+B,GACXwoB,SAAUjlB,GAAQC,OAClB26B,UAAW,GAAM,IACjBC,iBAAkB,GAClBC,YAAa,GACbC,UAAW,GAAM,KACjB5f,WAAY,GACZ9mE,OAAQ,GACR6mE,SAAUkf,GACVY,QAAS,GACTvf,UAAW,GACXL,UAAW,IAAInoE,WAAW,GAC1Bm2E,QAAS,GAAM,IACf5oB,MAAO,GAAM,IAEXk6B,EAAa,GAAOJ,EAAWI,WAAY,GAAWznF,aAAewnF,EAASC,WAC9EC,EAAY,GAAOL,EAAWK,UAAW,GAAW1nF,aAAewnF,EAASE,UAC5E1V,EAAW,IAAIjlB,GAAQ,GAAOs6B,EAAWrV,UAAYwV,EAASxV,SAAU,GAAWhyE,aACnF2nF,EAAY,GAAON,EAAWM,UAAW,GAAW3nF,aAAewnF,EAASG,UAC5EC,EAAmB,GAAOP,EAAWO,iBAAkB,GAAW5nF,aAAewnF,EAASI,iBAC1FC,EAAc,GAAOR,EAAWQ,YAAa,GAAW7nF,aAAewnF,EAASK,YAChFC,EAAY,GAAOT,EAAWS,UAAW,GAAW9nF,aAAewnF,EAASM,UAC5E5f,EAAa,GAAOmf,EAAWnf,WAAY,GAAWvkD,SAAW6jE,EAAStf,WAC1E9mE,EAAS,GAAOimF,EAAWjmF,OAAQ,GAAWuiB,SAAW6jE,EAASpmF,OAClE6mE,EAAW,GAAOof,EAAWpf,SAAU,GAAWtkD,SAAW6jE,EAASvf,SACtE8f,EAAU,GAAOV,EAAWU,QAAS,GAAWpkE,SAAW6jE,EAASO,QACpEvf,EAAY,GAAO6e,EAAW7e,UAAW,GAAW7kD,SAAW6jE,EAAShf,UACxEL,EAAY,GAAOkf,EAAWlf,UAAW,GAAWnoE,aAAewnF,EAASrf,UAC5EgO,EAAU,GAAOkR,EAAWlR,QAAS,GAAWn2E,aAAewnF,EAASrR,QACxE5oB,EAAQ,GAAO85B,EAAW95B,MAAO,GAAWvtD,aAAewnF,EAASj6B,MACpEurB,EAAcl7C,EAAKk7C,cAAe,GACpB,IAAhBA,EACAt3E,KAAKugE,OAAOkZ,cAAc,CACtBN,YAAav5E,EACbonE,cAGwB,kBAAhBsQ,GACZt3E,KAAKugE,OAAOkZ,cAAc,CACtBN,YAAav5E,EACbw5E,GAAI9B,EACJtQ,cAIR,MAAMwf,EAAmB,CACrB5e,cAAe5nE,KAAKugE,OAAOuZ,eAAe,MACpCl6E,IAAWI,KAAKugE,OAAOka,cAAcxS,GAASqD,QAC1CtrE,KAAKugE,OAAOyY,MAAM,YAAa,kBAC/B9wB,QACJ3vC,EACNkuE,gBAAiBzmF,KAAKugE,OAAOuZ,eAAe,MAAQ,QAAgBvhE,EACpEmuE,YAAa1mF,KAAKugE,OAAOuZ,eAAe,MAAQ,QAAWvhE,EAC3Dq8D,cAAe50E,KAAKugE,OAAOuZ,eAAe,MAAQ,QAAWvhE,EAC7DouE,sBAAuB3mF,KAAKugE,OAAOuZ,eAAe,MAAQ,GAAM,SAAMvhE,GAEpEqvD,EAAgB,GAAOie,EAAWje,cAAe,GAAWzlD,SAAWqkE,EAAiB5e,cACxF6e,EAAkB,GAAOZ,EAAWY,gBAAiB,GAAWjoF,aAAegoF,EAAiBC,gBAChGC,EAAc,GAAOb,EAAWa,YAAa,GAAWvkE,SAAWqkE,EAAiBE,YACpF9R,EAAgB,GAAOiR,EAAWjR,cAAe,GAAWzyD,SAAWqkE,EAAiB5R,cACxF+R,EAAwB,GAAOd,EAAWc,sBAAuB,GAAWnoF,aAC9EgoF,EAAiBG,sBACrB,IAAK3mF,KAAKugE,OAAOuZ,eAAe,YAA2BvhE,IAAlBqvD,EACrC,MAAM,IAAIjpE,MAAM,uEAEpB,IAAKqB,KAAKugE,OAAOuZ,eAAe,YAA6BvhE,IAApBkuE,EACrC,MAAM,IAAI9nF,MAAM,oFAEpB,IAAKqB,KAAKugE,OAAOuZ,eAAe,MAAO,CACnC,QAAoBvhE,IAAhBmuE,EACA,MAAM,IAAI/nF,MAAM,6DAEpB,QAAsB4Z,IAAlBq8D,EACA,MAAM,IAAIj2E,MAAM,8DAExB,CACA,IAAKqB,KAAKugE,OAAOuZ,eAAe,YAAmCvhE,IAA1BouE,EACrC,MAAM,IAAIhoF,MAAM,0FAgCpB,GA9BAqB,KAAKimF,WAAaA,EAClBjmF,KAAKkmF,UAAYA,EACjBlmF,KAAKwwE,SAAWA,EAChBxwE,KAAKmmF,UAAYA,EACjBnmF,KAAKomF,iBAAmBA,EACxBpmF,KAAKqmF,YAAcA,EACnBrmF,KAAKsmF,UAAYA,EACjBtmF,KAAK0mE,WAAaA,EAClB1mE,KAAKJ,OAASA,EACdI,KAAKymE,SAAWA,EAChBzmE,KAAKumF,QAAUA,EACfvmF,KAAKgnE,UAAYA,EACjBhnE,KAAK2mE,UAAYA,EACjB3mE,KAAK20E,QAAUA,EACf30E,KAAK+rD,MAAQA,EACb/rD,KAAK4nE,cAAgBA,EACrB5nE,KAAKymF,gBAAkBA,EACvBzmF,KAAK0mF,YAAcA,EACnB1mF,KAAK40E,cAAgBA,EACrB50E,KAAK2mF,sBAAwBA,EAC7B3mF,KAAK4mF,2BACL5mF,KAAK6mF,wBAIDzqD,EAAK0qD,0BACL9mF,KAAKugE,OAAO8b,uBAAyBlU,GAAmB4e,SACxD/mF,KAAK0mE,WAAa1mE,KAAKgnF,0BAA0B5qD,EAAK0qD,2BAGtD1qD,EAAK6qD,aAAc,CAEnB,MAAMC,EAAqBC,GAC3B,GAAInnF,KAAK2mE,UAAU5oE,OAASmpF,EAAoB,CAC5C,MAAME,EAAkBF,EAAqBlnF,KAAK2mE,UAAU5oE,OAC5DiC,KAAK2mE,UAAY,GAAY3mE,KAAK2mE,UAAW,IAAInoE,WAAW4oF,GAChE,CACApnF,KAAK2mE,UAAY3mE,KAAKqnF,gBAAgBjrD,EAAK6qD,aAC/C,EAEoC,IAAhCnB,GACA9lF,KAAKsnF,8BACMlrD,GAAMua,QAAU,IAE3Bz8B,OAAOy8B,OAAO32C,KAEtB,CAIA,cAAIunF,GACA,IAAyC,IAArCvnF,KAAKugE,OAAOuZ,eAAe,MAAiB,CAC5C,MAAM36E,EAAMa,KAAKkgF,UAAU,4EAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,OAAOa,KAAK20E,OAChB,CAOA,qBAAO6S,CAAe3B,EAAa,CAAC,EAAGzpD,EAAO,CAAC,GAC3C,OAAO,IAAIwpD,GAAYC,EAAYzpD,EACvC,CAOA,8BAAOqrD,CAAwBC,EAAsBtrD,EAAO,CAAC,GACzD,MAAM8R,EAAS,GAAWw5C,GAC1B,IAAKjpF,MAAMgD,QAAQysC,GACf,MAAM,IAAIvvC,MAAM,kDAEpB,OAAOinF,GAAYr4B,gBAAgBrf,EAAQ9R,EAC/C,CAOA,sBAAOmxB,CAAgBrf,EAAQ9R,EAAO,CAAC,GACnC,MAAMypD,EDpLP,SAAiC33C,GACpC,MAAO+3C,EAAYC,EAAW1V,EAAU2V,EAAWC,EAAkBC,EAAaC,EAAW5f,EAAY9mE,EAAQ6mE,EAAU8f,EAASvf,EAAWL,EAAWgO,EAAS5oB,EAAO6b,EAAe6e,EAAiBC,EAAa9R,EAAe+R,GAA0Bz4C,EAChQ,GAAIA,EAAOnwC,OAAS,GAChB,MAAM,IAAIY,MAAM,0EAA0EuvC,EAAOnwC,UAErG,GAAImwC,EAAOnwC,OAAS,GAChB,MAAM,IAAIY,MAAM,0EAA0EuvC,EAAOnwC,UAErG,MAAO,CACHkoF,aACAC,YACA1V,WACA2V,YACAC,mBACAC,cACAC,YACA5f,aACA9mE,SACA6mE,WACA8f,UACAvf,YACAL,YACAgO,UACA5oB,QACA6b,gBACA6e,kBACAC,cACA9R,gBACA+R,wBAER,CCsJ2BgB,CAAwBz5C,IACrC,OAAEtuC,EAAM,cAAEgoE,EAAa,cAAEgN,EAAa,YAAE8R,EAAW,sBAAEC,GAA0Bd,EAC/E+B,EAAShC,GAAY4B,eAAe3B,EAAYzpD,GAEtD,GAAIwrD,EAAOrnB,OAAOuZ,eAAe,YAA2BvhE,IAAlBqvD,EAA6B,CACnE,MAAMigB,EAAyBngC,GAAckgC,EAAOrnB,OAAO0a,SAAS,OAEpE,GAAI4M,GAA0B,GAAYA,EAAwBjoF,GAC9D,MAAM,IAAIjB,MAAM,mDAExB,CAEA,GAAIipF,EAAOrnB,OAAOuZ,eAAe,MAAO,CACpC,QAAsBvhE,IAAlBq8D,EACA,MAAM,IAAIj2E,MAAM,oDAEf,QAAoB4Z,IAAhBmuE,EACL,MAAM,IAAI/nF,MAAM,iDAExB,CACA,GAAIipF,EAAOrnB,OAAOuZ,eAAe,YAAmCvhE,IAA1BouE,EACtC,MAAM,IAAIhoF,MAAM,4DAEpB,OAAOipF,CACX,CAIA,wBAAAhB,GACI,MAAM,WAAEX,EAAU,UAAEE,EAAS,iBAAEC,EAAgB,YAAEC,EAAW,QAAE1R,EAAO,MAAE5oB,GAAU/rD,KACjF,GAA0B,KAAtBimF,EAAWloF,OAAe,CAC1B,MAAMoB,EAAMa,KAAKkgF,UAAU,yCAAyC+F,EAAWloF,gBAC/E,MAAM,IAAIY,MAAMQ,EACpB,CACA,GAAyB,KAArBgnF,EAAUpoF,OAAe,CACzB,MAAMoB,EAAMa,KAAKkgF,UAAU,wCAAwCiG,EAAUpoF,gBAC7E,MAAM,IAAIY,MAAMQ,EACpB,CACA,GAAgC,KAA5BinF,EAAiBroF,OAAe,CAChC,MAAMoB,EAAMa,KAAKkgF,UAAU,+CAA+CkG,EAAiBroF,gBAC3F,MAAM,IAAIY,MAAMQ,EACpB,CACA,GAA2B,KAAvBknF,EAAYtoF,OAAe,CAC3B,MAAMoB,EAAMa,KAAKkgF,UAAU,0CAA0CmG,EAAYtoF,gBACjF,MAAM,IAAIY,MAAMQ,EACpB,CACA,GAAuB,KAAnBw1E,EAAQ52E,OAAe,CACvB,MAAMoB,EAAMa,KAAKkgF,UAAU,sCAAsCvL,EAAQ52E,gBACzE,MAAM,IAAIY,MAAMQ,EACpB,CACA,GAAqB,IAAjB4sD,EAAMhuD,OAAc,CACpB,MAAMoB,EAAMa,KAAKkgF,UAAU,mCAAmCn0B,EAAMhuD,gBACpE,MAAM,IAAIY,MAAMQ,EACpB,CAEA,GAAIa,KAAKumF,QAAUvmF,KAAKymE,SAAU,CAC9B,MAAMtnE,EAAMa,KAAKkgF,UAAU,2CAA2ClgF,KAAKumF,uBAAuBvmF,KAAKymE,YACvG,MAAM,IAAI9nE,MAAMQ,EACpB,CAEA,IAAyC,IAArCa,KAAKugE,OAAOuZ,eAAe,MAAgB,CAC3C,GAAkC,iBAAvB95E,KAAK4nE,cAA4B,CACxC,MAAMzoE,EAAMa,KAAKkgF,UAAU,uCAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,MAAM2oF,EAAgB9nF,KAAKugE,OAAOka,cAAcxS,GAASqD,QACzD,GAA6B,iBAAlBwc,GACPA,IAAkB,IAClB9nF,KAAKJ,SAAWkoF,EAAe,CAC/B,MAAMte,EAAiBxpE,KAAKugE,OAAOyY,MAAM,YAAa,kBACtD,GAAIh5E,KAAK4nE,gBAAkB4B,EAAgB,CACvC,MAAMrqE,EAAMa,KAAKkgF,UAAU,wDAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACJ,CACJ,CACA,IAAyC,IAArCa,KAAKugE,OAAOuZ,eAAe,MAAgB,CAC3C,QAA6BvhE,IAAzBvY,KAAKymF,gBAA+B,CACpC,MAAMtnF,EAAMa,KAAKkgF,UAAU,8CAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAqC,KAAjCa,KAAKymF,iBAAiB1oF,OAAe,CACrC,MAAMoB,EAAMa,KAAKkgF,UAAU,8CAA8ClgF,KAAKymF,gBAAgB1oF,gBAC9F,MAAM,IAAIY,MAAMQ,EACpB,CACJ,CACA,IAAyC,IAArCa,KAAKugE,OAAOuZ,eAAe,MAAgB,CAC3C,QAAmCvhE,IAA/BvY,KAAK2mF,sBAAqC,CAC1C,MAAMxnF,EAAMa,KAAKkgF,UAAU,oDAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAA2C,KAAvCa,KAAK2mF,uBAAuB5oF,OAAe,CAC3C,MAAMoB,EAAMa,KAAKkgF,UAAU,oDAAoDlgF,KAAK2mF,sBAAsB5oF,gBAC1G,MAAM,IAAIY,MAAMQ,EACpB,CACJ,CACJ,CAKA,0BAAAmoF,GACI,MAAM,MAAEv7B,EAAK,UAAEm6B,EAAS,WAAExf,EAAU,UAAEC,EAAS,OAAE/mE,GAAWI,KAE5D,GAAIA,KAAKugE,OAAO8b,uBAAyBlU,GAAmB4e,QAEpDnnF,EAAS,IACTI,KAAK2mE,UAAU5oE,OAASiC,KAAKugE,OAAOyY,MAAM,KAAM,oBAAqB,CAErE,MAAM75E,EAAMa,KAAKkgF,UAAU,gCAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CAEJ,GAAIa,KAAKugE,OAAO8b,uBAAyBlU,GAAmB4f,OAAQ,CAEhE,MAAMC,EAAYb,GAClB,GAAKnnF,KAAKioF,0BAOL,CACD,MAAMC,EAAeloF,KAAK2mE,UAAU5oE,OAASiqF,EAC7C,GAAIE,EAAe,IAAO,EAAG,CACzB,MAAM/oF,EAAMa,KAAKkgF,UAAU,sEAAsEgI,2BACjG,MAAM,IAAIvpF,MAAMQ,EACpB,CAEA,IAAKa,KAAKwwE,SAAS9rE,SAAU,CACzB,MAAMvF,EAAMa,KAAKkgF,UAAU,2EAA2ElgF,KAAKwwE,YAC3G,MAAM,IAAI7xE,MAAMQ,EACpB,CACJ,MAhBI,GAAIa,KAAK2mE,UAAU5oE,SAAWiqF,EAAW,CACrC,MAAM7oF,EAAMa,KAAKkgF,UAAU,qBAAqB8H,oDAA4DhoF,KAAK2mE,UAAU5oE,gBAC3H,MAAM,IAAIY,MAAMQ,EACpB,CAeJ,IAAK,GAAYa,KAAK20E,QAAS,IAAIn2E,WAAW,KAAM,CAChD,MAAMW,EAAMa,KAAKkgF,UAAU,+CAA+ClgF,KAAK20E,WAC/E,MAAM,IAAIh2E,MAAMQ,EACpB,CACJ,CAEA,GAAIa,KAAKugE,OAAO6b,kBAAoBlU,GAAcigB,aAAc,CAC5D,IAAIloE,GAAQ,EACRshE,EAAW,GAoBf,GAnBK,GAAY2E,EAAWl+B,MACxBu5B,GAAY,gBAAgB,GAAW2E,iBAAyB,GAAWl+B,OAC3E/nC,GAAQ,GAERrgB,IAAW,KAEP8mE,IAAe,KACf6a,GAAY,iBAAiB7a,kBAC7BzmD,GAAQ,GAER0mD,EAAU5oE,OAAS,KACnBwjF,GAAY,gBAAgB,GAAW5a,+CAAuDA,EAAU5oE,gBACxGkiB,GAAQ,GAEP,GAAY8rC,EAAO,GAAM,MAC1Bw1B,GAAY,YAAY,GAAWx1B,iBAAqB,GAAW,GAAM,OACzE9rC,GAAQ,IAGZA,EAAO,CACP,MAAM9gB,EAAMa,KAAKkgF,UAAU,sBAAsBqB,KACjD,MAAM,IAAI5iF,MAAMQ,EACpB,CACJ,CACJ,CAOA,gBAAAipF,CAAiBC,GACb,IAAIC,EAAiBD,EAAkB5hB,SAGvC,MAAM8hB,EAAsBvoF,KAAKugE,OAAOka,cAAcxS,GAASqD,QAC5B,iBAAxBid,GACPA,IAAwB,IACxBvoF,KAAKJ,SAAW2oF,IAEhBD,GADmBtoF,KAAKugE,OAAOyY,MAAM,YAAa,yBAGtD,MAAMvS,EAAWzmE,KAAKymE,SAChBziE,EAAIskF,EAAiBtoF,KAAKugE,OAAOyY,MAAM,YAAa,wBACpDwP,EAAcF,EAAiBtkF,EAC/BwpE,EAAc8a,EAAiBtkF,EACrC,GAAIyiE,GAAY+hB,EAAa,CACzB,MAAMrpF,EAAMa,KAAKkgF,UAAU,4CAA4CzZ,qBAA4B+hB,KACnG,MAAM,IAAI7pF,MAAMQ,EACpB,CACA,GAAIsnE,GAAY+G,EAAa,CACzB,MAAMruE,EAAMa,KAAKkgF,UAAU,4CAA4CzZ,qBAA4B+G,KACnG,MAAM,IAAI7uE,MAAMQ,EACpB,CACA,GAAIsnE,EAAWzmE,KAAKugE,OAAOyY,MAAM,YAAa,eAAgB,CAC1D,MAAM75E,EAAMa,KAAKkgF,UAAU,2DAA2DzZ,yBAAgCzmE,KAAKugE,OAAOyY,MAAM,YAAa,kBACrJ,MAAM,IAAIr6E,MAAMQ,EACpB,CACJ,CAIA,eAAAspF,GACI,IAAyC,IAArCzoF,KAAKugE,OAAOuZ,eAAe,MAAiB,CAC5C,MAAM36E,EAAMa,KAAKkgF,UAAU,qEAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,IAAIupF,EACJ,MAAMC,EAAa3oF,KAAKugE,OAAOyY,MAAM,YAAa,wBAC5C4P,EAAkB5oF,KAAKymE,SAAWkiB,EACxC,GAAIC,IAAoB5oF,KAAKumF,QACzBmC,EAAc1oF,KAAK4nE,mBAElB,GAAI5nE,KAAKumF,QAAUqC,EAAiB,CACrC,MAAMC,EAAe7oF,KAAKumF,QAAUqC,EAC9Btf,EAA8BtpE,KAAKugE,OAAOyY,MAAM,YAAa,+BAC7D8P,EAAmB9oF,KAAK4nE,cAAgBihB,EAAgBD,EAAkBtf,EAChFof,GAAeI,EAAkB,GAAWA,EAAkB,IAAY9oF,KAAK4nE,aACnF,KACK,CACD,MAAMihB,EAAeD,EAAkB5oF,KAAKumF,QACtCjd,EAA8BtpE,KAAKugE,OAAOyY,MAAM,YAAa,+BAC7D8P,EAAmB9oF,KAAK4nE,cAAgBihB,EAAgBD,EAAkBtf,EAChFof,EACI1oF,KAAK4nE,cAAgBkhB,EAAkB,GACjC9oF,KAAK4nE,cAAgBkhB,EACrB,EACd,CACA,OAAOJ,CACX,CAKA,eAAAK,GACI,QAA2BxwE,IAAvBvY,KAAK40E,cACL,MAAM,IAAIj2E,MAAM,kDAEpB,OAAOqB,KAAKgpF,iBAAiBhpF,KAAK40E,cACtC,CAKA,gBAAAoU,CAAiBpU,GACb,MD5XuB,EAACqU,EAAQC,EAAWC,KAC/C,IAAI9rF,EAAI,GACJ2B,EAAS,GACToqF,EAAkBH,EAASE,EAC/B,KAAOC,EAAkB,IACrBpqF,GAAUoqF,EACVA,EAAmBA,EAAkBF,GAAcC,EAAc9rF,GACjEA,IAEJ,OAAO2B,EAASmqF,CAAW,ECmXhBE,CAAgBrpF,KAAKugE,OAAOyY,MAAM,YAAa,mBAAoBpE,EAAe50E,KAAKugE,OAAOyY,MAAM,YAAa,8BAC5H,CAOA,WAAAsQ,CAAY/E,GAIR,OAHuBvkF,KAAKugE,OAAOyY,MAAM,YAAa,kBACjB72D,OAAOoiE,GACvBvkF,KAAK+oF,iBAE9B,CAIA,qBAAAQ,GAEI,MAAMC,GAAqBxpF,KAAK40E,eAAiB,KAAa50E,KAAK0mF,aAAe,IAC5Eja,EAAwBzsE,KAAKugE,OAAOyY,MAAM,YAAa,yBAC7D,OAAIwQ,GAAqB/c,EACd,GAGA+c,EAAoB/c,CAEnC,CAKA,oBAAAgd,GACI,OAAOzpF,KAAKgpF,iBAAiBhpF,KAAKupF,wBACtC,CAIA,GAAA57B,GACI,MAAM+7B,EAAW,CACb1pF,KAAKimF,WACLjmF,KAAKkmF,UACLlmF,KAAKwwE,SAAS3uD,MACd7hB,KAAKmmF,UACLnmF,KAAKomF,iBACLpmF,KAAKqmF,YACLrmF,KAAKsmF,UACL,GAAsBtmF,KAAK0mE,YAC3B,GAAsB1mE,KAAKJ,QAC3B,GAAsBI,KAAKymE,UAC3B,GAAsBzmE,KAAKumF,SAC3B,GAAsBvmF,KAAKgnE,WAAa,IACxChnE,KAAK2mE,UACL3mE,KAAK20E,QACL30E,KAAK+rD,OAqBT,OAnByC,IAArC/rD,KAAKugE,OAAOuZ,eAAe,OAC3B4P,EAAStrF,KAAK,GAAsB4B,KAAK4nE,iBAEJ,IAArC5nE,KAAKugE,OAAOuZ,eAAe,OAC3B4P,EAAStrF,KAAK4B,KAAKymF,iBAGnBzmF,KAAKugE,OAAOuZ,eAAe,OAKU,IAArC95E,KAAKugE,OAAOuZ,eAAe,QAC3B4P,EAAStrF,KAAK,GAAsB4B,KAAK0mF,cACzCgD,EAAStrF,KAAK,GAAsB4B,KAAK40E,kBAEJ,IAArC50E,KAAKugE,OAAOuZ,eAAe,OAC3B4P,EAAStrF,KAAK4B,KAAK2mF,uBAEhB+C,CACX,CAIA,IAAAx8D,GACI,OAAIhT,OAAOwnE,SAAS1hF,OACXA,KAAK25D,MAAMzsC,OACZltB,KAAK25D,MAAMzsC,KAAOltB,KAAK8hE,eAAe,GAAW9hE,KAAK2tD,SAEnD3tD,KAAK25D,MAAMzsC,MAEfltB,KAAK8hE,eAAe,GAAW9hE,KAAK2tD,OAC/C,CAIA,SAAAg8B,GACI,OAAO3pF,KAAKJ,SAAW,EAC3B,CACA,cAAAgqF,CAAetyE,GACX,GAAItX,KAAKugE,OAAO8b,uBAAyBlU,GAAmB4f,OAAQ,CAChE,MAAM5oF,EAAMa,KAAKkgF,UAAU,eAAe5oE,mDAC1C,MAAM,IAAI3Y,MAAMQ,EACpB,CACJ,CAMA,yBAAA6nF,CAA0BqB,GACtB,GAAIroF,KAAKugE,OAAO6b,kBAAoBlU,GAAc2hB,YAAa,CAC3D,MAAM1qF,EAAMa,KAAKkgF,UAAU,0DAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAIa,KAAKugE,OAAO8b,uBAAyBlU,GAAmB4e,OAAQ,CAChE,MAAM5nF,EAAMa,KAAKkgF,UAAU,uEAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,MAAM2qF,EAAU9pF,KAAKgnE,WACbA,UAAW+iB,EAAUrjB,WAAYsjB,GAAc3B,EACjD5W,EAAoBzxE,KAAKugE,OAAOyY,MAAM,MAAO,qBAC7Cj7D,EAASisE,EAAYhqF,KAAKugE,OAAOyY,MAAM,MAAO,0BACpD,IAEIiR,EAFAlrF,EAAMiB,KAAKJ,OAGf,IAAoD,IAAhDI,KAAKugE,OAAOsZ,YAAY5R,GAAS6B,WAAqB,CAEtD,MAAMogB,EAAc,GAAY7B,EAAkBnC,UAAWl+B,IAAuB,EAAI,EACxF,IAAIhkD,EAAIme,OAAO+nE,IAAgBJ,EAAUC,GAAY5nE,OAAO,GAC5D,MAAMgoE,EAAShoE,QAAQ,IAEnBgoE,EAASnmF,IACTA,EAAImmF,GAERF,EAAMD,EAAYjsE,EAAS/Z,CAC/B,CACA,IAAoD,IAAhDhE,KAAKugE,OAAOsZ,YAAY5R,GAAS6B,WAEjC/qE,GAAYiB,KAAKugE,OAAOyY,MAAM,MAAO,uBACjCj6E,EAAM,KACNA,EAAM,SAGT,IAAoD,IAAhDiB,KAAKugE,OAAOsZ,YAAY5R,GAASoN,WAAqB,CAE3D,IAAIrxE,EAAI,IAAY8lF,EAAUC,GAAY5nE,OAAO,IACjD,MAAMgoE,EAAShoE,QAAQ,IAEnBgoE,EAASnmF,IACTA,EAAImmF,GAERF,EAAMD,EAAYjsE,EAAS/Z,CAC/B,MAIQimF,EADAF,EAAW/pF,KAAKugE,OAAOyY,MAAM,MAAO,iBAAmB8Q,EACjD/rE,EAASisE,EAGTA,EAAYjsE,EAG1B,MAAM2vD,EAAM3uE,EAAMojB,OAAO,KAAU,GAOnC,OANIurD,GAAO,IACPuc,GAAY,IAAYvc,GAExBuc,EAAMxY,IACNwY,EAAMxY,GAEHwY,CACX,CAIA,aAAAG,GACIpqF,KAAK4pF,eAAe,iBACpB,MAAMj8B,EAAM3tD,KAAK2tD,MAEjB,OADAA,EAAI,IAAM3tD,KAAK2mE,UAAUhkD,SAAS,EAAG3iB,KAAK2mE,UAAU5oE,OF5mB3B,IE6mBlBiC,KAAK8hE,eAAe,GAAWnU,GAC1C,CAKA,uBAAAs6B,GACIjoF,KAAK4pF,eAAe,2BACpB,MAAMniB,EAAQtlD,OAAOniB,KAAKugE,OAAO+b,kBAAkB7U,OAGnD,OAAOznE,KAAKJ,OAAS6nE,IAAU,EACnC,CAKA,iBAAA4iB,GAEI,OADArqF,KAAK4pF,eAAe,qBACb5pF,KAAK2mE,UAAUhkD,SAAS,EFloBJ,GEmoB/B,CAKA,eAAA2nE,GAEI,OADAtqF,KAAK4pF,eAAe,mBACb5pF,KAAK2mE,UAAUhkD,UAAS,GACnC,CAMA,eAAA0kE,CAAgBvsC,GACZ96C,KAAK4pF,eAAe,mBACpB,MACM7mC,GADiB/iD,KAAKugE,OAAOC,cAAc3S,QAAUA,IAC1B7tD,KAAKoqF,gBAAiBtvC,GACjDyvC,EAAa,GAAYxnC,EAAUhiD,EAAGgiD,EAAUv0C,EAAGk5C,GAAc3E,EAAUh4B,EAAI,KAC/Ey/D,EAAuBxqF,KAAK2mE,UAAUhkD,SAAS,EAAG3iB,KAAK2mE,UAAU5oE,OFppB9C,IEspBzB,OADkB,GAAYysF,EAAsBD,EAExD,CASA,4BAAAE,GAEI,GADAzqF,KAAK4pF,eAAe,iCACf5pF,KAAKioF,0BAA2B,CACjC,MAAM9oF,EAAMa,KAAKkgF,UAAU,iEAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,MACML,EAAMkB,KAAK2mE,UAAU5oE,OFvqBF,GEwqBnB2sF,EAAc1qF,KAAK2mE,UAAUhkD,SF1qBR,GE0qBwB7jB,GAC7C6rF,EAAa,GAEnB,IAAK,IAAI9rF,EAAQ,EAAGA,GAAS6rF,EAAY3sF,OADpB,GAC2Cc,GAD3C,GAEjB8rF,EAAWvsF,KAAKssF,EAAY/nE,SAAS9jB,EAAOA,EAF3B,KAIrB,OAAO8rF,EAAWj+D,KAAKzS,GAAQ,IAAIsxC,GAAQtxC,IAC/C,CAOA,qBAAA2wE,CAAsBD,GAClB3qF,KAAK4pF,eAAe,yBACpB,MAAMiB,EAAgB7qF,KAAKinF,eAI3B,QAHoB0D,EAAW/zB,MAAMk0B,GAC1BA,EAAO5pE,OAAO2pE,IAG7B,CAIA,YAAA5D,GACIjnF,KAAK4pF,eAAe,gBACpB,MAAMmB,EAAY/qF,KAAKsqF,kBAEvB,GAAyB,IAArBS,EAAUhtF,QAAgB,GAAYgtF,EAAW,IAAIvsF,WAAW,KAChE,OAAO+sD,GAAQC,OAEnB,MAAMzqD,EAAIgqF,EAAUpoE,SAAS,EAAG,IAC1BnU,EAAIu8E,EAAUpoE,SAAS,GAAI,IAC3BoI,EAAI,GAAcggE,EAAUpoE,SAAS,GAAI,KAAO,GAChDyoC,EAAS2C,GAAU/tD,KAAKoqF,gBAAiBr/D,EAAGhqB,EAAGyN,GACrD,OAAO+8C,GAAQI,cAAcP,EACjC,CAIA,SAAAqQ,GACI,OAAO,GAAWz7D,KAAK2tD,MAC3B,CAIA,MAAA5oD,GACI,MAAMimF,EAAiBhrF,KAAKymF,gBACtB,CAAEA,gBAAiB,GAAWzmF,KAAKymF,kBACnC,CAAC,EACDwE,EAAW,CACbhF,WAAY,GAAWjmF,KAAKimF,YAC5BC,UAAW,GAAWlmF,KAAKkmF,WAC3B1V,SAAUxwE,KAAKwwE,SAASxuE,WACxBmkF,UAAW,GAAWnmF,KAAKmmF,WAC3BC,iBAAkB,GAAWpmF,KAAKomF,qBAC/B4E,EACH3E,YAAa,GAAWrmF,KAAKqmF,aAC7BC,UAAW,GAAWtmF,KAAKsmF,WAC3B5f,WAAY,GAAY1mE,KAAK0mE,YAC7B9mE,OAAQ,GAAYI,KAAKJ,QACzB6mE,SAAU,GAAYzmE,KAAKymE,UAC3B8f,QAAS,GAAYvmF,KAAKumF,SAC1Bvf,UAAW,GAAYhnE,KAAKgnE,WAC5BL,UAAW,GAAW3mE,KAAK2mE,WAC3BgO,QAAS,GAAW30E,KAAK20E,SACzB5oB,MAAO,GAAW/rD,KAAK+rD,QAY3B,OAVyC,IAArC/rD,KAAKugE,OAAOuZ,eAAe,QAC3BmR,EAASrjB,cAAgB,GAAY5nE,KAAK4nE,iBAEL,IAArC5nE,KAAKugE,OAAOuZ,eAAe,QAC3BmR,EAASvE,YAAc,GAAY1mF,KAAK0mF,aACxCuE,EAASrW,cAAgB,GAAY50E,KAAK40E,iBAEL,IAArC50E,KAAKugE,OAAOuZ,eAAe,QAC3BmR,EAAStE,sBAAwB,GAAW3mF,KAAK2mF,wBAE9CsE,CACX,CAKA,qBAAApE,GACI,IAAuE,IAAnE7mF,KAAKugE,OAAOga,wBAAwBtS,GAASqN,IAAKt1E,KAAKJ,QACvD,OAEJ,MAAMsrF,EAAqBlrF,KAAKugE,OAAOka,cAAcxS,GAASqN,KAC9D,GAA2B,OAAvB4V,GAA+BlrF,KAAKJ,OAASsrF,EAC7C,OAEJ,MAAMC,EAAgB,GAAW,gCAC3BC,EAA0BjpE,OAAO,GAEvC,GADcniB,KAAKJ,OAASsrF,GACfE,IAA4B,GAAYprF,KAAK2mE,UAAWwkB,GAAgB,CACjF,MAAMhsF,EAAMa,KAAKkgF,UAAU,4CAA4C35B,GAAYvmD,KAAK2mE,oBAAoB,GAAW3mE,KAAK2mE,eAC5H,MAAM,IAAIhoE,MAAMQ,EACpB,CACJ,CAIA,QAAAqiF,GACI,IAAIt0D,EAAO,GACX,IACIA,EAAO,GAAWltB,KAAKktB,OAC3B,CACA,MAAO1sB,GACH0sB,EAAO,OACX,CACA,IAAIipD,EAAK,GACT,IACIA,EAAKn2E,KAAKugE,OAAO0U,UACrB,CACA,MAAOz0E,GACH21E,EAAK,OACT,CACA,IAAIqL,EAAW,uBAAuBxhF,KAAKJ,eAAestB,KAE1D,OADAs0D,GAAY,MAAMrL,mBAAoBn2E,KAAK4nE,eAAiB,SACrD4Z,CACX,CAOA,SAAAtB,CAAU/gF,GACN,MAAO,GAAGA,MAAQa,KAAKwhF,aAC3B,ECtyBG,SAAS6J,GAAmBC,EAAa14D,GAC5C,MAAM,WAAEqzD,EAAU,WAAEsF,EAAU,MAAEC,EAAK,UAAErF,EAAS,iBAAEsF,EAAgB,aAAEC,EAAY,UAAEpF,EAAS,WAAE5f,EAAU,OAAE9mE,EAAM,SAAE6mE,EAAQ,QAAE8f,EAAO,UAAEvf,EAAS,UAAEL,EAAS,QAAEgO,EAAO,MAAE5oB,EAAK,cAAE6b,EAAa,gBAAE6e,EAAe,YAAEC,EAAW,cAAE9R,EAAa,sBAAE+R,GAA2B2E,EAuBjQ,OAtBoB1F,GAAY4B,eAAe,CAC3CvB,aACAC,UAAWqF,EACX/a,SAAUgb,EACVrF,YACAC,iBAAkBqF,EAClBpF,YAAaqF,EACbpF,YACA5f,WAAY,GAAYA,GACxB9mE,SACA6mE,WACA8f,UACAvf,YACAL,YACAgO,UACA5oB,QACA6b,gBACA6e,kBACAC,cACA9R,gBACA+R,yBACD/zD,EAEP,CC7BA,SAAS,GAAkB4yD,GACvB,MAAMC,EAAWvrE,OAAO0zB,OAAO,CAAC,EAAG43C,GAYnC,OAXAC,EAAShf,SAAW,GAAOgf,EAAShf,UAAYgf,EAASxU,IAAK,GAAW9uD,QACzEsjE,EAAS1pE,UAAyBxD,IAAlBktE,EAAS1pE,KAAqB0pE,EAAShtE,MAAQgtE,EAAS1pE,KAExE0pE,EAASrE,cAAiC7oE,IAAtBktE,EAASrE,SAAyBj/D,OAAOsjE,EAASrE,eAAY7oE,EAClFktE,EAASjrE,WAA2BjC,IAAnBktE,EAASjrE,MAAsB2H,OAAOsjE,EAASjrE,YAASjC,EAEzEktE,EAAShgD,GACW,OAAhBggD,EAAShgD,SAA+BltB,IAAhBktE,EAAShgD,GAC3B,GAAc,GAAQggD,EAAShgD,IAAK,IACpC,KACVggD,EAAS16D,EAAI,GAAO06D,EAAS16D,EAAG,GAAW5I,QACpCsjE,CACX,CASO,SAASkG,GAAaL,EAAaM,EAAS,GAAIh5D,GACnD,MAAMg1D,EAASyD,GAAmBC,EAAa14D,GACzCi5D,EAAe,GACfzvD,EAAO,CAAEmkC,OAAQqnB,EAAOrnB,QAC9B,IAAK,MAAMilB,KAAa8F,EAAYO,cAAgB,GAAI,CACpD,MAAMpG,EAAW,GAAkBD,GAC7B/W,EAAKoW,GAAmB1C,WAAWsD,EAAUrpD,GACnDyvD,EAAaztF,KAAKqwE,EACtB,CACA,MAAMqd,EAAeF,EAAOl/D,KAAKq/D,GAAOV,GAAmBU,EAAIn5D,KAC/D,OAAOo5D,GAAMC,cAAc,CAAErE,SAAQiE,eAAcC,eAAcI,YAAaZ,EAAYY,aAAet5D,EAC7G,CCzBO,MAAMo5D,GAKT,WAAAtsF,CAAYkoF,EAAQiE,EAAe,GAAIC,EAAe,GAAII,EAAa9vD,EAAO,CAAC,EAAG+vD,GA6B9E,GA5BAnsF,KAAK6rF,aAAe,GACpB7rF,KAAK8rF,aAAe,GACpB9rF,KAAK25D,MAAQ,CAAC,EACd35D,KAAK4nF,OAASA,GAAUhC,GAAY4B,eAAe,CAAC,EAAGprD,GACvDp8B,KAAKugE,OAASvgE,KAAK4nF,OAAOrnB,OAC1BvgE,KAAK8hE,eAAiB9hE,KAAKugE,OAAOC,aAAahQ,WAAa,GAC5DxwD,KAAK6rF,aAAeA,EACpB7rF,KAAKksF,YAAcA,IAAgBlsF,KAAKugE,OAAOuZ,eAAe,MAAQ,QAAKvhE,GAC3EvY,KAAKmsF,iBAAmBA,EAGpBnsF,KAAKugE,OAAOuZ,eAAe,YAAmCvhE,IAA1BvY,KAAKmsF,mBACzCnsF,KAAKmsF,iBAAmB,CACpBC,UAAW,GACXC,YAAa,CACTC,kBAAmB,GACnBj6D,EAAG,KACHk6D,sBAAuB,KACvBC,SAAU,CACNC,GAAI,GACJC,GAAI,GACJC,gBAAiB,MAErBC,WAAY,MAIxB5sF,KAAK8rF,aAAeA,EAChBA,EAAa/tF,OAAS,EAAG,CAEzB,GADAiC,KAAK6sF,iBACD7sF,KAAKugE,OAAO6b,kBAAoBlU,GAAc4kB,iBAAkB,CAChE,MAAM3tF,EAAMa,KAAKkgF,UAAU,0EAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAIa,KAAKugE,OAAO6b,kBAAoBlU,GAAcigB,aAAc,CAC5D,MAAMhpF,EAAMa,KAAKkgF,UAAU,0EAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACJ,CACA,IAAKa,KAAKugE,OAAOuZ,eAAe,YAAyBvhE,IAAhB2zE,EACrC,MAAM,IAAIvtF,MAAM,6DAEpB,IAAKqB,KAAKugE,OAAOuZ,eAAe,OAA5B,MACAqS,EAEA,MAAM,IAAIxtF,MAAM,kEAELy9B,GAAMua,QAAU,IAE3Bz8B,OAAOy8B,OAAO32C,KAEtB,CAMA,mCAAa+sF,CAAuBC,EAAKC,GACrC,MAAMlvB,EAAOkvB,GAAa,IAAI,GAC9B,IAAK,MAAO5vF,EAAG6vF,KAAOF,EAAI93C,gBAChB6oB,EAAK3O,IAAI,GAAW/xD,GAAI,GAAW6vF,EAAGv/B,QAEhD,OAAOoQ,EAAKzhE,MAChB,CAMA,oCAAa6wF,CAAwBC,EAAKH,GACtC,MAAMlvB,EAAOkvB,GAAa,IAAI,GAC9B,IAAK,MAAO5vF,EAAGoxE,KAAO2e,EAAIl4C,gBAChB6oB,EAAK3O,IAAI,GAAW/xD,GAAIoxE,EAAGhT,aAErC,OAAOsC,EAAKzhE,MAChB,CAOA,oBAAO2vF,CAAcoB,EAAY,CAAC,EAAGjxD,GACjC,MAAQwrD,OAAQ/B,EAAYgG,aAAcyB,EAASxB,aAAcyB,EAASrB,YAAasB,EAAiBrB,iBAAkBsB,GAA0BJ,EAC9IzF,EAAShC,GAAY4B,eAAe3B,EAAYzpD,GAEhDyvD,EAAe,GACrB,IAAK,MAAM1N,KAAUmP,GAAW,GAAI,CAChC,MAAM7e,EAAKoW,GAAmB1C,WAAWhE,EAAQ,IAC1C/hD,EAEHmkC,OAAQqnB,EAAOrnB,SAEnBsrB,EAAaztF,KAAKqwE,EACtB,CAEA,MAAMqd,EAAe,GACf4B,EAAY,IACXtxD,EAEHmkC,OAAQqnB,EAAOrnB,OAEfumB,8BAA0BvuE,QAGJA,IAAtB6jB,GAAMk7C,cACNoW,EAAUpW,aAAc,GAE5B,IAAK,MAAMqW,KAAUJ,GAAW,GAAI,CAChC,MAAMxB,EAAKnG,GAAY4B,eAAemG,EAAQD,GAC9C5B,EAAa1tF,KAAK2tF,EACtB,CACA,MAAMG,EAAcsB,GAAiB9gE,IAAIqgC,GAAWE,oBAIpD,OAAO,IAAI++B,GAAMpE,EAAQiE,EAAcC,EAAcI,EAAa9vD,EADzCqxD,EAE7B,CAOA,6BAAOG,CAAuBvL,EAAYjmD,GACtC,MAAM8R,EAAS,GAAW1vC,WAAW+b,KAAK8nE,IAC1C,IAAK5jF,MAAMgD,QAAQysC,GACf,MAAM,IAAIvvC,MAAM,iDAEpB,OAAOqtF,GAAMz+B,gBAAgBrf,EAAQ9R,EACzC,CAOA,sBAAOmxB,CAAgBrf,EAAQ9R,GAC3B,GAAI8R,EAAOnwC,OAAS,EAChB,MAAM,IAAIY,MAAM,8BAA8BuvC,EAAOnwC,kDAIzD,MAAO8nF,EAAYyH,EAASC,EAASM,EAAiBC,GAAyB5/C,EACzE05C,EAAShC,GAAYr4B,gBAAgBs4B,EAAYzpD,GACvD,GAAIwrD,EAAOrnB,OAAOuZ,eAAe,aACRvhE,IAApBs1E,IAAkCpvF,MAAMgD,QAAQosF,IACjD,MAAM,IAAIlvF,MAAM,iGAGpB,MAAMktF,EAAe,GACrB,IAAK,MAAM1N,KAAUmP,GAAW,GAC5BzB,EAAaztF,KAAKymF,GAAmBM,kBAAkBhH,EAAQ,IACxD/hD,EAEHmkC,OAAQqnB,EAAOrnB,UAIvB,MAAMurB,EAAe,GACf4B,EAAY,IACXtxD,EAEHmkC,OAAQqnB,EAAOrnB,OAEfumB,8BAA0BvuE,QAGJA,IAAtB6jB,GAAMk7C,cACNoW,EAAUpW,aAAc,GAE5B,IAAK,MAAMyW,KAAmBR,GAAW,GACrCzB,EAAa1tF,KAAKwnF,GAAYr4B,gBAAgBwgC,EAAiBL,IAEnE,MAAMxB,EAAc2B,GACdnhE,KAAI,EAAE/rB,EAAOqsD,EAAgBthB,EAASI,MAAY,CACpDnrC,QACAqsD,iBACAthB,UACAI,cAEEpf,IAAIqgC,GAAWE,oBAGrB,IAAIk/B,EASJ,OAPIA,EADAvE,EAAOrnB,OAAOuZ,eAAe,YAAmCvhE,IAA1Bu1E,EACnB9iE,KAAK+H,MAAMwzB,GAAY,GAAWunC,KAKlC,KAEhB,IAAI9B,GAAMpE,EAAQiE,EAAcC,EAAcI,EAAa9vD,EAAM+vD,EAC5E,CAQA,cAAO5G,CAAQ8H,EAAWzB,EAAQxvD,GAC9B,OAAOuvD,GAAa0B,EAAWzB,EAAQxvD,EAC3C,CAOA,iCAAa4xD,CAAqBxiD,EAASpP,GACvC,MAAQ+8C,YAAav5E,EAAQ8rF,aAAcrF,EAAakB,WAAY5S,EAASsZ,aAAczd,EAAQ,aAAEqb,EAAcK,YAAasB,EAAe,iBAAErB,GAAsB3gD,EACjK4hD,EAAM,GACZ,IAAK,MAAOzsF,EAAOutF,KAAiBrC,EAAa32C,UAC7C,IACI,MAAMu5B,EAAKoW,GAAmBK,mBAAmB,GAAWgJ,GAAe,CACvE3tB,OAAQnkC,GAAMmkC,SAElB6sB,EAAIhvF,KAAKqwE,EACb,CACA,MAAOxuD,GAEH,KADwB,uBAAuBtf,MAAUsf,GAE7D,CAEJ,MAAMmmE,QAAyB4F,GAAMmB,wBAAwBC,EAAK,IAAI,GAAK,CAAE7sB,OAAQnkC,GAAMmkC,UACrF2rB,EAAcsB,GAAiB9gE,KAAKyhE,GAAUphC,GAAWE,mBAAmBkhC,KAC5E1H,EAAkByF,QACZF,GAAMe,uBAAuBb,EAAa,IAAI,GAAK,CAAE3rB,OAAQnkC,GAAMmkC,eACzEhoD,EACAqvE,EAAS,IACRp8C,EACH5rC,SACAymF,cACAD,mBACAK,kBACA9R,UACAnE,YAGE3J,EAAQmlB,GAAMC,cAAc,CAAErE,SAAQiE,aAAcuB,EAAKlB,cAAaC,oBAAoB/vD,GAChG,GAAIyqC,EAAMtG,OAAOuZ,eAAe,OAC5B,MAACqS,EACD,MAAMxtF,MAAM,oEAGhB,IAAK,GAAYkoE,EAAM35C,OAAQ,GAAWse,EAAQ4iD,YAAa,CAC3D,MAAMC,EAAkB,gCAAgC7iD,EAAQ4iD,wBAAwB,GAAWvnB,EAAM35C,UACzG,MAAMvuB,MAAM0vF,EAChB,CACA,OAAOxnB,CACX,CAOA,kCAAaynB,CAAsB9iD,EAASpP,GACxC,MAAMmyD,EClRP,SAA2C/iD,GAC9C,MAAM+iD,EAAmB,CACrBtI,WAAYz6C,EAAQgjD,YACpBP,aAAcziD,EAAQijD,cACtBtI,UAAW36C,EAAQkjD,WACnBhD,aAAclgD,EAAQmjD,cACtBrI,UAAW96C,EAAQojD,WACnBrH,WAAY/7C,EAAQqjD,YACpB1V,YAAa,GAAYh3D,OAAOqpB,EAAQsjD,eACxCroB,SAAU,GAAYtkD,OAAOqpB,EAAQujD,YACrCxI,QAAS,GAAYpkE,OAAOqpB,EAAQwjD,WACpChoB,UAAW,GAAY7kD,OAAOqpB,EAAQw7B,YACtCL,UAAWn7B,EAAQyjD,WACnBrnB,cAAe,GAAYzlD,OAAOqpB,EAAQ0jD,mBAC1Cd,UAAW5iD,EAAQ2jD,WACnBtD,aAAcrgD,EAAQqgD,cAwB1B,YAtB4BtzE,IAAxBizB,EAAQ0gD,aAAqD,OAAxB1gD,EAAQ0gD,cAC7CqC,EAAiBrC,YAAc1gD,EAAQ0gD,YAAYx/D,KAAK0iE,IAAO,CAC3DzuF,MAAO,GAAYwhB,OAAOitE,EAAGzuF,QAC7BqsD,eAAgB,GAAY7qC,OAAOitE,EAAGC,kBACtC3jD,QAAS0jD,EAAG1jD,QACZI,OAAQ,GAAY3pB,OAAOitE,EAAGtjD,mBAGRvzB,IAA1BizB,EAAQ8jD,eAAyD,OAA1B9jD,EAAQ8jD,gBAC/Cf,EAAiB7H,YAAc,GAAYvkE,OAAOqpB,EAAQ8jD,sBAE9B/2E,IAA5BizB,EAAQ+jD,iBAA6D,OAA5B/jD,EAAQ+jD,kBACjDhB,EAAiB3Z,cAAgB,GAAYzyD,OAAOqpB,EAAQ+jD,wBAEvBh3E,IAArCizB,EAAQgkD,0BAA+E,OAArChkD,EAAQgkD,2BAC1DjB,EAAiB5H,sBAAwBn7C,EAAQgkD,+BAEnBj3E,IAA9BizB,EAAQikD,mBAAiE,OAA9BjkD,EAAQikD,oBAGnDlB,EAAiBpC,iBAAmB3gD,EAAQikD,mBAEzClB,CACX,CD0OiCmB,CAAkClkD,GAC3D,OAAOwgD,GAAMgC,qBAAqBO,EAAkBnyD,EACxD,CAIA,GAAAuxB,GACI,MAAMgiC,EAAa,CACf3vF,KAAK4nF,OAAOj6B,MACZ3tD,KAAK6rF,aAAan/D,KAAK+hD,GAAOA,EAAG0Q,SAAS3C,GAAWoT,yBAA2BnhB,EAAGhT,YAAcgT,EAAG9gB,QACpG3tD,KAAK8rF,aAAap/D,KAAKq/D,GAAOA,EAAGp+B,SAE/BkiC,EAAiB7vF,KAAKksF,aAAax/D,KAAKwgE,GAAOA,EAAGv/B,QAIxD,GAHIkiC,GACAF,EAAWvxF,KAAKyxF,QAEUt3E,IAA1BvY,KAAKmsF,kBAA4D,OAA1BnsF,KAAKmsF,iBAA2B,CACvE,MAAM2B,EAAwB,GAAW9iE,KAAKC,UAAUjrB,KAAKmsF,mBAC7DwD,EAAWvxF,KAAK0vF,EACpB,CACA,OAAO6B,CACX,CAIA,IAAAziE,GACI,OAAOltB,KAAK4nF,OAAO16D,MACvB,CAIA,SAAAy8D,GACI,OAAO3pF,KAAK4nF,OAAO+B,WACvB,CAIA,SAAAluB,GACI,OAAO,GAAWz7D,KAAK2tD,MAC3B,CAIA,eAAMmiC,GACF,OAAO9D,GAAMmB,wBAAwBntF,KAAK6rF,aAAc,IAAI,GAAK,CAAEtrB,OAAQvgE,KAAKugE,SACpF,CAMA,6BAAMwvB,GACF,IAAIpoD,EACJ,OAAiC,IAA7B3nC,KAAK6rF,aAAa9tF,QAClB4pC,EAAS,GAAY3nC,KAAK4nF,OAAOxB,iBAAkB,IAC5Cz+C,SAEmBpvB,IAA1BvY,KAAK25D,MAAMq2B,aACXhwF,KAAK25D,MAAMq2B,iBAAmBhwF,KAAK8vF,aAEvCnoD,EAAS,GAAY3nC,KAAK25D,MAAMq2B,WAAYhwF,KAAK4nF,OAAOxB,kBACjDz+C,EACX,CAKA,+BAAAsoD,GACI,MAAMppE,EAAS,GACf,IAAI6/D,EAAc,GAClB,MAAMwJ,EAAelwF,KAAKugE,OAAOyY,MAAM,YAAa,sBAC9CxM,EAAiBxsE,KAAKugE,OAAOyY,MAAM,YAAa,kBAEtD,IAAK,IAAK37E,EAAGoxE,KAAOzuE,KAAK6rF,aAAa32C,UAAW,CAC7C,MAAMi7C,EAAO1hB,EAAG4Q,uBACyB,IAArCr/E,KAAKugE,OAAOuZ,eAAe,QACvBrL,EAAG0Q,SAAS3C,GAAW4T,kBAEnB3hB,EAAG0S,aAAenhF,KAAK4nF,OAAOhgB,eAC9BuoB,EAAK/xF,KAAK,2CAKVqwE,EAAG2S,SAAWphF,KAAK4nF,OAAOhgB,eAC1BuoB,EAAK/xF,KAAK,iDAImB,IAArC4B,KAAKugE,OAAOuZ,eAAe,OACvBrL,aAAc,KACdiY,GAAevkE,OAAOssD,EAAG8V,YAAc/X,EACnCka,EAAcwJ,GACdC,EAAK/xF,KAAK,+BAA+BsoF,6CAAuDwJ,MAIxGC,EAAKpyF,OAAS,GACd8oB,EAAOzoB,KAAK,gBAAgBf,MAAM8yF,EAAK5xF,KAAK,QAEpD,CAMA,OALyC,IAArCyB,KAAKugE,OAAOuZ,eAAe,OACvB4M,IAAgB1mF,KAAK4nF,OAAOlB,aAC5B7/D,EAAOzoB,KAAK,gCAAgC4B,KAAK4nF,OAAOlB,sBAAsBA,KAG/E7/D,CACX,CAKA,oBAAAwpE,GAEI,OAAyB,IADVrwF,KAAKiwF,kCACNlyF,MAClB,CAWA,kBAAMuyF,CAAaC,GAAa,EAAOC,GAAY,GAC/C,GAAIA,EAAW,CACX,MAAMC,EAAWzwF,KAAKiwF,kCACtB,GAAIQ,EAAS1yF,OAAS,EAAG,CACrB,MAAMoB,EAAMa,KAAKkgF,UAAU,yBAAyBuQ,EAASlyF,KAAK,QAClE,MAAM,IAAII,MAAMQ,EACpB,CACJ,CACA,IAAIoxF,EAAJ,CAGA,GAAIC,EACA,IAAK,MAAO7vF,EAAO8tE,KAAOzuE,KAAK6rF,aAAa32C,UACxC,IAAKu5B,EAAG6Q,WAAY,CAChB,MAAMngF,EAAMa,KAAKkgF,UAAU,8CAA8Cv/E,iBACzE,MAAM,IAAIhC,MAAMQ,EACpB,CAGR,UAAYa,KAAK+vF,0BAA4B,CACzC,MAAM5wF,EAAMa,KAAKkgF,UAAU,4BAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,IAAKa,KAAK0wF,mBAAoB,CAC1B,MAAMvxF,EAAMa,KAAKkgF,UAAU,sBAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACA,GAAIa,KAAKugE,OAAOuZ,eAAe,cAAiB95E,KAAK2wF,yBAA2B,CAC5E,MAAMxxF,EAAMa,KAAKkgF,UAAU,4BAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CAGA,GAAIa,KAAKugE,OAAOuZ,eAAe,MAAO,CAClC,QAA8BvhE,IAA1BvY,KAAKmsF,iBACL,MAAM,IAAIxtF,MAAM,2CAEpB,GAA8B,OAA1BqB,KAAKmsF,iBACL,MAAM,IAAIxtF,MAAM,oEAExB,CA9BA,CA+BJ,CAOA,wBAAAiyF,CAAyBC,GACrB,GAAI7wF,KAAKugE,OAAOuZ,eAAe,MAAO,CAClC,MAAMoW,EAAelwF,KAAKugE,OAAOyY,MAAM,YAAa,sBAC9CxM,EAAiBxsE,KAAKugE,OAAOyY,MAAM,YAAa,kBACtD,IAAI0N,EAAc,GAClB,MAAMoK,EAAwBD,EAAatH,wBAC3C,GAAIvpF,KAAK4nF,OAAOhT,gBAAkBkc,EAC9B,MAAM,IAAInyF,MAAM,sCAAsCqB,KAAK4nF,OAAOhT,uBAAuBkc,KAE7F,IAAIC,EACJ,IAAK,MAAMtiB,KAAMzuE,KAAK6rF,aAClB,GAAIpd,aAAc,GAAwB,CAEtC,GADAsiB,EAAeA,GAAgB/wF,KAAK4nF,OAAOmB,kBACvCta,EAAGiU,iBAAmBqO,EACtB,MAAM,IAAIpyF,MAAM,qCAAqC8vE,EAAGiU,gDAAgDqO,OAAkB/wF,KAAKwhF,cAGnI,GADAkF,GAAevkE,OAAOssD,EAAGkU,oBAAoB5kF,QAAUyuE,EACnDka,EAAcwJ,EACd,MAAM,IAAIvxF,MAAM,+BAA+B+nF,6CAAuDwJ,IAE9G,CAEJ,GAAIlwF,KAAK4nF,OAAOlB,cAAgBA,EAC5B,MAAM,IAAI/nF,MAAM,oCAAoCqB,KAAK4nF,OAAOlB,qBAAqBA,IAE7F,CACJ,CAKA,gBAAAgK,GACI,MAAM9E,EAAS5rF,KAAK8rF,aAAap/D,KAAKq/D,GAAOA,EAAGp+B,QAC1CA,EAAM,GAAWi+B,GACvB,OAAO,GAAY5rF,KAAK8hE,eAAenU,GAAM3tD,KAAK4nF,OAAO1B,UAC7D,CAKA,4BAAMyK,GACF,IAAK3wF,KAAKugE,OAAOuZ,eAAe,MAC5B,MAAM,IAAIn7E,MAAM,6BAGpB,OAAO,SADuBqtF,GAAMe,uBAAuB/sF,KAAKksF,YAAa,IAAI,GAAK,CAAE3rB,OAAQvgE,KAAKugE,UACjEvgE,KAAK4nF,OAAOnB,gBACpD,CAUA,cAAAoG,GACI,GAAI7sF,KAAK2pF,YACL,OAGJ,GAAI3pF,KAAK8rF,aAAa/tF,OAAS,EAAG,CAC9B,MAAMoB,EAAMa,KAAKkgF,UAAU,0BAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CAEA,MAAM6xF,EAAchxF,KAAK8rF,aAAap/D,KAAKk7D,GAAW,GAAWA,EAAO16D,UACxE,GAAM,IAAI6kC,IAAIi/B,GAAa1tF,OAAS0tF,EAAYjzF,OAAS,CACrD,MAAMoB,EAAMa,KAAKkgF,UAAU,oBAC3B,MAAM,IAAIvhF,MAAMQ,EACpB,CACJ,CAMA,yBAAA6nF,CAA0BiK,GACtB,OAAOjxF,KAAK4nF,OAAOZ,0BAA0BiK,EAAYrJ,OAC7D,CAOA,gBAAAQ,CAAiB6I,GACb,OAAOjxF,KAAK4nF,OAAOQ,iBAAiB6I,EAAYrJ,OACpD,CAIA,MAAA7iF,GACI,MAAMmsF,EAAkBlxF,KAAKksF,YACvB,CACEA,YAAalsF,KAAKksF,YAAYx/D,KAAKwgE,GAAOA,EAAGnoF,YAE/C,CAAC,EACP,MAAO,CACH6iF,OAAQ5nF,KAAK4nF,OAAO7iF,SACpB8mF,aAAc7rF,KAAK6rF,aAAan/D,KAAK+hD,GAAOA,EAAG1pE,WAC/C+mF,aAAc9rF,KAAK8rF,aAAap/D,KAAKq/D,GAAOA,EAAGhnF,cAC5CmsF,EAEX,CAIA,QAAA1P,GACI,IAAIt0D,EAAO,GACX,IACIA,EAAO,GAAWltB,KAAKktB,OAC3B,CACA,MAAO1sB,GACH0sB,EAAO,OACX,CACA,IAAIipD,EAAK,GACT,IACIA,EAAKn2E,KAAKugE,OAAO0U,UACrB,CACA,MAAOz0E,GACH21E,EAAK,OACT,CACA,IAAIqL,EAAW,gBAAgBxhF,KAAK4nF,OAAOhoF,eAAestB,KAG1D,OAFAs0D,GAAY,MAAMrL,mBAAoBn2E,KAAK4nF,OAAOhgB,eAAiB,UACnE4Z,GAAY,OAAOxhF,KAAK6rF,aAAa9tF,iBAAiBiC,KAAK8rF,aAAa/tF,SACjEyjF,CACX,CAOA,SAAAtB,CAAU/gF,GACN,MAAO,GAAGA,MAAQa,KAAKwhF,aAC3B,EAUJwK,GAAM5G,oBAAsBx1B,MAAOS,EAAU8gC,EAAU/0D,KACnD,IAAIixD,EACJ,MAAM+D,EAAchhC,GAAYC,GAChC,GAAwB,iBAAb8gC,GAA6C,KAApBA,EAASpzF,OACzCsvF,QAAkB19B,GAAkByhC,EAAa,CAC7Cv8D,OAAQ,qBACRyW,OAAQ,CAAC6lD,GAAU,UAGtB,GAAwB,iBAAbA,EACZ9D,QAAkB19B,GAAkByhC,EAAa,CAC7Cv8D,OAAQ,uBACRyW,OAAQ,CAAC,GAAY6lD,IAAW,SAGnC,KAAI,GAAcA,IACN,WAAbA,GACa,aAAbA,GACa,YAAbA,GACa,cAAbA,GACa,SAAbA,EAOA,MAAM,IAAIxyF,MAAM,oGAAoGwyF,KANpH9D,QAAkB19B,GAAkByhC,EAAa,CAC7Cv8D,OAAQ,uBACRyW,OAAQ,CAAC6lD,GAAU,IAK3B,CACA,GAAkB,OAAd9D,EACA,MAAM,IAAI1uF,MAAM,wCAEpB,MAAMmtF,EAAe,GACrB,GAAIuB,EAAUzB,OAAO7tF,OAAS,EAC1B,IAAK,IAAI0P,EAAI,EAAGA,EAAI4/E,EAAUzB,OAAO7tF,OAAQ0P,IAAK,CAC9C,MAAMo4E,QAAmBl2B,GAAkByhC,EAAa,CACpDv8D,OAAQ,kCACRyW,OAAQ,CAAC+hD,EAAUngE,KAAMs6B,GAAS/5C,MAEtCq+E,EAAa1tF,KAAKynF,EACtB,CAEJ,OAAO8F,GAAa0B,EAAWvB,EAAc1vD,EAAK,ME1nB1Ci1D,gkCCSZ,2BAwNA,QAtNiB,EAAAC,mBAAb,SACIC,EACApY,EACAjuC,EACAC,gHAEMqmD,EAAkBpwF,KAAKiB,KAAKjB,KAAKqwF,KAAKtmD,EAAWD,EAAa,IAG9DwmD,EAA0B,GAG1BC,EAAcxY,GADdp7D,EAASmtB,GAEX0mD,EAAY,EACZC,EAAa1mD,EAAWptB,aAEnBomB,uFACC2tD,EAAU,WAAMN,EAAkBrtD,GAKpCwtD,GAFEI,EAAYH,EAAYE,EAAU,EAAI,IAIlCE,EAAeD,EAAY,EAEP,GAAM,EAAKE,cAAcV,EAAMxzE,EAAS6zE,EAAW7zE,EAASg0E,KAJtF,oBAIMG,EAAoB,SAC1BR,EAActzF,KAAK8zF,GACnBN,EAAYI,sBAMNG,EAAgB/wF,KAAKC,IAAIwwF,EAAYE,GAGrCK,EAAiBZ,GAAmBrtD,EAAQ,GAC9C0tD,GAAcE,GAERG,EAAoB,EAAKG,kBAAkBD,EAAgBb,GACjEG,EAActzF,KAAK8zF,UAHnB,aAgB2B,OAVrBI,EAAgBlxF,KAAKiB,KAAKjB,KAAKqwF,KAAKI,EAAaE,IAGjDQ,EAAmBH,EAAiBE,EAOf,GAAM,EAAKL,cAAcV,EAAMxzE,EAASg0E,EAAY,EAAGh0E,EAAS8zE,WAArFW,EAAqB,SAGrB,EAAY,EAAKH,kBAAkBC,EAAef,IAGlD7gC,EAASjyD,MAAM8b,KAAK,CAAExc,OAAQ,WAAKw0F,KAAoB,WAAM,OAAA9gC,GAAWzsD,SAAS,EAApB,KAC5D,GAAKwtF,EACNN,EAAoB,IAAIO,GAAW/hC,GAAQO,UACjDygC,EAActzF,KAAK8zF,oBAEvBL,EAAaM,yCAjDZhuD,EAAQ,0BAAGA,EAAQqtD,OAAnBrtD,IAAkC,8CAAEA,GAAS,eAqDtD,MAAO,CAAP,EAAOutD,EAAcz+C,gTAGlB,EAAAy/C,gBAAP,SAAuBC,EAA2BznD,EAAoBC,EAAkBguC,GACpF,OAAOyZ,EAAUtB,mBACbqB,EAAWxZ,EAAajuC,EAAYC,GACtC1I,MAAK,SAAA2uB,GACH,OAAOK,GAAWE,YACdtxD,OAAOqgB,OACH0wC,EAAM1kC,KAAI,SAAA5d,GACN,OAAO2iD,GAAWzsD,SAAS8J,EAC/B,KAGZ,GACJ,EAEO,EAAAmjF,cAAP,SAAqBY,EAAwB3nD,EAAoBC,GAC7D,OAAO0nD,EAAO5nD,YAAYC,EAAYC,GAAU1I,MAAK,SAAA0+B,GACjD,OAAO1P,GAAWzsD,SAAS,YAAKm8D,GACpC,IAAGjR,OAAM,SAAAhgD,GACL,OAAO,IACX,GACJ,EAEO,EAAAmiF,kBAAP,SAAyB9iF,EAAWsjF,GAChC,GAAU,IAANtjF,EAAS,MAAO,qEACpB,IAAMujF,EAAU9yF,KAAKqyF,kBAAkB9iF,EAAI,EAAGsjF,GAC9C,OAAO,GAAOriC,UACViB,GAAWzsD,SAAS6tF,EAAOE,iBAAiB,CAACD,EAASA,GAAU,CAAC,UAAW,aAEpF,EAEO,EAAAE,gBAAP,SAAuBC,EAA8BpsB,EAA8B0qB,EAAsB2B,EAA+BC,QAA/B,IAAAD,IAAAA,EAAA,KACrG,IAEIE,EAFEC,EAAkB5hC,GAAWE,YAAYihC,EAAUU,mBAAmBzsB,IACtE0sB,EAAe,IAAI,GAEzB,GAAKJ,EAsBDC,EAAiB5kD,GAAe2kD,OAtBlB,CACd,IAAM,EAAkB,GACxBtsB,EAAMglB,aAAa7+D,SAAQ,SAAAyhD,GACnBA,EAAG+kB,kBAAoBH,GAI3B,EAAgBj1F,KACZmzF,EAAKkC,sBAAsBhlB,EAAG+kB,iBAEtC,IACAJ,EAAiBnlD,EACb,GACA,SAAA/uC,GACI,OAAOA,CACX,GACA,CACImvC,YAAa6kD,IAQzB,OAAOE,EAAe3wD,MAAK,SAAAixD,GACvB,OAAOzlE,QAAQ0e,IACX+mD,EAAShnE,KAAI,SAAAinE,GACT,IAAMC,EAAO,aAAWD,EAAeE,kBACjCC,EAAalB,EAAUmB,gBAAgBJ,GAC7C,OAAOJ,EAAankC,IAAIwkC,EAAME,EAClC,IAER,IAAGrxD,MAAK,SAAAvyB,GACJ,OAAOqjF,EAAa9xB,SAAS,aAAWwxB,EAAQY,mBAAmB,EACvE,IAAGpxD,MAAK,SAAAkF,GACJ,GAAIA,EAAO1pB,UAAUlgB,OAAS,EAC1B,MAAM,IAAIY,MAAM,iCAUpB,MAPY,CACRyvF,UAAW38B,GAAWzsD,SAASiuF,EAAQ7E,WACvC4F,YAAarsD,EAAOtgB,MAAMqF,KAAI,SAAAle,GAAK,OAAAA,EAAEm/C,KAAF,IACnCrxD,KAAMs2F,EAAUqB,aAAaptB,GAAOwf,YACpCuN,KAAM,aAAWX,EAAQY,kBACzBr5E,MAAOo4E,EAAUsB,eAAejB,GAAWtrD,EAAO2pB,KAAK92C,MAAQ,aAAWmtB,EAAO2pB,KAAK92C,MAAMxY,YAGpG,GACJ,EAEO,EAAAkyF,eAAP,SAAsBjB,GAClB,IAAMkB,EAAUC,EAAUvoD,MAAMonD,EAAQn3E,MACxC,OAAyB,MAAlBm3E,EAAQhjC,QAA8B,QAAZkkC,GAAiC,OAAZA,CAC1D,EASO,EAAAb,mBAAP,SAA0BzsB,GACtB,OAAO,GAAOrW,UACVnwD,OAAOqgB,OAAO,CAEVrgB,OAAOka,KAAK,qBAAsB,SAClC,GAAck3C,GAAWzsD,SAAS6hE,EAAMjnE,QAAS,GACjD6xD,GAAWzsD,SAAS6hE,EAAM35C,QAGtC,EAEO,EAAA6mE,gBAAP,SAAuBd,GACnB,IAAIoB,EAAc,aAAW,CACzB5iC,GAAWzsD,cACYuT,IAAnB06E,EAAQhjC,QAA0C,MAAlBgjC,EAAQhjC,OAAkBgjC,EAAQhjC,OAAS,MAAQ,KAAQgjC,EAAQ32F,MAEvGm1D,GAAWzsD,SAASiuF,EAAQqB,mBAC5B7iC,GAAWzsD,SAASiuF,EAAQ3M,WAE5B2M,EAAQsB,KAAK7nE,KAAI,SAAA5e,GAEb,MAAO,CACH2jD,GAAWzsD,SAAS8I,EAAE49B,SACtB59B,EAAE0mF,OAAO9nE,IAAI+kC,GAAWzsD,UACxBysD,GAAWzsD,SAAS8I,EAAEiO,MAE9B,MAKJ,OAHI62E,EAAUsB,eAAejB,KACzBoB,EAAch0F,OAAOqgB,OAAO,CAAC+wC,GAAWzsD,SAASiuF,EAAQn3E,MAAOu4E,KAE7DA,CACX,EAEO,EAAAJ,aAAP,SAAoBQ,GAChBA,EAAO/tB,WAAa0tB,EAAUvoD,MAAM4oD,EAAO/tB,YAC3C,IAAMnG,EAAS,IAAIkW,GAAO,CACtBQ,MAAOjP,GAAMM,QAAS2M,SAAUhN,GAASqD,SAM7C,OAJkBsa,GAAY4B,eAAeiN,EAAQ,CACjDl0B,OAAQA,EACRwlB,+BAA+B,GAGvC,EACJ,EAxNA,GChBM,GAEgC,SAA1Br8D,QAAQC,IAAI+qE,UACL,cAEJn0F,OAAO6yB,MAItB,cAGI,WAAY+a,QAAA,IAAAA,IAAAA,EAAuC,CAAC,GAFpD,KAAAwmD,QAAU,IAGNxmD,EAA2B,iBAAXA,EAAsB,CAClCwmD,QAASxmD,GACTA,GAEOwmD,UACP30F,KAAK20F,QAAUxmD,EAAOwmD,QAE9B,CA+BJ,OA7BI,YAAAv0E,IAAA,SAAOyvC,EAAU+kC,GAIb,YAJG,IAAA/kC,IAAAA,EAAA,SAAU,IAAA+kC,IAAAA,EAAA,IACb/kC,EAAM7vD,KAAK20F,QAAU9kC,EAAM31C,OAAO6S,KAAK6nE,GACnCloE,KAAI,SAAAO,GAAO,gBAAG4nE,mBAAmB5nE,GAAI,YAAI4nE,mBAAmBD,EAAM3nE,IAAvD,IAAgE1uB,KAAK,KAE7E,GAAMsxD,EAAK,CACdh7B,OAAQ,MACRi7B,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAEfrtB,MAAK,SAAAr9B,GACJ,OAAOA,EAAI+qD,MACf,GACJ,EAEA,YAAA2kC,KAAA,SAAKjlC,EAAUE,GAGX,YAHC,IAAAF,IAAAA,EAAA,IACDA,EAAM7vD,KAAK20F,QAAU9kC,EAEd,GAAMA,EAAK,CACdh7B,OAAQ,OACRi7B,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdC,KAAMA,EAAO/kC,KAAKC,UAAU8kC,GAAQ,OACrCttB,MAAK,SAAAr9B,GACJ,OAAOA,EAAI+qD,MACf,GACJ,EACJ,EA1CA,GCHM4kC,GAAsB,CACxB,EAAG,OACH,EAAG,OACH,SAAU,OACV,IAAK,QACL,MAAO,QACP,MAAO,QACP,KAAM,QACN,KAAM,QACN,KAAM,SAGV,2BAQI,KAAA/pD,OAAS,IAAIgqD,CA+DjB,QA5DI,YAAA/oE,KAAA,SAAK0d,IACDA,EAASA,GAAU,CAAC,GACby7B,OAAO6vB,cAAgBtrD,EAAOy7B,OAAO6vB,eAAiB,CAAC,EAC9DtrD,EAAO01B,MAAM41B,cAAgBtrD,EAAO01B,MAAM41B,eAAiB,CAAC,EAC5Dj1F,KAAK2pC,OAASA,EAGd,IAAMurD,EAAa,GAAMA,WAEzB,IAAKA,EACD,MAAM,IAAIv2F,MAAM,yBAGhB,GAAMw2F,qBACNn1F,KAAKo1F,WAAa,GAAMD,oBAG5Bn1F,KAAKolE,OAAS,IAAK8vB,EAAmBvrD,EAAOy7B,OAAO/U,SAAUrwD,KAAKgrC,QACnEhrC,KAAKq/D,MAAQ,IAAK61B,EAAmBvrD,EAAO01B,MAAMhP,SAAUrwD,KAAKgrC,QAEjEhrC,KAAKgrC,OAAOwC,UAAU7D,EAAO/e,KAE7B,IAAMyqE,EAAU1rD,EAAO0rD,QACjBlR,EAAUx6C,EAAOw6C,QACjBmR,EAAat1F,KAAKs1F,WACpB,IAAIC,GAAWF,EAASlR,GAE5B,OADAnkF,KAAKgrC,OAAOpgB,IAAI,cAAe0qE,GACxBA,EAAWrpE,OAAOikC,OAAM,SAAA7hC,GAC3B,MAAM,IAAI1vB,MAAM,kBAAW02F,EAAO,cAAMlR,EAAO,qBACnD,GACJ,EAEA,YAAAqR,OAAA,SAAOl+E,EAAcwE,GACjB,OAAO9b,KAAKs1F,WAAWE,OAAOl+E,EAAMwE,EACxC,EAEA,YAAA25E,UAAA,SAAU7B,GACN,OAAO5zF,KAAKs1F,WAAWG,UAAU7B,EACrC,EAEA,sBAAI,kCAAmB,KAAvB,WACI,OAAO5zF,KAAKy1F,UAAU,iBAC1B,kCAEA,sBAAI,+BAAgB,KAApB,WACI,OAAOz1F,KAAKy1F,UAAU,oBAC1B,kCAEA,sBAAI,iCAAkB,KAAtB,WACI,OAAOz1F,KAAKy1F,UAAU,iBAC1B,kCAEA,sBAAI,6BAAc,KAAlB,WACI,OAAOz1F,KAAKy1F,UAAU,kBAC1B,kCAEA,YAAAC,mBAAA,SAAmB5nC,GACf,OAAO9tD,KAAKy1F,UAAU,UAAGV,GAAoBjnC,GAAQ,oBACzD,EAEJ,EAvEA,GClBatf,GAAiB,SAAIh0B,GAC9B,OAAOyT,QAAQC,QAAW1T,EAC9B,EAEam7E,GAAa,SAACC,GACvB,IAAMC,EAAgB,IAAIp3F,MAAMm3F,EAAc73F,QAC1C+3F,EAAU,EAGd,OAAO,IAAI7nE,SAAQ,SAACC,EAASC,GACzBynE,EAAc5oE,SAAQ,SAACuV,GACnBtU,QAAQC,QAAQqU,GACXE,KAAKvU,GACLgiC,OAAM,SAACjwC,GACJ41E,EAAcC,GAAW71E,GACzB61E,GAAoB,KACJF,EAAc73F,QAE1BowB,EAAO0nE,EAEf,GACR,GACJ,GACJ,EJvBaE,GAAa,qEACbC,GAAe,6CACfC,GAAsB,qEACtBC,GAA2B,qEAC3BC,GAA2B,qEAC3BC,GAA0B,qEAC1BC,GAA6Bl0E,OAAO,WAAK,MACtD,SAAYkvE,GACR,YACA,sBACA,mBACH,CAJD,CAAYA,KAAAA,GAAM,SKUlB,cAKI,WACciF,EACAzD,GADA,KAAAyD,cAAAA,EACA,KAAAzD,OAAAA,CAEd,CA4QJ,OA1QI,sBAAI,8BAAe,KAAnB,WACI,OAAO7yF,KAAKs2F,cAAc5qD,OAC9B,kCAEA,YAAA6qD,YAAA,sBACI,GAAIv2F,KAAKw2F,UACL,OAAOhoD,GAA6BxuC,KAAKw2F,WAE7C,IAAMF,EAAgBt2F,KAAKs2F,cAC3B,OAAOt2F,KAAK6yF,OAAO2C,OACfc,EAAch/E,KACdg/E,EAAcG,YAChBh0D,MAAK,SAAAi0D,GAMH,OALA,EAAKF,UAAY,EAAKG,aAAa,CAC/BD,IAAG,EACHE,SAAUN,EAAcM,SACxBC,aAAcP,EAAc5qD,UAEzB,EAAK8qD,SAChB,GACJ,EAEA,YAAAM,WAAA,sBACI,OAAI92F,KAAK+2F,SACEvoD,GAAuBxuC,KAAK+2F,UAExB/2F,KAAKg3F,UAAUh3F,KAAKs2F,cAAcM,UACnCE,aAAar0D,MAAK,SAAAqrB,GAE5B,OADA,EAAKipC,SAAWjpC,EACT,EAAKipC,QAChB,GACJ,EAEU,YAAAE,aAAV,SAAuBpiE,EAA4BsZ,GAAnD,WAII,YAJ+C,IAAAA,IAAAA,EAAA,IAC/CnuC,KAAKk3F,kBAAkB/oD,GAEvBnuC,KAAK6yF,OAAO7nD,OAAOpgB,IAAI,iBAChB5qB,KAAKm3F,wBACR,CACIC,SAAUjpD,EACVkpD,SAAS,EACTxiE,OAAM,EACN+hE,SAAU52F,KAAKs2F,cAAcM,WAC9Bn0D,MAAK,SAAAkH,GAEJ,OADA,EAAKkpD,OAAO7nD,OAAOpgB,IAAI,wBACnBujB,EAAOmpD,kBACA3pD,EAAMhE,EAAQ,CACjB5tB,KAAM8Y,EAAO0iE,YACb9xD,GAAI5Q,EAAO6W,UAGE7W,EAAOja,MACxB+uB,EAGR,GACR,EAEU,YAAA6tD,gBAAV,SAA0BrpD,QAAA,IAAAA,IAAAA,EAAA,IACtBnuC,KAAKk3F,kBAAkB/oD,GAEvB,IAAMyoD,EAAW52F,KAAKs2F,cAAcM,SAC9B/D,EAAS7yF,KAAKg3F,UAAUJ,GAG9B,OAFA/D,EAAO7nD,OAAOpgB,IAAI,iBAEX5qB,KAAKm3F,wBACR,CACIC,SAAUjpD,EACVkpD,SAAS,EACTxiE,OAAQ,KACR+hE,SAAU52F,KAAKs2F,cAAcM,WAC9Bn0D,MAAK,SAAAkH,GAEJ,OADAkpD,EAAO7nD,OAAOpgB,IAAI,wBACdujB,EAAOmpD,kBACA3tD,EAEUkpD,EAAOj4E,MACxB+uB,EAGR,GACR,EAEU,YAAA8tD,gBAAV,SAA0BtpD,QAAA,IAAAA,IAAAA,EAAA,IACtBnuC,KAAKk3F,kBAAkB/oD,GACvB,IAAMyoD,EAAW52F,KAAKs2F,cAAcM,SAC9B/D,EAAS7yF,KAAKg3F,UAAUJ,GAE9B,OADA/D,EAAO7nD,OAAOpgB,IAAI,gBACX5qB,KAAKm3F,wBACR,CACIC,SAAUjpD,EACVkpD,SAAS,EACTxiE,OAAQ,KACR+hE,SAAU52F,KAAKs2F,cAAcM,WAC9Bn0D,MAAK,SAAAkH,GAEJ,OADAkpD,EAAO7nD,OAAOpgB,IAAI,2BACdujB,EAAOmpD,kBACA3tD,EAEJkpD,EAAOn1E,KACVisB,EAER,GACR,EAEQ,YAAAutD,kBAAR,SAA0B/oD,IACA,iBAAXA,GAAuB1vC,MAAMgD,QAAQ0sC,KAC5C,IAAIT,EAAY3C,EAAW2sD,4BAA4B5qD,OAE/D,EAEU,YAAA6qD,YAAV,SAAyB9iE,EAA4BsZ,GAArD,WAGI,YAHiD,IAAAA,IAAAA,EAAA,IACjDnuC,KAAKk3F,kBAAkB/oD,GACvBnuC,KAAK6yF,OAAO7nD,OAAOpgB,IAAI,gBAChB5qB,KAAKm3F,wBACR,CACIC,SAAUjpD,EACVkpD,SAAS,EACTxiE,OAAM,EACN+hE,SAAU52F,KAAKs2F,cAAcM,WAC9Bn0D,MAAK,SAAAkH,GAEJ,OADA,EAAKkpD,OAAO7nD,OAAOpgB,IAAI,0BACnBujB,EAAOmpD,kBACA3pD,EAAMhE,EAAQ,CACjB5tB,KAAM8Y,EAAO0iE,YACb9xD,GAAI,EAAK+wD,UAAU9qD,UAGpB7W,EAAOnX,KACVisB,EAER,GACR,EAEU,YAAAqtD,UAAV,SAAoBJ,GAChB,OAAOA,EAAW52F,KAAK6yF,OAAOztB,OAC1BplE,KAAK6yF,OAAOxzB,KACpB,EAEQ,YAAAs3B,aAAR,SAAqB,OAAEC,EAAQ,WAAEC,EAAY,eAAEH,EAAG,MAE9C,OADe12F,KAAKg3F,UAAUJ,GAChBL,YAAYM,EAAcH,EAC5C,EAEA,sBAAc,kCAAmB,KAAjC,WAEI,OADkC12F,KAAK6yF,OAAOlpD,OAChCy7B,OAAO6vB,aACzB,kCAEA,sBAAc,iCAAkB,KAAhC,WAEI,OADkCj1F,KAAK6yF,OAAOlpD,OAChC01B,MAAM41B,aACxB,kCAEU,YAAAkC,wBAAV,SAAkC,GAAlC,WAAoCC,EAAQ,WAAEviE,EAAM,SAAE+hE,EAAQ,WAAES,EAAO,UAC7DpC,EAAgB2B,EAAW52F,KAAK43F,oBAAsB53F,KAAK63F,mBACjET,EAAWzpD,EAAMsnD,EAAgBmC,GAAY,CAAC,GAC9C,IAAMvE,EAAS+D,EAAW52F,KAAK6yF,OAAOztB,OAClCplE,KAAK6yF,OAAOxzB,MAOhB,OANAwzB,EAAO7nD,OAAOpgB,IAAI,WAAYwsE,EAAU,SAAUR,EAAU,UAAWS,GAMnEA,EACOr3F,KAAK82F,aAAar0D,MAAK,SAAAq1D,GAClB,IAPWnuD,UAOXw3C,EAAuCiW,EAAQ,aAAjCnW,EAAyBmW,EAAQ,qBAEjD1B,EAAqB,EAAK7C,OAAO6C,mBAAmBoC,GACpDC,EAAoB5W,GAAgBF,EAO1C,OANAmW,EAAStpC,QAAUspC,EAAStpC,SAAWgqC,GAElCpC,GAAsBqC,GACvBlF,EAAO7nD,OAAO/qB,MAAM8qB,EAAWsC,oBAAqBupD,GAAU9pD,QAG3D7e,QAAQ0e,IAAI,CACbyqD,EAAiB,SAIbA,EAAS3wB,UAtBA98B,EAmBG,CACVpvB,KAAM68E,EAAS78E,KAAMC,MAAO48E,EAAS58E,MAAOirB,GAAI2xD,EAAS3xD,MApBjB,0pCACzC5Q,EAAS,GAAMA,EAAOmjE,YAAYruD,IAAlC,oBAAS,wBAAmC,SAAMkpD,EAAOmF,YAAYruD,WAAzB,4BAC3D,OADMhC,EAAS,EACR,CAAP,EAAO,IAAI,GAAMhoC,GAAGyB,KAAK62F,MAAuB,KAAjBj6E,OAAO2pB,KAAiB3lC,4RAqB9Co1F,EAASrrC,MAEJqrC,EAASrrC,MADX8mC,EAAOqF,oBAAoBd,EAAS78E,KAAM,aAE/CkoB,MAAK,SAAAkF,GACG,IAAA8+B,EAAmB9+B,EAAM,GAAfokB,EAASpkB,EAAM,GAKhC,OAJAkrD,EAAO7nD,OAAOpgB,IAAI,kBAElBwsE,EAAS3wB,SAAWzoD,OAAOyoD,GAC3B2wB,EAASrrC,MAAQA,EACVqrC,CACX,GACJ,IAEG5oD,GAA0C4oD,EACrD,EAEU,YAAAe,cAAV,SAAwB1yD,EAAYqG,EAAqBqC,GAAzD,WACI,OAAOnuC,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,WACA4Q,EACA2uD,EAAUvoD,MAAMC,IAEpB,OAAO,EAAKmrD,aACRpiE,EAAQsZ,EAEhB,GACJ,EAEU,YAAAkqD,eAAV,SAAyB99E,EAAckrB,EAAY6yD,EAAiBnqD,GAApE,WACI,OAAOnuC,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,eACAta,EACAkrB,EACA6yD,GAEJ,OAAO,EAAKrB,aACRpiE,EAAQsZ,EAEhB,GACJ,EAEU,YAAAoqD,kBAAV,SAA4BC,GACpBx4F,KAAKs2F,cAAc5qD,UAAYsqD,IAC/Bh2F,KAAK6yF,OAAO7nD,OAAO/qB,MAAM8qB,EAAW0tD,yBAA0BD,GAAY1rD,OAElF,EAEU,YAAA4rD,aAAV,SAAuBF,GACdx4F,KAAKs2F,cAAcM,UACpB52F,KAAK6yF,OAAO7nD,OAAO/qB,MAAM8qB,EAAWkC,cAAeurD,GAAY1rD,OAEvE,EAEU,YAAA6rD,cAAV,SAAwBH,GAChBx4F,KAAKs2F,cAAcM,UACnB52F,KAAK6yF,OAAO7nD,OAAO/qB,MAAM8qB,EAAWiC,eAAgBwrD,GAAY1rD,OAExE,EAEU,YAAA8rD,oBAAV,SAA8BJ,GACrBx4F,KAAKs2F,cAAcuC,sBACpB74F,KAAK6yF,OAAO7nD,OAAO/qB,MAAM8qB,EAAW+tD,sBAAuBN,GAAY1rD,OAE/E,EAEU,YAAAisD,gBAAV,SAA0B/f,EAAgC7qC,GAA1D,WACI,OAAOnuC,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,mBACAmkD,EAAMz+D,KACNy+D,EAAMvzC,GACN2uD,EAAUvoD,MAAMmtC,EAAMsf,SACtBlE,EAAUvoD,MAAMmtC,EAAMltC,QACtBktC,EAAMj9D,MAAQ,MAElB,OAAO,EAAKk7E,aACRpiE,EAAQsZ,EAEhB,GACJ,EAEJ,EArRA,GCfA,cAGI,WAAYwmD,GACR30F,KAAKg5F,YAAc,IAAIC,GAAYtE,EACvC,CAaJ,OAXI,YAAAa,OAAA,SAAOH,EAAiBlR,EAAiBsS,EAAoByC,GACzD,IAAMrpC,EAAM,UAAGwlC,EAAO,YAAIlR,EAAO,sBAAcsS,EAAU,YAAIyC,EAAY,SACzE,OAAOl5F,KAAKg5F,YAAY54E,IAAIyvC,GAAKptB,MAAK,SAACkF,GACnC,OAAOA,EAAO+uD,GAClB,GACJ,EAEA,YAAAyC,WAAA,SAAW9D,EAAiBlR,GACxB,IAAMt0B,EAAM,UAAGwlC,EAAO,YAAIlR,EAAO,eACjC,OAAOnkF,KAAKg5F,YAAY54E,IAAIyvC,EAChC,EACJ,EAlBA,GCFa,GAAS,CACpBupC,YAAa,6CACbC,mBAAoB,+CCCtB,cAGI,WAAY1E,GACR30F,KAAKg5F,YAAc,IAAIC,GAAYtE,EACvC,CAqDJ,OAnDY,YAAA2E,gBAAR,SAAwBnV,EAAiBt0B,GACrC,MAAO,UAAe,OAAZs0B,EAAmB,QAAUA,GAAO,OAAGt0B,EACrD,EAEQ,YAAA0pC,kBAAR,SAA0BpV,EAAiBt0B,GACvC,MAAO,UAAGs0B,EAAO,YAAIt0B,EACzB,EAEA,YAAA2pC,iBAAA,SAAiBrV,EAAiBhL,GAC9B,IAAMtpB,EAAM7vD,KAAKs5F,gBAAgBnV,EAAS,0BAAmBhL,IAC7D,OAAOn5E,KAAKg5F,YAAY54E,IAIrByvC,GAAKptB,MAAK,SAAAkF,GACT,IAAM8xD,EAAoB9xD,EAAO8xD,kBAC3BC,EAA6D,OAAlCD,EAAkB5+E,MAAM,EAAG,GAAcuD,SACtEq7E,EAAmB,IACnBA,EAEJ,OADA9xD,EAAO8xD,kBAAoB,IAAI,GAAM95F,GAAG+5F,GACjC/xD,CACX,GACJ,EAEA,YAAAgyD,aAAA,SAAaxV,EAAiByV,EAAoBC,GAC9C,IAAMhqC,EAAM7vD,KAAKs5F,gBAAgBnV,EAAS,wBAAiByV,EAAU,2BAAmBC,IACxF,OAAO75F,KAAKg5F,YAAY54E,IAASyvC,GAAKptB,MAAK,SAAAkF,GACvC,OAAOA,EAAOA,MAClB,GACJ,EAEA,YAAAupB,SAAA,SAASizB,EAAiBtlF,EAAOC,EAAKq6E,GAClC,IAAMtpB,EAAM7vD,KAAKs5F,gBAAgBnV,EAAS,mCAA4BtlF,EAAK,gBAAQC,EAAG,mBAAWq6E,IACjG,OAAOn5E,KAAKg5F,YAAY54E,IAASyvC,GAAKptB,MAAK,SAAAkF,GACvC,OAAOA,EAAOypB,KAClB,GACJ,EAEA,YAAA0oC,uBAAA,SAAuB3V,EAAiB4V,EAAmBC,GACvD,IAAMnqC,EAAM7vD,KAAKu5F,kBAAkBpV,EAAS,8BAAuB4V,EAAS,wBAAgBC,IAC5F,OAAOh6F,KAAKg5F,YAAY54E,IAASyvC,GAAKptB,MAAK,SAAAkF,GACvC,OAAOA,EAAOypB,KAClB,GACJ,EAEA,YAAA6oC,4BAAA,SAA4B9V,EAAiB4V,EAAmBC,GAC5D,IAAMnqC,EAAM7vD,KAAKu5F,kBAAkBpV,EAAS,wBAAiB4V,EAAS,wBAAgBC,IACtF,OAAOh6F,KAAKg5F,YAAY54E,IAASyvC,GAAKptB,MAAK,SAAAkF,GACvC,OAAOA,EAAOuyD,OAClB,GACJ,EACJ,EA1DA,GCSaC,GAAU,IANvB,WAIA,EAGAA,GAAQzD,IAAM,IAAI0D,GAAW,GAAOhB,aCX7B,IAAMiB,GAAc,SAACxqC,GAEG,MAAvBA,EADcA,EAAI9xD,OACF,KAChB8xD,GAAO,KAEXA,GAAO,UACPsqC,GAAQ9E,QAAU,IAAIiF,GAAezqC,EACzC,EAEa0qC,GAAmB,SAAC1qC,GAEF,MAAvBA,EADcA,EAAI9xD,OACF,KAChB8xD,GAAO,KAEXA,GAAO,aACPsqC,GAAQK,aAAe,IAAIF,GAAezqC,EAC9C,EClBO,SAAS3hC,GAAQxS,EAAKk4E,GAEzB,OADmBn1F,MAAMgD,QAAQmyF,GAAQA,EAAOA,EAAKv7E,MAAM,MACzC0tB,QAAO,SAACptB,EAAM6S,GAAS,OAAA7S,GAAQA,EAAK6S,EAAb,GAAoB9P,EACjE,CCCA,+BAEI,KAAAm3E,OAAiC,IAAI4H,EAiDzC,QAtCI,YAAAC,eAAA,SAAerV,GACX,OAAOrlF,KAAK26F,SAASD,eACjBrV,EAER,EAEA,YAAAuV,YAAA,SAAYC,GACR,IAAMhI,EAAS7yF,KAAK6yF,OAEdiI,EAAQ,IAAIC,GAAU,CACxBrvD,QAASmnD,EAAOyC,WAAWG,UAAU,wCACrCmB,UAAU,EACVt/E,KAAM,gBACNm/E,WAAY,WACb5D,GAEH,OAAOiI,EAAMvE,cAAc9zD,MAAK,SAAA21D,GAC5B,OAAOnqE,QAAQ0e,IAAI,CACfkmD,EAAOztB,OAAOquB,sBAAsBoH,GACpCC,EAAmB,YACf1C,EAASvjE,OAAO,iBAG5B,IAAG4N,MAAK,SAAAkF,GACG,IAAAsrD,EAAwBtrD,EAAM,GAArBqzD,EAAerzD,EAAM,GAE/BszD,EAAYhI,EAAQsB,KAAK39B,MAAK,SAAA7lD,GAAK,MADlB,uEACkBA,EAAEyjF,OAAO,EAAT,IACzC,IAAKyG,EACD,MAAM,IAAIt8F,MAAM,+BAEpB,IAAMu8F,EAAcrI,EAAOxzB,MAAM87B,iBAAiBF,EAAUzG,OAAO,GAAI,CAAC,YAAY,GAC9E4G,EAAgB,GAAMz7F,GAAGI,KAAKm7F,GAAeA,EAAc,IAAI,GAAMv7F,GAAGu7F,GAC9E,OAAO,IAAI,GAAMv7F,GAAGq7F,GAAahmF,IAC7BomF,EAER,GACJ,EAEJ,EAnDA,GCYMzhC,GAAqB,CAAC,EAE5B,cACI,WAAmB0hC,EAA4BlX,GAA5B,KAAAkX,YAAAA,EAA4B,KAAAlX,QAAAA,CAE/C,CAyDJ,OAvDI,YAAAl4D,KAAA,sBACI,OAAOkuE,GAAQzD,IAAIyC,WACfn5F,KAAKq7F,YAAar7F,KAAKmkF,SACzB1hD,MAAK,SAAAkF,SACHgyB,GAAM,EAAK0hC,eAAY,MAClB,EAAKlX,SAAU,CACZz4C,QAAS/D,EACT+uD,IAAK,CAAC,KAGlB,GACJ,EAEA,YAAAjB,UAAA,SAAU7B,GACN,OAAO1lE,GACHyrC,GAAM35D,KAAKq7F,aAAar7F,KAAKmkF,SAASz4C,QACtCkoD,EAER,EAEA,YAAA4B,OAAA,SAAO0D,EAAsBzC,GAA7B,IACQ6E,EADR,OAWI,QAXyB,IAAA7E,IAAAA,EAAA,UAIrB98B,GAAM35D,KAAKq7F,cAAgB1hC,GAAM35D,KAAKq7F,aAAar7F,KAAKmkF,UACxDxqB,GAAM35D,KAAKq7F,aAAar7F,KAAKmkF,SAASuS,MAEtC4E,EAAuB3hC,GAAM35D,KAAKq7F,aAAar7F,KAAKmkF,SAASuS,IAAID,IAIjE6E,EAAsB,CACtB,IAAMC,EAAiBD,EAAqBpC,GAC5C,GAAIqC,EACA,OAAO/sD,GAAoB+sD,GAGnC,OAAOpB,GAAQzD,IAAIlB,OACfx1F,KAAKq7F,YACLr7F,KAAKmkF,QACLsS,EACAyC,GACFz2D,MAAK,SAAAkF,GAEH,OADA,EAAK6zD,OAAOtC,EAAczC,EAAY9uD,GAC/BA,CACX,GACJ,EAEA,YAAA6zD,OAAA,SAAOtC,EAAsBzC,EAAoBC,GAC7C,IAAM+E,EAAW9hC,GAAM35D,KAAKq7F,aAAar7F,KAAKmkF,SAASuS,IAClD+E,EAAShF,KACVgF,EAAShF,GAAc,CAAC,GAE5BgF,EAAShF,GAAYyC,GAAgBxC,CACzC,EACJ,EA5DA,GClBa/qD,GAAsB,WAC/B,MAAM,IAAIhtC,MAAM,kBAEpB,ECEA,2BAEI,KAAAk0F,OAAiD,IAAI4H,EA6EzD,QAjEI,YAAAiB,mBAAA,SAAmBrW,GAAnB,WACI,OAAOp3D,QAAQ0e,IAAI,CAAC3sC,KAAK27F,gBAAgB5B,YAAa/5F,KAAK47F,WAAWC,iBAClExW,GAAQ,KACR5iD,MAAK,SAAAkF,GACL,OAAOwyD,GAAQK,aAAaP,4BACxB,EAAKpH,OAAOlpD,OAAOw6C,QACnBx8C,EAAO,GACPA,EAAO,GAAGqyD,aAElB,IAAGv3D,MAAK,SAAAq5D,GACJ,OAAOA,EAAQC,eACnB,GACJ,EASA,YAAAC,mBAAA,SAAmB3W,GAAnB,WACI,OAAOp3D,QAAQ0e,IAAI,CAAC3sC,KAAKi8F,iBAAiBlC,YAAa/5F,KAAK47F,WAAWC,iBACnExW,GAAQ,KACR5iD,MAAK,SAAAkF,GACL,OAAOwyD,GAAQK,aAAaP,4BACxB,EAAKpH,OAAOlpD,OAAOw6C,QACnBx8C,EAAO,GACPA,EAAO,GAAGqyD,aAElB,IAAGv3D,MAAK,SAAAq5D,GACJ,OAAOA,EAAQC,eACnB,GACJ,EASA,YAAAnB,YAAA,SAAYvV,GAAZ,WACI,OAAOrlF,KAAK47F,WAAWC,iBACnBxW,GAAQ,GACV5iD,MAAK,SAAAkF,GACH,OAAO,EAAKs0D,iBAAiBC,UAAUv0D,EAAOqyD,aAAc,EAChE,GACJ,EASA,YAAAmC,SAAA,SAAS9W,GAAT,WACI,OAAOrlF,KAAK47F,WAAWC,iBACnBxW,GAAQ,GACV5iD,MAAK,SAAAkF,GACH,OAAO,EAAKg0D,gBAAgBO,UAAUv0D,EAAOqyD,aAAc,EAC/D,GACJ,EAEJ,EA/EA,GCoBa,GAAQ,CACjBjsD,UAAWqmD,EACXc,WAAYkH,EACZz8F,GAAI08F,EACJlH,mBAAoBj7E,meCzBxB,eAII,WACIo8E,EACAzD,EACUyJ,GAHd,MAKI,YAAMhG,EAAezD,IAAO,YAFlB,EAAAyJ,gBAAAA,GAGd,CA4EJ,OAtF8B,QAY1B,sBAAc,+BAAgB,KAA9B,WACI,OAAOt8F,KAAKs8F,kBAAkBC,gBAClC,kCAEA,sBAAc,yBAAU,KAAxB,WACI,OAAOv8F,KAAKs8F,kBAAkBE,UAClC,kCAEA,sBAAc,uBAAQ,KAAtB,WACI,OAAOx8F,KAAKs8F,kBAAkB3B,QAClC,kCAGA,YAAA8B,oBAAA,sBACI,OAAIz8F,KAAK08F,iBACEluD,GAAexuC,KAAK08F,kBAExB18F,KAAKu8F,iBAAiB1nE,OACzB,cACA70B,KAAKs2F,cAAc5qD,SACrBjJ,MAAK,SAAA5N,GACH,OAAOA,EAAOnX,MAClB,IAAG+kB,MAAK,SAAAk6D,GACJ,IAAKA,EACD,MAAM,IAAIh+F,MAAM,sBAEpB,OAAO,EAAK49F,iBAAiB1nE,OACzB,kBAAmB8nE,EAE3B,IAAGl6D,MAAK,SAAAm6D,GACJ,OAAOA,EAAsBl/E,MACjC,IAAG+kB,MAAK,SAAAi6D,GAEJ,OADA,EAAKA,iBAAmBA,EACjBA,CACX,GACJ,EAEU,YAAAG,YAAV,SAAsBxX,EAAgBwU,GAAtC,WACI,IAAKxU,EACD,MAAM,IAAI1mF,MAAM,uBAEpB,OAAOqB,KAAK26F,SAASmC,YACjBzX,EAAQ,EAAGwU,GACbp3D,MAAK,SAAAs6D,GACH,OAAO,EAAKR,iBAAiBS,gBACzBD,EAER,GACJ,EAEU,YAAAE,mBAAV,SAA6B5X,EAAgB1kF,EAAek5F,GAA5D,WACE,IAAKxU,EACD,MAAM,IAAI1mF,MAAM,uBAEpB,OAAOqB,KAAK26F,SAASmC,YACjBzX,EAAQ1kF,EAAOk5F,GACjBp3D,MAAK,SAAAs6D,GACH,OAAO,EAAKR,iBAAiBS,gBACzBD,EAER,GACJ,EAEY,YAAAG,gBAAV,SAA0BtD,EAAoBC,EAAwBsD,EAAiBhvD,GAAvF,WACI,OAAOnuC,KAAK26F,SAASyC,oBACjBxD,EACAC,EACAsD,GACF16D,MAAK,SAAA+I,GACH,OAAO,EAAK+wD,iBAAiBc,KACzB7xD,EAAS2C,EAEjB,GACJ,EACJ,EAtFA,CAA8B4sD,+dCI9B,eAEI,WACIlE,EACAD,EACA/D,EACAyK,UAEA,YAAM,CACF1G,SAAQ,EACRlrD,QAASmrD,EACTv/E,KAAM,aACNm/E,WAAY,OACb5D,EAAQyK,IAAa,IAC5B,CAyPJ,OAvQ2B,QAgBvB,YAAAC,WAAA,SAAWC,EAAqBrvD,GAAhC,WACI,OAAOnuC,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,YACA2oE,GAEJ,OAAO,EAAK7F,YAAoB9iE,EAAQsZ,EAC5C,GACJ,EAUA,YAAAsvD,aAAA,SAAaD,EAAqBrvD,GAAlC,gBAAkC,IAAAA,IAAAA,EAAA,IAC9B,IAAMuvD,EAAiBvvD,EAAOuvD,eAExBC,EAAmBD,EAAiBlvD,GAAekvD,GAAkB19F,KAAKy8F,sBAEhF,OAAOxuE,QAAQ0e,IAAI,CAACgxD,EAAkB39F,KAAKu2F,gBAAgB9zD,MAAK,SAAAkF,GACrD,IAAA+0D,EAA8B/0D,EAAM,GACrC9S,EAD+B8S,EAAM,GACnB9S,OACpB,YACA2oE,EACAd,GAEJ,OAAO,EAAK/E,YAAoB9iE,EAAQsZ,EAC5C,GACJ,EAEA,YAAAyvD,QAAA,SAAQ9xD,EAAqBqC,GAA7B,gBAA6B,IAAAA,IAAAA,EAAA,IACzB,IAAMuvD,EAAiBvvD,EAAOuvD,eAEzBA,GAAmB19F,KAAKs2F,cAAcM,UACvC52F,KAAK6yF,OAAO7nD,OAAO/qB,MAAM8qB,EAAWuC,oBAAoBR,QAG5D,IAAM6wD,EAAmBD,EAAiBlvD,GAAekvD,GAAkB19F,KAAKy8F,sBAEhF,OAAOxuE,QAAQ0e,IAAI,CAACgxD,EAAkB39F,KAAKu2F,gBAAgB9zD,MAAK,SAAAkF,GACrD,IAAA+0D,EAA8B/0D,EAAM,GACrC9S,EAD+B8S,EAAM,GACnB9S,OACpB,UACA6nE,EACAtI,EAAUvoD,MAAMC,IAEpB,OAAO,EAAKmrD,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAA0vD,WAAA,SAAW1vD,GACP,YADO,IAAAA,IAAAA,EAAA,IACAnuC,KAAK49F,QACR7H,GACE5nD,EAEV,EAWA,YAAA+rD,QAAA,SAAQpuD,EAAqB0xD,EAAqBrvD,GAC9CnuC,KAAK04F,aAAa,WAElB,IAAMoF,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAEL,OAAO9rC,KAAKu8F,iBAAiBrC,QACzBsD,EACAx9F,KAAKs2F,cAAc5qD,QACnBoyD,EACA3vD,EAER,EAWA,YAAA4vD,eAAA,SAAejyD,EAAqB0xD,EAAqBQ,EAA4BC,EAAsB9vD,GAA3G,WAGI,OAFAnuC,KAAK04F,aAAa,WAEX14F,KAAK82F,aAAar0D,MAAK,SAACqrB,GACX,IAAZA,GACA,EAAK+kC,OAAO7nD,OAAO/qB,MAAM8qB,EAAWmC,kBAAkBJ,QAE1D,IAAMgxD,EAAc,EAAKjL,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAKL,OAFAqC,EAAO3zB,MAAQ45E,EAAUvoD,MAAMmyD,GAExB,EAAKxB,WAAWuB,eACnB,EAAKzH,cAAc5qD,QACnBoyD,EACAN,EACAS,EACA9vD,EAER,GAEJ,EAEQ,YAAA+vD,cAAR,SAAsBpyD,EAAqB0xD,EAAqBrvD,GAAhE,WAKI,YAL4D,IAAAA,IAAAA,EAAA,IAC5DnuC,KAAK04F,aAAa,gBAGlBvqD,EAAO3zB,MAAQ45E,EAAUvoD,MAAMC,GACxB9rC,KAAKu8F,iBAAiB1nE,OAAO,kBAAmB2oE,GAAa/6D,MAAK,SAAA5N,GACrE,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAEQ,YAAAgwD,qBAAR,SAA6BryD,EAAqB0xD,EAAqBQ,EAA4BC,EAAsB9vD,GAAzH,WAGI,YAHqH,IAAAA,IAAAA,EAAA,IACrHnuC,KAAK04F,aAAa,uBAEX14F,KAAK82F,aAAar0D,MAAK,SAACqrB,GACX,IAAZA,GACA,EAAK+kC,OAAO7nD,OAAO/qB,MAAM8qB,EAAWmC,kBAAkBJ,QAE1D,IAAMgxD,EAAc,EAAKjL,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YASL,OANAqC,EAAO3zB,MAAQ45E,EAAUvoD,MACrBuoD,EAAUpoD,KAAKF,GAAQ9jC,IACnBosF,EAAUpoD,KAAKgyD,KAIhB,EAAKxB,WAAWuB,eACnB,6CACAD,EACAN,EACAS,EACA9vD,EAER,GACJ,EAUA,YAAAiwD,cAAA,SAActyD,EAAqBqC,GAAnC,WAII,OAHAnuC,KAAK24F,cAAc,iBAGZ34F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,WACAu/D,EAAUvoD,MAAMC,IAEpB,OAAO,EAAKmrD,aAAapiE,EAAQsZ,EACrC,GACJ,EAEQ,YAAAkwD,cAAR,SAAsBC,EAA6BnB,EAAiBhvD,GAApE,gBAAoE,IAAAA,IAAAA,EAAA,IAChE,IAAM0rD,EAAiB1rD,EAAOowD,mBAC1BpwD,EAAOowD,mBAAqBzzD,EAAoB0zD,cAEpD,OAAOx+F,KAAK26F,SAASyC,oBACjBkB,EACAzE,EACAsD,GACF16D,MAAK,SAAA+I,GACH,OAAO,EAAK+wD,iBAAiBc,KACzB7xD,EAAS2C,EAEjB,GACJ,EAUA,YAAAswD,aAAA,SAAaH,EAA6BnwD,GAGtC,OAFAnuC,KAAK04F,aAAa,gBAEX14F,KAAKq+F,cAAcC,GAAqB,EAAOnwD,EAC1D,EAYA,YAAAuwD,mBAAA,SAAmBJ,EAA6BnwD,GAG5C,OAFAnuC,KAAK04F,aAAa,sBAEX14F,KAAKq+F,cAAcC,GAAqB,EAAMnwD,EACzD,EASA,YAAAwwD,iBAAA,SAAiB/E,GACb,OAAO55F,KAAK68F,YAAYjD,EAAY9uD,EAAoB0zD,cAC5D,EAWA,YAAAI,SAAA,SAAS9yD,EAAqBrG,EAAY0I,GACtC,OAAOnuC,KAAKm4F,cAAc1yD,EAAIqG,EAAQqC,EAC1C,EAEJ,EAvQA,CAA2B0wD,+dCL3B,eAEI,WAAYC,EAAgDpzD,UACxD,YAAM,CACFA,QAASA,EACTp0B,KAAM,mBACNm/E,WAAY,MACZG,UAAU,GACXkI,IAAQ,IACf,CAoCJ,OA7CsC,QAWlC,YAAAjqE,OAAA,SAAO2jE,OAAoB,wDACvB,OAAOx4F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,OAAOA,EAASvjE,OAAM,MAAfujE,iMAAQ,EAAQI,GAAe7vE,GAAI,GAC9C,GACJ,EAEA,YAAAuxE,QAAA,SAAQsD,EAAqB3G,EAAsBkI,EAAqB5wD,GAAxE,WACI,OAAOnuC,KAAK60B,OACR,aACA2oE,EACA3G,EACAkI,GACFt8D,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAAkvD,KAAA,SAAK2B,EAAqB7wD,GAA1B,WACI,OAAOnuC,KAAK60B,OAAO,OAAQmqE,GAAav8D,MAAK,SAAA5N,GACzC,OAAO,EAAKoiE,aACRpiE,EACAsZ,EAER,GACJ,EAEA,YAAA6uD,gBAAA,SAAgBD,GAAhB,WACI,OAAO/8F,KAAK60B,OACR,iBAAkBkoE,GACpBt6D,MAAK,SAAA5N,GACH,OAAO,EAAK8iE,YAAqB9iE,EACrC,GACJ,EAEJ,EA7CA,CAAsCkmE,ICctC,cAQI,WAAYlI,EAAgDoM,GACxDj/F,KAAKk/F,aAAerM,EAAOxzB,MAC3Br/D,KAAKi/F,UAAYA,EACjB,IAAMt1D,EAASkpD,EAAOlpD,OACtB3pC,KAAK2pC,OAASA,EACd3pC,KAAKkzF,mBAAqBvpD,EAAOupD,kBACrC,CA2cJ,OAzcY,YAAAiM,aAAR,SAAqBC,EAAqBnM,GACtC,IAAIoM,GAAY,EAEhB,OAAQD,GACJ,IAAK,qEACL,IAAK,qEACDC,EAAWpM,EAAQsB,KAAKhe,WACpB,SAAA3rD,GACI,OAAAA,EAAI4pE,OAAO,GAAG/3E,gBAAkB2iF,EAAY3iF,eACZ,uEAAhCmO,EAAI4pE,OAAO,GAAG/3E,aADd,IAGR,MAEJ,IAAK,qEACL,IAAK,qEACD4iF,EAAWpM,EAAQsB,KAAKhe,WACpB,SAAA3rD,GACI,OAAAA,EAAI4pE,OAAO,GAAG/3E,gBAAkB2iF,EAAY3iF,eACZ,uEAAhCmO,EAAI4pE,OAAO,GAAG/3E,aADd,IAGR,MAEJ,QACI4iF,EAAWpM,EAAQsB,KAAKhe,WAAU,SAAA3rD,GAAO,OAAAA,EAAI4pE,OAAO,GAAG/3E,gBAAkB2iF,EAAY3iF,aAA5C,IAEjD,GAAI4iF,EAAW,EACX,MAAM,IAAI1gG,MAAM,4BAEpB,OAAO0gG,CACX,EAEQ,YAAAC,kBAAR,SAA0BF,EAAqBnM,GAC3C,IAAIsM,EAAa,GAEjB,OAAQH,GACJ,IAAK,qEACL,IAAK,qEACDG,EAAatM,EAAQsB,KAAKxuD,QACtB,SAAC71B,EAAG0a,EAAKjqB,GACT,OAAEiqB,EAAI4pE,OAAO,GAAG/3E,gBAAkB2iF,EAAY3iF,eACV,uEAAhCmO,EAAI4pE,OAAO,GAAG/3E,eACd8iF,EAAWnhG,KAAKuC,GAAQ4+F,CAF5B,GAEyC,IAE7C,MAEJ,IAAK,qEACL,IAAK,qEACDA,EAAatM,EAAQsB,KAAKxuD,QACtB,SAAC71B,EAAG0a,EAAKjqB,GACT,OAAEiqB,EAAI4pE,OAAO,GAAG/3E,gBAAkB2iF,EAAY3iF,eACV,uEAAhCmO,EAAI4pE,OAAO,GAAG/3E,eACd8iF,EAAWnhG,KAAKuC,GAAQ4+F,CAF5B,GAEyC,IAE7C,MAEJ,IAAK,qEACDA,EAAatM,EAAQsB,KAAKxuD,QACtB,SAAC71B,EAAG0a,EAAKjqB,GACT,MAAkC,uEAAhCiqB,EAAI4pE,OAAO,GAAG/3E,eACoB,uEAAhCmO,EAAI4pE,OAAO,GAAG/3E,eACd8iF,EAAWnhG,KAAKuC,GAAQ4+F,CAF5B,GAEyC,IAE7C,MAEJ,QACIA,EAAatM,EAAQsB,KAAKxuD,QACtB,SAAC71B,EAAG0a,EAAKjqB,GACT,OAAEiqB,EAAI4pE,OAAO,GAAG/3E,gBAAkB2iF,EAAY3iF,eAC1C8iF,EAAWnhG,KAAKuC,GAAQ4+F,CAD5B,GACyC,IAGrD,GAA0B,IAAtBA,EAAWxhG,OACX,MAAM,IAAIY,MAAM,4BAEpB,OAAO4gG,CACX,EAEA,YAAAC,kBAAA,SAAkB5F,GACd,OAAO3rE,QAAQ0e,IAAI,CACf3sC,KAAKi/F,UAAUQ,oBACfz/F,KAAKk/F,aAAaQ,eAAe9F,KAClCn3D,MAAK,SAAAkF,GACJ,MAAO,CACHg4D,eAAgBh4D,EAAO,GACvBi4D,cAAej4D,EAAO,GAAGwxC,YAEjC,GACJ,EAEQ,YAAA0mB,gBAAR,SAAwB9jF,GAEpB,OAAO,IAAI,GAAMpc,GAAGoc,EAAK4jF,gBAAgB3qF,IACrC,IAAI,GAAMrV,GAAGoc,EAAK6jF,eAE1B,EAEA,YAAAlF,eAAA,SAAed,GAAf,WACI,OAAO55F,KAAKw/F,kBACR5F,GACFn3D,MAAK,SAAAkF,GACH,OAAO,EAAKk4D,gBACRl4D,EAER,GACJ,EAaQ,YAAAm4D,iBAAR,SAAyBF,GAAzB,IAEQG,EAFR,OAGI,OAAO//F,KAAKi/F,UAAUe,uBAClBJ,GACFn9D,MAAK,SAAA02C,GAEH,OADA4mB,EAAkB5mB,EACX,EAAK8lB,UAAUpqE,OAClB,eACAu/D,EAAUvoD,MAAMstC,GAExB,IAAG12C,MAAK,SAAA5N,GACJ,OAAOA,EAAOnX,MAClB,IAAG+kB,MAAK,SAAAw9D,GACJ,MAAO,CAEHxG,kBAAmBsG,EAGnBjhG,IAAKmhG,EAAcnhG,IAAIkD,WAEvBnD,MAAOohG,EAAcphG,MAAMmD,WAEnC,GAEJ,EAEQ,YAAAk+F,wBAAR,SAAgCN,GAAhC,WAEI,OADA5/F,KAAKk/F,aAAal0D,OAAOpgB,IAAI,yBACtBuvE,GAAQ9E,QAAQmE,iBACnBx5F,KAAK2pC,OAAOw6C,QACZyb,GACFn9D,MAAK,SAAA09D,GAEH,GADA,EAAKjB,aAAal0D,OAAOpgB,IAAI,wBAAyBu1E,KACjDA,GAAgBA,EAAYthG,OAAUshG,EAAYrhG,KAAQqhG,EAAY1G,mBACvE,MAAM96F,MAAM,qBAEhB,OAAOwhG,CACX,IAAGjwC,OAAM,SAAA7hC,GAEL,OADA,EAAK6wE,aAAal0D,OAAOpgB,IAAI,sBAAuByD,GAC7C,EAAKyxE,iBAAiBF,EACjC,GACJ,EAEQ,YAAAQ,cAAR,SAAsBR,EAAuBK,GACzC,OAAOrN,GAAUF,gBACb1yF,KAAKk/F,aACL9gF,SAAS6hF,EAAcphG,MAAO,IAC9Buf,SAAS6hF,EAAcnhG,IAAK,IAC5Bsf,SAASwhF,EAAgB,GAAI,IAErC,EAEQ,YAAAS,qBAAR,SAA6BT,EAAuBK,GAApD,WAEI,OAAO9F,GAAQ9E,QAAQnkC,SACnBlxD,KAAK2pC,OAAOw6C,QACZ8b,EAAcphG,MACdohG,EAAcnhG,IACd8gG,GACFn9D,MAAK,SAAA69D,GACH,IAAKA,EACD,MAAM3hG,MAAM,qBAGhB,OADA,EAAKugG,aAAal0D,OAAOpgB,IAAI,0BACtB01E,CACX,IAAGpwC,OAAM,SAAAhgD,GACL,OAAO,EAAKkwF,cAAcR,EAAeK,EAC7C,GACJ,EAEQ,YAAAM,oBAAR,SAA4BC,EAAkB3G,GAA9C,WAEI,OAAOM,GAAQ9E,QAAQsE,aACnB35F,KAAK2pC,OAAOw6C,QAASqc,EAAU3G,GACjCp3D,MAAK,SAAAg+D,GACH,IAAKA,EACD,MAAM9hG,MAAM,qBAGhB,OADA,EAAKugG,aAAal0D,OAAOpgB,IAAI,yBACtB61E,CACX,IAAGvwC,OAAM,SAAAhgD,GACL,OAAO,EAAKktF,oBAAoBoD,EAAU3G,GAAgB,EAC9D,GACJ,EAEA,YAAAuD,oBAAA,SAAoBxD,EAAoBwF,EAAqBjC,EAAiBx8F,GAA9E,IAUQi/F,EACAK,EACAhN,EACApsB,EACAy5B,EAdR,OAMI,QAN0E,IAAA3/F,IAAAA,EAAA,GAEtEw8F,IAAWhD,GAAQ9E,SACnB,IAAI3nD,EAAY3C,EAAWoC,gBAAgBL,QAG3CnsC,EAAQ,EACR,MAAM,IAAIhC,MAAM,wCASpB,OAAIw+F,EACOn9F,KAAKugG,oBAAoB3G,EAAYwF,GAGzCp/F,KAAKw/F,kBACR5F,GACFn3D,MAAK,SAAAi+D,GACH,IAAK,EAAKb,gBAAgBa,GACtB,MAAM,IAAI/hG,MACN,qDAQR,OAHAihG,EAAgBc,EAAUd,cAGnB3xE,QAAQ0e,IAAI,CACf,EAAKuyD,aAAazL,sBAAsBmG,GACxC,EAAKsF,aAAayB,wBAAwBf,IAElD,IAAGn9D,MAAK,SAAAkF,GAGJ,OAFCsrD,EAAkBtrD,EAAM,GAAfk/B,EAASl/B,EAAM,GAElB,EAAKm4D,iBAAiBF,EACjC,IAAGn9D,MAAK,SAAAm+D,GAGJ,OAFAX,EAAgBW,EAET,EAAKR,cAAcR,EAAeK,EAC7C,IAAGx9D,MAAK,SAAAo+D,GAGJ,OAFAP,EAAaO,EAENjO,GAAUI,gBACbC,EACApsB,EACA,EAAKq4B,aACL,EAAKhM,mBAEb,IAAGzwD,MAAK,SAACq+D,GAIL,GAAIngG,EAAQ,EAAG,CACX,IAAM4+F,EAAa,EAAKD,kBACpBF,EAAanM,GAGjB,GAAItyF,GAAS4+F,EAAWxhG,OACpB,MAAM,IAAIY,MAAM,kEAGpB,OAAO,EAAKoiG,eACRd,EAAcxG,kBAAkB50F,WAChCy7F,EACAV,EACA/4B,EAAMG,UACN3mE,OAAOka,KAAKssD,EAAM4kB,iBAAiB5wE,MAAM,GAAI,OAC7Cxa,OAAOka,KAAKssD,EAAM6kB,aAAa7wE,MAAM,GAAI,OACzC+3E,GAAUmB,gBAAgBd,GAC1B6N,EAAa9M,YACb8M,EAAalN,KACb2L,EAAW5+F,IAKnB,IAAM0+F,EAAW,EAAKF,aAClBC,EAAanM,GAGjB,OAAO,EAAK8N,eACRd,EAAcxG,kBAAkB50F,WAChCy7F,EACAV,EACA/4B,EAAMG,UACN3mE,OAAOka,KAAKssD,EAAM4kB,iBAAiB5wE,MAAM,GAAI,OAC7Cxa,OAAOka,KAAKssD,EAAM6kB,aAAa7wE,MAAM,GAAI,OACzC+3E,GAAUmB,gBAAgBd,GAC1B6N,EAAa9M,YACb8M,EAAalN,KACbyL,EAER,GACJ,EAEA,YAAA2B,6BAAA,SAA6BpH,EAAoBwF,EAAqBjC,GAAtE,IAMQyC,EACAK,EACAhN,EACApsB,EACAy5B,EAVR,OAYI,OAVInD,IAAWhD,GAAQ9E,SACnB,IAAI3nD,EAAY3C,EAAWoC,gBAAgBL,QASxC9sC,KAAKw/F,kBACR5F,GACFn3D,MAAK,SAAAi+D,GACH,IAAKvD,IAAW,EAAK0C,gBAAgBa,GACjC,MAAM,IAAI/hG,MACN,qDAQR,OAHAihG,EAAgBc,EAAUd,cAGnB3xE,QAAQ0e,IAAI,CACf,EAAKuyD,aAAazL,sBAAsBmG,GACxC,EAAKsF,aAAayB,wBAAwBf,IAElD,IAAGn9D,MAAK,SAAAkF,GAGJ,OAFCsrD,EAAkBtrD,EAAM,GAAfk/B,EAASl/B,EAAM,GAGrBw1D,EAAS,EAAK+C,wBAAwBN,GAClC,EAAKE,iBAAiBF,EAElC,IAAGn9D,MAAK,SAAAm+D,GAGJ,OAFAX,EAAgBW,EAGZzD,EAAS,EAAKkD,qBAAqBT,EAAeK,GAC9C,EAAKG,cAAcR,EAAeK,EAE9C,IAAGx9D,MAAK,SAAAo+D,GAGJ,OAFAP,EAAaO,EAENjO,GAAUI,gBACbC,EACApsB,EACA,EAAKq4B,aACL,EAAKhM,mBAEb,IAAGzwD,MAAK,SAACq+D,GAOL,IANA,IAGMG,EAAqB,GAGJ,MANJ,EAAK3B,kBACpBF,EAAanM,GAKM,eAAY,CAA9B,IAAMoM,EAAQ,KACf4B,EAAS7iG,KACL,EAAK2iG,eACDd,EAAcxG,kBAAkB50F,WAChCy7F,EACAV,EACA/4B,EAAMG,UACN3mE,OAAOka,KAAKssD,EAAM4kB,iBAAiB5wE,MAAM,GAAI,OAC7Cxa,OAAOka,KAAKssD,EAAM6kB,aAAa7wE,MAAM,GAAI,OACzC+3E,GAAUmB,gBAAgBd,GAC1B6N,EAAa9M,YACb8M,EAAalN,KACbyL,IAKZ,OAAO4B,CACX,GACJ,EAEQ,YAAAF,eAAR,SACIG,EACAxO,EACAvZ,EACAnS,EACAykB,EACAC,EACAuH,EACAkO,EACAvN,EACAyL,GAEA,OAAO5tC,GAAWE,YACd,aAAW,CACPuvC,EACAxO,EACAvZ,EACAnS,EACAvV,GAAWE,YAAY85B,GACvBh6B,GAAWE,YAAY+5B,GACvBj6B,GAAWE,YAAYshC,GACvBxhC,GAAWE,YAAY,aAAWwvC,IAClC1vC,GAAWE,YAAYtxD,OAAOqgB,OAAO,CAACrgB,OAAOka,KAAK,KAAM,OAAQq5E,KAChEyL,IAGZ,EAEA,YAAAvC,YAAA,SAAYlD,EAAYj5F,EAAOy+F,GAA/B,IACQO,EACA1M,EACApsB,EAHR,OAKI,OAAO54C,QAAQ0e,IAAI,CACf3sC,KAAKi/F,UAAUQ,oBACfz/F,KAAKk/F,aAAazL,sBAAsBmG,KACzCn3D,MAAK,SAAAkF,GAGJ,OAFAg4D,EAAiBh4D,EAAO,GACxBsrD,EAAUtrD,EAAO,GACV,EAAKu3D,aAAayB,wBACrB1N,EAAQ9Z,YAEhB,IAAG12C,MAAK,SAAA2+D,GAKJ,OAJAv6B,EAAQu6B,EACH,EAAKvB,gBAAgB,CAAEF,eAAgBA,EAAgBC,cAAe3M,EAAQ9Z,eAC/E,EAAK+lB,aAAal0D,OAAO/qB,MAAM8qB,EAAWqC,uBAAuBN,QAE9D8lD,GAAUI,gBACbC,EACApsB,EACA,EAAKq4B,aACL,EAAKhM,mBAEb,IAAGzwD,MAAK,SAACq+D,GACL,IAAIzB,EACEgC,EAAY,GAalB,OAZAP,EAAalN,KAAK5mE,SAAQ,SAAAwa,GACtB65D,EAAUjjG,KAAKiC,OAAOka,KAAK,KAAOitB,EAAO,IAAMxlC,SAAS,IAAK,QAC7Dq/F,EAAUjjG,KAAKiC,OAAOka,KAAK,KAAOitB,EAAO,IAAMxlC,SAAS,IAAK,OACjE,IAEIrB,EAAQ,IAER0+F,EADmB,EAAKC,kBAAkBF,EAAanM,GACjCtyF,IAG1B0+F,EAAW,EAAKF,aAAaC,EAAanM,GAEnC,EAAKiM,aAAaoC,aACrBrO,EAAQ9Z,YAAa1nB,GAAWE,YAAYtxD,OAAOqgB,OAAO2gF,IAAahC,EAE/E,GACJ,EACJ,EAzdA,8dCZA,eAEI,WAAYP,EAAgDpzD,UACxD,YAAM,CACFA,QAASA,EACTp0B,KAAM,YACNs/E,UAAU,GACXkI,IAAQ,IACf,CA8DJ,OAtE+B,QAU3B,YAAAjqE,OAAA,SAAO2jE,OAAoB,wDACvB,OAAOx4F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,OAAOA,EAASvjE,OAAM,MAAfujE,iMAAQ,EAAQI,GAAe7vE,GAAI,GAC9C,GACJ,EAEA,YAAA82E,kBAAA,sBACI,OAAOz/F,KAAK60B,OAAO,qBAAqB4N,MAAK,SAAA5N,GACzC,OAAOA,EAAOnX,KAAa,CAAC,EAAG,EAAKm1E,OAAOlpD,OAAO43D,uBAAyB,OAC/E,GACJ,EAEM,YAAAvB,uBAAN,SAA6BwB,2qCAUV,OATTC,EAAS,IAAI,GAAM9hG,GAAG,GACtB+hG,EAAS,IAAI,GAAM/hG,GAAG,GACtBgiG,EAAqB,IAAI,GAAMhiG,GAAG,KAExC6hG,EAAmB,IAAI,GAAM7hG,GAAG6hG,GAE5B3iG,EAAQ4iG,EAGG,GAAMzhG,KAAK60B,OAAO,8BACN,SADZ,SACyBnX,eAAlCkkF,EAAqB,SACvB9iG,EAAM,IAAI,GAAMa,GAAGiiG,GAAoBhvF,IACvC+uF,2BAKG9iG,EAAMuW,IAAItW,GACTD,EAAMyW,GAAGxW,IACT+iG,EAAMhjG,EACN,QAEEsJ,EAAMtJ,EAAMmJ,IAAIlJ,GAAK8T,IAAI8uF,GACJ,GAAM1hG,KAAK60B,OAClC,eACA1sB,EAAIjH,IAAIygG,GAAoB3/F,cARf,aAUG,SAJO,SAIkB0b,eAK7C,OALMyiF,EAAc,SAEd2B,EAAc,IAAI,GAAMniG,GAAGwgG,EAAYthG,OACvCkjG,EAAY,IAAI,GAAMpiG,GAAGwgG,EAAYrhG,KAEvCgjG,EAAY1sF,IAAIosF,IAAqBA,EAAiBpsF,IAAI2sF,IAE1DF,EAAM15F,EACN,QACO25F,EAAYhtF,GAAG0sF,GAEtB1iG,EAAMqJ,EAAIF,IAAIw5F,GACPM,EAAU7sF,GAAGssF,KAEpB3iG,EAAQsJ,EAAIH,IAAIy5F,kBAGxB,MAAO,CAAP,EAAOI,EAAI3gG,IAAIygG,ySAGvB,EAtEA,CAA+B5G,+dCG/B,eAGI,WACIlE,EACAD,EACA/D,EACAyK,UAEA,YAAM,CACF1G,SAAQ,EACRlrD,QAASmrD,EACTv/E,KAAM,cACNm/E,WAAY,OACb5D,EAAQyK,IAAa,IAC5B,CAqUJ,OApV4B,QAiBhB,YAAA0E,cAAR,SAAsBC,GAClB,GAAIA,EAASlkG,OAAS,GAClB,MAAM,IAAIY,MAAM,uCAEpB,OAAOsjG,EAASv1E,KAAI,SAAA4rE,GAChB,OAAOlE,EAAUvoD,MAAMysD,EAC3B,GACJ,EAUA,YAAA4J,eAAA,SAAe1E,EAAqB5qE,GAApC,WACI,OAAO5yB,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,YACA2oE,GAEJ,OAAO,EAAK7F,YAAoB9iE,EAAQjC,EAC5C,IAAG6P,MAAK,SAAA7S,GACJ,OAAO5R,OAAO4R,EAClB,GACJ,EAWA,YAAAuyE,yBAAA,SAAyBxhG,EAAe68F,EAAqB5qE,GAA7D,WACI,OAAO5yB,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,sBACA2oE,EACA78F,GAGJ,OAAO,EAAKg3F,YAAoB9iE,EAAQjC,EAC5C,GACJ,EAUA,YAAAwvE,aAAA,SAAa5E,EAAqB13E,GAAlC,WACI,YAD8B,IAAAA,IAAAA,EAAA,KACvB9lB,KAAKkiG,eAAe1E,GAAa/6D,MAAK,SAAA7S,IACzCA,EAAQ5R,OAAO4R,IACH9J,IACR8J,EAAQ9J,GAGZ,IADA,IAAMgoB,EAAW,GACRzwC,EAAI,EAAGA,EAAIuyB,EAAOvyB,IACvBywC,EAAS1vC,KACL,EAAK+jG,yBAAyB9kG,EAAGmgG,IAGzC,OAAOvvE,QAAQ0e,IACXmB,EAER,GACJ,EAEA,YAAAu0D,WAAA,SAAW/J,EAAiBnqD,GAA5B,WAGI,OAFAnuC,KAAK04F,aAAa,cAEX14F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,cACAyjE,GAEJ,OAAOrqE,QAAQ0e,IAAI,CACf,EAAKgrD,YAAoB9iE,EAAQsZ,GACjC,EAAKsuD,wBACNh6D,MAAK,SAAAkF,GACJ,OAAOA,EAAO,KAAOA,EAAO,EAChC,GACJ,GACJ,EAEA,YAAA26D,cAAA,SAAc9E,EAAqBrvD,GAAnC,WAGI,OAFAnuC,KAAK04F,aAAa,iBAEXzqE,QAAQ0e,IAAI,CAAC3sC,KAAKu2F,cAAev2F,KAAKy8F,wBAAwBh6D,MAAK,SAAAkF,GAC/D,IAAAywD,EAA8BzwD,EAAM,GAA1B+0D,EAAoB/0D,EAAM,GACrC9S,EAASujE,EAASvjE,OACpB,mBACA2oE,EACAd,GAEJ,OAAO,EAAK/E,YAAqB9iE,EAAQsZ,EAC7C,GAEJ,EAEA,YAAAyvD,QAAA,SAAQtF,EAAsBnqD,GAA9B,WAGI,OAFAnuC,KAAK04F,aAAa,WAEXzqE,QAAQ0e,IAAI,CAAC3sC,KAAKu2F,cAAev2F,KAAKy8F,wBAAwBh6D,MAAK,SAAAkF,GAC/D,IAAAywD,EAA8BzwD,EAAM,GAA1B+0D,EAAoB/0D,EAAM,GACrC9S,EAASujE,EAASvjE,OACpB,UACA6nE,EACAtI,EAAUvoD,MAAMysD,IAEpB,OAAO,EAAKrB,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAAo0D,WAAA,SAAWp0D,GAAX,WAGI,OAFAnuC,KAAK04F,aAAa,cAEXzqE,QAAQ0e,IAAI,CAAC3sC,KAAKu2F,cAAev2F,KAAKy8F,wBAAwBh6D,MAAK,SAAAkF,GAC/D,IAAAywD,EAA8BzwD,EAAM,GAA1B+0D,EAAoB/0D,EAAM,GACrC9S,EAASujE,EAASvjE,OACpB,oBACA6nE,GACA,GAEJ,OAAO,EAAKzF,aAAapiE,EAAQsZ,EACrC,GACJ,EAGA,YAAA+rD,QAAA,SAAQ5B,EAAsBkF,EAAqBrvD,GAC/CnuC,KAAK04F,aAAa,WAElB,IAAMoF,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMysD,IACjB,CAAC,YAEL,OAAOt4F,KAAKu8F,iBAAiBrC,QACzBsD,EACAx9F,KAAKs2F,cAAc5qD,QACnBoyD,EACA3vD,EAER,EAEA,YAAAq0D,YAAA,SAAYP,EAAyBzE,EAAqBrvD,GACtDnuC,KAAK04F,aAAa,eAElB,IAAM+J,EAAcziG,KAAKgiG,cAAcC,GAEjCnE,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAAC0P,GACD,CAAC,cAEL,OAAOziG,KAAKu8F,iBAAiBrC,QACzBsD,EACAx9F,KAAKs2F,cAAc5qD,QACnBoyD,EACA3vD,EAER,EAEA,YAAAiwD,cAAA,SAAc9F,EAAsBnqD,GAApC,WAII,OAHAnuC,KAAK24F,cAAc,iBAGZ34F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,WACAu/D,EAAUvoD,MAAMysD,IAEpB,OAAO,EAAKrB,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAAu0D,0BAAA,SAA0BpK,EAAsBnqD,GAAhD,WAII,OAHAnuC,KAAK24F,cAAc,6BAGZ34F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,uBACAu/D,EAAUvoD,MAAMysD,IAEpB,OAAO,EAAKrB,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAAw0D,kBAAA,SAAkBV,EAAyB9zD,GAA3C,WACInuC,KAAK24F,cAAc,qBAEnB,IAAM8J,EAAcziG,KAAKgiG,cAAcC,GAEvC,OAAOjiG,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,gBACA4tE,GAEJ,OAAO,EAAKxL,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAAswD,aAAA,SAAaH,EAA6BnwD,GAA1C,WAGI,OAFAnuC,KAAK04F,aAAa,gBAEX14F,KAAK26F,SAASyC,oBACjBkB,EACAxzD,EAAoB83D,gBACpB,GACFngE,MAAK,SAAA+I,GACH,OAAO,EAAK+wD,iBAAiBc,KACzB7xD,EAAS2C,EAEjB,GACJ,EAEA,YAAA00D,oBAAA,SAAoBvE,EAA6B39F,EAAewtC,GAAhE,WAGE,OAFAnuC,KAAK04F,aAAa,gBAEX14F,KAAK26F,SAASyC,oBACjBkB,EACAxzD,EAAoB83D,gBACpB,EACAjiG,GACF8hC,MAAK,SAAA+I,GACH,OAAO,EAAK+wD,iBAAiBc,KACzB7xD,EAAS2C,EAEjB,GACF,EAqBA,YAAAuwD,mBAAA,SAAmBJ,EAA6BnwD,GAAhD,WAGI,OAFAnuC,KAAK04F,aAAa,sBAEX14F,KAAK26F,SAASyC,oBACjBkB,EACAxzD,EAAoB83D,gBACpB,GACFngE,MAAK,SAAA+I,GACH,OAAO,EAAK+wD,iBAAiBc,KACzB7xD,EAAS2C,EAEjB,GACJ,EAiBA,YAAAwwD,iBAAA,SAAiBtZ,GACb,OAAOrlF,KAAK68F,YACRxX,EAAQv6C,EAAoB83D,eAEpC,EAEA,YAAAE,qBAAA,SAAqBzd,GACjB,OAAOrlF,KAAK68F,YACRxX,EAAQv6C,EAAoBi4D,oBAEpC,EAEA,YAAAC,wBAAA,SAAwB3d,EAAgB1kF,GACpC,OAAOX,KAAKi9F,mBACR5X,EAAQ1kF,EAAOmqC,EAAoB83D,eAE3C,EAYA,YAAAhE,SAAA,SAAStG,EAAiB/9E,EAAckrB,EAAY0I,GAChD,OAAOnuC,KAAKq4F,eACR99E,EACAkrB,EACA6yD,EACAnqD,EAER,EAEJ,EApVA,CAA4B0wD,+dCD5B,eAQI,WACIhI,EACAD,EACA/D,EACAyK,UAEA,YAAM,CACF1G,SAAQ,EACRlrD,QAASmrD,EACTv/E,KAAM,eACNm/E,WAAY,OACb5D,EAAQyK,IAAa,IAE5B,CA+TJ,OApV6B,QAIzB,sBAAI,4BAAa,KAAjB,WACI,OAAOt9F,KAAK6yF,OAAOlpD,OAAOs5D,SAAW,CAAC,CAC1C,kCAiBQ,YAAAC,YAAR,SAAoB1oF,GAChB,IAAM2oF,EAAYnjG,KAAKojG,cACvB,OAAID,EAAU3oF,GACHg0B,GAAe20D,EAAU3oF,IAG7Bxa,KAAK6yF,OAAO4C,UAAUj7E,EACjC,EAWA,YAAA+iF,WAAA,SAAWC,EAAqBlF,EAAsBnqD,GAAtD,WACI,OAAOnuC,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,YACA2oE,EACApJ,EAAUvoD,MAAMysD,IAEpB,OAAO,EAAKX,YAAoB9iE,EAAQsZ,EAC5C,GACJ,EAUA,YAAAm0D,cAAA,SAAc9E,EAAqBrvD,GAAnC,WAGI,OAFAnuC,KAAK04F,aAAa,iBAEXzqE,QAAQ0e,IAAI,CAAC3sC,KAAKu2F,cAAev2F,KAAKy8F,wBAAwBh6D,MAAK,SAAAkF,GAC/D,IAAAywD,EAA8BzwD,EAAM,GAA1B+0D,EAAoB/0D,EAAM,GACrC9S,EAASujE,EAASvjE,OACpB,mBACA2oE,EACAd,GAEJ,OAAO,EAAK/E,YAAqB9iE,EAAQsZ,EAC7C,GAEJ,EAEQ,YAAAk1D,YAAR,SAAoBC,EAA0Cn1D,GAA9D,WAGI,OAFAnuC,KAAK04F,aAAa,WAEXzqE,QAAQ0e,IAAI,CAAC3sC,KAAKu2F,cAAe+M,IAA0B7gE,MAAK,SAAAkF,GAC5D,IAAAywD,EAA8BzwD,EAAM,GAA1B+0D,EAAoB/0D,EAAM,GACrC9S,EAASujE,EAASvjE,OACpB,oBACA6nE,GACA,GAEJ,OAAO,EAAKzF,aAAapiE,EAAQsZ,EACrC,GACJ,EASA,YAAAo0D,WAAA,SAAWp0D,GAGP,OAFAnuC,KAAK04F,aAAa,WAEX14F,KAAKqjG,YACRrjG,KAAKy8F,sBAAuBtuD,EAEpC,EASA,YAAAo1D,sBAAA,SAAsBp1D,GAGlB,OAFAnuC,KAAK04F,aAAa,sBAEX14F,KAAKqjG,YACRrjG,KAAKkjG,YAFW,mDAEe/0D,EAEvC,EAUA,YAAA+rD,QAAA,SAAQlhB,EAA+B7qC,GAEnC,OADAnuC,KAAK04F,aAAa,WACX14F,KAAKwiG,YAAY,CACpBgB,QAAS,CAACxqB,EAAMltC,QAChBm2D,SAAU,CAACjpB,EAAMsf,SACjBkF,YAAaxkB,EAAMwkB,YACnBzhF,KAAMi9D,EAAMj9D,MACboyB,EACP,EAUA,YAAAq0D,YAAA,SAAYxpB,EAAoC7qC,GAC5CnuC,KAAK04F,aAAa,eAEV,IAAAuJ,EAAyCjpB,EAAK,SAApCwqB,EAA+BxqB,EAAK,QAA3Bj9D,EAAsBi9D,EAAK,KAArBwkB,EAAgBxkB,EAAK,YAChDyqB,EAAWrP,EAAUvoD,MAAM,GAC3BiyD,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CACIkP,EAASv1E,KAAI,SAAA7mB,GAAK,OAAAuuF,EAAUvoD,MAAMhmC,EAAhB,IAClB29F,EAAQ92E,KAAI,SAAA1oB,GAAK,OAAAowF,EAAUvoD,MAAM7nC,EAAhB,IACjB+X,GAAQ0nF,GAEZ,CAAC,YAAa,YAAa,UAG/B,OAAOzjG,KAAKu8F,iBAAiBrC,QACzBsD,EACAx9F,KAAKs2F,cAAc5qD,QACnBoyD,EACA3vD,EAGR,EAWA,YAAAiwD,cAAA,SAAc9F,EAAsBxsD,EAAqBqC,GAAzD,WAGI,OAFAnuC,KAAK24F,cAAc,iBAEZ34F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,iBACAu/D,EAAUvoD,MAAMysD,GAChBlE,EAAUvoD,MAAMC,IAEpB,OAAO,EAAKmrD,aAAapiE,EAAQsZ,EACrC,GACJ,EAWA,YAAAw0D,kBAAA,SAAkBV,EAAyBuB,EAAwBr1D,GAAnE,WACInuC,KAAK24F,cAAc,qBAEnB,IAAM8J,EAAcR,EAASv1E,KAAI,SAAA7mB,GAC7B,OAAOuuF,EAAUvoD,MAAMhmC,EAC3B,IACM69F,EAAeF,EAAQ92E,KAAI,SAAA7mB,GAC7B,OAAOuuF,EAAUvoD,MAAMhmC,EAC3B,IAEA,OAAO7F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,gBACA4tE,EACAiB,GAEJ,OAAO,EAAKzM,aAAapiE,EAAQsZ,EACrC,GACJ,EAUA,YAAAswD,aAAA,SAAaH,EAA6BnwD,GAGtC,OAFAnuC,KAAK04F,aAAa,gBAEX14F,KAAKk9F,gBACRoB,EACAxzD,EAAoB64D,iBACpB,EACAx1D,EAER,EAYA,YAAAuwD,mBAAA,SAAmBJ,EAA6BnwD,GAG5C,OAFAnuC,KAAK04F,aAAa,sBAEX14F,KAAKk9F,gBACRoB,EACAxzD,EAAoB64D,iBACpB,EACAx1D,EAER,EAUA,YAAAy1D,iBAAA,SAAiBtF,EAA6BnwD,GAI1C,OAHAnuC,KAAK04F,aAAa,oBAGX14F,KAAKk9F,gBACRoB,EACAxzD,EAAoB+4D,sBACpB,EACA11D,EAER,EAYA,YAAA21D,uBAAA,SAAuBxF,EAA6BnwD,GAIhD,OAHAnuC,KAAK04F,aAAa,0BAGX14F,KAAKk9F,gBACRoB,EACAxzD,EAAoB+4D,sBACpB,EACA11D,EAER,EASA,YAAAwwD,iBAAA,SAAiBtZ,GACb,OAAOrlF,KAAK68F,YACRxX,EAAQv6C,EAAoB64D,gBAEpC,EASA,YAAAb,qBAAA,SAAqBzd,GACjB,OAAOrlF,KAAK68F,YACRxX,EAAQv6C,EAAoB+4D,qBAEpC,EAUA,YAAAjF,SAAA,SAAS5lB,EAAgC7qC,GACrC,OAAOnuC,KAAK+4F,gBACR/f,EAAO7qC,EAEf,EACJ,EApVA,CAA6B0wD,+dCJ7B,eAEI,WAAYC,EAAgDpzD,UACxD,YAAM,CACFA,QAASA,EACTp0B,KAAM,aACNm/E,WAAY,MACZG,UAAU,GACXkI,IAAQ,IACf,CA0BJ,OAnCgC,QAW5B,YAAAjqE,OAAA,SAAO2jE,OAAoB,wDACvB,OAAOx4F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,OAAOA,EAASvjE,OAAM,MAAfujE,iMAAQ,EAAQI,GAAe7vE,GAAI,GAC9C,GACJ,EAEA,YAAAo1E,eAAA,SACIlH,EACAkN,EACAvG,EACAS,EACA9vD,GALJ,WAOI,OAAOnuC,KAAK60B,OACR,gBACAgiE,EACAkN,EACAvG,EACAS,GACFx7D,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAEJ,EAnCA,CAAgC4sD,+dCahC,0EAiGA,QAjG+B,QAK3B,YAAA9uE,KAAA,SAAK0d,GAAL,WACUkpD,EAAS7yF,KAAK6yF,OAEpB,OAAOA,EAAO5mE,KAAK0d,GAAQlH,MAAK,SAAAvyB,GAC5B,IAAM8zF,EAAmBnR,EAAOmR,iBAChCnR,EAAOlpD,OAASA,EAASzvB,OAAO0zB,OAC5B,CACI2uD,iBAAkByH,EAAiBC,sBACnChF,UAAWpM,EAAOqR,oBAAoBC,eACtC3H,WAAYwH,EAAiBI,YAEjCz6D,GAGJ,EAAK4yD,iBAAmB,IAAI8H,GACxB,EAAKxR,OACLlpD,EAAO4yD,kBAGX,IAAM0C,EAAY,IAAIqF,GAClB,EAAKzR,OACLlpD,EAAOs1D,WAaX,OAVA,EAAKtE,SAAW,IAAI4J,GAChB,EAAK1R,OACLoM,GAGJ,EAAKzC,WAAa,IAAI4H,GAClB,EAAKvR,OACLlpD,EAAO6yD,YAGJ,CACX,GACJ,EAEA,YAAAgI,MAAA,SAAM3N,EAAcD,GAChB,OAAO,IAAI6N,GACP5N,EACAD,EACA52F,KAAK6yF,OACL7yF,KAAK0kG,cAAcv0E,KAAKnwB,MAEhC,EAEA,YAAA2kG,OAAA,SAAO9N,EAAcD,GACjB,OAAO,IAAIgO,GACP/N,EACAD,EACA52F,KAAK6yF,OACL7yF,KAAK0kG,cAAcv0E,KAAKnwB,MAEhC,EAEA,YAAAijG,QAAA,SAAQpM,EAAcD,GAClB,OAAO,IAAIiO,GACPhO,EACAD,EACA52F,KAAK6yF,OACL7yF,KAAK0kG,cAAcv0E,KAAKnwB,MAEhC,EAEA,YAAA8kG,aAAA,SAAah5D,EAAqB0xD,EAAqBrvD,GACnD,OAAO,IAAIs2D,GACP,IAAI,EAAMzkG,KAAK6yF,OACf7yF,KAAK0kG,cAAcv0E,KAAKnwB,OACX,cAAE8rC,EAAQ0xD,EAAarvD,EAC5C,EAEA,YAAA42D,oBAAA,SACIj5D,EACA0xD,EACAQ,EACAC,EACA9vD,GAEA,OAAO,IAAIs2D,GACP,IAAI,EAAMzkG,KAAK6yF,OACf7yF,KAAK0kG,cAAcv0E,KAAKnwB,OACJ,qBAAE8rC,EAAQ0xD,EAAaQ,EAAeC,EAAc9vD,EAChF,EAEQ,YAAAu2D,cAAR,WACI,MAAO,CACH/J,SAAU36F,KAAK26F,SACf4B,iBAAkBv8F,KAAKu8F,iBACvBC,WAAYx8F,KAAKw8F,WAEzB,EACJ,EAjGA,CAA+BwI,ICblB34D,GAAgB,CACzB2U,MAAO,GACP/U,IAAG,EACHg5D,UAAS,+dCFb,eAEI,WACI3O,EACAzD,EACUqS,GAHd,MAKI,YAAM5O,EAAezD,IAAO,YAFlB,EAAAqS,kBAAAA,GAGd,CAkBJ,OA1BgC,QAU5B,sBAAc,2BAAY,KAA1B,WACI,OAAOllG,KAAKklG,oBAAoBC,YACpC,kCAEA,sBAAc,2BAAY,KAA1B,WACI,OAAOnlG,KAAKklG,oBAAoBE,YACpC,kCAEA,sBAAc,0BAAW,KAAzB,WACI,OAAOplG,KAAKklG,oBAAoBG,WACpC,kCAEA,sBAAc,yBAAU,KAAxB,WACI,OAAOrlG,KAAKklG,oBAAoBtJ,UACpC,kCAEJ,EA1BA,CAAgCb,+dCIhC,eAEE,WAAY+D,EAAkDpzD,EAAiBkrD,UAC7E,YACE,CACElrD,QAASA,EACTp0B,KAAM,qBACNm/E,WAAY,QACZG,SAAUA,GAEZkI,IACD,IACH,CA8BF,OA1CwC,QActC,YAAAjqE,OAAA,SAAO2jE,OAAoB,wDACzB,OAAOx4F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC7B,OAAOA,EAASvjE,OAAM,MAAfujE,iMAAQ,EAAQI,GAAe7vE,GAAI,GAC5C,GACF,EAYA,YAAA28E,YAAA,SACEC,EACAz5D,EACA05D,EACAr3D,GAJF,WAME,OAAOnuC,KAAK60B,OAAO,cAAe0wE,EAAWnR,EAAUvoD,MAAMC,GAAS05D,GAA2B/iE,MAC/F,SAAA5N,GACE,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACnC,GAEJ,EACF,EA1CA,CAAwC4sD,+dCExC,eAEI,WACIlE,EACAD,EACAiC,EACAhG,EACAyK,GALJ,MAOI,YAAM,CACF1G,SAAQ,EACRlrD,QAASmrD,EACTgC,qBAAoB,EACpBvhF,KAAM,QACNm/E,WAAY,SACb5D,EAAQyK,IAAa,YACpBzE,IACA,EAAK4M,cAAgB,IAAIC,GACrB,EAAK7S,OACLgG,EACAjC,KAGZ,CAuyBJ,OA9zB2B,QA+BvB,YAAA+O,iBAAA,WAEI,OADe3lG,KAAKs2F,cAAcM,SAAW52F,KAAKmlG,aAAenlG,KAAKqlG,aACxDO,eAClB,EAEA,YAAAC,aAAA,WACI,OAAO7lG,KAAKs2F,cAAc5qD,UAAYsqD,EAC1C,EAUA,YAAAuH,WAAA,SAAWC,EAAqBrvD,GAAhC,WACI,OAAInuC,KAAK6lG,gBACU7lG,KAAKs2F,cAAcM,SAAW52F,KAAK6yF,OAAOztB,OAASplE,KAAK6yF,OAAOxzB,OAChEk+B,WAAWC,GAElBx9F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,YACA2oE,GAEJ,OAAO,EAAK7F,YAAoB9iE,EAAQsZ,EAC5C,GAGR,EAQA,YAAA23D,iBAAA,WACI,OAAI9lG,KAAK6lG,iBAIM7lG,KAAKs2F,cAAcM,SAAW52F,KAAKmlG,aAAenlG,KAAKqlG,aAExDU,mBAAmB/lG,KAAKs2F,cAAc5qD,SAC/CjJ,MAAK,SAAAujE,GACF,OAAOA,EAAU,KAAOhQ,EAC5B,GACR,EAUA,YAAAyH,aAAA,SAAaD,EAAqBrvD,GAAlC,gBAAkC,IAAAA,IAAAA,EAAA,IAC9BnuC,KAAKu4F,kBAAkB,gBACvB,IAAMmF,EAAiBvvD,EAAOuvD,eAAiBvvD,EAAOuvD,eAAiB19F,KAAK2lG,mBAE5E,OAAO3lG,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,YACA2oE,EACAE,GAEJ,OAAO,EAAK/F,YAAoB9iE,EAAQsZ,EAC5C,GACJ,EAUA,YAAAyvD,QAAA,SAAQ9xD,EAAqBqC,GAA7B,gBAA6B,IAAAA,IAAAA,EAAA,IACzBnuC,KAAKu4F,kBAAkB,WACvB,IAAMmF,EAAiBvvD,EAAOuvD,eAAiBvvD,EAAOuvD,eAAiB19F,KAAK2lG,mBAE5E,OAAO3lG,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,IAAMvjE,EAASujE,EAASvjE,OACpB,UACA6oE,EACAtJ,EAAUvoD,MAAMC,IAEpB,OAAO,EAAKmrD,aAAapiE,EAAQsZ,EACrC,GACJ,EASA,YAAA0vD,WAAA,SAAW1vD,GAEP,YAFO,IAAAA,IAAAA,EAAA,IACPnuC,KAAKu4F,kBAAkB,cAChBv4F,KAAK49F,QACR7H,GACA5nD,EAER,EAWA,YAAA+rD,QAAA,SAAQpuD,EAAqB0xD,EAAqBrvD,GAAlD,gBAAkD,IAAAA,IAAAA,EAAA,IAC9CnuC,KAAK04F,aAAa,WAClB,IAAMuN,EAAa93D,EAAO83D,YAAc,KAClCT,EAA4Br3D,EAAOq3D,4BAA6B,EAEhE1H,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAOL,OAJI9rC,KAAK6lG,iBACL13D,EAAO3zB,MAAQ45E,EAAUvoD,MAAMC,IAG5B9rC,KAAKqlG,YAAYtL,YAAYt3D,MAAK,SAAAyjC,GACrC,OAAO,EAAKi/B,aAAae,YACrBhgC,EACAs3B,EACAM,EACA,EAAKxH,cAAc5qD,QACnB85D,EACAS,EACA93D,EAER,GACJ,EAWA,YAAA4vD,eAAA,SAAejyD,EAAqB0xD,EAAqB2I,EAA2Bh4D,QAAA,IAAAA,IAAAA,EAAA,IAChFnuC,KAAK04F,aAAa,WAElB,IAAMoF,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAIL,OADAqC,EAAO3zB,MAAQ45E,EAAUvoD,MAAMs6D,GAC3Bh4D,EAAOpjB,GAAKojB,EAAOptC,GAAKotC,EAAO3/B,EACxBxO,KAAKolG,aAAagB,qBACrBpmG,KAAKs2F,cAAc5qD,QACnBoyD,EACAN,EACAp8F,KAAKwmB,OAAO6D,KAAKqmC,MAAQ,MAAW,KAAM9vD,WAC1CmsC,EAAOpjB,EACPojB,EAAOptC,EACPotC,EAAO3/B,EACP2/B,GAGDnuC,KAAKolG,aAAarH,eACrB/9F,KAAKs2F,cAAc5qD,QACnBoyD,EACAN,EACArvD,EAER,EAWA,YAAAi4D,qBAAA,SAAqBt6D,EAAqB0xD,EAAqB2I,EAA2Bh4D,GAA1F,gBAA0F,IAAAA,IAAAA,EAAA,IACtFnuC,KAAK04F,aAAa,WAClB14F,KAAKu4F,kBAAkB,iBAEvB,IAAMuF,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAKL,OAFAqC,EAAO3zB,MAAQ45E,EAAUvoD,MAAMs6D,GAExBnmG,KAAKqmG,0BAA0Bv6D,EAAQ9rC,KAAKolG,aAAaQ,iBAAiBnjE,MAC7E,SAAA6jE,GACI,OAAO,EAAKlB,aAAagB,qBACrB,EAAK9P,cAAc5qD,QACnBoyD,EACAN,EACAp8F,KAAKwmB,OAAO6D,KAAKqmC,MAAQ,MAAW,KAAM9vD,WAC1CskG,EAAgBv7E,EAChBu7E,EAAgBvlG,EAChBulG,EAAgB93F,EAChB2/B,EAER,GAER,EAWA,YAAAo4D,kBAAA,SAAkBz6D,EAAqB0xD,EAAqBrvD,GAA5D,gBAA4D,IAAAA,IAAAA,EAAA,IACxDnuC,KAAK04F,aAAa,WAClB14F,KAAKu4F,kBAAkB,qBAEvB,IAAMuF,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAGC05D,EAA4Br3D,EAAOq3D,4BAA6B,EAEtE,OAAOxlG,KAAKwmG,cAAc1I,EAAa3vD,GAAQ1L,MAAK,SAAAwjE,GAChD,OAAO,EAAKZ,YAAYtL,YAAYt3D,MAAK,SAAAyjC,GACrC,OAAO,EAAKi/B,aAAae,YACrBhgC,EACAs3B,EACAM,EACA,EAAKxH,cAAc5qD,QACnB85D,EACAS,EACA93D,EAER,GACJ,GACJ,EAUA,YAAAs4D,mBAAA,SAAmB36D,EAAqB0xD,EAAqBgI,GAMzD,YANyD,IAAAA,IAAAA,GAAA,GAEzDxlG,KAAK04F,aAAa,sBAClB14F,KAAK44F,oBAAoB,sBAEzB54F,KAAKu4F,kBAAkB,sBAChBv4F,KAAKylG,cAAcH,YAAY9H,EAAa1xD,EAAQ05D,EAC/D,EASA,YAAAkB,wBAAA,SAAwBlT,EAAyBrlD,GAAjD,WAEI,OADAnuC,KAAK24F,cAAc,2BACZ34F,KAAKmlG,aAAapL,YAAYt3D,MAAK,SAAAyjC,GACtC,OAAO,EAAK01B,WAAW+K,qBACnBnT,GAAiB,EAAMttB,EAE/B,IAAGzjC,MAAK,SAAA+I,GACJ,OAAO,EAAK65D,YAAYuB,aACpBp7D,EAAQq7D,SACRr7D,EAAQs7D,eACRt7D,EAAQu7D,YACRv7D,EAAQw7D,gBACRx7D,EAAQy7D,eACRz7D,EAAQ07D,cACR17D,EAAQ27D,mBACR37D,EAAQ47D,mBACR57D,EAAQ67D,mBACR77D,EAAQM,OACRN,EAAQ87D,SACRn5D,EAER,GACJ,EAWA,YAAAo5D,aAAA,SAAa/T,EAAyBrlD,GAAtC,WAEI,OADAnuC,KAAK24F,cAAc,gBACZ34F,KAAKmlG,aAAapL,YAAYt3D,MAAK,SAAAyjC,GACtC,OAAO,EAAK01B,WAAW+K,qBACnBnT,GAAiB,EAAMttB,EAE/B,IAAGzjC,MAAK,SAAA+I,GACJ,OAAO,EAAK65D,YAAYmC,WACpBh8D,EAAQq7D,SACRr7D,EAAQs7D,eACRt7D,EAAQu7D,YACRv7D,EAAQw7D,gBACRx7D,EAAQy7D,eACRz7D,EAAQ07D,cACR17D,EAAQ27D,mBACR37D,EAAQ47D,mBACR57D,EAAQ67D,mBACR77D,EAAQM,OACRN,EAAQ87D,SACRn5D,EAER,GACJ,EAWA,YAAAs5D,SAAA,SAAS37D,EAAqB0xD,EAAqBrvD,GAAnD,gBAAmD,IAAAA,IAAAA,EAAA,IAC/CnuC,KAAK24F,cAAc,YACnB,IAAMsN,EAAa93D,EAAO83D,YAAc,KAClCT,EAA4Br3D,EAAOq3D,4BAA6B,EAEhE1H,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAOL,OAJI9rC,KAAK6lG,iBACL13D,EAAO3zB,MAAQ45E,EAAUvoD,MAAMC,IAG5B9rC,KAAKmlG,aAAapL,YAAYt3D,MAAK,SAAAyjC,GACtC,OAAO,EAAKm/B,YAAYa,YACpBhgC,EACAs3B,EACAM,EACA,EAAKxH,cAAc5qD,QACnB85D,EACAS,EACA93D,EAER,GACJ,EAUA,YAAAu5D,oBAAA,SAAoB57D,EAAqB0xD,EAAqBgI,GAM1D,YAN0D,IAAAA,IAAAA,GAAA,GAE1DxlG,KAAK24F,cAAc,uBACnB34F,KAAK44F,oBAAoB,sBAEzB54F,KAAKu4F,kBAAkB,uBAChBv4F,KAAKylG,cAAcH,YAAY9H,EAAa1xD,EAAQ05D,EAC/D,EASA,YAAAmC,wBAAA,SAAwBrJ,EAA6BnwD,GAArD,WAEI,OADAnuC,KAAK04F,aAAa,2BACX14F,KAAKqlG,YAAYtL,YAAYt3D,MAAK,SAAAyjC,GACrC,OAAO,EAAK01B,WAAW+K,qBACnBrI,GAAqB,EAAOp4B,EAEpC,IAAGzjC,MAAK,SAAA+I,GACJ,OAAO,EAAK25D,aAAayB,aACrBp7D,EAAQq7D,SACRr7D,EAAQs7D,eACRt7D,EAAQu7D,YACRv7D,EAAQw7D,gBACRx7D,EAAQy7D,eACRz7D,EAAQ07D,cACR17D,EAAQ27D,mBACR37D,EAAQ47D,mBACR57D,EAAQ67D,mBACR77D,EAAQM,OACRN,EAAQ87D,SACRn5D,EAER,GACJ,EAWA,YAAAy5D,mBAAA,SAAmB97D,EAAqB0xD,EAAqBrvD,GAA7D,gBAA6D,IAAAA,IAAAA,EAAA,IACzDnuC,KAAK24F,cAAc,YAEnB,IAAMmF,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAGC05D,EAA4Br3D,EAAOq3D,4BAA6B,EAEtE,OAAOxlG,KAAKwmG,cAAc1I,EAAa3vD,GAAQ1L,MAAK,SAAAwjE,GAChD,OAAO,EAAKd,aAAapL,YAAYt3D,MAAK,SAAAyjC,GACtC,OAAO,EAAKm/B,YAAYa,YACpBhgC,EACAs3B,EACAM,EACA,EAAKxH,cAAc5qD,QACnB85D,EACAS,EACA93D,EAER,GACJ,GACJ,EAUA,YAAAswD,aAAA,SAAaH,EAA6BnwD,GAA1C,WAEI,OADAnuC,KAAK04F,aAAa,gBACX14F,KAAKqlG,YAAYtL,YAAYt3D,MAAK,SAAAyjC,GACrC,OAAO,EAAK01B,WAAW+K,qBACnBrI,GAAqB,EAAOp4B,EAEpC,IAAGzjC,MAAK,SAAA+I,GACJ,OAAO,EAAK25D,aAAaqC,WACrBh8D,EAAQq7D,SACRr7D,EAAQs7D,eACRt7D,EAAQu7D,YACRv7D,EAAQw7D,gBACRx7D,EAAQy7D,eACRz7D,EAAQ07D,cACR17D,EAAQ27D,mBACR37D,EAAQ47D,mBACR57D,EAAQ67D,mBACR77D,EAAQM,OACRN,EAAQ87D,SACRn5D,EAER,GACJ,EAWA,YAAAywD,SAAA,SAAS9yD,EAAqBrG,EAAY0I,GACtC,YADsC,IAAAA,IAAAA,EAAA,IAClCnuC,KAAKs2F,cAAc5qD,UAAYsqD,IAC/B7nD,EAAO1I,GAAKA,EACZ0I,EAAO3zB,MAAQ45E,EAAUvoD,MAAMC,GACxB9rC,KAAKw3F,gBAAgBrpD,IAEzBnuC,KAAKm4F,cAAc1yD,EAAIqG,EAAQqC,EAC1C,EAQQ,YAAA05D,UAAR,eACQzP,EADR,OAEI,OAAOp4F,KAAKu2F,cAAc9zD,MAAK,SAAAqlE,GAE3B,IAAMjzE,GADNujE,EAAW0P,GACajzE,OACpB,mBAEJ,OAAO,EAAK8iE,YAAoB9iE,EACpC,IAAG4N,MAAK,SAAAslE,GACJ,OAAQA,GACJ,KAAK9R,GACD,OAAO5E,GAAO2W,IAElB,KAAK9R,GACD,IAAM+R,EAAkB7P,EAASvjE,OAAO,mBAClCqzE,EAAoB9P,EAASvjE,OAAO,qBAC1C,OAAO8gE,GAAW,CAAC,EAAKgC,YAAoBsQ,GAAkB,EAAKtQ,YAAoBuQ,KAAqBzlE,MACxG,SAAC0lE,GACG,OAAQA,GACJ,KAAKhS,GACD,OAAO9E,GAAO+W,SAElB,KAAKhS,GACD,OAAO/E,GAAOgX,QAElB,QACI,OAAOp6E,QAAQE,OAAO,IAAIxvB,MAAM,uCAAgCwpG,KAG5E,IAGR,QACI,OAAOl6E,QAAQE,OAAO,IAAIxvB,MAAM,uCAAgCopG,KAG5E,GACJ,EAeQ,YAAAO,cAAR,SAAsBC,EAAoBC,EAAiB16C,EAAiBx2C,EAAcy0C,EAAe2xC,EAAwB5xD,GAC7H,IAAM28D,EAAY,CACdC,MAAO,CACHC,aAAc,CACV,CAAErxF,KAAM,OAAQwE,KAAM,UACtB,CAAExE,KAAM,UAAWwE,KAAM,UACzB,CAAExE,KAAM,UAAWwE,KAAM,WACzB,CAAExE,KAAM,oBAAqBwE,KAAM,YAEvCu1E,OAAQ,IAEZuX,YAAa,SACbC,OAAQ,CACJvxF,KAAI,EACJ6sE,QAAS,IACTr2B,QAAO,EACPg7C,kBAAmB9oG,KAAKs2F,cAAc5qD,SAE1CpkB,QAAS,CAAC,GAEd,OAAQihF,GACJ,KAAKlX,GAAO2W,IACRS,EAAUC,MAAMrX,OAAS,CACrB,CAAE/5E,KAAM,SAAUwE,KAAM,WACxB,CAAExE,KAAM,UAAWwE,KAAM,WACzB,CAAExE,KAAM,QAASwE,KAAM,WACvB,CAAExE,KAAM,SAAUwE,KAAM,WACxB,CAAExE,KAAM,UAAWwE,KAAM,SAE7B2sF,EAAUnhF,QAAU,CAChB8Y,OAAQooE,EACRO,QAASrL,EACT3xC,MAAK,EACLi9C,OAAQ5nG,KAAKwmB,OAAO6D,KAAKqmC,MAAQ,MAAW,KAC5Cm3C,SAAS,GAEjB,KAAK5X,GAAO+W,SACZ,KAAK/W,GAAOgX,QAEJE,IAAelX,GAAOgX,UACtBI,EAAUC,MAAMC,aAAe,CAC3B,CAAErxF,KAAM,OAAQwE,KAAM,UACtB,CAAExE,KAAM,UAAWwE,KAAM,WACzB,CAAExE,KAAM,oBAAqBwE,KAAM,mBAEhC2sF,EAAUI,OAAO1kB,SAE5BskB,EAAUC,MAAMrX,OAAS,CACrB,CAAE/5E,KAAM,QAASwE,KAAM,WACvB,CAAExE,KAAM,UAAWwE,KAAM,WACzB,CAAExE,KAAM,QAASwE,KAAM,WACvB,CAAExE,KAAM,QAASwE,KAAM,WACvB,CAAExE,KAAM,WAAYwE,KAAM,YAE9B2sF,EAAUnhF,QAAU,CAChB4hF,MAAOV,EACPO,QAASrL,EACTljF,MAAOsxB,EACPigB,MAAOA,EACPo9C,SAAU/nG,KAAKwmB,OAAO6D,KAAKqmC,MAAQ,MAAW,MAG1D,OAAO22C,CACX,EAUQ,YAAAW,wBAAR,SAAgCvW,EAAwB9vC,GACpD,IAAK,GAAYA,GACb,MAAM,IAAIpkD,MACN,gBAAgB+hB,OAAOqiC,EAAW,iCAIZ,OAA1BA,EAAUloC,MAAM,EAAG,KACnBkoC,EAAY,KAAKriC,OAAOqiC,IAG5B,IAAMhiD,EAAIgiD,EAAUloC,MAAM,EAAG,IACvBrM,EAAI,KAAKkS,OAAOqiC,EAAUloC,MAAM,GAAI,MACtCkQ,EAAI8nE,EAAOzgD,YAAY,KAAK1xB,OAAOqiC,EAAUloC,MAAM,IAAK,OAI5D,MAHK,CAAC,GAAI,IAAI4G,SAASsJ,KACnBA,GAAK,IAEF,CACHhqB,EACAyN,EAAGA,EACHuc,EAAGA,EAEX,EAeQ,YAAAs+E,0BAAR,SAAkCjR,EAAwBmQ,EAAoBjC,EAAsB5I,EAAwB8K,EAAiBz8C,EAAejgB,GAChJ,IACJjX,EADI9zB,EAAYulG,EAAe,EAAxB93F,EAAS83F,EAAe,EAArBv7E,EAAMu7E,EAAe,EAEnC,OAAQiC,GACJ,KAAKlX,GAAO2W,IACRnzE,EAASujE,EAASvjE,OACd,SACA2zE,EACA9K,EACA3xC,EACA3qD,KAAKwmB,OAAO6D,KAAKqmC,MAAQ,MAAW,MACpC,EACA/mC,EACAhqB,EACAyN,GAEJ,MAEJ,KAAK6iF,GAAO+W,SACZ,KAAK/W,GAAOgX,QACRxzE,EAASujE,EAASvjE,OACd,SACA2zE,EACA9K,EACA5xD,EACA1qC,KAAKwmB,OAAO6D,KAAKqmC,MAAQ,MAAW,KACpC/mC,EACAhqB,EACAyN,GAIZ,OAAOqmB,EAAO0iE,WAClB,EAEQ,YAAA8O,0BAAR,SAAkCv6D,EAAqB4xD,GAAvD,IAOQ8K,EACA16C,EACAy6C,EACAnQ,EACArsC,EAXR,OACU+xC,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAGC+mD,EAAS7yF,KAAKs2F,cAAcM,SAAW52F,KAAK6yF,OAAOztB,OAASplE,KAAK6yF,OAAOxzB,MAO9E,OAAOpxC,QAAQ0e,IAAI,CAAiB,SAAhBkmD,EAAOv7E,KAAkBu7E,EAAOpnD,uBAAyBonD,EAAOyW,cAAetpG,KAAKu2F,cAAe1D,EAAOiE,aAAc92F,KAAK6nG,cAAcplE,MAAK,SAAAkF,GAChK6gE,EAAU7gE,EAAO,GAAG,GACpBywD,EAAWzwD,EAAO,GAClBmmB,EAAUnmB,EAAO,GACjB4gE,EAAa5gE,EAAO,GACpB,IAAM4hE,EAAanR,EAASvjE,OAAO,QAC7B20E,EAAcpR,EAASvjE,OAAO,SAAU2zE,GAC9C,OAAOv6E,QAAQ0e,IAAI,CAAC,EAAKgrD,YAAoB4R,GAAa,EAAK5R,YAAoB6R,IACvF,IAAG/mE,MAAK,SAAA1mB,GACJ,IAAMzE,EAAOyE,EAAK,GAElB,OADAgwC,EAAQhwC,EAAK,GACN,EAAKusF,cAAcC,EAAYC,EAAS16C,EAASx2C,EAAMy0C,EAAO2xC,EAAgBI,EACzF,IAAGr7D,MAAK,SAAAgmE,GACJ,OAAO5V,EAAO4W,cAAcjB,EAASC,EACzC,IAAGhmE,MAAK,SAAAsgB,GACJ,OAAO,EAAKqmD,wBAAwBvW,EAAQ9vC,EAChD,GACJ,EAUQ,YAAA2mD,eAAR,SAAuB59D,EAAqB4xD,GAA5C,IAQQ8K,EACA16C,EACAy6C,EACAnQ,EACArsC,EAZR,OAEU+xC,EAAc99F,KAAK6yF,OAAOztB,OAAO2tB,iBACnC,CAACqB,EAAUvoD,MAAMC,IACjB,CAAC,YAGC+mD,EAAS7yF,KAAKs2F,cAAcM,SAAW52F,KAAK6yF,OAAOztB,OAASplE,KAAK6yF,OAAOxzB,MAO9E,OAAOpxC,QAAQ0e,IAAI,CAAiB,SAAhBkmD,EAAOv7E,KAAkBu7E,EAAOpnD,uBAAyBonD,EAAOyW,cAAetpG,KAAKu2F,cAAe1D,EAAOiE,aAAc92F,KAAK6nG,cAAcplE,MAAK,SAAAkF,GAChK6gE,EAAU7gE,EAAO,GAAG,GACpBywD,EAAWzwD,EAAO,GAClBmmB,EAAUnmB,EAAO,GACjB4gE,EAAa5gE,EAAO,GACpB,IAAM4hE,EAAanR,EAASvjE,OAAO,QAC7B20E,EAAcpR,EAASvjE,OAAO,SAAU2zE,GAC9C,OAAOv6E,QAAQ0e,IAAI,CAAC,EAAKgrD,YAAoB4R,GAAa,EAAK5R,YAAoB6R,IACvF,IAAG/mE,MAAK,SAAA1mB,GACJ,IAAMzE,EAAOyE,EAAK,GAElB,OADAgwC,EAAQhwC,EAAK,GACN,EAAKusF,cAAcC,EAAYC,EAAS16C,EAASx2C,EAAMy0C,EAAO2xC,EAAgBI,EACzF,IAAGr7D,MAAK,SAAAgmE,GACJ,OAAO5V,EAAO4W,cAAcjB,EAASC,EACzC,IAAGhmE,MAAK,SAAAsgB,GACJ,IAAM4mD,EAAsB,EAAKP,wBAAwBvW,EAAQ9vC,GACjE,OAAO,EAAKsmD,0BACRjR,EAAUmQ,EAAYoB,EAAqBjM,EAAgB8K,EAASz8C,EAAO+xC,EAEnF,GACJ,EAUA,YAAA0I,cAAA,SAAc16D,EAAqBqC,QAAA,IAAAA,IAAAA,EAAA,IAC/BnuC,KAAKu4F,kBAAkB,iBAEvB,IAAMmF,EAAiBvvD,EAAOuvD,eAAiBvvD,EAAOuvD,eAAiB19F,KAAK2lG,mBAE5E,OAAO3lG,KAAK0pG,eAAe59D,EAAQ4xD,EACvC,EACJ,EA9zBA,CAA2BkM,+dCN3B,eAII,WAAY9K,EAAkDpzD,EAAiBkrD,UAC3E,YAAM,CACFlrD,QAASA,EACTp0B,KAAM,qBACNm/E,WAAY,QACZG,SAAUA,GACXkI,IAAQ,IACf,CA8QJ,OAzRiC,QAa7B,YAAAjqE,OAAA,SAAO2jE,OAAoB,wDACvB,OAAOx4F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,OAAOA,EAASvjE,OAAM,MAAfujE,iMAAQ,EAAQI,GAAe7vE,GAAI,GAC9C,GACJ,EAeA,YAAAu9E,YAAA,SACIkB,EACAC,EACAv7D,EACAgvD,EACA0K,EACAS,EACA93D,GAPJ,WASI,YAHA,IAAA83D,IAAAA,EAAA,MAGOjmG,KAAK60B,OACR,cACAuyE,EACAC,EACAjT,EAAUvoD,MAAMC,GAChBgvD,EACA0K,EACAS,GACFxjE,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAoBA,YAAAq5D,WAAA,SACIX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAv7D,EACAw7D,EACAn5D,GAZJ,WAcI,OAAOnuC,KAAK60B,OACR,aACAgyE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAv7D,EACAw7D,GACF7kE,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aACRpiE,EACAsZ,EAER,GACJ,EAaA,YAAA07D,cAAA,SACIzC,EACAC,EACA7B,EACAS,EACA93D,GALJ,WAOI,YAHA,IAAA83D,IAAAA,EAAA,MAGOjmG,KAAK60B,OACR,gBACAuyE,EACAC,EACA7B,EACAS,GACFxjE,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAsBA,YAAAy4D,aAAA,SACIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAv7D,EACAw7D,EACAn5D,GAZJ,WAaI,OAAOnuC,KAAK60B,OACR,eACAgyE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAv7D,EACAw7D,GACF7kE,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aACRpiE,EACAsZ,EAER,GACJ,EAUA,YAAA27D,mBAAA,SACI5C,EACAC,GAFJ,WAII,OAAOnnG,KAAK60B,OACR,yBAA0BqyE,EAAeC,GAC3C1kE,MAAK,SAAA5N,GACH,OAAO,EAAK8iE,YAAoB9iE,EACpC,GACJ,EASA,YAAAqnE,UAAA,SACIv7F,EACAopG,GAFJ,WAII,OAAO/pG,KAAK60B,OACR,YAAal0B,EAAOopG,GACtBtnE,MAAK,SAAA5N,GACH,OAAO,EAAK8iE,YAAoB9iE,EACpC,GACJ,EAUA,YAAAm1E,6BAAA,SACI9C,EACAC,GAFJ,WAII,OAAOnnG,KAAK60B,OACR,8BAA+BqyE,EAAeC,GAChD1kE,MAAK,SAAA5N,GACH,OAAO,EAAK8iE,YAAoB9iE,EACpC,GACJ,EASA,YAAAkxE,mBAAA,SAAmBkE,GAAnB,WACI,OAAOjqG,KAAK60B,OACR,0BAA2Bo1E,GAC7BxnE,MAAK,SAAA5N,GACH,OAAO,EAAK8iE,YAA8B9iE,EAC9C,GACJ,EAQA,YAAAklE,UAAA,sBACI,OAAI/5F,KAAKkqG,WACE17D,GAAuBxuC,KAAKkqG,YAEhClqG,KAAK60B,OACR,aACF4N,MAAK,SAAA5N,GACH,OAAO,EAAK8iE,YAAoB9iE,GAAQ4N,MAAK,SAACyjC,GAE1C,OADA,EAAKgkC,WAAahkC,EACXA,CACX,GACJ,GACJ,EAEJ,EAzRA,CAAiC60B,ICkCjC,cAII,WAAYlI,GAFJ,KAAAsX,aAAe,qEAGnBnqG,KAAK8+F,QAAUjM,CACnB,CAyFJ,OAvFY,YAAAuX,mBAAR,SAA2BruF,EAAc66E,GACrC,IAAM/D,EAAS+D,EAAW52F,KAAK8+F,QAAQ15B,OAASplE,KAAK8+F,QAAQz/B,MAC7D,OAAOr/D,KAAK8+F,QAAQtJ,OAAO,qBAAsB,SAAS/yD,MAAK,SAAAi0D,GAC3D,IAAMgS,EAAQhS,EAAI1zD,QAAO,SAAApH,GAAS,MAAe,gBAAfA,EAAMtkB,IAAN,IAClC,IAAKoxF,EAAM3qG,OACP,MAAM,IAAIY,MAAM,oBAEpB,IAAM0rG,EAAcxX,EAAOsI,iBAAiBp/E,EAAM2sF,EAAM,GAAG4B,QAE3D,MAAO,CACHC,SAF0HF,EAAW,GAGrInD,cAH0HmD,EAAW,GAIrIlD,mBAJ0HkD,EAAW,GAKrIjD,mBAL0HiD,EAAW,GAMrIhD,mBAN0HgD,EAAW,GAOrIv+D,OAP0Hu+D,EAAW,GAQrI/C,SAR0H+C,EAAW,IAQ/G,KACtBrQ,aAT0HqQ,EAAW,GAW7I,GACJ,EAEQ,YAAAG,kBAAR,SAA0BhX,EAAyBoD,GAAnD,WAEI,OADeA,EAAW52F,KAAK8+F,QAAQ15B,OAASplE,KAAK8+F,QAAQz/B,OAC/Co0B,sBAAsBD,GAC/B/wD,MAAK,SAAAwwD,GACF,IAAMsB,EAAOtB,EAAQsB,KAAKvxD,QAAO,SAAApY,GAAO,OAAAA,EAAI4pE,OAAO,GAAG/3E,gBAAkB,EAAK0tF,YAArC,IACxC,IAAK5V,EAAKx2F,OACN,MAAM,IAAIY,MAAM,4BAGpB,IAAMod,EAAOw4E,EAAK,GAAGx4E,KACrB,OAAO,EAAKquF,mBAAmBruF,EAAM66E,EACzC,GACR,EAEQ,YAAA6T,UAAR,SAAkBvkC,EAAmB8zB,GACjC,OAAOG,GAAQK,aAAaV,uBACxB95F,KAAK8+F,QAAQn1D,OAAOw6C,QACpBje,EACA8zB,GACFv3D,MAAK,SAAA2uB,GACH,OAAOA,CACX,IAAGlB,OAAM,SAAAhgD,GACL,MAAM,IAAIvR,MAAM,0BACpB,GACJ,EAEA,YAAAk9F,iBAAA,SAAiBrI,EAAyBoD,GACtC,OAAO52F,KAAKwqG,kBAAkBhX,EAAiBoD,EACnD,EAEA,YAAA8T,mBAAA,SAAmBC,EAAoBC,EAAqBC,GACxD,OAAI1oF,OAAO0oF,KAAqB1oF,OAAO,GAC5BA,OAAOwoF,GAActU,GAErBl0E,OAAOwoF,GAAcxoF,OAAOyoF,GAAezoF,OAAO,WAAK,IAEtE,EAEA,YAAAwkF,qBAAA,SAAqBnT,EAAyBoD,EAAmB1wB,GAAjE,WACI,OAAOlmE,KAAKwqG,kBAAkBhX,EAAiBoD,GAAUn0D,MAAK,SAAA1mB,GAEtD,IAAAmrF,EAMiBnrF,EAAI,cALrBorF,EAKiBprF,EAAI,mBAJrBqrF,EAIiBrrF,EAAI,mBAHrBsrF,EAGiBtrF,EAAI,mBAFrB+vB,EAEiB/vB,EAAI,OADrBurF,EACiBvrF,EAAI,SAArBi+E,EAAiBj+E,EAAI,aACzB,OAAO,EAAK0uF,UAAUvkC,EAAW8zB,GAAcv3D,MAAK,SAAA2uB,GAChD,IAAM5lB,EAAU,CAAC,EAYjB,OAXAA,EAAQq7D,SAAWz1C,EAAM05C,aACzBt/D,EAAQs7D,eAAiB11C,EAAM25C,oBAC/Bv/D,EAAQu7D,YAAc,EAAK2D,mBAAmB1Q,EAAcoN,EAAoBlhC,GAAWlkE,WAC3FwpC,EAAQw7D,gBAAkB51C,EAAM45C,eAChCx/D,EAAQy7D,eAAiB71C,EAAM65C,iBAC/Bz/D,EAAQ07D,cAAgBA,EACxB17D,EAAQ27D,mBAAqBA,EAC7B37D,EAAQ47D,mBAAqBA,EAC7B57D,EAAQ67D,mBAAqBA,EAC7B77D,EAAQM,OAASA,EACjBN,EAAQ87D,SAAWA,EACZ97D,CACX,GACJ,GACJ,EACJ,EA/FA,8dCnCA,eAEI,WAAYszD,EAAkDpzD,UAC1D,YAAM,CACFA,QAASA,EACTp0B,KAAM,eACNm/E,WAAY,QACZG,UAAU,GACXkI,IAAQ,IACf,CAgDJ,OAzDkC,QAW9B,YAAAjqE,OAAA,SAAO2jE,OAAoB,wDACvB,OAAOx4F,KAAKu2F,cAAc9zD,MAAK,SAAA21D,GAC3B,OAAOA,EAASvjE,OAAM,MAAfujE,iMAAQ,EAAQI,GAAe7vE,GAAI,GAC9C,GACJ,EAEA,YAAAo1E,eAAA,SACIlH,EACAkN,EACAvG,EACArvD,GAJJ,WAMI,OAAOnuC,KAAK60B,OACR,UACAgiE,EACAkN,EACAvG,GACF/6D,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAEA,YAAAi4D,qBAAA,SACIvP,EACAkN,EACAvG,EACA2L,EACAp+E,EACAhqB,EACAyN,EACA2/B,GARJ,WAUI,OAAOnuC,KAAK60B,OACR,UACAgiE,EACAkN,EACAvG,EACA2L,EACAp+E,EACAhqB,EACAyN,GACFi0B,MAAK,SAAA5N,GACH,OAAO,EAAKoiE,aAAapiE,EAAQsZ,EACrC,GACJ,EAEJ,EAzDA,CAAkC4sD,+dCUlC,0EAgFA,QAhFiC,QAI7B,YAAA9uE,KAAA,SAAK0d,GAAL,WACUkpD,EAAS7yF,KAAK6yF,OAEpB,OAAOA,EAAO5mE,KAAK0d,GAAQlH,MAAK,SAAAvyB,GAC5B,IAAMg7F,EAAqBrY,EAAOqY,mBAC5BC,EAAiBtY,EAAOsY,eAuC9B,OAtCAtY,EAAOlpD,OAASA,EAASzvB,OAAO0zB,OAC5B,CACIu3D,aAAc+F,EAAmBE,wBACjC/F,YAAa8F,EAAeE,mBAC5BjG,aAAc8F,EAAmBI,cAErC3hE,GAGJ,EAAKgyD,gBAAkB,IAAI4P,GACvB,EAAK1Y,OACLlpD,EAAOw7D,cACP,GAGJ,EAAKlJ,iBAAmB,IAAIsP,GACxB,EAAK1Y,OACLlpD,EAAO07D,aACP,GAGJ,EAAKD,aAAe,IAAIkG,GACpB,EAAKzY,OACLlpD,EAAOy7D,cAGX,EAAKxJ,WAAa,IAAI4P,GAClB,EAAK3Y,QAGJsH,GAAQK,eACqE,MAA1E,GAAUnB,mBAAmB,GAAUA,mBAAmBt7F,OAAS,KACnE,GAAUs7F,oBAAsB,KAEpC,GAAUA,oBAAsB,aAChCc,GAAQK,aAAe,IAAIF,GAAe,GAAUjB,qBAGjD,CACX,GACJ,EAYA,YAAAmL,MAAA,SAAM3N,EAAsBD,EAAoBiC,GAC5C,OAAO,IAAI,GACPhC,EACAD,EACAiC,EACA74F,KAAK6yF,OACL7yF,KAAK0kG,cAAcv0E,KAAKnwB,MAEhC,EAEQ,YAAA0kG,cAAR,WACI,MAAO,CACHS,aAAcnlG,KAAK27F,gBACnB0J,YAAarlG,KAAKi8F,iBAClBL,WAAY57F,KAAK47F,WACjBwJ,aAAcplG,KAAKolG,aAE3B,EACJ,EAhFA,CAAiCqG,ICDjC,mBtKFA","sources":["webpack://matic/webpack/universalModuleDefinition","webpack://matic/./node_modules/base64-js/index.js","webpack://matic/./node_modules/bn.js/lib/bn.js","webpack://matic/./node_modules/buffer/index.js","webpack://matic/./node_modules/debug/src/browser.js","webpack://matic/./node_modules/debug/src/common.js","webpack://matic/./node_modules/events/events.js","webpack://matic/./node_modules/ieee754/index.js","webpack://matic/./node_modules/inherits/inherits_browser.js","webpack://matic/./node_modules/ms/index.js","webpack://matic/./node_modules/node-fetch/browser.js","webpack://matic/./node_modules/readable-stream/errors-browser.js","webpack://matic/./node_modules/readable-stream/lib/_stream_duplex.js","webpack://matic/./node_modules/readable-stream/lib/_stream_passthrough.js","webpack://matic/./node_modules/readable-stream/lib/_stream_readable.js","webpack://matic/./node_modules/readable-stream/lib/_stream_transform.js","webpack://matic/./node_modules/readable-stream/lib/_stream_writable.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/state.js","webpack://matic/./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://matic/./node_modules/readable-stream/readable-browser.js","webpack://matic/./node_modules/rlp/dist/index.js","webpack://matic/./node_modules/safe-buffer/index.js","webpack://matic/./node_modules/string_decoder/lib/string_decoder.js","webpack://matic/./node_modules/string_decoder/node_modules/safe-buffer/index.js","webpack://matic/./node_modules/util-deprecate/browser.js","webpack://matic/webpack/bootstrap","webpack://matic/webpack/runtime/compat get default export","webpack://matic/webpack/runtime/define property getters","webpack://matic/webpack/runtime/global","webpack://matic/webpack/runtime/hasOwnProperty shorthand","webpack://matic/webpack/runtime/make namespace object","webpack://matic/webpack/runtime/node module decorator","webpack://matic/./src/abstracts/contract_method.ts","webpack://matic/./src/enums/log_event_signature.ts","webpack://matic/./src/enums/error_type.ts","webpack://matic/./src/abstracts/base_web3_client.ts","webpack://matic/./src/abstracts/base_contract.ts","webpack://matic/./src/abstracts/base_big_number.ts","webpack://matic/./src/implementation/bn.ts","webpack://matic/./src/utils/converter.ts","webpack://matic/./src/utils/use.ts","webpack://matic/./src/utils/event_bus.ts","webpack://matic/./src/utils/error_helper.ts","webpack://matic/./src/utils/logger.ts","webpack://matic/./src/utils/merge.ts","webpack://matic/./src/utils/map_promise.ts","webpack://matic/./node_modules/@noble/hashes/esm/_assert.js","webpack://matic/./node_modules/@noble/hashes/esm/crypto.js","webpack://matic/./node_modules/@noble/hashes/esm/utils.js","webpack://matic/./node_modules/@noble/hashes/esm/_md.js","webpack://matic/./node_modules/@noble/hashes/esm/sha256.js","webpack://matic/./node_modules/@noble/hashes/esm/hmac.js","webpack://matic/./node_modules/@noble/curves/esm/abstract/utils.js","webpack://matic/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://matic/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://matic/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://matic/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://matic/./node_modules/@noble/curves/esm/secp256k1.js","webpack://matic/./node_modules/ethereum-cryptography/esm/utils.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/internal.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/helpers.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/bytes.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/constants.js","webpack://matic/./node_modules/@ethereumjs/rlp/dist/esm/index.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/units.js","webpack://matic/./node_modules/@noble/hashes/esm/_u64.js","webpack://matic/./node_modules/@noble/hashes/esm/sha3.js","webpack://matic/./node_modules/ethereum-cryptography/esm/keccak.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/account.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/address.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/db.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/types.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/withdrawal.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/signature.js","webpack://matic/./node_modules/ethereum-cryptography/esm/sha256.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/blobs.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/lock.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/mapDB.js","webpack://matic/./node_modules/@ethereumjs/util/dist/esm/provider.js","webpack://matic/./src/utils/keccak.ts","webpack://matic/./src/utils/merkle_tree.ts","webpack://matic/./src/utils/buffer-utils.ts","webpack://matic/./node_modules/lru-cache/dist/esm/index.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/db/checkpoint.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/node/branch.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/util/hex.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/util/nibbles.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/node/node.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/node/extension.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/node/leaf.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/node/util.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/types.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/util/asyncWalk.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/util/readStream.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/util/tasks.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/util/walkController.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/trie.js","webpack://matic/./node_modules/@ethereumjs/trie/dist/esm/proof/range.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/chains.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/crc.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/enums.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/eips.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/hardforks.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/utils.js","webpack://matic/./node_modules/@ethereumjs/common/dist/esm/common.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/types.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/util.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/baseTransaction.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/capabilities/eip1559.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/capabilities/legacy.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/capabilities/eip2718.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/capabilities/eip2930.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/eip1559Transaction.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/eip2930Transaction.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/eip4844Transaction.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/constants.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/legacyTransaction.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/transactionFactory.js","webpack://matic/./node_modules/@ethereumjs/tx/dist/esm/fromRpc.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/clique.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/helpers.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/header.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/header-from-rpc.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/from-rpc.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/block.js","webpack://matic/./node_modules/@ethereumjs/block/dist/esm/from-beacon-payload.js","webpack://matic/./src/constant.ts","webpack://matic/./src/utils/proof_util.ts","webpack://matic/./src/utils/http_request.ts","webpack://matic/./src/utils/web3_side_chain_client.ts","webpack://matic/./src/utils/promise_resolve.ts","webpack://matic/./src/utils/base_token.ts","webpack://matic/./src/services/abi_service.ts","webpack://matic/./src/config.ts","webpack://matic/./src/services/network_service.ts","webpack://matic/./src/services/index.ts","webpack://matic/./src/utils/set_proof_api_url.ts","webpack://matic/./src/utils/resolve.ts","webpack://matic/./src/utils/bridge_client.ts","webpack://matic/./src/utils/abi_manager.ts","webpack://matic/./src/utils/not_implemented.ts","webpack://matic/./src/utils/zkevm_bridge_client.ts","webpack://matic/./src/utils/index.ts","webpack://matic/./src/pos/pos_token.ts","webpack://matic/./src/pos/erc20.ts","webpack://matic/./src/pos/root_chain_manager.ts","webpack://matic/./src/pos/exit_util.ts","webpack://matic/./src/pos/root_chain.ts","webpack://matic/./src/pos/erc721.ts","webpack://matic/./src/pos/erc1155.ts","webpack://matic/./src/pos/gas_swapper.ts","webpack://matic/./src/pos/index.ts","webpack://matic/./src/default.ts","webpack://matic/./src/zkevm/zkevm_token.ts","webpack://matic/./src/zkevm/zkevm_custom_bridge.ts","webpack://matic/./src/zkevm/erc20.ts","webpack://matic/./src/zkevm/zkevm_bridge.ts","webpack://matic/./src/zkevm/bridge_util.ts","webpack://matic/./src/zkevm/zkevm_wrapper.ts","webpack://matic/./src/zkevm/index.ts","webpack://matic/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"matic\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"matic\"] = factory();\n\telse\n\t\troot[\"matic\"] = factory();\n})(self, () => {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.decode = exports.encode = void 0;\n/**\n * RLP Encoding based on https://eth.wiki/en/fundamentals/rlp\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        for (let i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        const buf = concatBytes(...output);\n        return concatBytes(encodeLength(buf.length, 192), buf);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\nexports.encode = encode;\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nfunction decode(input, stream = false) {\n    if (!input || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nexports.utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nconst RLP = { encode, decode };\nexports.default = RLP;\n//# sourceMappingURL=index.js.map","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import { ITransactionRequestConfig, ITransactionWriteResult } from \"../interfaces\";\nimport { Logger } from \"../utils\";\n\nexport abstract class BaseContractMethod {\n    constructor(public logger: Logger) {\n\n    }\n    abstract get address(): string;\n    abstract read<T>(tx?: ITransactionRequestConfig, defaultBlock?: number | string): Promise<T>;\n    abstract write(tx: ITransactionRequestConfig,): ITransactionWriteResult;\n    abstract estimateGas(tx: ITransactionRequestConfig,): Promise<number>;\n    abstract encodeABI(): any;\n}","export enum Log_Event_Signature {\n    // PlasmaErc20WithdrawEventSig = '0xebff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f',\n    // PlasmaErc721WithdrawEventSig = '0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb',\n    Erc20Transfer = '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n    Erc721Transfer = '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n    Erc1155Transfer = '0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62',\n    Erc721BatchTransfer = '0xf871896b17e9cb7a64941c62c188a4f5c621b86800e3d15452ece01ce56073df',\n    Erc1155BatchTransfer = '0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb',\n    Erc721TransferWithMetadata = '0xf94915c6d1fd521cee85359239227480c7e8776d7caf1fc3bacad5c269b66a14',\n}\n","export enum ERROR_TYPE {\n    AllowedOnRoot = \"allowed_on_root\",\n    AllowedOnChild = \"allowed_on_child\",\n    Unknown = \"unknown\",\n    ProofAPINotSet = \"proof_api_not_set\",\n    TransactionOptionNotObject = \"transation_object_not_object\",\n    BurnTxNotCheckPointed = \"burn_tx_not_checkpointed\",\n    EIP1559NotSupported = \"eip-1559_not_supported\",\n    NullSpenderAddress = \"null_spender_address\",\n    AllowedOnNonNativeTokens = \"allowed_on_non_native_token\",\n    AllowedOnMainnet = \"allowed_on_mainnet\",\n    BridgeAdapterNotFound = \"bridge_adapter_address_not_passed\"\n}\n","import { BaseContract } from \"../abstracts\";\nimport { ITransactionRequestConfig, ITransactionReceipt, ITransactionData, IBlock, IBlockWithTransaction, IJsonRpcRequestPayload, IJsonRpcResponse, ITransactionWriteResult } from \"../interfaces\";\nimport { Logger } from \"../utils\";\n\nexport abstract class BaseWeb3Client {\n    abstract name: string;\n\n    constructor(public logger: Logger) {\n\n    }\n\n    abstract getContract(address: string, abi: any): BaseContract;\n\n    abstract read(config: ITransactionRequestConfig): Promise<string>;\n\n    abstract write(config: ITransactionRequestConfig): ITransactionWriteResult;\n    abstract getGasPrice(): Promise<string>;\n    abstract estimateGas(config: ITransactionRequestConfig): Promise<number>;\n    abstract getChainId(): Promise<number>;\n    abstract getTransactionCount(address: string, blockNumber: any): Promise<number>;\n\n    abstract getTransaction(transactionHash: string): Promise<ITransactionData>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<ITransactionReceipt>;\n    // abstract extend(property: string, methods: IMethod[])\n\n    abstract getBlock(blockHashOrBlockNumber): Promise<IBlock>;\n    abstract getBlockWithTransaction(blockHashOrBlockNumber): Promise<IBlockWithTransaction>;\n    abstract hexToNumber(value: any): number;\n    abstract hexToNumberString(value: any): string;\n    abstract getBalance(address: string): Promise<string>;\n    abstract getAccounts(): Promise<string[]>;\n    abstract signTypedData(signer: string, typedData: object): Promise<string>;\n\n    getRootHash?(startBlock: number, endBlock: number) {\n        return this.sendRPCRequest({\n            jsonrpc: '2.0',\n            method: 'eth_getRootHash',\n            params: [Number(startBlock), Number(endBlock)],\n            id: new Date().getTime()\n        }).then(payload => {\n            return String(payload.result);\n        });\n    }\n\n    getAccountsUsingRPC_() {\n        return this.sendRPCRequest({\n            jsonrpc: '2.0',\n            method: 'eth_accounts',\n            params: [],\n            id: new Date().getTime()\n        }).then(payload => {\n            return payload.result;\n        });\n    }\n\n    abstract sendRPCRequest(request: IJsonRpcRequestPayload): Promise<IJsonRpcResponse>;\n\n    abstract encodeParameters(params: any[], types: any[]): string;\n    abstract decodeParameters(hexString: string, types: any[]): any[];\n    abstract etheriumSha3(...value): string;\n\n}\n","import { BaseContractMethod } from \"../abstracts\";\nimport { Logger } from \"../utils\";\n\nexport abstract class BaseContract {\n\n    constructor(public address: string, public logger:Logger) {\n\n    }\n\n    abstract method(methodName: string, ...args): BaseContractMethod;\n}","import { throwNotImplemented } from \"..\";\n\nexport abstract class BaseBigNumber {\n    static isBN(value) {\n        return throwNotImplemented<boolean>();\n    }\n\n    abstract toString(): string;\n    abstract toNumber(): number;\n    abstract add(value: BaseBigNumber): BaseBigNumber;\n    abstract sub(value: BaseBigNumber): BaseBigNumber;\n    abstract mul(value: BaseBigNumber): BaseBigNumber;\n    abstract div(value: BaseBigNumber): BaseBigNumber;\n\n    abstract lte(value: BaseBigNumber): boolean;\n    abstract lt(value: BaseBigNumber): boolean;\n    abstract gte(value: BaseBigNumber): boolean;\n    abstract gt(value: BaseBigNumber): boolean;\n    abstract eq(value: BaseBigNumber): boolean;\n}\n","import { throwNotImplemented } from \"..\";\nimport { BaseBigNumber } from \"../abstracts\";\n\nexport class EmptyBigNumber extends BaseBigNumber {\n\n    constructor(value) {\n        super();\n    }\n\n    toString(base?) {\n        return throwNotImplemented<string>();\n    }\n\n    toNumber() {\n        return throwNotImplemented<number>();\n    }\n\n    add(value: BaseBigNumber) {\n        return throwNotImplemented<BaseBigNumber>();\n    }\n\n    sub(value: BaseBigNumber) {\n        return throwNotImplemented<BaseBigNumber>();\n    }\n\n    mul(value: BaseBigNumber) {\n        return throwNotImplemented<BaseBigNumber>();\n    }\n\n    div(value: BaseBigNumber) {\n        return throwNotImplemented<BaseBigNumber>();\n    }\n\n    lte(value: BaseBigNumber) {\n        return throwNotImplemented<boolean>();\n    }\n\n    lt(value: BaseBigNumber) {\n        return throwNotImplemented<boolean>();\n\n    }\n\n    gte(value: BaseBigNumber) {\n        return throwNotImplemented<boolean>();\n\n    }\n\n    gt(value: BaseBigNumber) {\n        return throwNotImplemented<boolean>();\n\n    }\n\n    eq(value: BaseBigNumber) {\n        return throwNotImplemented<boolean>();\n    }\n}\n","import { BaseBigNumber } from \"../abstracts\";\nimport { utils } from \"../utils\";\n\nexport class Converter {\n    static toHex(amount: BaseBigNumber | string | number) {\n        const dataType = typeof amount;\n        if (dataType === 'number') {\n            amount = new utils.BN(amount);\n        } else if (dataType === 'string') {\n            if ((amount as string).slice(0, 2) === '0x') {\n                return amount;\n            }\n            amount = new utils.BN(amount);\n        }\n        if (utils.BN.isBN(amount)) {\n            return '0x' + amount.toString(16);\n        }\n        else {\n            throw new Error(`Invalid value ${amount}, value is not a number.`);\n        }\n    }\n\n    static toBN(amount: BaseBigNumber | string | number): BaseBigNumber {\n        const dataType = typeof amount;\n        if (dataType === 'string') {\n            if ((amount as string).slice(0, 2) === '0x') {\n                amount = parseInt(amount as string, 16);\n            }\n        }\n        if (!utils.BN.isBN(amount)) {\n            amount = new utils.BN(amount);\n        }\n        return amount as BaseBigNumber;\n    }\n}\n","import { IPlugin } from \"../interfaces\";\nimport { defaultExport } from \"../default\";\n\nexport const use = (plugin, ...payload) => {\n    const pluginInstance: IPlugin = typeof plugin === \"function\" ? new plugin() : plugin;\n    return pluginInstance.setup(defaultExport, ...payload);\n};","export interface IEventBusPromise<T> extends Promise<T> {\n    on(event: string, cb: Function);\n    emit(event: string, ...args);\n    destroy();\n}\n\nexport const eventBusPromise = function <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) {\n    const promise: IEventBusPromise<T> = new Promise(executor) as any;\n    const eventBus = new EventBus();\n    promise.on = eventBus.on.bind(eventBus);\n    promise.emit = eventBus.emit.bind(eventBus);\n    return promise;\n};\n\nexport class EventBus {\n\n    constructor(ctx?) {\n        this._ctx = ctx;\n    }\n\n    private _ctx;\n\n    private _events: {\n        [key: string]: Function[]\n    } = {};\n\n    on(event: string, cb: Function) {\n        if (this._events[event] == null) {\n            this._events[event] = [];\n        }\n        this._events[event].push(cb);\n        return this;\n    }\n\n    off(event: string, cb: Function) {\n        if (this._events[event]) {\n            if (cb) {\n                const index = this._events[event].indexOf(cb);\n                this._events[event].splice(index, 1);\n            }\n            else {\n                this._events[event] = [];\n            }\n        }\n    }\n\n    emit(event: string, ...args) {\n        const events = this._events[event] || [];\n        return Promise.all(\n            events.map(cb => {\n                const result = cb.call(this._ctx, ...args);\n                return result && result.then ? result : Promise.resolve(result);\n            })\n        );\n    }\n\n    destroy() {\n        this._events = null;\n        this._ctx = null;\n    }\n}","import { ERROR_TYPE } from \"../enums\";\nimport { IError } from \"../interfaces\";\n\nexport class ErrorHelper implements IError {\n    type: ERROR_TYPE;\n    message: string;\n\n    constructor(type: ERROR_TYPE, info?) {\n        this.type = type;\n        this.message = this.getMsg_(info);\n    }\n\n    throw() {\n        throw this.get();\n    }\n\n    get() {\n        return {\n            message: this.message,\n            type: this.type\n        } as IError;\n    }\n\n    private getMsg_(info) {\n        let errMsg: string;\n        switch (this.type) {\n            case ERROR_TYPE.AllowedOnChild:\n                errMsg = `The action ${info} is allowed only on child token.`;\n                break;\n            case ERROR_TYPE.AllowedOnRoot:\n                errMsg = `The action ${info} is allowed only on root token.`;\n                break;\n            case ERROR_TYPE.AllowedOnMainnet:\n                errMsg = `The action is allowed only on mainnet chains.`;\n                break;\n            case ERROR_TYPE.ProofAPINotSet:\n                errMsg = `Proof api is not set, please set it using \"setProofApi\"`;\n                break;\n            case ERROR_TYPE.BurnTxNotCheckPointed:\n                errMsg = `Burn transaction has not been checkpointed as yet`;\n                break;\n            case ERROR_TYPE.EIP1559NotSupported:\n                errMsg = `${info ? 'Root' : 'Child'} chain doesn't support eip-1559`;\n                break;\n            case ERROR_TYPE.NullSpenderAddress:\n                errMsg = `Please provide spender address.`;\n                break;\n            default:\n                if (!this.type) {\n                    this.type = ERROR_TYPE.Unknown;\n                }\n                errMsg = this.message;\n                break;\n        }\n        return errMsg;\n    }\n}","import { ERROR_TYPE } from \"../enums\";\nimport { ErrorHelper } from \"./error_helper\";\n\nexport class Logger {\n\n    private isEnabled: boolean;\n\n    enableLog(value) {\n        this.isEnabled = value ? true : false;\n    }\n\n    log(...message) {\n        if (this.isEnabled) {\n            console.log(...message);\n        }\n    }\n\n    error(type: ERROR_TYPE, info?) {\n        return new ErrorHelper(type, info);\n    }\n}","export const merge = (...obj) => {\n    return Object.assign({}, ...obj);\n};","import { promiseResolve } from '..';\nimport { IMapPromiseOption } from '../interfaces';\n\nconst runPromises = (promises: Array<Promise<any>>, converter: Function) => {\n  const maps = promises.map((val, index) => {\n    return converter(val, index);\n  });\n  return Promise.all(maps);\n};\n\nexport function mapPromise(values: any[], converter: Function, option: IMapPromiseOption = {} as any) {\n  const valuesLength = values.length;\n  const concurrency = option.concurrency || valuesLength;\n\n  let result = [];\n  const limitPromiseRun: () => Promise<any> = () => {\n    const promises = values.splice(0, concurrency);\n    return runPromises(promises, converter).then(promiseResult => {\n      result = result.concat(promiseResult);\n\n      return valuesLength > result.length ?\n        limitPromiseRun() : promiseResolve(result);\n    });\n  };\n\n  return limitPromiseRun();\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\nimport { bytesToUnprefixedHex, utf8ToBytes } from './bytes.js';\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);\n    }\n    return str[0] === '0' && str[1] === 'x';\n}\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str) => {\n    if (typeof str !== 'string')\n        throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value) {\n    let a = value;\n    if (typeof a !== 'string') {\n        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n    }\n    if (a.length % 2)\n        a = `0${a}`;\n    return a;\n}\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`);\n    }\n    return utf8ToBytes(str).byteLength;\n}\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(superset, subset, some) {\n    if (Array.isArray(superset) !== true) {\n        throw new Error(`[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`);\n    }\n    if (Array.isArray(subset) !== true) {\n        throw new Error(`[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`);\n    }\n    return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0);\n}\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex) {\n    let str = '';\n    let i = 0;\n    const l = hex.length;\n    if (hex.substring(0, 2) === '0x')\n        i = 2;\n    for (; i < l; i += 2) {\n        const code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string.\n * Strips leading and trailing 0's.\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue) {\n    const str = utf8ToBytes(stringValue);\n    return `0x${padToEven(bytesToUnprefixedHex(str)).replace(/^0+|0+$/g, '')}`;\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue) {\n    let hex = '';\n    for (let i = 0; i < stringValue.length; i++) {\n        const code = stringValue.charCodeAt(i);\n        const n = code.toString(16);\n        hex += n.length < 2 ? `0${n}` : n;\n    }\n    return `0x${hex}`;\n}\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params, key, allowEmpty) {\n    if (!Array.isArray(params)) {\n        throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`);\n    }\n    if (typeof key !== 'string') {\n        throw new Error(`[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`);\n    }\n    const result = [];\n    for (let i = 0; i < params.length; i++) {\n        let value = params[i][key];\n        if (allowEmpty === true && !value) {\n            value = '';\n        }\n        else if (typeof value !== 'string') {\n            throw new Error(`invalid abi - expected type 'string', received ${typeof value}`);\n        }\n        result.push(value);\n    }\n    return result;\n}\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\n//# sourceMappingURL=internal.js.map","import { isHexString } from './internal.js';\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input) {\n    if (!isHexString(input)) {\n        const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBytes = function (input) {\n    if (!(input instanceof Uint8Array)) {\n        const msg = `This method only supports Uint8Array but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        const msg = `This method only supports number arrays but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        const msg = `This method only supports strings but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\n//# sourceMappingURL=helpers.js.map","import { getRandomBytesSync } from 'ethereum-cryptography/random.js';\n// eslint-disable-next-line no-restricted-imports\nimport { bytesToHex as _bytesToUnprefixedHex } from 'ethereum-cryptography/utils.js';\nimport { assertIsArray, assertIsBytes, assertIsHexString } from './helpers.js';\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal.js';\nconst BIGINT_0 = BigInt(0);\n/**\n * @deprecated\n */\nexport const bytesToUnprefixedHex = _bytesToUnprefixedHex;\n// hexToBytes cache\nconst hexToBytesMapFirstKey = {};\nconst hexToBytesMapSecondKey = {};\nfor (let i = 0; i < 16; i++) {\n    const vSecondKey = i;\n    const vFirstKey = i * 16;\n    const key = i.toString(16).toLowerCase();\n    hexToBytesMapSecondKey[key] = vSecondKey;\n    hexToBytesMapSecondKey[key.toUpperCase()] = vSecondKey;\n    hexToBytesMapFirstKey[key] = vFirstKey;\n    hexToBytesMapFirstKey[key.toUpperCase()] = vFirstKey;\n}\n/**\n * NOTE: only use this function if the string is even, and only consists of hex characters\n * If this is not the case, this function could return weird results\n * @deprecated\n */\nfunction _unprefixedHexToBytes(hex) {\n    const byteLen = hex.length;\n    const bytes = new Uint8Array(byteLen / 2);\n    for (let i = 0; i < byteLen; i += 2) {\n        bytes[i / 2] = hexToBytesMapFirstKey[hex[i]] + hexToBytesMapSecondKey[hex[i + 1]];\n    }\n    return bytes;\n}\n/**\n * @deprecated\n */\nexport const unprefixedHexToBytes = (inp) => {\n    if (inp.slice(0, 2) === '0x') {\n        throw new Error('hex string is prefixed with 0x, should be unprefixed');\n    }\n    else {\n        return _unprefixedHexToBytes(padToEven(inp));\n    }\n};\n/****************  Borrowed from @chainsafe/ssz */\n// Caching this info costs about ~1000 bytes and speeds up toHexString() by x6\nconst hexByByte = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport const bytesToHex = (bytes) => {\n    let hex = '0x';\n    if (bytes === undefined || bytes.length === 0)\n        return hex;\n    for (const byte of bytes) {\n        hex += hexByByte[byte];\n    }\n    return hex;\n};\n// BigInt cache for the numbers 0 - 256*256-1 (two-byte bytes)\nconst BIGINT_CACHE = [];\nfor (let i = 0; i <= 256 * 256 - 1; i++) {\n    BIGINT_CACHE[i] = BigInt(i);\n}\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n * @param {Uint8Array} bytes the bytes to convert\n * @returns {bigint}\n */\nexport const bytesToBigInt = (bytes, littleEndian = false) => {\n    if (littleEndian) {\n        bytes.reverse();\n    }\n    const hex = bytesToHex(bytes);\n    if (hex === '0x') {\n        return BIGINT_0;\n    }\n    if (hex.length === 4) {\n        // If the byte length is 1 (this is faster than checking `bytes.length === 1`)\n        return BIGINT_CACHE[bytes[0]];\n    }\n    if (hex.length === 6) {\n        return BIGINT_CACHE[bytes[0] * 256 + bytes[1]];\n    }\n    return BigInt(hex);\n};\n/**\n * Converts a {@link Uint8Array} to a {@link number}.\n * @param {Uint8Array} bytes the bytes to convert\n * @return  {number}\n * @throws If the input number exceeds 53 bits.\n */\nexport const bytesToInt = (bytes) => {\n    const res = Number(bytesToBigInt(bytes));\n    if (!Number.isSafeInteger(res))\n        throw new Error('Number exceeds 53 bits');\n    return res;\n};\nexport const hexToBytes = (hex) => {\n    if (typeof hex !== 'string') {\n        throw new Error(`hex argument type ${typeof hex} must be of type string`);\n    }\n    if (!/^0x[0-9a-fA-F]*$/.test(hex)) {\n        throw new Error(`Input must be a 0x-prefixed hexadecimal string, got ${hex}`);\n    }\n    hex = hex.slice(2);\n    if (hex.length % 2 !== 0) {\n        hex = padToEven(hex);\n    }\n    return _unprefixedHexToBytes(hex);\n};\n/******************************************/\n/**\n * Converts a {@link number} into a {@link PrefixedHexString}\n * @param {number} i\n * @return {PrefixedHexString}\n */\nexport const intToHex = (i) => {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(`Received an invalid integer type: ${i}`);\n    }\n    return `0x${i.toString(16)}`;\n};\n/**\n * Converts an {@link number} to a {@link Uint8Array}\n * @param {Number} i\n * @return {Uint8Array}\n */\nexport const intToBytes = (i) => {\n    const hex = intToHex(i);\n    return hexToBytes(hex);\n};\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n *  * @param {bigint} num the bigint to convert\n * @returns {Uint8Array}\n */\nexport const bigIntToBytes = (num, littleEndian = false) => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const bytes = toBytes('0x' + padToEven(num.toString(16)));\n    return littleEndian ? bytes.reverse() : bytes;\n};\n/**\n * Returns a Uint8Array filled with 0s.\n * @param {number} bytes the number of bytes of the Uint8Array\n * @return {Uint8Array}\n */\nexport const zeros = (bytes) => {\n    return new Uint8Array(bytes);\n};\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @param {boolean} right whether to start padding form the left or right\n * @return {Uint8Array}\n */\nconst setLength = (msg, length, right) => {\n    if (right) {\n        if (msg.length < length) {\n            return new Uint8Array([...msg, ...zeros(length - msg.length)]);\n        }\n        return msg.subarray(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            return new Uint8Array([...zeros(length - msg.length), ...msg]);\n        }\n        return msg.subarray(-length);\n    }\n};\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @return {Uint8Array}\n */\nexport const setLengthLeft = (msg, length) => {\n    assertIsBytes(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Right Pads a `Uint8Array` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @return {Uint8Array}\n */\nexport const setLengthRight = (msg, length) => {\n    assertIsBytes(msg);\n    return setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Uint8Array`, `number[]` or PrefixedHexString`.\n * @param {Uint8Array|number[]|PrefixedHexString} a\n * @return {Uint8Array|number[]|PrefixedHexString}\n */\nconst stripZeros = (a) => {\n    let first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param {Uint8Array} a\n * @return {Uint8Array}\n */\nexport const unpadBytes = (a) => {\n    assertIsBytes(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param  {number[]} a\n * @return {number[]}\n */\nexport const unpadArray = (a) => {\n    assertIsArray(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a `PrefixedHexString`.\n * @param {PrefixedHexString} a\n * @return {PrefixedHexString}\n */\nexport const unpadHex = (a) => {\n    assertIsHexString(a);\n    a = stripHexPrefix(a);\n    return '0x' + stripZeros(a);\n};\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Buffer`, `Uint8Array`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBytes()` method.\n * @param {ToBytesInputTypes} v the value\n * @return {Uint8Array}\n */\nexport const toBytes = (v) => {\n    if (v === null || v === undefined) {\n        return new Uint8Array();\n    }\n    if (Array.isArray(v) || v instanceof Uint8Array) {\n        return Uint8Array.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!isHexString(v)) {\n            throw new Error(`Cannot convert string to Uint8Array. toBytes only supports 0x-prefixed hex strings and this string was given: ${v}`);\n        }\n        return hexToBytes(v);\n    }\n    if (typeof v === 'number') {\n        return intToBytes(v);\n    }\n    if (typeof v === 'bigint') {\n        if (v < BIGINT_0) {\n            throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);\n        }\n        let n = v.toString(16);\n        if (n.length % 2)\n            n = '0' + n;\n        return unprefixedHexToBytes(n);\n    }\n    if (v.toBytes !== undefined) {\n        // converts a `TransformableToBytes` object to a Uint8Array\n        return v.toBytes();\n    }\n    throw new Error('invalid type');\n};\n/**\n * Interprets a `Uint8Array` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param {Uint8Array} num Signed integer value\n * @returns {bigint}\n */\nexport const fromSigned = (num) => {\n    return BigInt.asIntN(256, bytesToBigInt(num));\n};\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Uint8Array`. Assumes 256-bit numbers.\n * @param {bigint} num\n * @returns {Uint8Array}\n */\nexport const toUnsigned = (num) => {\n    return bigIntToBytes(BigInt.asUintN(256, num));\n};\n/**\n * Adds \"0x\" to a given `string` if it does not already start with \"0x\".\n * @param {string} str\n * @return {PrefixedHexString}\n */\nexport const addHexPrefix = (str) => {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Shortens a string  or Uint8Array's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n * @param {Uint8Array | string} bytes\n * @param {number} maxLength\n * @return {string}\n */\nexport const short = (bytes, maxLength = 50) => {\n    const byteStr = bytes instanceof Uint8Array ? bytesToHex(bytes) : bytes;\n    const len = byteStr.slice(0, 2) === '0x' ? maxLength + 2 : maxLength;\n    if (byteStr.length <= len) {\n        return byteStr;\n    }\n    return byteStr.slice(0, len) + '…';\n};\n/**\n * Checks provided Uint8Array for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Uint8Array values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = (values) => {\n    for (const [k, v] of Object.entries(values)) {\n        if (v !== undefined && v.length > 0 && v[0] === 0) {\n            throw new Error(`${k} cannot have leading zeroes, received: ${bytesToHex(v)}`);\n        }\n    }\n};\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n * @param {bigint} num the bigint to convert\n * @returns {PrefixedHexString}\n */\nexport const bigIntToHex = (num) => {\n    return '0x' + num.toString(16);\n};\n/**\n * Calculates max bigint from an array of bigints\n * @param args array of bigints\n */\nexport const bigIntMax = (...args) => args.reduce((m, e) => (e > m ? e : m));\n/**\n * Calculates min BigInt from an array of BigInts\n * @param args array of bigints\n */\nexport const bigIntMin = (...args) => args.reduce((m, e) => (e < m ? e : m));\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param {bigint} value the bigint to convert\n * @returns {Uint8Array}\n */\nexport const bigIntToUnpaddedBytes = (value) => {\n    return unpadBytes(bigIntToBytes(value));\n};\n/**\n * Convert value from number to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param {number} value the bigint to convert\n * @returns {Uint8Array}\n */\nexport const intToUnpaddedBytes = (value) => {\n    return unpadBytes(intToBytes(value));\n};\n/**\n * Compares two Uint8Arrays and returns a number indicating their order in a sorted array.\n *\n * @param {Uint8Array} value1 - The first Uint8Array to compare.\n * @param {Uint8Array} value2 - The second Uint8Array to compare.\n * @returns {number} A positive number if value1 is larger than value2,\n *                   A negative number if value1 is smaller than value2,\n *                   or 0 if value1 and value2 are equal.\n */\nexport const compareBytes = (value1, value2) => {\n    const bigIntValue1 = bytesToBigInt(value1);\n    const bigIntValue2 = bytesToBigInt(value2);\n    return bigIntValue1 > bigIntValue2 ? 1 : bigIntValue1 < bigIntValue2 ? -1 : 0;\n};\n/**\n * Generates a Uint8Array of random bytes of specified length.\n *\n * @param {number} length - The length of the Uint8Array.\n * @returns {Uint8Array} A Uint8Array of random bytes of specified length.\n */\nexport const randomBytes = (length) => {\n    return getRandomBytesSync(length);\n};\n/**\n * This mirrors the functionality of the `ethereum-cryptography` export except\n * it skips the check to validate that every element of `arrays` is indead a `uint8Array`\n * Can give small performance gains on large arrays\n * @param {Uint8Array[]} arrays an array of Uint8Arrays\n * @returns {Uint8Array} one Uint8Array with all the elements of the original set\n * works like `Buffer.concat`\n */\nexport const concatBytes = (...arrays) => {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n};\n/**\n * @notice Convert a Uint8Array to a 32-bit integer\n * @param {Uint8Array} bytes The input Uint8Array from which to read the 32-bit integer.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {number} The 32-bit integer read from the input Uint8Array.\n */\nexport function bytesToInt32(bytes, littleEndian = false) {\n    if (bytes.length < 4) {\n        bytes = setLength(bytes, 4, littleEndian);\n    }\n    const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return dataView.getUint32(0, littleEndian);\n}\n/**\n * @notice Convert a Uint8Array to a 64-bit bigint\n * @param {Uint8Array} bytes The input Uint8Array from which to read the 64-bit bigint.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {bigint} The 64-bit bigint read from the input Uint8Array.\n */\nexport function bytesToBigInt64(bytes, littleEndian = false) {\n    if (bytes.length < 8) {\n        bytes = setLength(bytes, 8, littleEndian);\n    }\n    const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return dataView.getBigUint64(0, littleEndian);\n}\n/**\n * @notice Convert a 32-bit integer to a Uint8Array.\n * @param {number} value The 32-bit integer to convert.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {Uint8Array} A Uint8Array of length 4 containing the integer.\n */\nexport function int32ToBytes(value, littleEndian = false) {\n    const buffer = new ArrayBuffer(4);\n    const dataView = new DataView(buffer);\n    dataView.setUint32(0, value, littleEndian);\n    return new Uint8Array(buffer);\n}\n/**\n * @notice Convert a 64-bit bigint to a Uint8Array.\n * @param {bigint} value The 64-bit bigint to convert.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {Uint8Array} A Uint8Array of length 8 containing the bigint.\n */\nexport function bigInt64ToBytes(value, littleEndian = false) {\n    const buffer = new ArrayBuffer(8);\n    const dataView = new DataView(buffer);\n    dataView.setBigUint64(0, value, littleEndian);\n    return new Uint8Array(buffer);\n}\n// eslint-disable-next-line no-restricted-imports\nexport { bytesToUtf8, equalsBytes, utf8ToBytes } from 'ethereum-cryptography/utils.js';\n//# sourceMappingURL=bytes.js.map","import { secp256k1 } from 'ethereum-cryptography/secp256k1.js';\nimport { hexToBytes } from './bytes.js';\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt('115792089237316195423570985008687907853269984665640564039457584007913129639935');\nexport const SECP256K1_ORDER = secp256k1.CURVE.n;\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2);\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = hexToBytes(KECCAK256_NULL_S);\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S = '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = hexToBytes(KECCAK256_RLP_ARRAY_S);\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = hexToBytes(KECCAK256_RLP_S);\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Uint8Array.from([0x80]);\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16;\nexport const RIPEMD160_ADDRESS_STRING = '0000000000000000000000000000000000000003';\n/**\n * BigInt constants\n */\nexport const BIGINT_NEG1 = BigInt(-1);\nexport const BIGINT_0 = BigInt(0);\nexport const BIGINT_1 = BigInt(1);\nexport const BIGINT_2 = BigInt(2);\nexport const BIGINT_3 = BigInt(3);\nexport const BIGINT_7 = BigInt(7);\nexport const BIGINT_8 = BigInt(8);\nexport const BIGINT_27 = BigInt(27);\nexport const BIGINT_28 = BigInt(28);\nexport const BIGINT_31 = BigInt(31);\nexport const BIGINT_32 = BigInt(32);\nexport const BIGINT_64 = BigInt(64);\nexport const BIGINT_128 = BigInt(128);\nexport const BIGINT_255 = BigInt(255);\nexport const BIGINT_256 = BigInt(256);\nexport const BIGINT_96 = BigInt(96);\nexport const BIGINT_100 = BigInt(100);\nexport const BIGINT_160 = BigInt(160);\nexport const BIGINT_224 = BigInt(224);\nexport const BIGINT_2EXP96 = BigInt(79228162514264337593543950336);\nexport const BIGINT_2EXP160 = BigInt(1461501637330902918203684832716283019655932542976);\nexport const BIGINT_2EXP224 = BigInt(26959946667150639794667015087019630673637144422540572481103610249216);\nexport const BIGINT_2EXP256 = BIGINT_2 ** BIGINT_256;\n//# sourceMappingURL=constants.js.map","/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        let outputLength = 0;\n        for (let i = 0; i < input.length; i++) {\n            const encoded = encode(input[i]);\n            output.push(encoded);\n            outputLength += encoded.length;\n        }\n        return concatBytes(encodeLength(outputLength, 192), ...output);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nexport function decode(input, stream = false) {\n    if (typeof input === 'undefined' || input === null || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return {\n            data: decoded.data,\n            remainder: decoded.remainder.slice(),\n        };\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.subarray(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data,\n            remainder: input.subarray(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.subarray(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.subarray(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.subarray(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nexport const utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nexport const RLP = { encode, decode };\n//# sourceMappingURL=index.js.map","import { BIGINT_0, BIGINT_1 } from './constants.js';\n/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000);\nexport function formatBigDecimal(numerator, denominator, maxDecimalFactor) {\n    if (denominator === BIGINT_0) {\n        denominator = BIGINT_1;\n    }\n    const full = numerator / denominator;\n    const fraction = ((numerator - full * denominator) * maxDecimalFactor) / denominator;\n    // zeros to be added post decimal are number of zeros in maxDecimalFactor - number of digits in fraction\n    const zerosPostDecimal = String(maxDecimalFactor).length - 1 - String(fraction).length;\n    return `${full}.${'0'.repeat(zerosPostDecimal)}${fraction}`;\n}\n//# sourceMappingURL=units.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_224, keccak_256, keccak_384, keccak_512 } from \"@noble/hashes/sha3\";\nimport { wrapHash } from \"./utils.js\";\nexport const keccak224 = wrapHash(keccak_224);\nexport const keccak256 = (() => {\n    const k = wrapHash(keccak_256);\n    k.create = keccak_256.create;\n    return k;\n})();\nexport const keccak384 = wrapHash(keccak_384);\nexport const keccak512 = wrapHash(keccak_512);\n","import { RLP } from '@ethereumjs/rlp';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1.js';\nimport { bigIntToUnpaddedBytes, bytesToBigInt, bytesToHex, concatBytes, equalsBytes, hexToBytes, toBytes, utf8ToBytes, zeros, } from './bytes.js';\nimport { BIGINT_0, KECCAK256_NULL, KECCAK256_RLP } from './constants.js';\nimport { assertIsBytes, assertIsHexString, assertIsString } from './helpers.js';\nimport { stripHexPrefix } from './internal.js';\nexport class Account {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating an Account from varying data types.\n     */\n    constructor(nonce = BIGINT_0, balance = BIGINT_0, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n        this.nonce = nonce;\n        this.balance = balance;\n        this.storageRoot = storageRoot;\n        this.codeHash = codeHash;\n        this._validate();\n    }\n    static fromAccountData(accountData) {\n        const { nonce, balance, storageRoot, codeHash } = accountData;\n        return new Account(nonce !== undefined ? bytesToBigInt(toBytes(nonce)) : undefined, balance !== undefined ? bytesToBigInt(toBytes(balance)) : undefined, storageRoot !== undefined ? toBytes(storageRoot) : undefined, codeHash !== undefined ? toBytes(codeHash) : undefined);\n    }\n    static fromRlpSerializedAccount(serialized) {\n        const values = RLP.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized account input. Must be array');\n        }\n        return this.fromValuesArray(values);\n    }\n    static fromValuesArray(values) {\n        const [nonce, balance, storageRoot, codeHash] = values;\n        return new Account(bytesToBigInt(nonce), bytesToBigInt(balance), storageRoot, codeHash);\n    }\n    _validate() {\n        if (this.nonce < BIGINT_0) {\n            throw new Error('nonce must be greater than zero');\n        }\n        if (this.balance < BIGINT_0) {\n            throw new Error('balance must be greater than zero');\n        }\n        if (this.storageRoot.length !== 32) {\n            throw new Error('storageRoot must have a length of 32');\n        }\n        if (this.codeHash.length !== 32) {\n            throw new Error('codeHash must have a length of 32');\n        }\n    }\n    /**\n     * Returns an array of Uint8Arrays of the raw bytes for the account, in order.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedBytes(this.nonce),\n            bigIntToUnpaddedBytes(this.balance),\n            this.storageRoot,\n            this.codeHash,\n        ];\n    }\n    /**\n     * Returns the RLP serialization of the account as a `Uint8Array`.\n     */\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n    /**\n     * Returns a `Boolean` determining if the account is a contract.\n     */\n    isContract() {\n        return !equalsBytes(this.codeHash, KECCAK256_NULL);\n    }\n    /**\n     * Returns a `Boolean` determining if the account is empty complying to the definition of\n     * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n     * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n     */\n    isEmpty() {\n        return (this.balance === BIGINT_0 &&\n            this.nonce === BIGINT_0 &&\n            equalsBytes(this.codeHash, KECCAK256_NULL));\n    }\n}\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress) {\n    try {\n        assertIsString(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    assertIsHexString(hexAddress);\n    const address = stripHexPrefix(hexAddress).toLowerCase();\n    let prefix = '';\n    if (eip1191ChainId !== undefined) {\n        const chainId = bytesToBigInt(toBytes(eip1191ChainId));\n        prefix = chainId.toString() + '0x';\n    }\n    const bytes = utf8ToBytes(prefix + address);\n    const hash = bytesToHex(keccak256(bytes)).slice(2);\n    let ret = '0x';\n    for (let i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from, nonce) {\n    assertIsBytes(from);\n    assertIsBytes(nonce);\n    if (bytesToBigInt(nonce) === BIGINT_0) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return keccak256(RLP.encode([from, Uint8Array.from([])])).subarray(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return keccak256(RLP.encode([from, nonce])).subarray(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from, salt, initCode) {\n    assertIsBytes(from);\n    assertIsBytes(salt);\n    assertIsBytes(initCode);\n    if (from.length !== 20) {\n        throw new Error('Expected from to be of length 20');\n    }\n    if (salt.length !== 32) {\n        throw new Error('Expected salt to be of length 32');\n    }\n    const address = keccak256(concatBytes(hexToBytes('0xff'), from, salt, keccak256(initCode)));\n    return address.subarray(-20);\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey) {\n    return secp256k1.utils.isValidPrivateKey(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey, sanitize = false) {\n    assertIsBytes(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        // Automatically checks whether point is on curve\n        try {\n            secp256k1.ProjectivePoint.fromHex(concatBytes(Uint8Array.from([4]), publicKey));\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    if (!sanitize) {\n        return false;\n    }\n    try {\n        secp256k1.ProjectivePoint.fromHex(publicKey);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey, sanitize = false) {\n    assertIsBytes(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);\n    }\n    if (pubKey.length !== 64) {\n        throw new Error('Expected pubKey to be of length 64');\n    }\n    // Only take the lower 160bits of the hash\n    return keccak256(pubKey).subarray(-20);\n};\nexport const publicToAddress = pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey) {\n    assertIsBytes(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1);\n};\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey) {\n    return publicToAddress(privateToPublic(privateKey));\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey) {\n    assertIsBytes(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1);\n    }\n    return publicKey;\n};\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function () {\n    const addressLength = 20;\n    const addr = zeros(addressLength);\n    return bytesToHex(addr);\n};\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress) {\n    try {\n        assertIsString(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    const zeroAddr = zeroAddress();\n    return zeroAddr === hexAddress;\n};\nexport function accountBodyFromSlim(body) {\n    const [nonce, balance, storageRoot, codeHash] = body;\n    return [\n        nonce,\n        balance,\n        storageRoot.length === 0 ? KECCAK256_RLP : storageRoot,\n        codeHash.length === 0 ? KECCAK256_NULL : codeHash,\n    ];\n}\nconst emptyUint8Arr = new Uint8Array(0);\nexport function accountBodyToSlim(body) {\n    const [nonce, balance, storageRoot, codeHash] = body;\n    return [\n        nonce,\n        balance,\n        equalsBytes(storageRoot, KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n        equalsBytes(codeHash, KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n    ];\n}\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Uint8Array-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body, couldBeSlim = true) {\n    const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body;\n    return RLP.encode(accountBody);\n}\n//# sourceMappingURL=account.js.map","import { generateAddress, generateAddress2, isValidAddress, privateToAddress, pubToAddress, } from './account.js';\nimport { bigIntToBytes, bytesToBigInt, bytesToHex, equalsBytes, toBytes, zeros } from './bytes.js';\nimport { BIGINT_0 } from './constants.js';\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n    constructor(bytes) {\n        if (bytes.length !== 20) {\n            throw new Error('Invalid address length');\n        }\n        this.bytes = bytes;\n    }\n    /**\n     * Returns the zero address.\n     */\n    static zero() {\n        return new Address(zeros(20));\n    }\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    static fromString(str) {\n        if (!isValidAddress(str)) {\n            throw new Error('Invalid address');\n        }\n        return new Address(toBytes(str));\n    }\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    static fromPublicKey(pubKey) {\n        if (!(pubKey instanceof Uint8Array)) {\n            throw new Error('Public key should be Uint8Array');\n        }\n        const bytes = pubToAddress(pubKey);\n        return new Address(bytes);\n    }\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    static fromPrivateKey(privateKey) {\n        if (!(privateKey instanceof Uint8Array)) {\n            throw new Error('Private key should be Uint8Array');\n        }\n        const bytes = privateToAddress(privateKey);\n        return new Address(bytes);\n    }\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    static generate(from, nonce) {\n        if (typeof nonce !== 'bigint') {\n            throw new Error('Expected nonce to be a bigint');\n        }\n        return new Address(generateAddress(from.bytes, bigIntToBytes(nonce)));\n    }\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    static generate2(from, salt, initCode) {\n        if (!(salt instanceof Uint8Array)) {\n            throw new Error('Expected salt to be a Uint8Array');\n        }\n        if (!(initCode instanceof Uint8Array)) {\n            throw new Error('Expected initCode to be a Uint8Array');\n        }\n        return new Address(generateAddress2(from.bytes, salt, initCode));\n    }\n    /**\n     * Is address equal to another.\n     */\n    equals(address) {\n        return equalsBytes(this.bytes, address.bytes);\n    }\n    /**\n     * Is address zero.\n     */\n    isZero() {\n        return this.equals(Address.zero());\n    }\n    /**\n     * True if address is in the address range defined\n     * by EIP-1352\n     */\n    isPrecompileOrSystemAddress() {\n        const address = bytesToBigInt(this.bytes);\n        const rangeMin = BIGINT_0;\n        const rangeMax = BigInt('0xffff');\n        return address >= rangeMin && address <= rangeMax;\n    }\n    /**\n     * Returns hex encoding of address.\n     */\n    toString() {\n        return bytesToHex(this.bytes);\n    }\n    /**\n     * Returns a new Uint8Array representation of address.\n     */\n    toBytes() {\n        return new Uint8Array(this.bytes);\n    }\n}\n//# sourceMappingURL=address.js.map","export var KeyEncoding;\n(function (KeyEncoding) {\n    KeyEncoding[\"String\"] = \"string\";\n    KeyEncoding[\"Bytes\"] = \"view\";\n    KeyEncoding[\"Number\"] = \"number\";\n})(KeyEncoding || (KeyEncoding = {}));\nexport var ValueEncoding;\n(function (ValueEncoding) {\n    ValueEncoding[\"String\"] = \"string\";\n    ValueEncoding[\"Bytes\"] = \"view\";\n    ValueEncoding[\"JSON\"] = \"json\";\n})(ValueEncoding || (ValueEncoding = {}));\n//# sourceMappingURL=db.js.map","import { bytesToBigInt, bytesToHex, toBytes } from './bytes.js';\nimport { isHexString } from './internal.js';\n/**\n * Type output options\n */\nexport var TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n    TypeOutput[TypeOutput[\"Uint8Array\"] = 2] = \"Uint8Array\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput || (TypeOutput = {}));\nexport function toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !isHexString(input)) {\n        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    const output = toBytes(input);\n    switch (outputType) {\n        case TypeOutput.Uint8Array:\n            return output;\n        case TypeOutput.BigInt:\n            return bytesToBigInt(output);\n        case TypeOutput.Number: {\n            const bigInt = bytesToBigInt(output);\n            if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n                throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n            }\n            return Number(bigInt);\n        }\n        case TypeOutput.PrefixedHexString:\n            return bytesToHex(output);\n        default:\n            throw new Error('unknown outputType');\n    }\n}\n//# sourceMappingURL=types.js.map","import { Address } from './address.js';\nimport { bigIntToHex, bytesToHex, toBytes } from './bytes.js';\nimport { BIGINT_0 } from './constants.js';\nimport { TypeOutput, toType } from './types.js';\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n     * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n     */\n    constructor(index, validatorIndex, address, \n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    amount) {\n        this.index = index;\n        this.validatorIndex = validatorIndex;\n        this.address = address;\n        this.amount = amount;\n    }\n    static fromWithdrawalData(withdrawalData) {\n        const { index: indexData, validatorIndex: validatorIndexData, address: addressData, amount: amountData, } = withdrawalData;\n        const index = toType(indexData, TypeOutput.BigInt);\n        const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt);\n        const address = addressData instanceof Address ? addressData : new Address(toBytes(addressData));\n        const amount = toType(amountData, TypeOutput.BigInt);\n        return new Withdrawal(index, validatorIndex, address, amount);\n    }\n    static fromValuesArray(withdrawalArray) {\n        if (withdrawalArray.length !== 4) {\n            throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`);\n        }\n        const [index, validatorIndex, address, amount] = withdrawalArray;\n        return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount });\n    }\n    /**\n     * Convert a withdrawal to a buffer array\n     * @param withdrawal the withdrawal to convert\n     * @returns buffer array of the withdrawal\n     */\n    static toBytesArray(withdrawal) {\n        const { index, validatorIndex, address, amount } = withdrawal;\n        const indexBytes = toType(index, TypeOutput.BigInt) === BIGINT_0\n            ? new Uint8Array()\n            : toType(index, TypeOutput.Uint8Array);\n        const validatorIndexBytes = toType(validatorIndex, TypeOutput.BigInt) === BIGINT_0\n            ? new Uint8Array()\n            : toType(validatorIndex, TypeOutput.Uint8Array);\n        const addressBytes = address instanceof Address ? address.bytes : toType(address, TypeOutput.Uint8Array);\n        const amountBytes = toType(amount, TypeOutput.BigInt) === BIGINT_0\n            ? new Uint8Array()\n            : toType(amount, TypeOutput.Uint8Array);\n        return [indexBytes, validatorIndexBytes, addressBytes, amountBytes];\n    }\n    raw() {\n        return Withdrawal.toBytesArray(this);\n    }\n    toValue() {\n        return {\n            index: this.index,\n            validatorIndex: this.validatorIndex,\n            address: this.address.bytes,\n            amount: this.amount,\n        };\n    }\n    toJSON() {\n        return {\n            index: bigIntToHex(this.index),\n            validatorIndex: bigIntToHex(this.validatorIndex),\n            address: bytesToHex(this.address.bytes),\n            amount: bigIntToHex(this.amount),\n        };\n    }\n}\n//# sourceMappingURL=withdrawal.js.map","import { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1.js';\nimport { bytesToBigInt, bytesToHex, bytesToInt, concatBytes, setLengthLeft, toBytes, utf8ToBytes, } from './bytes.js';\nimport { BIGINT_0, BIGINT_1, BIGINT_2, BIGINT_27, SECP256K1_ORDER, SECP256K1_ORDER_DIV_2, } from './constants.js';\nimport { assertIsBytes } from './helpers.js';\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash, privateKey, chainId) {\n    const sig = secp256k1.sign(msgHash, privateKey);\n    const buf = sig.toCompactRawBytes();\n    const r = buf.slice(0, 32);\n    const s = buf.slice(32, 64);\n    const v = chainId === undefined\n        ? BigInt(sig.recovery + 27)\n        : BigInt(sig.recovery + 35) + BigInt(chainId) * BIGINT_2;\n    return { r, s, v };\n}\nexport function calculateSigRecovery(v, chainId) {\n    if (v === BIGINT_0 || v === BIGINT_1)\n        return v;\n    if (chainId === undefined) {\n        return v - BIGINT_27;\n    }\n    return v - (chainId * BIGINT_2 + BigInt(35));\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === BIGINT_0 || recovery === BIGINT_1;\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (msgHash, v, r, s, chainId) {\n    const signature = concatBytes(setLengthLeft(r, 32), setLengthLeft(s, 32));\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery));\n    const senderPubKey = sig.recoverPublicKey(msgHash);\n    return senderPubKey.toRawBytes(false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytesToHex(concatBytes(setLengthLeft(r, 32), setLengthLeft(s, 32), toBytes(v)));\n};\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    const ss = Uint8Array.from([...s]);\n    if ((v > BigInt(28) && v % BIGINT_2 === BIGINT_1) || v === BIGINT_1 || v === BigInt(28)) {\n        ss[0] |= 0x80;\n    }\n    return bytesToHex(concatBytes(setLengthLeft(r, 32), setLengthLeft(ss, 32)));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig) {\n    const bytes = toBytes(sig);\n    let r;\n    let s;\n    let v;\n    if (bytes.length >= 65) {\n        r = bytes.subarray(0, 32);\n        s = bytes.subarray(32, 64);\n        v = bytesToBigInt(bytes.subarray(64));\n    }\n    else if (bytes.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = bytes.subarray(0, 32);\n        s = bytes.subarray(32, 64);\n        v = BigInt(bytesToInt(bytes.subarray(32, 33)) >> 7);\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v = v + BIGINT_27;\n    }\n    return {\n        v,\n        r,\n        s,\n    };\n};\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (v, r, s, homesteadOrLater = true, chainId) {\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    const rBigInt = bytesToBigInt(r);\n    const sBigInt = bytesToBigInt(s);\n    if (rBigInt === BIGINT_0 ||\n        rBigInt >= SECP256K1_ORDER ||\n        sBigInt === BIGINT_0 ||\n        sBigInt >= SECP256K1_ORDER) {\n        return false;\n    }\n    if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message) {\n    assertIsBytes(message);\n    const prefix = utf8ToBytes(`\\u0019Ethereum Signed Message:\\n${message.length}`);\n    return keccak256(concatBytes(prefix, message));\n};\n//# sourceMappingURL=signature.js.map","import { sha256 as _sha256 } from \"@noble/hashes/sha256\";\nimport { wrapHash } from \"./utils.js\";\nexport const sha256 = wrapHash(_sha256);\n","import { sha256 } from 'ethereum-cryptography/sha256.js';\nimport { utf8ToBytes } from './bytes.js';\n/**\n * These utilities for constructing blobs are borrowed from https://github.com/Inphi/eip4844-interop.git\n */\nconst BYTES_PER_FIELD_ELEMENT = 32;\nconst FIELD_ELEMENTS_PER_BLOB = 4096;\nconst USEFUL_BYTES_PER_BLOB = 32 * FIELD_ELEMENTS_PER_BLOB;\nconst MAX_BLOBS_PER_TX = 2;\nconst MAX_USEFUL_BYTES_PER_TX = USEFUL_BYTES_PER_BLOB * MAX_BLOBS_PER_TX - 1;\nconst BLOB_SIZE = BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB;\nfunction get_padded(data, blobs_len) {\n    const pdata = new Uint8Array(blobs_len * USEFUL_BYTES_PER_BLOB).fill(0);\n    pdata.set(data);\n    pdata[data.byteLength] = 0x80;\n    return pdata;\n}\nfunction get_blob(data) {\n    const blob = new Uint8Array(BLOB_SIZE);\n    for (let i = 0; i < FIELD_ELEMENTS_PER_BLOB; i++) {\n        const chunk = new Uint8Array(32);\n        chunk.set(data.subarray(i * 31, (i + 1) * 31), 0);\n        blob.set(chunk, i * 32);\n    }\n    return blob;\n}\nexport const getBlobs = (input) => {\n    const data = utf8ToBytes(input);\n    const len = data.byteLength;\n    if (len === 0) {\n        throw Error('invalid blob data');\n    }\n    if (len > MAX_USEFUL_BYTES_PER_TX) {\n        throw Error('blob data is too large');\n    }\n    const blobs_len = Math.ceil(len / USEFUL_BYTES_PER_BLOB);\n    const pdata = get_padded(data, blobs_len);\n    const blobs = [];\n    for (let i = 0; i < blobs_len; i++) {\n        const chunk = pdata.subarray(i * USEFUL_BYTES_PER_BLOB, (i + 1) * USEFUL_BYTES_PER_BLOB);\n        const blob = get_blob(chunk);\n        blobs.push(blob);\n    }\n    return blobs;\n};\nexport const blobsToCommitments = (kzg, blobs) => {\n    const commitments = [];\n    for (const blob of blobs) {\n        commitments.push(kzg.blobToKzgCommitment(blob));\n    }\n    return commitments;\n};\nexport const blobsToProofs = (kzg, blobs, commitments) => {\n    const proofs = blobs.map((blob, ctx) => kzg.computeBlobKzgProof(blob, commitments[ctx]));\n    return proofs;\n};\n/**\n * Converts a vector commitment for a given data blob to its versioned hash.  For 4844, this version\n * number will be 0x01 for KZG vector commitments but could be different if future vector commitment\n * types are introduced\n * @param commitment a vector commitment to a blob\n * @param blobCommitmentVersion the version number corresponding to the type of vector commitment\n * @returns a versioned hash corresponding to a given blob vector commitment\n */\nexport const computeVersionedHash = (commitment, blobCommitmentVersion) => {\n    const computedVersionedHash = new Uint8Array(32);\n    computedVersionedHash.set([blobCommitmentVersion], 0);\n    computedVersionedHash.set(sha256(commitment).subarray(1), 1);\n    return computedVersionedHash;\n};\n/**\n * Generate an array of versioned hashes from corresponding kzg commitments\n * @param commitments array of kzg commitments\n * @returns array of versioned hashes\n * Note: assumes KZG commitments (version 1 version hashes)\n */\nexport const commitmentsToVersionedHashes = (commitments) => {\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(computeVersionedHash(commitment, 0x01));\n    }\n    return hashes;\n};\n//# sourceMappingURL=blobs.js.map","// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n    constructor() {\n        this.permits = 1;\n        this.promiseResolverQueue = [];\n    }\n    /**\n     * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n     * @returns  A promise that gets resolved when execution is allowed to proceed.\n     */\n    async acquire() {\n        if (this.permits > 0) {\n            this.permits -= 1;\n            return Promise.resolve(true);\n        }\n        // If there is no permit available, we return a promise that resolves once the semaphore gets\n        // signaled enough times that permits is equal to one.\n        return new Promise((resolver) => this.promiseResolverQueue.push(resolver));\n    }\n    /**\n     * Increases the number of permits by one. If there are other functions waiting, one of them will\n     * continue to execute in a future iteration of the event loop.\n     */\n    release() {\n        this.permits += 1;\n        if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n            // eslint-disable-next-line no-console\n            console.warn('Lock.permits should never be > 0 when there is someone waiting.');\n        }\n        else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n            // If there is someone else waiting, immediately consume the permit that was released\n            // at the beginning of this function and let the waiting function resume.\n            this.permits -= 1;\n            const nextResolver = this.promiseResolverQueue.shift();\n            if (nextResolver) {\n                nextResolver(true);\n            }\n        }\n    }\n}\n//# sourceMappingURL=lock.js.map","import { bytesToUnprefixedHex } from './bytes.js';\nexport class MapDB {\n    constructor(database) {\n        this._database = database ?? new Map();\n    }\n    async get(key) {\n        const dbKey = key instanceof Uint8Array ? bytesToUnprefixedHex(key) : key.toString();\n        return this._database.get(dbKey);\n    }\n    async put(key, val) {\n        const dbKey = key instanceof Uint8Array ? bytesToUnprefixedHex(key) : key.toString();\n        this._database.set(dbKey, val);\n    }\n    async del(key) {\n        const dbKey = key instanceof Uint8Array ? bytesToUnprefixedHex(key) : key.toString();\n        this._database.delete(dbKey);\n    }\n    async batch(opStack) {\n        for (const op of opStack) {\n            if (op.type === 'del') {\n                await this.del(op.key);\n            }\n            if (op.type === 'put') {\n                await this.put(op.key, op.value);\n            }\n        }\n    }\n    /**\n     * Note that the returned shallow copy will share the underlying database with the original\n     *\n     * @returns DB\n     */\n    shallowCopy() {\n        return new MapDB(this._database);\n    }\n    open() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=mapDB.js.map","/**\n * Makes a simple RPC call to a remote Ethereum JSON-RPC provider and passes through the response.\n * No parameter or response validation is done.\n *\n * @param url the URL for the JSON RPC provider\n * @param params the parameters for the JSON-RPC method - refer to\n * https://ethereum.org/en/developers/docs/apis/json-rpc/ for details on RPC methods\n * @returns the `result` field from the JSON-RPC response\n * @example\n * ```ts\n * const provider = 'https://mainnet.infura.io/v3/...'\n * const params = {\n *   method: 'eth_getBlockByNumber',\n *   params: ['latest', false],\n * }\n *  const block = await fetchFromProvider(provider, params)\n */\nexport const fetchFromProvider = async (url, params) => {\n    const data = JSON.stringify({\n        method: params.method,\n        params: params.params,\n        jsonrpc: '2.0',\n        id: 1,\n    });\n    const res = await fetch(url, {\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        body: data,\n    });\n    if (!res.ok) {\n        throw new Error(`JSONRpcError: ${JSON.stringify({\n            method: params.method,\n            status: res.status,\n            message: await res.text().catch(() => {\n                return 'Could not parse error message likely because of a network error';\n            }),\n        }, null, 2)}`);\n    }\n    const json = await res.json();\n    // TODO we should check json.error here\n    return json.result;\n};\n/**\n *\n * @param provider a URL string or {@link EthersProvider}\n * @returns the extracted URL string for the JSON-RPC Provider\n */\nexport const getProvider = (provider) => {\n    if (typeof provider === 'string') {\n        return provider;\n    }\n    else if (typeof provider === 'object' && provider._getConnection !== undefined) {\n        return provider._getConnection().url;\n    }\n    else {\n        throw new Error('Must provide valid provider URL or Web3Provider');\n    }\n};\n//# sourceMappingURL=provider.js.map","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak';\n\nexport class Keccak {\n    /**\n     * Throws if input is not a buffer\n     * @param {Buffer} input value to check\n     */\n    static assertIsBuffer = function (input: Buffer): void {\n        if (!Buffer.isBuffer(input)) {\n        const msg = `This method only supports Buffer but input was: ${input}`;\n        throw new Error(msg);\n        }\n    };\n\n    /**\n     * Creates Keccak hash of a Buffer input\n     * @param a The input data (Buffer)\n     * @param bits (number = 256) The Keccak width\n     */\n    static keccak = function (a: Buffer, bits = 256): Buffer {\n        Keccak.assertIsBuffer(a);\n        switch (bits) {\n            case 224: {\n                return Buffer.from(keccak224(a));\n            }\n            case 256: {\n                return Buffer.from(k256(a));\n            }\n            case 384: {\n                return Buffer.from(keccak384(a));\n            }\n            case 512: {\n                return Buffer.from(keccak512(a));\n            }\n            default: {\n                throw new Error(`Invald algorithm: keccak${bits}`);\n            }\n        }\n    };\n\n    /**\n     * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n     * @param a The input data (Buffer)\n     */\n    static keccak256 = function (a: Buffer): Buffer {\n        return Keccak.keccak(a);\n    };\n}\n","import { zeros } from '@ethereumjs/util';\nimport { Keccak } from './keccak';\nconst sha3 = Keccak.keccak256;\n\nimport { Buffer as SafeBuffer } from \"safe-buffer\";\n\nexport class MerkleTree {\n    leaves: any;\n    layers: any;\n\n    constructor(leaves = []) {\n        if (leaves.length < 1) {\n            throw new Error('Atleast 1 leaf needed');\n        }\n\n        const depth = Math.ceil(Math.log(leaves.length) / Math.log(2));\n        if (depth > 20) {\n            throw new Error('Depth must be 20 or less');\n        }\n\n        this.leaves = leaves.concat(\n            Array.from(\n                // tslint:disable-next-line\n                Array(Math.pow(2, depth) - leaves.length),\n                () => zeros(32)\n            )\n        );\n        this.layers = [this.leaves];\n        this.createHashes(this.leaves);\n    }\n\n    createHashes(nodes) {\n        if (nodes.length === 1) {\n            return false;\n        }\n\n\n        const treeLevel = [];\n        for (let i = 0; i < nodes.length; i += 2) {\n            const left = nodes[i];\n            const right = nodes[i + 1];\n\n            const data = SafeBuffer.concat([left, right]);\n            treeLevel.push(sha3(data as unknown as Buffer));\n        }\n\n        // is odd number of nodes\n        if (nodes.length % 2 === 1) {\n            treeLevel.push(nodes[nodes.length - 1]);\n        }\n\n        this.layers.push(treeLevel);\n        this.createHashes(treeLevel);\n    }\n\n    getLeaves() {\n        return this.leaves;\n    }\n\n    getLayers() {\n        return this.layers;\n    }\n\n    getRoot() {\n        return this.layers[this.layers.length - 1][0];\n    }\n\n    getProof(leaf) {\n        let index = -1;\n        for (let i = 0; i < this.leaves.length; i++) {\n            if (SafeBuffer.compare(leaf, this.leaves[i]) === 0) {\n                index = i;\n            }\n        }\n\n        const proof = [];\n        if (index <= this.getLeaves().length) {\n            let siblingIndex;\n            for (let i = 0; i < this.layers.length - 1; i++) {\n                if (index % 2 === 0) {\n                    siblingIndex = index + 1;\n                } else {\n                    siblingIndex = index - 1;\n                }\n                index = Math.floor(index / 2);\n                proof.push(this.layers[i][siblingIndex]);\n            }\n        }\n        return proof;\n    }\n\n    verify(value, index, root, proof) {\n        if (!Array.isArray(proof) || !value || !root) {\n            return false;\n        }\n\n        let hash = value;\n        for (let i = 0; i < proof.length; i++) {\n            const node = proof[i];\n            if (index % 2 === 0) {\n                hash = sha3(SafeBuffer.concat([hash, node]) as unknown as Buffer);\n            } else {\n                hash = sha3(SafeBuffer.concat([node, hash]) as unknown as Buffer);\n            }\n\n            index = Math.floor(index / 2);\n        }\n\n        return SafeBuffer.compare(hash, root) === 0;\n    }\n}\n","import {\n    ITransformableToArray,\n    PrefixedHexString,\n    ITransformableToBuffer,\n    BN\n} from \"./types\";\n\nexport type ToBufferInputTypes =\n    | PrefixedHexString\n    | number\n    | BN\n    | Buffer\n    | Uint8Array\n    | number[]\n    | ITransformableToArray\n    | ITransformableToBuffer\n    | null\n    | undefined;\n\nexport class BufferUtil {\n    static intToHex = function (i: number) {\n        if (!Number.isSafeInteger(i) || i < 0) {\n            throw new Error(`Received an invalid integer type: ${i}`);\n        }\n        return `0x${i.toString(16)}`;\n    };\n\n    static padToEven(value: string): string {\n        let a = value;\n\n        if (typeof a !== 'string') {\n            throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n        }\n\n        if (a.length % 2) a = `0${a}`;\n\n        return a;\n    }\n\n    static isHexPrefixed(str: string): boolean {\n        if (typeof str !== 'string') {\n            throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);\n        }\n\n        return str[0] === '0' && str[1] === 'x';\n    }\n\n    static stripHexPrefix = (str: string): string => {\n        if (typeof str !== 'string') {\n            throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n        }\n\n        return BufferUtil.isHexPrefixed(str) ? str.slice(2) : str;\n    }\n\n    /**\n     * Converts an `Number` to a `Buffer`\n     * @param {Number} i\n     * @return {Buffer}\n     */\n    static intToBuffer = function (i: number) {\n        const hex = BufferUtil.intToHex(i);\n        return Buffer.from(BufferUtil.padToEven(hex.slice(2)), 'hex');\n    };\n\n    static isHexString(value: string, length?: number): boolean {\n        if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false;\n\n        if (length && value.length !== 2 + 2 * length) return false;\n\n        return true;\n    }\n\n\n    static toBuffer = function (v: ToBufferInputTypes): Buffer {\n        if (v === null || v === undefined) {\n            return Buffer.allocUnsafe(0);\n        }\n\n        if (Buffer.isBuffer(v)) {\n            return Buffer.from(v);\n        }\n\n        if (Array.isArray(v) || v instanceof Uint8Array) {\n            return Buffer.from(v as Uint8Array);\n        }\n\n        if (typeof v === 'string') {\n            if (!BufferUtil.isHexString(v)) {\n                throw new Error(\n                    `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n                );\n            }\n            return Buffer.from(BufferUtil.padToEven(BufferUtil.stripHexPrefix(v)), 'hex');\n        }\n\n        if (typeof v === 'number') {\n            return BufferUtil.intToBuffer(v);\n        }\n\n        if (BN.isBN(v)) {\n            if (v.isNeg()) {\n                throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`);\n            }\n            return v.toArrayLike(Buffer);\n        }\n\n        if (v.toArray) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n\n        if (v.toBuffer) {\n            return Buffer.from(v.toBuffer());\n        }\n\n        throw new Error('invalid type');\n    };\n\n    /**\n     * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n     * @param buf `Buffer` object to convert\n     */\n    static bufferToHex = function (buf: Buffer): string {\n        buf = BufferUtil.toBuffer(buf);\n        return '0x' + buf.toString('hex');\n    };\n}\n","/**\n * @module LRUCache\n */\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache {\n    // properties coming in from the options of these, only max and maxSize\n    // really *need* to be protected. The rest can be modified, as they just\n    // set defaults for various methods.\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the remaining TTL time for a given entry key\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.delete(this.#keyList[index]);\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to Array.find().  fn is called as fn(value, key, cache).\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from\n     * most recently used to least recently used.  fn is called as\n     * fn(value, key, cache).  Does not update age or recenty of use.\n     * Does not iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.delete(this.#keyList[i]);\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Like {@link LRUCache#dump}, but just for a\n     * single key. Always returns stale values, if their info is found in the\n     * cache, so be sure to check for expired TTLs if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to cache.load()\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     * Note that the shape of the resulting cache may be different if the\n     * same options are not used in both caches.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.delete(k);\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.delete(k);\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.delete(k);\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.delete(k);\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.clear();\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, 'delete');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, 'delete']);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, 'delete');\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, 'delete']);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { KeyEncoding, ValueEncoding, bytesToUnprefixedHex, unprefixedHexToBytes, } from '@ethereumjs/util';\nimport { LRUCache } from 'lru-cache';\n/**\n * DB is a thin wrapper around the underlying levelup db,\n * which validates inputs and sets encoding type.\n */\nexport class CheckpointDB {\n    /**\n     * Initialize a DB instance.\n     */\n    constructor(opts) {\n        // protected _cache?: LRUCache<string, Uint8Array | undefined>\n        this._stats = {\n            cache: {\n                reads: 0,\n                hits: 0,\n                writes: 0,\n            },\n            db: {\n                reads: 0,\n                hits: 0,\n                writes: 0,\n            },\n        };\n        this.db = opts.db;\n        this.cacheSize = opts.cacheSize ?? 0;\n        this.valueEncoding = opts.valueEncoding ?? ValueEncoding.String;\n        // Roots of trie at the moment of checkpoint\n        this.checkpoints = [];\n        if (this.cacheSize > 0) {\n            // @ts-ignore\n            this._cache = new LRUCache({\n                max: this.cacheSize,\n                updateAgeOnGet: true,\n            });\n        }\n    }\n    /**\n     * Flush the checkpoints and use the given checkpoints instead.\n     * @param {Checkpoint[]} checkpoints\n     */\n    setCheckpoints(checkpoints) {\n        this.checkpoints = [];\n        for (let i = 0; i < checkpoints.length; i++) {\n            this.checkpoints.push({\n                root: checkpoints[i].root,\n                keyValueMap: new Map(checkpoints[i].keyValueMap),\n            });\n        }\n    }\n    /**\n     * Is the DB during a checkpoint phase?\n     */\n    hasCheckpoints() {\n        return this.checkpoints.length > 0;\n    }\n    /**\n     * Adds a new checkpoint to the stack\n     * @param root\n     */\n    checkpoint(root) {\n        this.checkpoints.push({ keyValueMap: new Map(), root });\n    }\n    /**\n     * Commits the latest checkpoint\n     */\n    async commit() {\n        const { keyValueMap } = this.checkpoints.pop();\n        if (!this.hasCheckpoints()) {\n            // This was the final checkpoint, we should now commit and flush everything to disk\n            const batchOp = [];\n            for (const [key, value] of keyValueMap.entries()) {\n                if (value === undefined) {\n                    batchOp.push({\n                        type: 'del',\n                        key: unprefixedHexToBytes(key),\n                    });\n                }\n                else {\n                    batchOp.push({\n                        type: 'put',\n                        key: unprefixedHexToBytes(key),\n                        value,\n                    });\n                }\n            }\n            await this.batch(batchOp);\n        }\n        else {\n            // dump everything into the current (higher level) diff cache\n            const currentKeyValueMap = this.checkpoints[this.checkpoints.length - 1].keyValueMap;\n            for (const [key, value] of keyValueMap.entries()) {\n                currentKeyValueMap.set(key, value);\n            }\n        }\n    }\n    /**\n     * Reverts the latest checkpoint\n     */\n    async revert() {\n        const { root } = this.checkpoints.pop();\n        return root;\n    }\n    /**\n     * @inheritDoc\n     */\n    async get(key) {\n        const keyHex = bytesToUnprefixedHex(key);\n        if (this._cache !== undefined) {\n            const value = this._cache.get(keyHex);\n            this._stats.cache.reads += 1;\n            if (value !== undefined) {\n                this._stats.cache.hits += 1;\n                return value;\n            }\n        }\n        // Lookup the value in our diff cache. We return the latest checkpointed value (which should be the value on disk)\n        for (let index = this.checkpoints.length - 1; index >= 0; index--) {\n            if (this.checkpoints[index].keyValueMap.has(keyHex)) {\n                return this.checkpoints[index].keyValueMap.get(keyHex);\n            }\n        }\n        // Nothing has been found in diff cache, look up from disk\n        const value = await this.db.get(keyHex, {\n            keyEncoding: KeyEncoding.String,\n            valueEncoding: this.valueEncoding,\n        });\n        this._stats.db.reads += 1;\n        if (value !== undefined) {\n            this._stats.db.hits += 1;\n        }\n        const returnValue = value !== undefined\n            ? value instanceof Uint8Array\n                ? value\n                : unprefixedHexToBytes(value)\n            : undefined;\n        this._cache?.set(keyHex, returnValue);\n        if (this.hasCheckpoints()) {\n            // Since we are a checkpoint, put this value in diff cache,\n            // so future `get` calls will not look the key up again from disk.\n            this.checkpoints[this.checkpoints.length - 1].keyValueMap.set(keyHex, returnValue);\n        }\n        return returnValue;\n    }\n    /**\n     * @inheritDoc\n     */\n    async put(key, value) {\n        const keyHex = bytesToUnprefixedHex(key);\n        if (this.hasCheckpoints()) {\n            // put value in diff cache\n            this.checkpoints[this.checkpoints.length - 1].keyValueMap.set(keyHex, value);\n        }\n        else {\n            const valuePut = this.valueEncoding === ValueEncoding.Bytes ? value : bytesToUnprefixedHex(value);\n            await this.db.put(keyHex, valuePut, {\n                keyEncoding: KeyEncoding.String,\n                valueEncoding: this.valueEncoding,\n            });\n            this._stats.db.writes += 1;\n            if (this._cache !== undefined) {\n                this._cache.set(keyHex, value);\n                this._stats.cache.writes += 1;\n            }\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    async del(key) {\n        const keyHex = bytesToUnprefixedHex(key);\n        if (this.hasCheckpoints()) {\n            // delete the value in the current diff cache\n            this.checkpoints[this.checkpoints.length - 1].keyValueMap.set(keyHex, undefined);\n        }\n        else {\n            // delete the value on disk\n            await this.db.del(keyHex, {\n                keyEncoding: KeyEncoding.String,\n            });\n            this._stats.db.writes += 1;\n            if (this._cache !== undefined) {\n                this._cache.set(keyHex, undefined);\n                this._stats.cache.writes += 1;\n            }\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    async batch(opStack) {\n        if (this.hasCheckpoints()) {\n            for (const op of opStack) {\n                if (op.type === 'put') {\n                    await this.put(op.key, op.value);\n                }\n                else if (op.type === 'del') {\n                    await this.del(op.key);\n                }\n            }\n        }\n        else {\n            const convertedOps = opStack.map((op) => {\n                const convertedOp = {\n                    key: bytesToUnprefixedHex(op.key),\n                    value: op.type === 'put' ? op.value : undefined,\n                    type: op.type,\n                    opts: { ...op.opts, ...{ valueEncoding: this.valueEncoding } },\n                };\n                if (op.type === 'put' && this.valueEncoding === ValueEncoding.String) {\n                    convertedOp.value = bytesToUnprefixedHex(convertedOp.value);\n                }\n                return convertedOp;\n            });\n            await this.db.batch(convertedOps);\n        }\n    }\n    stats(reset = true) {\n        const stats = { ...this._stats, size: this._cache?.size ?? 0 };\n        if (reset) {\n            this._stats = {\n                cache: {\n                    reads: 0,\n                    hits: 0,\n                    writes: 0,\n                },\n                db: {\n                    reads: 0,\n                    hits: 0,\n                    writes: 0,\n                },\n            };\n        }\n        return stats;\n    }\n    /**\n     * @inheritDoc\n     */\n    shallowCopy() {\n        return new CheckpointDB({\n            db: this.db,\n            cacheSize: this.cacheSize,\n            valueEncoding: this.valueEncoding,\n        });\n    }\n    open() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=checkpoint.js.map","import { RLP } from '@ethereumjs/rlp';\nexport class BranchNode {\n    constructor() {\n        this._branches = new Array(16).fill(null);\n        this._value = null;\n    }\n    static fromArray(arr) {\n        const node = new BranchNode();\n        node._branches = arr.slice(0, 16);\n        node._value = arr[16];\n        return node;\n    }\n    value(v) {\n        if (v !== null && v !== undefined) {\n            this._value = v;\n        }\n        return this._value && this._value.length > 0 ? this._value : null;\n    }\n    setBranch(i, v) {\n        this._branches[i] = v;\n    }\n    raw() {\n        return [...this._branches, this._value];\n    }\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n    getBranch(i) {\n        const b = this._branches[i];\n        if (b !== null && b.length > 0) {\n            return b;\n        }\n        else {\n            return null;\n        }\n    }\n    getChildren() {\n        const children = [];\n        for (let i = 0; i < 16; i++) {\n            const b = this._branches[i];\n            if (b !== null && b.length > 0) {\n                children.push([i, b]);\n            }\n        }\n        return children;\n    }\n}\n//# sourceMappingURL=branch.js.map","/**\n * Prepends hex prefix to an array of nibbles.\n * @param key - Array of nibbles\n * @returns returns buffer of encoded data\n **/\nexport function addHexPrefix(key, terminator) {\n    // odd\n    if (key.length % 2) {\n        key.unshift(1);\n    }\n    else {\n        // even\n        key.unshift(0);\n        key.unshift(0);\n    }\n    if (terminator) {\n        key[0] += 2;\n    }\n    return key;\n}\n/**\n * Removes hex prefix of an array of nibbles.\n * @param val - Array of nibbles\n * @private\n */\nexport function removeHexPrefix(val) {\n    if (val[0] % 2) {\n        val = val.slice(1);\n    }\n    else {\n        val = val.slice(2);\n    }\n    return val;\n}\n/**\n * Returns true if hex-prefixed path is for a terminating (leaf) node.\n * @param key - a hex-prefixed array of nibbles\n * @private\n */\nexport function isTerminator(key) {\n    return key[0] > 1;\n}\n//# sourceMappingURL=hex.js.map","import { toBytes } from '@ethereumjs/util';\n/**\n * Converts a bytes to a nibble array.\n * @private\n * @param key\n */\nexport function bytesToNibbles(key) {\n    const bkey = toBytes(key);\n    const nibbles = [];\n    for (let i = 0; i < bkey.length; i++) {\n        let q = i * 2;\n        nibbles[q] = bkey[i] >> 4;\n        ++q;\n        nibbles[q] = bkey[i] % 16;\n    }\n    return nibbles;\n}\n/**\n * Converts a nibble array into bytes.\n * @private\n * @param arr - Nibble array\n */\nexport function nibblestoBytes(arr) {\n    const buf = new Uint8Array(arr.length / 2);\n    for (let i = 0; i < buf.length; i++) {\n        let q = i * 2;\n        buf[i] = (arr[q] << 4) + arr[++q];\n    }\n    return buf;\n}\n/**\n * Compare two nibble array.\n * * `0` is returned if `n2` === `n1`.\n * * `1` is returned if `n2` > `n1`.\n * * `-1` is returned if `n2` < `n1`.\n * @param n1 - Nibble array\n * @param n2 - Nibble array\n */\nexport function nibblesCompare(n1, n2) {\n    const cmpLength = Math.min(n1.length, n2.length);\n    let res = 0;\n    for (let i = 0; i < cmpLength; i++) {\n        if (n1[i] < n2[i]) {\n            res = -1;\n            break;\n        }\n        else if (n1[i] > n2[i]) {\n            res = 1;\n            break;\n        }\n    }\n    if (res === 0) {\n        if (n1.length < n2.length) {\n            res = -1;\n        }\n        else if (n1.length > n2.length) {\n            res = 1;\n        }\n    }\n    return res;\n}\n/**\n * Returns the number of in order matching nibbles of two give nibble arrays.\n * @private\n * @param nib1\n * @param nib2\n */\nexport function matchingNibbleLength(nib1, nib2) {\n    let i = 0;\n    while (nib1[i] === nib2[i] && nib1.length > i) {\n        i++;\n    }\n    return i;\n}\n/**\n * Compare two nibble array keys.\n * @param keyA\n * @param keyB\n */\nexport function doKeysMatch(keyA, keyB) {\n    const length = matchingNibbleLength(keyA, keyB);\n    return length === keyA.length && length === keyB.length;\n}\n//# sourceMappingURL=nibbles.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { addHexPrefix, removeHexPrefix } from '../util/hex.js';\nimport { nibblestoBytes } from '../util/nibbles.js';\nexport class Node {\n    constructor(nibbles, value, terminator) {\n        this._nibbles = nibbles;\n        this._value = value;\n        this._terminator = terminator;\n    }\n    static decodeKey(key) {\n        return removeHexPrefix(key);\n    }\n    key(k) {\n        if (k !== undefined) {\n            this._nibbles = k;\n        }\n        return this._nibbles.slice(0);\n    }\n    keyLength() {\n        return this._nibbles.length;\n    }\n    value(v) {\n        if (v !== undefined) {\n            this._value = v;\n        }\n        return this._value;\n    }\n    encodedKey() {\n        return addHexPrefix(this._nibbles.slice(0), this._terminator);\n    }\n    raw() {\n        return [nibblestoBytes(this.encodedKey()), this._value];\n    }\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n}\n//# sourceMappingURL=node.js.map","import { addHexPrefix } from '../util/hex.js';\nimport { Node } from './node.js';\nexport class ExtensionNode extends Node {\n    constructor(nibbles, value) {\n        super(nibbles, value, false);\n    }\n    static encodeKey(key) {\n        return addHexPrefix(key, false);\n    }\n}\n//# sourceMappingURL=extension.js.map","import { addHexPrefix } from '../util/hex.js';\nimport { Node } from './node.js';\nexport class LeafNode extends Node {\n    constructor(nibbles, value) {\n        super(nibbles, value, true);\n    }\n    static encodeKey(key) {\n        return addHexPrefix(key, true);\n    }\n}\n//# sourceMappingURL=leaf.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { isTerminator } from '../util/hex.js';\nimport { bytesToNibbles } from '../util/nibbles.js';\nimport { BranchNode } from './branch.js';\nimport { ExtensionNode } from './extension.js';\nimport { LeafNode } from './leaf.js';\nexport function decodeRawNode(raw) {\n    if (raw.length === 17) {\n        return BranchNode.fromArray(raw);\n    }\n    else if (raw.length === 2) {\n        const nibbles = bytesToNibbles(raw[0]);\n        if (isTerminator(nibbles)) {\n            return new LeafNode(LeafNode.decodeKey(nibbles), raw[1]);\n        }\n        return new ExtensionNode(ExtensionNode.decodeKey(nibbles), raw[1]);\n    }\n    else {\n        throw new Error('Invalid node');\n    }\n}\nexport function isRawNode(n) {\n    return Array.isArray(n) && !(n instanceof Uint8Array);\n}\nexport function decodeNode(node) {\n    const decodedNode = RLP.decode(Uint8Array.from(node));\n    if (!isRawNode(decodedNode)) {\n        throw new Error('Invalid node');\n    }\n    return decodeRawNode(decodedNode);\n}\n//# sourceMappingURL=util.js.map","import { utf8ToBytes } from '@ethereumjs/util';\nexport const ROOT_DB_KEY = utf8ToBytes('__root__');\n//# sourceMappingURL=types.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { equalsBytes, toHex } from 'ethereum-cryptography/utils';\nimport { BranchNode } from '../node/branch.js';\nimport { ExtensionNode } from '../node/extension.js';\n/**\n * Walk Trie via async generator\n * @param nodeHash - The root key to walk on.\n * @param currentKey - The current (partial) key.\n * @param onFound - Called on every node found (before filter)\n * @param filter - Filter nodes yielded by the generator.\n * @param visited - Set of visited nodes\n * @returns AsyncIterable<{ node: TrieNode; currentKey: number[] }>\n * Iterate through nodes with\n * `for await (const { node, currentKey } of trie._walkTrie(root)) { ... }`\n */\nexport async function* _walkTrie(nodeHash, currentKey = [], onFound = async (_trieNode, _key) => { }, filter = async (_trieNode, _key) => true, visited = new Set()) {\n    if (equalsBytes(nodeHash, this.EMPTY_TRIE_ROOT)) {\n        return;\n    }\n    try {\n        const node = await this.lookupNode(nodeHash);\n        if (node === undefined || visited.has(toHex(this.hash(node.serialize())))) {\n            return;\n        }\n        visited.add(toHex(this.hash(node.serialize())));\n        await onFound(node, currentKey);\n        if (await filter(node, currentKey)) {\n            yield { node: node, currentKey };\n        }\n        if (node instanceof BranchNode) {\n            for (const [nibble, childNode] of node._branches.entries()) {\n                const nextKey = [...currentKey, nibble];\n                const _childNode = childNode instanceof Uint8Array ? childNode : this.hash(RLP.encode(childNode));\n                yield* _walkTrie.bind(this)(_childNode, nextKey, onFound, filter, visited);\n            }\n        }\n        else if (node instanceof ExtensionNode) {\n            const childNode = node.value();\n            const nextKey = [...currentKey, ...node._nibbles];\n            yield* _walkTrie.bind(this)(childNode, nextKey, onFound, filter, visited);\n        }\n    }\n    catch (e) {\n        return;\n    }\n}\n//# sourceMappingURL=asyncWalk.js.map","// eslint-disable-next-line implicit-dependencies/no-implicit\nimport { Readable } from 'readable-stream';\nimport { BranchNode, LeafNode } from '../node/index.js';\nimport { nibblestoBytes } from './nibbles.js';\nconst _findValueNodes = async (trie, onFound) => {\n    const outerOnFound = async (nodeRef, node, key, walkController) => {\n        let fullKey = key;\n        if (node instanceof LeafNode) {\n            fullKey = key.concat(node.key());\n            // found leaf node!\n            onFound(nodeRef, node, fullKey, walkController);\n        }\n        else if (node instanceof BranchNode && node.value()) {\n            // found branch with value\n            onFound(nodeRef, node, fullKey, walkController);\n        }\n        else {\n            // keep looking for value nodes\n            if (node !== null) {\n                walkController.allChildren(node, key);\n            }\n        }\n    };\n    await trie.walkTrie(trie.root(), outerOnFound);\n};\nexport class TrieReadStream extends Readable {\n    constructor(trie) {\n        super({ objectMode: true });\n        this.trie = trie;\n        this._started = false;\n    }\n    async _read() {\n        if (this._started) {\n            return;\n        }\n        this._started = true;\n        try {\n            await _findValueNodes(this.trie, async (_, node, key, walkController) => {\n                if (node !== null) {\n                    this.push({\n                        key: nibblestoBytes(key),\n                        value: node.value(),\n                    });\n                    walkController.allChildren(node, key);\n                }\n            });\n        }\n        catch (error) {\n            if (error.message === 'Missing node in DB') {\n                // pass\n            }\n            else {\n                throw error;\n            }\n        }\n        this.push(null);\n    }\n}\n//# sourceMappingURL=readStream.js.map","export class PrioritizedTaskExecutor {\n    /**\n     * Executes tasks up to maxPoolSize at a time, other items are put in a priority queue.\n     * @class PrioritizedTaskExecutor\n     * @private\n     * @param maxPoolSize The maximum size of the pool\n     */\n    constructor(maxPoolSize) {\n        this.maxPoolSize = maxPoolSize;\n        this.currentPoolSize = 0;\n        this.queue = [];\n    }\n    /**\n     * Executes the task or queues it if no spots are available.\n     * When a task is added, check if there are spots left in the pool.\n     * If a spot is available, claim that spot and give back the spot once the asynchronous task has been resolved.\n     * When no spots are available, add the task to the task queue. The task will be executed at some point when another task has been resolved.\n     * @private\n     * @param priority The priority of the task\n     * @param fn The function that accepts the callback, which must be called upon the task completion.\n     */\n    executeOrQueue(priority, fn) {\n        if (this.currentPoolSize < this.maxPoolSize) {\n            this.currentPoolSize++;\n            fn(() => {\n                this.currentPoolSize--;\n                if (this.queue.length > 0) {\n                    this.queue.sort((a, b) => b.priority - a.priority);\n                    const item = this.queue.shift();\n                    this.executeOrQueue(item.priority, item.fn);\n                }\n            });\n        }\n        else {\n            this.queue.push({ priority, fn });\n        }\n    }\n    /**\n     * Checks if the taskExecutor is finished.\n     * @private\n     * @returns Returns `true` if the taskExecutor is finished, otherwise returns `false`.\n     */\n    finished() {\n        return this.currentPoolSize === 0;\n    }\n}\n//# sourceMappingURL=tasks.js.map","import { BranchNode, ExtensionNode, LeafNode } from '../node/index.js';\nimport { PrioritizedTaskExecutor } from './tasks.js';\n/**\n * WalkController is an interface to control how the trie is being traversed.\n */\nexport class WalkController {\n    /**\n     * Creates a new WalkController\n     * @param onNode - The `FoundNodeFunction` to call if a node is found.\n     * @param trie - The `Trie` to walk on.\n     * @param poolSize - The size of the task queue.\n     */\n    constructor(onNode, trie, poolSize) {\n        this.onNode = onNode;\n        this.taskExecutor = new PrioritizedTaskExecutor(poolSize);\n        this.trie = trie;\n        this.resolve = () => { };\n        this.reject = () => { };\n    }\n    /**\n     * Async function to create and start a new walk over a trie.\n     * @param onNode - The `FoundNodeFunction to call if a node is found.\n     * @param trie - The trie to walk on.\n     * @param root - The root key to walk on.\n     * @param poolSize - Task execution pool size to prevent OOM errors. Defaults to 500.\n     */\n    static async newWalk(onNode, trie, root, poolSize) {\n        const strategy = new WalkController(onNode, trie, poolSize ?? 500);\n        await strategy.startWalk(root);\n    }\n    async startWalk(root) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n            let node;\n            try {\n                node = await this.trie.lookupNode(root);\n            }\n            catch (error) {\n                return this.reject(error);\n            }\n            this.processNode(root, node, []);\n        });\n    }\n    /**\n     * Run all children of a node. Priority of these nodes are the key length of the children.\n     * @param node - Node to get all children of and call onNode on.\n     * @param key - The current `key` which would yield the `node` when trying to get this node with a `get` operation.\n     */\n    allChildren(node, key = []) {\n        if (node instanceof LeafNode) {\n            return;\n        }\n        let children;\n        if (node instanceof ExtensionNode) {\n            children = [[node.key(), node.value()]];\n        }\n        else if (node instanceof BranchNode) {\n            children = node.getChildren().map((b) => [[b[0]], b[1]]);\n        }\n        if (!children) {\n            return;\n        }\n        for (const child of children) {\n            const keyExtension = child[0];\n            const childRef = child[1];\n            const childKey = key.concat(keyExtension);\n            const priority = childKey.length;\n            this.pushNodeToQueue(childRef, childKey, priority);\n        }\n    }\n    /**\n     * Push a node to the queue. If the queue has places left for tasks, the node is executed immediately, otherwise it is queued.\n     * @param nodeRef - Push a node reference to the event queue. This reference is a 32-byte keccak hash of the value corresponding to the `key`.\n     * @param key - The current key.\n     * @param priority - Optional priority, defaults to key length\n     */\n    pushNodeToQueue(nodeRef, key = [], priority) {\n        this.taskExecutor.executeOrQueue(priority ?? key.length, async (taskFinishedCallback) => {\n            let childNode;\n            try {\n                childNode = await this.trie.lookupNode(nodeRef);\n            }\n            catch (error) {\n                return this.reject(error);\n            }\n            taskFinishedCallback(); // this marks the current task as finished. If there are any tasks left in the queue, this will immediately execute the first task.\n            this.processNode(nodeRef, childNode, key);\n        });\n    }\n    /**\n     * Push a branch of a certain BranchNode to the event queue.\n     * @param node - The node to select a branch on. Should be a BranchNode.\n     * @param key - The current key which leads to the corresponding node.\n     * @param childIndex - The child index to add to the event queue.\n     * @param priority - Optional priority of the event, defaults to the total key length.\n     */\n    onlyBranchIndex(node, key = [], childIndex, priority) {\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Expected branch node');\n        }\n        const childRef = node.getBranch(childIndex);\n        if (!childRef) {\n            throw new Error('Could not get branch of childIndex');\n        }\n        const childKey = key.slice(); // This copies the key to a new array.\n        childKey.push(childIndex);\n        const prio = priority ?? childKey.length;\n        this.pushNodeToQueue(childRef, childKey, prio);\n    }\n    processNode(nodeRef, node, key = []) {\n        this.onNode(nodeRef, node, key, this);\n        if (this.taskExecutor.finished()) {\n            // onNode should schedule new tasks. If no tasks was added and the queue is empty, then we have finished our walk.\n            this.resolve();\n        }\n    }\n}\n//# sourceMappingURL=walkController.js.map","// Some more secure presets when using e.g. JS `call`\n'use strict';\nimport { KeyEncoding, Lock, MapDB, RLP_EMPTY_STRING, ValueEncoding, bytesToHex, bytesToUnprefixedHex, bytesToUtf8, concatBytes, equalsBytes, unprefixedHexToBytes, } from '@ethereumjs/util';\nimport debug from 'debug';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { CheckpointDB } from './db/index.js';\nimport { BranchNode, ExtensionNode, LeafNode, decodeNode, decodeRawNode, isRawNode, } from './node/index.js';\nimport { verifyRangeProof } from './proof/range.js';\nimport { ROOT_DB_KEY } from './types.js';\nimport { _walkTrie } from './util/asyncWalk.js';\nimport { bytesToNibbles, matchingNibbleLength } from './util/nibbles.js';\nimport { TrieReadStream as ReadStream } from './util/readStream.js';\nimport { WalkController } from './util/walkController.js';\n/**\n * The basic trie interface, use with `import { Trie } from '@ethereumjs/trie'`.\n */\nexport class Trie {\n    /**\n     * Creates a new trie.\n     * @param opts Options for instantiating the trie\n     *\n     * Note: in most cases, the static {@link Trie.create} constructor should be used.  It uses the same API but provides sensible defaults\n     */\n    constructor(opts) {\n        this._opts = {\n            useKeyHashing: false,\n            useKeyHashingFunction: keccak256,\n            keyPrefix: undefined,\n            useRootPersistence: false,\n            useNodePruning: false,\n            cacheSize: 0,\n            valueEncoding: ValueEncoding.String,\n        };\n        this._lock = new Lock();\n        this._debug = debug('trie');\n        this.walkTrieIterable = _walkTrie.bind(this);\n        let valueEncoding;\n        if (opts !== undefined) {\n            // Sanity check: can only set valueEncoding if a db is provided\n            // The valueEncoding defaults to `Bytes` if no DB is provided (use a MapDB in memory)\n            if (opts?.valueEncoding !== undefined && opts.db === undefined) {\n                throw new Error('`valueEncoding` can only be set if a `db` is provided');\n            }\n            this._opts = { ...this._opts, ...opts };\n            this._opts.useKeyHashingFunction =\n                opts.common?.customCrypto.keccak256 ?? opts.useKeyHashingFunction ?? keccak256;\n            valueEncoding =\n                opts.db !== undefined ? opts.valueEncoding ?? ValueEncoding.String : ValueEncoding.Bytes;\n        }\n        else {\n            // No opts are given, so create a MapDB later on\n            // Use `Bytes` for ValueEncoding\n            valueEncoding = ValueEncoding.Bytes;\n        }\n        this.DEBUG =\n            typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false;\n        this.debug = this.DEBUG\n            ? (message, namespaces = []) => {\n                let log = this._debug;\n                for (const name of namespaces) {\n                    log = log.extend(name);\n                }\n                log(message);\n            }\n            : (..._) => { };\n        this.database(opts?.db ?? new MapDB(), valueEncoding);\n        this.EMPTY_TRIE_ROOT = this.hash(RLP_EMPTY_STRING);\n        this._hashLen = this.EMPTY_TRIE_ROOT.length;\n        this._root = this.EMPTY_TRIE_ROOT;\n        if (opts?.root) {\n            this.root(opts.root);\n        }\n        this.DEBUG &&\n            this.debug(`Trie created:\n    || Root: ${bytesToHex(this.root())}\n    || Secure: ${this._opts.useKeyHashing}\n    || Persistent: ${this._opts.useRootPersistence}\n    || Pruning: ${this._opts.useNodePruning}\n    || CacheSize: ${this._opts.cacheSize}\n    || ----------------`);\n    }\n    /**\n     * Create a trie from a given (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof. A proof contains the encoded trie nodes\n     * from the root node to the leaf node storing state data.\n     * @param proof an EIP-1186 proof to create trie from\n     * @param shouldVerifyRoot If `true`, verifies that the root key of the proof matches the trie root. Throws if this is not the case.\n     * @param trieOpts trie opts to be applied to returned trie\n     * @returns new trie created from given proof\n     */\n    static async createFromProof(proof, trieOpts, shouldVerifyRoot = false) {\n        const trie = new Trie(trieOpts);\n        const root = await trie.updateFromProof(proof, shouldVerifyRoot);\n        trie.root(root);\n        await trie.persistRoot();\n        return trie;\n    }\n    /**\n     * Static version of verifyProof function with the same behavior. An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof contains the encoded trie nodes\n     * from the root node to the leaf node storing state data.\n     * @param rootHash Root hash of the trie that this proof was created from and is being verified for\n     * @param key Key that is being verified and that the proof is created for\n     * @param proof An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof contains the encoded trie nodes from the root node to the leaf node storing state data.\n     * @param opts optional, the opts may include a custom hashing function to use with the trie for proof verification\n     * @throws If proof is found to be invalid.\n     * @returns The value from the key, or null if valid proof of non-existence.\n     */\n    static async verifyProof(key, proof, opts) {\n        try {\n            const proofTrie = await Trie.createFromProof(proof, opts);\n            const value = await proofTrie.get(key, true);\n            return value;\n        }\n        catch (err) {\n            throw new Error('Invalid proof provided');\n        }\n    }\n    /**\n     * A range proof is a proof that includes the encoded trie nodes from the root node to leaf node for one or more branches of a trie,\n     * allowing an entire range of leaf nodes to be validated. This is useful in applications such as snap sync where contiguous ranges\n     * of state trie data is received and validated for constructing world state, locally. Also see {@link verifyRangeProof}. A static\n     * version of this function also exists.\n     * @param rootHash - root hash of state trie this proof is being verified against.\n     * @param firstKey - first key of range being proven.\n     * @param lastKey - last key of range being proven.\n     * @param keys - key list of leaf data being proven.\n     * @param values - value list of leaf data being proven, one-to-one correspondence with keys.\n     * @param proof - proof node list, if all-elements-proof where no proof is needed, proof should be null, and both `firstKey` and `lastKey` must be null as well\n     * @param opts - optional, the opts may include a custom hashing function to use with the trie for proof verification\n     * @returns a flag to indicate whether there exists more trie node in the trie\n     */\n    static verifyRangeProof(rootHash, firstKey, lastKey, keys, values, proof, opts) {\n        return verifyRangeProof(rootHash, firstKey && bytesToNibbles(firstKey), lastKey && bytesToNibbles(lastKey), keys.map((k) => k).map(bytesToNibbles), values, proof, opts?.useKeyHashingFunction ?? keccak256);\n    }\n    /**\n     * Static version of fromProof function. If a root is provided in the opts param, the proof will be checked to have the same expected root. An\n     * (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof contains the encoded trie nodes from the root node to the leaf node storing state data.\n     * @param proof An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof contains the encoded trie nodes from the root node to the leaf node storing state data.\n     * @deprecated Use `createFromProof`\n     */\n    static async fromProof(proof, opts) {\n        const trie = await Trie.create(opts);\n        if (opts?.root && !equalsBytes(opts.root, trie.hash(proof[0]))) {\n            throw new Error('Invalid proof provided');\n        }\n        const root = await trie.updateFromProof(proof);\n        trie.root(root);\n        await trie.persistRoot();\n        return trie;\n    }\n    /**\n     * A range proof is a proof that includes the encoded trie nodes from the root node to leaf node for one or more branches of a trie,\n     * allowing an entire range of leaf nodes to be validated. This is useful in applications such as snap sync where contiguous ranges\n     * of state trie data is received and validated for constructing world state, locally. Also see {@link verifyRangeProof}. A static\n     * version of this function also exists.\n     * @param rootHash - root hash of state trie this proof is being verified against.\n     * @param firstKey - first key of range being proven.\n     * @param lastKey - last key of range being proven.\n     * @param keys - key list of leaf data being proven.\n     * @param values - value list of leaf data being proven, one-to-one correspondence with keys.\n     * @param proof - proof node list, if all-elements-proof where no proof is needed, proof should be null, and both `firstKey` and `lastKey` must be null as well\n     * @returns a flag to indicate whether there exists more trie node in the trie\n     */\n    verifyRangeProof(rootHash, firstKey, lastKey, keys, values, proof) {\n        return verifyRangeProof(rootHash, firstKey && bytesToNibbles(this.appliedKey(firstKey)), lastKey && bytesToNibbles(this.appliedKey(lastKey)), keys.map((k) => this.appliedKey(k)).map(bytesToNibbles), values, proof, this._opts.useKeyHashingFunction);\n    }\n    /**\n     * Creates a proof from a trie and key that can be verified using {@link Trie.verifyProof}. An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof contains\n     * the encoded trie nodes from the root node to the leaf node storing state data. The returned proof will be in the format of an array that contains Uint8Arrays of\n     * serialized branch, extension, and/or leaf nodes.\n     * @param key key to create a proof for\n     */\n    async createProof(key) {\n        this.DEBUG && this.debug(`Creating Proof for Key: ${bytesToHex(key)}`, ['CREATE_PROOF']);\n        const { stack } = await this.findPath(this.appliedKey(key));\n        const p = stack.map((stackElem) => {\n            return stackElem.serialize();\n        });\n        this.DEBUG && this.debug(`Proof created with (${stack.length}) nodes`, ['CREATE_PROOF']);\n        return p;\n    }\n    /**\n     * Updates a trie from a proof by putting all the nodes in the proof into the trie. If a trie is being updated with multiple proofs, {@param shouldVerifyRoot} can\n     * be passed as false in order to not immediately throw on an unexpected root, so that root verification can happen after all proofs and their nodes have been added.\n     * An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof contains the encoded trie nodes from the root node to the leaf node storing state data.\n     * @param proof An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof to update the trie from.\n     * @param shouldVerifyRoot If `true`, verifies that the root key of the proof matches the trie root. Throws if this is not the case.\n     * @returns The root of the proof\n     */\n    async updateFromProof(proof, shouldVerifyRoot = false) {\n        this.DEBUG && this.debug(`Saving (${proof.length}) proof nodes in DB`, ['FROM_PROOF']);\n        const opStack = proof.map((nodeValue) => {\n            let key = Uint8Array.from(this.hash(nodeValue));\n            key = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, key) : key;\n            return {\n                type: 'put',\n                key,\n                value: nodeValue,\n            };\n        });\n        if (shouldVerifyRoot) {\n            if (opStack[0] !== undefined && opStack[0] !== null) {\n                if (!equalsBytes(this.root(), opStack[0].key)) {\n                    throw new Error('The provided proof does not have the expected trie root');\n                }\n            }\n        }\n        await this._db.batch(opStack);\n        if (opStack[0] !== undefined) {\n            return opStack[0].key;\n        }\n    }\n    /**\n     * Verifies a proof by putting all of its nodes into a trie and attempting to get the proven key. An (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof\n     * contains the encoded trie nodes from the root node to the leaf node storing state data. A static version of this function exists with the same name.\n     * @param rootHash Root hash of the trie that this proof was created from and is being verified for\n     * @param key Key that is being verified and that the proof is created for\n     * @param proof an EIP-1186 proof to verify the key against\n     * @throws If proof is found to be invalid.\n     * @returns The value from the key, or null if valid proof of non-existence.\n     */\n    async verifyProof(rootHash, key, proof) {\n        this.DEBUG &&\n            this.debug(`Verifying Proof:\\n|| Key: ${bytesToHex(key)}\\n|| Root: ${bytesToHex(rootHash)}\\n|| Proof: (${proof.length}) nodes\n    `, ['VERIFY_PROOF']);\n        const proofTrie = new Trie({\n            root: rootHash,\n            useKeyHashingFunction: this._opts.useKeyHashingFunction,\n            common: this._opts.common,\n        });\n        try {\n            await proofTrie.updateFromProof(proof, true);\n        }\n        catch (e) {\n            throw new Error('Invalid proof nodes given');\n        }\n        try {\n            this.DEBUG &&\n                this.debug(`Verifying proof by retrieving key: ${bytesToHex(key)} from proof trie`, [\n                    'VERIFY_PROOF',\n                ]);\n            const value = await proofTrie.get(this.appliedKey(key), true);\n            this.DEBUG && this.debug(`PROOF VERIFIED`, ['VERIFY_PROOF']);\n            return value;\n        }\n        catch (err) {\n            if (err.message === 'Missing node in DB') {\n                throw new Error('Invalid proof provided');\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Create a trie from a given (EIP-1186)[https://eips.ethereum.org/EIPS/eip-1186] proof. An EIP-1186 proof contains the encoded trie nodes from the root\n     * node to the leaf node storing state data. This function does not check if the proof has the same expected root. A static version of this function exists\n     * with the same name.\n     * @param proof an EIP-1186 proof to update the trie from\n     * @deprecated Use `updateFromProof`\n     */\n    async fromProof(proof) {\n        await this.updateFromProof(proof, false);\n        if (equalsBytes(this.root(), this.EMPTY_TRIE_ROOT) && proof[0] !== undefined) {\n            let rootKey = Uint8Array.from(this.hash(proof[0]));\n            // TODO: what if we have keyPrefix and we set root? This should not work, right? (all trie nodes are non-reachable)\n            rootKey = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, rootKey) : rootKey;\n            this.root(rootKey);\n            await this.persistRoot();\n        }\n        return;\n    }\n    static async create(opts) {\n        const keccakFunction = opts?.common?.customCrypto.keccak256 ?? opts?.useKeyHashingFunction ?? keccak256;\n        let key = ROOT_DB_KEY;\n        const encoding = opts?.valueEncoding === ValueEncoding.Bytes ? ValueEncoding.Bytes : ValueEncoding.String;\n        if (opts?.useKeyHashing === true) {\n            key = keccakFunction.call(undefined, ROOT_DB_KEY);\n        }\n        if (opts?.keyPrefix !== undefined) {\n            key = concatBytes(opts.keyPrefix, key);\n        }\n        if (opts?.db !== undefined && opts?.useRootPersistence === true) {\n            if (opts?.root === undefined) {\n                const root = await opts?.db.get(bytesToUnprefixedHex(key), {\n                    keyEncoding: KeyEncoding.String,\n                    valueEncoding: encoding,\n                });\n                if (typeof root === 'string') {\n                    opts.root = unprefixedHexToBytes(root);\n                }\n                else {\n                    opts.root = root;\n                }\n            }\n            else {\n                await opts?.db.put(bytesToUnprefixedHex(key), (encoding === ValueEncoding.Bytes ? opts.root : bytesToUnprefixedHex(opts.root)), {\n                    keyEncoding: KeyEncoding.String,\n                    valueEncoding: encoding,\n                });\n            }\n        }\n        return new Trie(opts);\n    }\n    database(db, valueEncoding) {\n        if (db !== undefined) {\n            if (db instanceof CheckpointDB) {\n                throw new Error('Cannot pass in an instance of CheckpointDB');\n            }\n            this._db = new CheckpointDB({ db, cacheSize: this._opts.cacheSize, valueEncoding });\n        }\n        return this._db;\n    }\n    /**\n     * Gets and/or Sets the current root of the `trie`\n     */\n    root(value) {\n        if (value !== undefined) {\n            if (value === null) {\n                value = this.EMPTY_TRIE_ROOT;\n            }\n            this.DEBUG && this.debug(`Setting root to ${bytesToHex(value)}`);\n            if (value.length !== this._hashLen) {\n                throw new Error(`Invalid root length. Roots are ${this._hashLen} bytes, got ${value.length} bytes`);\n            }\n            this._root = value;\n        }\n        return this._root;\n    }\n    /**\n     * Checks if a given root exists.\n     */\n    async checkRoot(root) {\n        try {\n            const value = await this.lookupNode(root);\n            return value !== null;\n        }\n        catch (error) {\n            if (error.message === 'Missing node in DB') {\n                return equalsBytes(root, this.EMPTY_TRIE_ROOT);\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    /**\n     * Gets a value given a `key`\n     * @param key - the key to search for\n     * @param throwIfMissing - if true, throws if any nodes are missing. Used for verifying proofs. (default: false)\n     * @returns A Promise that resolves to `Uint8Array` if a value was found or `null` if no value was found.\n     */\n    async get(key, throwIfMissing = false) {\n        this.DEBUG && this.debug(`Key: ${bytesToHex(key)}`, ['GET']);\n        const { node, remaining } = await this.findPath(this.appliedKey(key), throwIfMissing);\n        let value = null;\n        if (node && remaining.length === 0) {\n            value = node.value();\n        }\n        this.DEBUG && this.debug(`Value: ${value === null ? 'null' : bytesToHex(value)}`, ['GET']);\n        return value;\n    }\n    /**\n     * Stores a given `value` at the given `key` or do a delete if `value` is empty\n     * (delete operations are only executed on DB with `deleteFromDB` set to `true`)\n     * @param key\n     * @param value\n     * @returns A Promise that resolves once value is stored.\n     */\n    async put(key, value, skipKeyTransform = false) {\n        this.DEBUG && this.debug(`Key: ${bytesToHex(key)}`, ['PUT']);\n        this.DEBUG && this.debug(`Value: ${value === null ? 'null' : bytesToHex(key)}`, ['PUT']);\n        if (this._opts.useRootPersistence && equalsBytes(key, ROOT_DB_KEY) === true) {\n            throw new Error(`Attempted to set '${bytesToUtf8(ROOT_DB_KEY)}' key but it is not allowed.`);\n        }\n        // If value is empty, delete\n        if (value === null || value.length === 0) {\n            return this.del(key);\n        }\n        await this._lock.acquire();\n        const appliedKey = skipKeyTransform ? key : this.appliedKey(key);\n        if (equalsBytes(this.root(), this.EMPTY_TRIE_ROOT) === true) {\n            // If no root, initialize this trie\n            await this._createInitialNode(appliedKey, value);\n        }\n        else {\n            // First try to find the given key or its nearest node\n            const { remaining, stack } = await this.findPath(appliedKey);\n            let ops = [];\n            if (this._opts.useNodePruning) {\n                const val = await this.get(key);\n                // Only delete keys if it either does not exist, or if it gets updated\n                // (The update will update the hash of the node, thus we can delete the original leaf node)\n                if (val === null || equalsBytes(val, value) === false) {\n                    // All items of the stack are going to change.\n                    // (This is the path from the root node to wherever it needs to insert nodes)\n                    // The items change, because the leaf value is updated, thus all keyhashes in the\n                    // stack should be updated as well, so that it points to the right key/value pairs of the path\n                    const deleteHashes = stack.map((e) => this.hash(e.serialize()));\n                    ops = deleteHashes.map((e) => {\n                        const key = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, e) : e;\n                        return {\n                            type: 'del',\n                            key,\n                            opts: {\n                                keyEncoding: KeyEncoding.Bytes,\n                            },\n                        };\n                    });\n                }\n            }\n            // then update\n            await this._updateNode(appliedKey, value, remaining, stack);\n            if (this._opts.useNodePruning) {\n                // Only after updating the node we can delete the keyhashes\n                await this._db.batch(ops);\n            }\n        }\n        await this.persistRoot();\n        this._lock.release();\n    }\n    /**\n     * Deletes a value given a `key` from the trie\n     * (delete operations are only executed on DB with `deleteFromDB` set to `true`)\n     * @param key\n     * @returns A Promise that resolves once value is deleted.\n     */\n    async del(key, skipKeyTransform = false) {\n        this.DEBUG && this.debug(`Key: ${bytesToHex(key)}`, ['DEL']);\n        await this._lock.acquire();\n        const appliedKey = skipKeyTransform ? key : this.appliedKey(key);\n        const { node, stack } = await this.findPath(appliedKey);\n        let ops = [];\n        // Only delete if the `key` currently has any value\n        if (this._opts.useNodePruning && node !== null) {\n            const deleteHashes = stack.map((e) => this.hash(e.serialize()));\n            // Just as with `put`, the stack items all will have their keyhashes updated\n            // So after deleting the node, one can safely delete these from the DB\n            ops = deleteHashes.map((e) => {\n                const key = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, e) : e;\n                return {\n                    type: 'del',\n                    key,\n                    opts: {\n                        keyEncoding: KeyEncoding.Bytes,\n                    },\n                };\n            });\n        }\n        if (node) {\n            await this._deleteNode(appliedKey, stack);\n        }\n        if (this._opts.useNodePruning) {\n            // Only after deleting the node it is possible to delete the keyhashes\n            await this._db.batch(ops);\n        }\n        await this.persistRoot();\n        this._lock.release();\n    }\n    /**\n     * Tries to find a path to the node for the given key.\n     * It returns a `stack` of nodes to the closest node.\n     * @param key - the search key\n     * @param throwIfMissing - if true, throws if any nodes are missing. Used for verifying proofs. (default: false)\n     */\n    async findPath(key, throwIfMissing = false, partialPath = {\n        stack: [],\n    }) {\n        const targetKey = bytesToNibbles(key);\n        const keyLen = targetKey.length;\n        const stack = Array.from({ length: keyLen });\n        let progress = 0;\n        for (let i = 0; i < partialPath.stack.length - 1; i++) {\n            stack[i] = partialPath.stack[i];\n            progress += stack[i] instanceof BranchNode ? 1 : stack[i].keyLength();\n        }\n        this.DEBUG && this.debug(`Target (${targetKey.length}): [${targetKey}]`, ['FIND_PATH']);\n        let result = null;\n        const onFound = async (_, node, keyProgress, walkController) => {\n            stack[progress] = node;\n            if (node instanceof BranchNode) {\n                if (progress === keyLen) {\n                    result = { node, remaining: [], stack };\n                }\n                else {\n                    const branchIndex = targetKey[progress];\n                    this.DEBUG &&\n                        this.debug(`Looking for node on branch index: [${branchIndex}]`, [\n                            'FIND_PATH',\n                            'BranchNode',\n                        ]);\n                    const branchNode = node.getBranch(branchIndex);\n                    this.DEBUG &&\n                        this.debug(branchNode === null\n                            ? 'NULL'\n                            : branchNode instanceof Uint8Array\n                                ? `NodeHash: ${bytesToHex(branchNode)}`\n                                : `Raw_Node: ${branchNode.toString()}`, ['FIND_PATH', 'BranchNode', branchIndex.toString()]);\n                    if (!branchNode) {\n                        result = { node: null, remaining: targetKey.slice(progress), stack };\n                    }\n                    else {\n                        progress++;\n                        walkController.onlyBranchIndex(node, keyProgress, branchIndex);\n                    }\n                }\n            }\n            else if (node instanceof LeafNode) {\n                const _progress = progress;\n                if (keyLen - progress > node.key().length) {\n                    result = { node: null, remaining: targetKey.slice(_progress), stack };\n                    return;\n                }\n                for (const k of node.key()) {\n                    if (k !== targetKey[progress]) {\n                        result = { node: null, remaining: targetKey.slice(_progress), stack };\n                        return;\n                    }\n                    progress++;\n                }\n                result = { node, remaining: [], stack };\n            }\n            else if (node instanceof ExtensionNode) {\n                this.DEBUG &&\n                    this.debug(`Comparing node key to expected\\n|| Node_Key: [${node.key()}]\\n|| Expected: [${targetKey.slice(progress, progress + node.key().length)}]\\n|| Matching: [${targetKey.slice(progress, progress + node.key().length).toString() ===\n                        node.key().toString()}]\n            `, ['FIND_PATH', 'ExtensionNode']);\n                const _progress = progress;\n                for (const k of node.key()) {\n                    this.DEBUG && this.debug(`NextNode: ${node.value()}`, ['FIND_PATH', 'ExtensionNode']);\n                    if (k !== targetKey[progress]) {\n                        result = { node: null, remaining: targetKey.slice(_progress), stack };\n                        return;\n                    }\n                    progress++;\n                }\n                walkController.allChildren(node, keyProgress);\n            }\n        };\n        const startingNode = partialPath.stack[partialPath.stack.length - 1];\n        const start = startingNode !== undefined ? this.hash(startingNode?.serialize()) : this.root();\n        try {\n            this.DEBUG &&\n                this.debug(`Walking trie from ${startingNode === undefined ? 'ROOT' : 'NODE'}: ${bytesToHex(start)}`, ['FIND_PATH']);\n            await this.walkTrie(start, onFound);\n        }\n        catch (error) {\n            if (error.message !== 'Missing node in DB' || throwIfMissing) {\n                throw error;\n            }\n        }\n        if (result === null) {\n            result = { node: null, remaining: [], stack };\n        }\n        this.DEBUG &&\n            this.debug(result.node !== null\n                ? `Target Node FOUND for ${bytesToNibbles(key)}`\n                : `Target Node NOT FOUND`, ['FIND_PATH']);\n        result.stack = result.stack.filter((e) => e !== undefined);\n        this.DEBUG &&\n            this.debug(`Result:\n        || Node: ${result.node === null ? 'null' : result.node.constructor.name}\n        || Remaining: [${result.remaining}]\\n|| Stack: ${result.stack\n                .map((e) => e.constructor.name)\n                .join(', ')}`, ['FIND_PATH']);\n        return result;\n    }\n    /**\n     * Walks a trie until finished.\n     * @param root\n     * @param onFound - callback to call when a node is found. This schedules new tasks. If no tasks are available, the Promise resolves.\n     * @returns Resolves when finished walking trie.\n     */\n    async walkTrie(root, onFound) {\n        await WalkController.newWalk(onFound, this, root);\n    }\n    /**\n     * Executes a callback for each node in the trie.\n     * @param onFound - callback to call when a node is found.\n     * @returns Resolves when finished walking trie.\n     */\n    async walkAllNodes(onFound) {\n        for await (const { node, currentKey } of this.walkTrieIterable(this.root())) {\n            await onFound(node, currentKey);\n        }\n    }\n    /**\n     * Executes a callback for each value node in the trie.\n     * @param onFound - callback to call when a node is found.\n     * @returns Resolves when finished walking trie.\n     */\n    async walkAllValueNodes(onFound) {\n        for await (const { node, currentKey } of this.walkTrieIterable(this.root(), [], undefined, async (node) => {\n            return node instanceof LeafNode || (node instanceof BranchNode && node.value() !== null);\n        })) {\n            await onFound(node, currentKey);\n        }\n    }\n    /**\n     * Creates the initial node from an empty tree.\n     * @private\n     */\n    async _createInitialNode(key, value) {\n        const newNode = new LeafNode(bytesToNibbles(key), value);\n        const encoded = newNode.serialize();\n        this.root(this.hash(encoded));\n        let rootKey = this.root();\n        rootKey = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, rootKey) : rootKey;\n        await this._db.put(rootKey, encoded);\n        await this.persistRoot();\n    }\n    /**\n     * Retrieves a node from db by hash.\n     */\n    async lookupNode(node) {\n        if (isRawNode(node)) {\n            const decoded = decodeRawNode(node);\n            this.DEBUG && this.debug(`${decoded.constructor.name}`, ['LOOKUP_NODE', 'RAW_NODE']);\n            return decoded;\n        }\n        this.DEBUG && this.debug(`${`${bytesToHex(node)}`}`, ['LOOKUP_NODE', 'BY_HASH']);\n        const key = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, node) : node;\n        const value = (await this._db.get(key)) ?? null;\n        if (value === null) {\n            // Dev note: this error message text is used for error checking in `checkRoot`, `verifyProof`, and `findPath`\n            throw new Error('Missing node in DB');\n        }\n        const decoded = decodeNode(value);\n        this.DEBUG && this.debug(`${decoded.constructor.name} found in DB`, ['LOOKUP_NODE', 'BY_HASH']);\n        return decoded;\n    }\n    /**\n     * Updates a node.\n     * @private\n     * @param key\n     * @param value\n     * @param keyRemainder\n     * @param stack\n     */\n    async _updateNode(k, value, keyRemainder, stack) {\n        const toSave = [];\n        const lastNode = stack.pop();\n        if (!lastNode) {\n            throw new Error('Stack underflow');\n        }\n        // add the new nodes\n        const key = bytesToNibbles(k);\n        // Check if the last node is a leaf and the key matches to this\n        let matchLeaf = false;\n        if (lastNode instanceof LeafNode) {\n            let l = 0;\n            for (let i = 0; i < stack.length; i++) {\n                const n = stack[i];\n                if (n instanceof BranchNode) {\n                    l++;\n                }\n                else {\n                    l += n.key().length;\n                }\n            }\n            if (matchingNibbleLength(lastNode.key(), key.slice(l)) === lastNode.key().length &&\n                keyRemainder.length === 0) {\n                matchLeaf = true;\n            }\n        }\n        if (matchLeaf) {\n            // just updating a found value\n            lastNode.value(value);\n            stack.push(lastNode);\n        }\n        else if (lastNode instanceof BranchNode) {\n            stack.push(lastNode);\n            if (keyRemainder.length !== 0) {\n                // add an extension to a branch node\n                keyRemainder.shift();\n                // create a new leaf\n                const newLeaf = new LeafNode(keyRemainder, value);\n                stack.push(newLeaf);\n            }\n            else {\n                lastNode.value(value);\n            }\n        }\n        else {\n            // create a branch node\n            const lastKey = lastNode.key();\n            const matchingLength = matchingNibbleLength(lastKey, keyRemainder);\n            const newBranchNode = new BranchNode();\n            // create a new extension node\n            if (matchingLength !== 0) {\n                const newKey = lastNode.key().slice(0, matchingLength);\n                const newExtNode = new ExtensionNode(newKey, value);\n                stack.push(newExtNode);\n                lastKey.splice(0, matchingLength);\n                keyRemainder.splice(0, matchingLength);\n            }\n            stack.push(newBranchNode);\n            if (lastKey.length !== 0) {\n                const branchKey = lastKey.shift();\n                if (lastKey.length !== 0 || lastNode instanceof LeafNode) {\n                    // shrinking extension or leaf\n                    lastNode.key(lastKey);\n                    const formattedNode = this._formatNode(lastNode, false, toSave);\n                    newBranchNode.setBranch(branchKey, formattedNode);\n                }\n                else {\n                    // remove extension or attaching\n                    this._formatNode(lastNode, false, toSave, true);\n                    newBranchNode.setBranch(branchKey, lastNode.value());\n                }\n            }\n            else {\n                newBranchNode.value(lastNode.value());\n            }\n            if (keyRemainder.length !== 0) {\n                keyRemainder.shift();\n                // add a leaf node to the new branch node\n                const newLeafNode = new LeafNode(keyRemainder, value);\n                stack.push(newLeafNode);\n            }\n            else {\n                newBranchNode.value(value);\n            }\n        }\n        await this.saveStack(key, stack, toSave);\n    }\n    /**\n     * Deletes a node from the trie.\n     * @private\n     */\n    async _deleteNode(k, stack) {\n        const processBranchNode = (key, branchKey, branchNode, parentNode, stack) => {\n            // branchNode is the node ON the branch node not THE branch node\n            if (parentNode === null || parentNode === undefined || parentNode instanceof BranchNode) {\n                // branch->?\n                if (parentNode !== null && parentNode !== undefined) {\n                    stack.push(parentNode);\n                }\n                if (branchNode instanceof BranchNode) {\n                    // create an extension node\n                    // branch->extension->branch\n                    // @ts-ignore\n                    const extensionNode = new ExtensionNode([branchKey], null);\n                    stack.push(extensionNode);\n                    key.push(branchKey);\n                }\n                else {\n                    const branchNodeKey = branchNode.key();\n                    // branch key is an extension or a leaf\n                    // branch->(leaf or extension)\n                    branchNodeKey.unshift(branchKey);\n                    branchNode.key(branchNodeKey.slice(0));\n                    key = key.concat(branchNodeKey);\n                }\n                stack.push(branchNode);\n            }\n            else {\n                // parent is an extension\n                let parentKey = parentNode.key();\n                if (branchNode instanceof BranchNode) {\n                    // ext->branch\n                    parentKey.push(branchKey);\n                    key.push(branchKey);\n                    parentNode.key(parentKey);\n                    stack.push(parentNode);\n                }\n                else {\n                    const branchNodeKey = branchNode.key();\n                    // branch node is an leaf or extension and parent node is an extension\n                    // add two keys together\n                    // don't push the parent node\n                    branchNodeKey.unshift(branchKey);\n                    key = key.concat(branchNodeKey);\n                    parentKey = parentKey.concat(branchNodeKey);\n                    branchNode.key(parentKey);\n                }\n                stack.push(branchNode);\n            }\n            return key;\n        };\n        let lastNode = stack.pop();\n        if (lastNode === undefined)\n            throw new Error('missing last node');\n        let parentNode = stack.pop();\n        const opStack = [];\n        let key = bytesToNibbles(k);\n        if (!parentNode) {\n            // the root here has to be a leaf.\n            this.root(this.EMPTY_TRIE_ROOT);\n            return;\n        }\n        if (lastNode instanceof BranchNode) {\n            lastNode.value(null);\n        }\n        else {\n            // the lastNode has to be a leaf if it's not a branch.\n            // And a leaf's parent, if it has one, must be a branch.\n            if (!(parentNode instanceof BranchNode)) {\n                throw new Error('Expected branch node');\n            }\n            const lastNodeKey = lastNode.key();\n            key.splice(key.length - lastNodeKey.length);\n            // delete the value\n            this._formatNode(lastNode, false, opStack, true);\n            parentNode.setBranch(key.pop(), null);\n            lastNode = parentNode;\n            parentNode = stack.pop();\n        }\n        // nodes on the branch\n        // count the number of nodes on the branch\n        const branchNodes = lastNode.getChildren();\n        // if there is only one branch node left, collapse the branch node\n        if (branchNodes.length === 1) {\n            // add the one remaining branch node to node above it\n            const branchNode = branchNodes[0][1];\n            const branchNodeKey = branchNodes[0][0];\n            // Special case where one needs to delete an extra node:\n            // In this case, after updating the branch, the branch node has just one branch left\n            // However, this violates the trie spec; this should be converted in either an ExtensionNode\n            // Or a LeafNode\n            // Since this branch is deleted, one can thus also delete this branch from the DB\n            // So add this to the `opStack` and mark the keyhash to be deleted\n            if (this._opts.useNodePruning) {\n                opStack.push({\n                    type: 'del',\n                    key: branchNode,\n                });\n            }\n            // look up node\n            const foundNode = await this.lookupNode(branchNode);\n            // if (foundNode) {\n            key = processBranchNode(key, branchNodeKey, foundNode, parentNode, stack);\n            await this.saveStack(key, stack, opStack);\n            // }\n        }\n        else {\n            // simple removing a leaf and recalculation the stack\n            if (parentNode) {\n                stack.push(parentNode);\n            }\n            stack.push(lastNode);\n            await this.saveStack(key, stack, opStack);\n        }\n    }\n    /**\n     * Saves a stack of nodes to the database.\n     *\n     * @param key - the key. Should follow the stack\n     * @param stack - a stack of nodes to the value given by the key\n     * @param opStack - a stack of levelup operations to commit at the end of this function\n     */\n    async saveStack(key, stack, opStack) {\n        let lastRoot;\n        // update nodes\n        while (stack.length) {\n            const node = stack.pop();\n            if (node instanceof LeafNode) {\n                key.splice(key.length - node.key().length);\n            }\n            else if (node instanceof ExtensionNode) {\n                key.splice(key.length - node.key().length);\n                if (lastRoot) {\n                    node.value(lastRoot);\n                }\n            }\n            else if (node instanceof BranchNode) {\n                if (lastRoot) {\n                    const branchKey = key.pop();\n                    node.setBranch(branchKey, lastRoot);\n                }\n            }\n            lastRoot = this._formatNode(node, stack.length === 0, opStack);\n        }\n        if (lastRoot) {\n            this.root(lastRoot);\n        }\n        await this._db.batch(opStack);\n        await this.persistRoot();\n    }\n    /**\n     * Formats node to be saved by `levelup.batch`.\n     * @private\n     * @param node - the node to format.\n     * @param topLevel - if the node is at the top level.\n     * @param opStack - the opStack to push the node's data.\n     * @param remove - whether to remove the node\n     * @returns The node's hash used as the key or the rawNode.\n     */\n    _formatNode(node, topLevel, opStack, remove = false) {\n        const encoded = node.serialize();\n        if (encoded.length >= 32 || topLevel) {\n            const lastRoot = this.hash(encoded);\n            const key = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, lastRoot) : lastRoot;\n            if (remove) {\n                if (this._opts.useNodePruning) {\n                    opStack.push({\n                        type: 'del',\n                        key,\n                    });\n                }\n            }\n            else {\n                opStack.push({\n                    type: 'put',\n                    key,\n                    value: encoded,\n                });\n            }\n            return lastRoot;\n        }\n        return node.raw();\n    }\n    /**\n     * The given hash of operations (key additions or deletions) are executed on the trie\n     * (delete operations are only executed on DB with `deleteFromDB` set to `true`)\n     * @example\n     * const ops = [\n     *    { type: 'del', key: Uint8Array.from('father') }\n     *  , { type: 'put', key: Uint8Array.from('name'), value: Uint8Array.from('Yuri Irsenovich Kim') }\n     *  , { type: 'put', key: Uint8Array.from('dob'), value: Uint8Array.from('16 February 1941') }\n     *  , { type: 'put', key: Uint8Array.from('spouse'), value: Uint8Array.from('Kim Young-sook') }\n     *  , { type: 'put', key: Uint8Array.from('occupation'), value: Uint8Array.from('Clown') }\n     * ]\n     * await trie.batch(ops)\n     * @param ops\n     */\n    async batch(ops, skipKeyTransform) {\n        for (const op of ops) {\n            if (op.type === 'put') {\n                if (op.value === null || op.value === undefined) {\n                    throw new Error('Invalid batch db operation');\n                }\n                await this.put(op.key, op.value, skipKeyTransform);\n            }\n            else if (op.type === 'del') {\n                await this.del(op.key, skipKeyTransform);\n            }\n        }\n        await this.persistRoot();\n    }\n    // This method verifies if all keys in the trie (except the root) are reachable\n    // If one of the key is not reachable, then that key could be deleted from the DB\n    // (i.e. the Trie is not correctly pruned)\n    // If this method returns `true`, the Trie is correctly pruned and all keys are reachable\n    async verifyPrunedIntegrity() {\n        const roots = [\n            bytesToUnprefixedHex(this.root()),\n            bytesToUnprefixedHex(this.appliedKey(ROOT_DB_KEY)),\n        ];\n        for (const dbkey of this._db.db._database.keys()) {\n            if (roots.includes(dbkey)) {\n                // The root key can never be found from the trie, otherwise this would\n                // convert the tree from a directed acyclic graph to a directed cycling graph\n                continue;\n            }\n            // Track if key is found\n            let found = false;\n            try {\n                await this.walkTrie(this.root(), async function (nodeRef, node, key, controller) {\n                    if (found) {\n                        // Abort all other children checks\n                        return;\n                    }\n                    if (node instanceof BranchNode) {\n                        for (const item of node._branches) {\n                            // If one of the branches matches the key, then it is found\n                            if (item !== null && bytesToUnprefixedHex(item) === dbkey) {\n                                found = true;\n                                return;\n                            }\n                        }\n                        // Check all children of the branch\n                        controller.allChildren(node, key);\n                    }\n                    if (node instanceof ExtensionNode) {\n                        // If the value of the ExtensionNode points to the dbkey, then it is found\n                        if (bytesToUnprefixedHex(node.value()) === dbkey) {\n                            found = true;\n                            return;\n                        }\n                        controller.allChildren(node, key);\n                    }\n                });\n            }\n            catch {\n                return false;\n            }\n            if (!found) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * The `data` event is given an `Object` that has two properties; the `key` and the `value`. Both should be Uint8Arrays.\n     * @return Returns a [stream](https://nodejs.org/dist/latest-v12.x/docs/api/stream.html#stream_class_stream_readable) of the contents of the `trie`\n     */\n    createReadStream() {\n        return new ReadStream(this);\n    }\n    /**\n     * Returns a copy of the underlying trie.\n     *\n     * Note on db: the copy will create a reference to the\n     * same underlying database.\n     *\n     * Note on cache: for memory reasons a copy will by default\n     * not recreate a new LRU cache but initialize with cache\n     * being deactivated. This behavior can be overwritten by\n     * explicitly setting `cacheSize` as an option on the method.\n     *\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    shallowCopy(includeCheckpoints = true, opts) {\n        const trie = new Trie({\n            ...this._opts,\n            db: this._db.db.shallowCopy(),\n            root: this.root(),\n            cacheSize: 0,\n            ...(opts ?? {}),\n        });\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            trie._db.setCheckpoints(this._db.checkpoints);\n        }\n        return trie;\n    }\n    /**\n     * Persists the root hash in the underlying database\n     */\n    async persistRoot() {\n        if (this._opts.useRootPersistence) {\n            this.DEBUG &&\n                this.debug(`Persisting root: \\n|| RootHash: ${bytesToHex(this.root())}\\n|| RootKey: ${bytesToHex(this.appliedKey(ROOT_DB_KEY))}`, ['PERSIST_ROOT']);\n            let key = this.appliedKey(ROOT_DB_KEY);\n            key = this._opts.keyPrefix ? concatBytes(this._opts.keyPrefix, key) : key;\n            await this._db.put(key, this.root());\n        }\n    }\n    /**\n     * Finds all nodes that are stored directly in the db\n     * (some nodes are stored raw inside other nodes)\n     * called by {@link ScratchReadStream}\n     * @private\n     */\n    async _findDbNodes(onFound) {\n        const outerOnFound = async (nodeRef, node, key, walkController) => {\n            if (isRawNode(nodeRef)) {\n                if (node !== null) {\n                    walkController.allChildren(node, key);\n                }\n            }\n            else {\n                onFound(nodeRef, node, key, walkController);\n            }\n        };\n        await this.walkTrie(this.root(), outerOnFound);\n    }\n    /**\n     * Returns the key practically applied for trie construction\n     * depending on the `useKeyHashing` option being set or not.\n     * @param key\n     */\n    appliedKey(key) {\n        if (this._opts.useKeyHashing) {\n            return this.hash(key);\n        }\n        return key;\n    }\n    hash(msg) {\n        return Uint8Array.from(this._opts.useKeyHashingFunction.call(undefined, msg));\n    }\n    /**\n     * Is the trie during a checkpoint phase?\n     */\n    hasCheckpoints() {\n        return this._db.hasCheckpoints();\n    }\n    /**\n     * Creates a checkpoint that can later be reverted to or committed.\n     * After this is called, all changes can be reverted until `commit` is called.\n     */\n    checkpoint() {\n        this.DEBUG && this.debug(`${bytesToHex(this.root())}`, ['CHECKPOINT']);\n        this._db.checkpoint(this.root());\n    }\n    /**\n     * Commits a checkpoint to disk, if current checkpoint is not nested.\n     * If nested, only sets the parent checkpoint as current checkpoint.\n     * @throws If not during a checkpoint phase\n     */\n    async commit() {\n        if (!this.hasCheckpoints()) {\n            throw new Error('trying to commit when not checkpointed');\n        }\n        this.DEBUG && this.debug(`${bytesToHex(this.root())}`, ['COMMIT']);\n        await this._lock.acquire();\n        await this._db.commit();\n        await this.persistRoot();\n        this._lock.release();\n    }\n    /**\n     * Reverts the trie to the state it was at when `checkpoint` was first called.\n     * If during a nested checkpoint, sets root to most recent checkpoint, and sets\n     * parent checkpoint as current.\n     */\n    async revert() {\n        if (!this.hasCheckpoints()) {\n            throw new Error('trying to revert when not checkpointed');\n        }\n        this.DEBUG && this.debug(`${bytesToHex(this.root())}`, ['REVERT', 'BEFORE']);\n        await this._lock.acquire();\n        this.root(await this._db.revert());\n        await this.persistRoot();\n        this._lock.release();\n        this.DEBUG && this.debug(`${bytesToHex(this.root())}`, ['REVERT', 'AFTER']);\n    }\n    /**\n     * Flushes all checkpoints, restoring the initial checkpoint state.\n     */\n    flushCheckpoints() {\n        this.DEBUG &&\n            this.debug(`Deleting ${this._db.checkpoints.length} checkpoints.`, ['FLUSH_CHECKPOINTS']);\n        this._db.checkpoints = [];\n    }\n}\n//# sourceMappingURL=trie.js.map","import { equalsBytes } from '@ethereumjs/util';\nimport { BranchNode, ExtensionNode, LeafNode } from '../node/index.js';\nimport { Trie } from '../trie.js';\nimport { nibblesCompare, nibblestoBytes } from '../util/nibbles.js';\n// reference: https://github.com/ethereum/go-ethereum/blob/20356e57b119b4e70ce47665a71964434e15200d/trie/proof.go\n/**\n * unset will remove all nodes to the left or right of the target key(decided by `removeLeft`).\n * @param trie - trie object.\n * @param parent - parent node, it can be `null`.\n * @param child - child node.\n * @param key - target nibbles.\n * @param pos - key position.\n * @param removeLeft - remove all nodes to the left or right of the target key.\n * @param stack - a stack of modified nodes.\n * @returns The end position of key.\n */\nasync function unset(trie, parent, child, key, pos, removeLeft, stack) {\n    if (child instanceof BranchNode) {\n        /**\n         * This node is a branch node,\n         * remove all branches on the left or right\n         */\n        if (removeLeft) {\n            for (let i = 0; i < key[pos]; i++) {\n                child.setBranch(i, null);\n            }\n        }\n        else {\n            for (let i = key[pos] + 1; i < 16; i++) {\n                child.setBranch(i, null);\n            }\n        }\n        // record this node on the stack\n        stack.push(child);\n        // continue to the next node\n        const next = child.getBranch(key[pos]);\n        const _child = next && (await trie.lookupNode(next));\n        return unset(trie, child, _child, key, pos + 1, removeLeft, stack);\n    }\n    else if (child instanceof ExtensionNode || child instanceof LeafNode) {\n        /**\n         * This node is an extension node or lead node,\n         * if node._nibbles is less or greater than the target key,\n         * remove self from parent\n         */\n        if (key.length - pos < child.keyLength() ||\n            nibblesCompare(child._nibbles, key.slice(pos, pos + child.keyLength())) !== 0) {\n            if (removeLeft) {\n                if (nibblesCompare(child._nibbles, key.slice(pos)) < 0) {\n                    ;\n                    parent.setBranch(key[pos - 1], null);\n                }\n            }\n            else {\n                if (nibblesCompare(child._nibbles, key.slice(pos)) > 0) {\n                    ;\n                    parent.setBranch(key[pos - 1], null);\n                }\n            }\n            return pos - 1;\n        }\n        if (child instanceof LeafNode) {\n            // This node is a leaf node, directly remove it from parent\n            ;\n            parent.setBranch(key[pos - 1], null);\n            return pos - 1;\n        }\n        else {\n            const _child = await trie.lookupNode(child.value());\n            if (_child instanceof LeafNode) {\n                // The child of this node is leaf node, remove it from parent too\n                ;\n                parent.setBranch(key[pos - 1], null);\n                return pos - 1;\n            }\n            // record this node on the stack\n            stack.push(child);\n            // continue to the next node\n            return unset(trie, child, _child, key, pos + child.keyLength(), removeLeft, stack);\n        }\n    }\n    else if (child === null) {\n        return pos - 1;\n    }\n    else {\n        throw new Error('invalid node');\n    }\n}\n/**\n * unsetInternal will remove all nodes between `left` and `right` (including `left` and `right`)\n * @param trie - trie object.\n * @param left - left nibbles.\n * @param right - right nibbles.\n * @returns Is it an empty trie.\n */\nasync function unsetInternal(trie, left, right) {\n    // Key position\n    let pos = 0;\n    // Parent node\n    let parent = null;\n    // Current node\n    let node = await trie.lookupNode(trie.root());\n    let shortForkLeft;\n    let shortForkRight;\n    // A stack of modified nodes.\n    const stack = [];\n    // 1. Find the fork point of `left` and `right`\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (node instanceof ExtensionNode || node instanceof LeafNode) {\n            // record this node on the stack\n            stack.push(node);\n            if (left.length - pos < node.keyLength()) {\n                shortForkLeft = nibblesCompare(left.slice(pos), node._nibbles);\n            }\n            else {\n                shortForkLeft = nibblesCompare(left.slice(pos, pos + node.keyLength()), node._nibbles);\n            }\n            if (right.length - pos < node.keyLength()) {\n                shortForkRight = nibblesCompare(right.slice(pos), node._nibbles);\n            }\n            else {\n                shortForkRight = nibblesCompare(right.slice(pos, pos + node.keyLength()), node._nibbles);\n            }\n            // If one of `left` and `right` is not equal to node._nibbles, it means we found the fork point\n            if (shortForkLeft !== 0 || shortForkRight !== 0) {\n                break;\n            }\n            if (node instanceof LeafNode) {\n                // it shouldn't happen\n                throw new Error('invalid node');\n            }\n            // continue to the next node\n            parent = node;\n            pos += node.keyLength();\n            node = await trie.lookupNode(node.value());\n        }\n        else if (node instanceof BranchNode) {\n            // record this node on the stack\n            stack.push(node);\n            const leftNode = node.getBranch(left[pos]);\n            const rightNode = node.getBranch(right[pos]);\n            // One of `left` and `right` is `null`, stop searching\n            if (leftNode === null || rightNode === null) {\n                break;\n            }\n            // Stop searching if `left` and `right` are not equal\n            if (!(leftNode instanceof Uint8Array)) {\n                if (rightNode instanceof Uint8Array) {\n                    break;\n                }\n                if (leftNode.length !== rightNode.length) {\n                    break;\n                }\n                let abort = false;\n                for (let i = 0; i < leftNode.length; i++) {\n                    if (!equalsBytes(leftNode[i], rightNode[i])) {\n                        abort = true;\n                        break;\n                    }\n                }\n                if (abort) {\n                    break;\n                }\n            }\n            else {\n                if (!(rightNode instanceof Uint8Array)) {\n                    break;\n                }\n                if (!equalsBytes(leftNode, rightNode)) {\n                    break;\n                }\n            }\n            // continue to the next node\n            parent = node;\n            node = await trie.lookupNode(leftNode);\n            pos += 1;\n        }\n        else {\n            throw new Error('invalid node');\n        }\n    }\n    // 2. Starting from the fork point, delete all nodes between `left` and `right`\n    const saveStack = (key, stack) => {\n        return trie.saveStack(key, stack, []);\n    };\n    if (node instanceof ExtensionNode || node instanceof LeafNode) {\n        /**\n         * There can have these five scenarios:\n         * - both proofs are less than the trie path => no valid range\n         * - both proofs are greater than the trie path => no valid range\n         * - left proof is less and right proof is greater => valid range, unset the entire trie\n         * - left proof points to the trie node, but right proof is greater => valid range, unset left node\n         * - right proof points to the trie node, but left proof is less  => valid range, unset right node\n         */\n        const removeSelfFromParentAndSaveStack = async (key) => {\n            if (parent === null) {\n                return true;\n            }\n            stack.pop();\n            parent.setBranch(key[pos - 1], null);\n            await saveStack(key.slice(0, pos - 1), stack);\n            return false;\n        };\n        if (shortForkLeft === -1 && shortForkRight === -1) {\n            throw new Error('invalid range');\n        }\n        if (shortForkLeft === 1 && shortForkRight === 1) {\n            throw new Error('invalid range');\n        }\n        if (shortForkLeft !== 0 && shortForkRight !== 0) {\n            // Unset the entire trie\n            return removeSelfFromParentAndSaveStack(left);\n        }\n        // Unset left node\n        if (shortForkRight !== 0) {\n            if (node instanceof LeafNode) {\n                return removeSelfFromParentAndSaveStack(left);\n            }\n            const child = await trie.lookupNode(node._value);\n            if (child instanceof LeafNode) {\n                return removeSelfFromParentAndSaveStack(left);\n            }\n            const endPos = await unset(trie, node, child, left.slice(pos), node.keyLength(), false, stack);\n            await saveStack(left.slice(0, pos + endPos), stack);\n            return false;\n        }\n        // Unset right node\n        if (shortForkLeft !== 0) {\n            if (node instanceof LeafNode) {\n                return removeSelfFromParentAndSaveStack(right);\n            }\n            const child = await trie.lookupNode(node._value);\n            if (child instanceof LeafNode) {\n                return removeSelfFromParentAndSaveStack(right);\n            }\n            const endPos = await unset(trie, node, child, right.slice(pos), node.keyLength(), true, stack);\n            await saveStack(right.slice(0, pos + endPos), stack);\n            return false;\n        }\n        return false;\n    }\n    else if (node instanceof BranchNode) {\n        // Unset all internal nodes in the forkpoint\n        for (let i = left[pos] + 1; i < right[pos]; i++) {\n            node.setBranch(i, null);\n        }\n        {\n            /**\n             * `stack` records the path from root to fork point.\n             * Since we need to unset both left and right nodes once,\n             * we need to make a copy here.\n             */\n            const _stack = [...stack];\n            const next = node.getBranch(left[pos]);\n            const child = next && (await trie.lookupNode(next));\n            const endPos = await unset(trie, node, child, left.slice(pos), 1, false, _stack);\n            await saveStack(left.slice(0, pos + endPos), _stack);\n        }\n        {\n            const _stack = [...stack];\n            const next = node.getBranch(right[pos]);\n            const child = next && (await trie.lookupNode(next));\n            const endPos = await unset(trie, node, child, right.slice(pos), 1, true, _stack);\n            await saveStack(right.slice(0, pos + endPos), _stack);\n        }\n        return false;\n    }\n    else {\n        throw new Error('invalid node');\n    }\n}\n/**\n * Verifies a proof and return the verified trie.\n * @param rootHash - root hash.\n * @param key - target key.\n * @param proof - proof node list.\n * @throws If proof is found to be invalid.\n * @returns The value from the key, or null if valid proof of non-existence.\n */\nasync function verifyProof(rootHash, key, proof, useKeyHashingFunction) {\n    const proofTrie = await Trie.fromProof(proof, {\n        root: rootHash,\n        useKeyHashingFunction,\n    });\n    try {\n        const value = await proofTrie.get(key, true);\n        return {\n            trie: proofTrie,\n            value,\n        };\n    }\n    catch (err) {\n        if (err.message === 'Missing node in DB') {\n            throw new Error('Invalid proof provided');\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * hasRightElement returns the indicator whether there exists more elements\n * on the right side of the given path\n * @param trie - trie object.\n * @param key - given path.\n */\nasync function hasRightElement(trie, key) {\n    let pos = 0;\n    let node = await trie.lookupNode(trie.root());\n    while (node !== null) {\n        if (node instanceof BranchNode) {\n            for (let i = key[pos] + 1; i < 16; i++) {\n                if (node.getBranch(i) !== null) {\n                    return true;\n                }\n            }\n            const next = node.getBranch(key[pos]);\n            node = next && (await trie.lookupNode(next));\n            pos += 1;\n        }\n        else if (node instanceof ExtensionNode) {\n            if (key.length - pos < node.keyLength() ||\n                nibblesCompare(node._nibbles, key.slice(pos, pos + node.keyLength())) !== 0) {\n                return nibblesCompare(node._nibbles, key.slice(pos)) > 0;\n            }\n            pos += node.keyLength();\n            node = await trie.lookupNode(node._value);\n        }\n        else if (node instanceof LeafNode) {\n            return false;\n        }\n        else {\n            throw new Error('invalid node');\n        }\n    }\n    return false;\n}\n/**\n * verifyRangeProof checks whether the given leaf nodes and edge proof\n * can prove the given trie leaves range is matched with the specific root.\n *\n * There are four situations:\n *\n * - All elements proof. In this case the proof can be null, but the range should\n *   be all the leaves in the trie.\n *\n * - One element proof. In this case no matter the edge proof is a non-existent\n *   proof or not, we can always verify the correctness of the proof.\n *\n * - Zero element proof. In this case a single non-existent proof is enough to prove.\n *   Besides, if there are still some other leaves available on the right side, then\n *   an error will be returned.\n *\n * - Two edge elements proof. In this case two existent or non-existent proof(first and last) should be provided.\n *\n * NOTE: Currently only supports verification when the length of firstKey and lastKey are the same.\n *\n * @param rootHash - root hash of state trie this proof is being verified against.\n * @param firstKey - first key of range being proven.\n * @param lastKey - last key of range being proven.\n * @param keys - key list of leaf data being proven.\n * @param values - value list of leaf data being proven, one-to-one correspondence with keys.\n * @param proof - proof node list, if all-elements-proof where no proof is needed, proof should be null, and both `firstKey` and `lastKey` must be null as well\n * @returns a flag to indicate whether there exists more trie node in the trie\n */\nexport async function verifyRangeProof(rootHash, firstKey, lastKey, keys, values, proof, useKeyHashingFunction) {\n    if (keys.length !== values.length) {\n        throw new Error('invalid keys length or values length');\n    }\n    // Make sure the keys are in order\n    for (let i = 0; i < keys.length - 1; i++) {\n        if (nibblesCompare(keys[i], keys[i + 1]) >= 0) {\n            throw new Error('invalid keys order');\n        }\n    }\n    // Make sure all values are present\n    for (const value of values) {\n        if (value.length === 0) {\n            throw new Error('invalid values');\n        }\n    }\n    // All elements proof\n    if (proof === null && firstKey === null && lastKey === null) {\n        const trie = new Trie({ useKeyHashingFunction });\n        for (let i = 0; i < keys.length; i++) {\n            await trie.put(nibblestoBytes(keys[i]), values[i]);\n        }\n        if (!equalsBytes(rootHash, trie.root())) {\n            throw new Error('invalid all elements proof: root mismatch');\n        }\n        return false;\n    }\n    if (proof !== null && firstKey !== null && lastKey === null) {\n        // Zero element proof\n        if (keys.length === 0) {\n            const { trie, value } = await verifyProof(rootHash, nibblestoBytes(firstKey), proof, useKeyHashingFunction);\n            if (value !== null || (await hasRightElement(trie, firstKey))) {\n                throw new Error('invalid zero element proof: value mismatch');\n            }\n            return false;\n        }\n    }\n    if (proof === null || firstKey === null || lastKey === null) {\n        throw new Error('invalid all elements proof: proof, firstKey, lastKey must be null at the same time');\n    }\n    // One element proof\n    if (keys.length === 1 && nibblesCompare(firstKey, lastKey) === 0) {\n        const { trie, value } = await verifyProof(rootHash, nibblestoBytes(firstKey), proof, useKeyHashingFunction);\n        if (nibblesCompare(firstKey, keys[0]) !== 0) {\n            throw new Error('invalid one element proof: firstKey should be equal to keys[0]');\n        }\n        if (value === null || !equalsBytes(value, values[0])) {\n            throw new Error('invalid one element proof: value mismatch');\n        }\n        return hasRightElement(trie, firstKey);\n    }\n    // Two edge elements proof\n    if (nibblesCompare(firstKey, lastKey) >= 0) {\n        throw new Error('invalid two edge elements proof: firstKey should be less than lastKey');\n    }\n    if (firstKey.length !== lastKey.length) {\n        throw new Error('invalid two edge elements proof: the length of firstKey should be equal to the length of lastKey');\n    }\n    const trie = await Trie.fromProof(proof, {\n        useKeyHashingFunction,\n        root: rootHash,\n    });\n    // Remove all nodes between two edge proofs\n    const empty = await unsetInternal(trie, firstKey, lastKey);\n    if (empty) {\n        trie.root(trie.EMPTY_TRIE_ROOT);\n    }\n    // Put all elements to the trie\n    for (let i = 0; i < keys.length; i++) {\n        await trie.put(nibblestoBytes(keys[i]), values[i]);\n    }\n    // Compare rootHash\n    if (!equalsBytes(trie.root(), rootHash)) {\n        throw new Error('invalid two edge elements proof: root mismatch');\n    }\n    return hasRightElement(trie, keys[keys.length - 1]);\n}\n//# sourceMappingURL=range.js.map","export const chains = {\n    mainnet: {\n        name: 'mainnet',\n        chainId: 1,\n        networkId: 1,\n        defaultHardfork: 'shanghai',\n        consensus: {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n        },\n        comment: 'The Ethereum main chain',\n        url: 'https://ethstats.net/',\n        genesis: {\n            gasLimit: 5000,\n            difficulty: 17179869184,\n            nonce: '0x0000000000000042',\n            extraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',\n        },\n        hardforks: [\n            {\n                name: 'chainstart',\n                block: 0,\n                forkHash: '0xfc64ec04',\n            },\n            {\n                name: 'homestead',\n                block: 1150000,\n                forkHash: '0x97c2c34c',\n            },\n            {\n                name: 'dao',\n                block: 1920000,\n                forkHash: '0x91d1f948',\n            },\n            {\n                name: 'tangerineWhistle',\n                block: 2463000,\n                forkHash: '0x7a64da13',\n            },\n            {\n                name: 'spuriousDragon',\n                block: 2675000,\n                forkHash: '0x3edd5b10',\n            },\n            {\n                name: 'byzantium',\n                block: 4370000,\n                forkHash: '0xa00bc324',\n            },\n            {\n                name: 'constantinople',\n                block: 7280000,\n                forkHash: '0x668db0af',\n            },\n            {\n                name: 'petersburg',\n                block: 7280000,\n                forkHash: '0x668db0af',\n            },\n            {\n                name: 'istanbul',\n                block: 9069000,\n                forkHash: '0x879d6e30',\n            },\n            {\n                name: 'muirGlacier',\n                block: 9200000,\n                forkHash: '0xe029e991',\n            },\n            {\n                name: 'berlin',\n                block: 12244000,\n                forkHash: '0x0eb440f6',\n            },\n            {\n                name: 'london',\n                block: 12965000,\n                forkHash: '0xb715077d',\n            },\n            {\n                name: 'arrowGlacier',\n                block: 13773000,\n                forkHash: '0x20c327fc',\n            },\n            {\n                name: 'grayGlacier',\n                block: 15050000,\n                forkHash: '0xf0afd0e3',\n            },\n            {\n                // The forkHash will remain same as mergeForkIdTransition is post merge\n                // terminal block: https://etherscan.io/block/15537393\n                name: 'paris',\n                ttd: '58750000000000000000000',\n                block: 15537394,\n                forkHash: '0xf0afd0e3',\n            },\n            {\n                name: 'mergeForkIdTransition',\n                block: null,\n                forkHash: null,\n            },\n            {\n                name: 'shanghai',\n                block: null,\n                timestamp: '1681338455',\n                forkHash: '0xdce96c2d',\n            },\n            {\n                name: 'cancun',\n                block: null,\n                timestamp: '1710338135',\n                forkHash: '0x9f3d2254',\n            },\n        ],\n        bootstrapNodes: [\n            {\n                ip: '18.138.108.67',\n                port: 30303,\n                id: 'd860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666',\n                location: 'ap-southeast-1-001',\n                comment: 'bootnode-aws-ap-southeast-1-001',\n            },\n            {\n                ip: '3.209.45.79',\n                port: 30303,\n                id: '22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de',\n                location: 'us-east-1-001',\n                comment: 'bootnode-aws-us-east-1-001',\n            },\n            {\n                ip: '65.108.70.101',\n                port: 30303,\n                id: '2b252ab6a1d0f971d9722cb839a42cb81db019ba44c08754628ab4a823487071b5695317c8ccd085219c3a03af063495b2f1da8d18218da2d6a82981b45e6ffc',\n                location: 'eu-west-1-001',\n                comment: 'bootnode-hetzner-hel',\n            },\n            {\n                ip: '157.90.35.166',\n                port: 30303,\n                id: '4aeb4ab6c14b23e2c4cfdce879c04b0748a20d8e9b59e25ded2a08143e265c6c25936e74cbc8e641e3312ca288673d91f2f93f8e277de3cfa444ecdaaf982052',\n                location: 'eu-central-1-001',\n                comment: 'bootnode-hetzner-fsn',\n            },\n        ],\n        dnsNetworks: [\n            'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',\n        ],\n    },\n    goerli: {\n        name: 'goerli',\n        chainId: 5,\n        networkId: 5,\n        defaultHardfork: 'shanghai',\n        consensus: {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n                period: 15,\n                epoch: 30000,\n            },\n        },\n        comment: 'Cross-client PoA test network',\n        url: 'https://github.com/goerli/testnet',\n        genesis: {\n            timestamp: '0x5c51a607',\n            gasLimit: 10485760,\n            difficulty: 1,\n            nonce: '0x0000000000000000',\n            extraData: '0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n        },\n        hardforks: [\n            {\n                name: 'chainstart',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'homestead',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'tangerineWhistle',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'spuriousDragon',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'byzantium',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'constantinople',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'petersburg',\n                block: 0,\n                forkHash: '0xa3f5ab08',\n            },\n            {\n                name: 'istanbul',\n                block: 1561651,\n                forkHash: '0xc25efa5c',\n            },\n            {\n                name: 'berlin',\n                block: 4460644,\n                forkHash: '0x757a1c47',\n            },\n            {\n                name: 'london',\n                block: 5062605,\n                forkHash: '0xb8c6299d',\n            },\n            {\n                // The forkHash will remain same as mergeForkIdTransition is post merge,\n                // terminal block: https://goerli.etherscan.io/block/7382818\n                name: 'paris',\n                ttd: '10790000',\n                block: 7382819,\n                forkHash: '0xb8c6299d',\n            },\n            {\n                name: 'mergeForkIdTransition',\n                block: null,\n                forkHash: null,\n            },\n            {\n                name: 'shanghai',\n                block: null,\n                timestamp: '1678832736',\n                forkHash: '0xf9843abf',\n            },\n            {\n                name: 'cancun',\n                block: null,\n                timestamp: '1705473120',\n                forkHash: '0x70cc14e2',\n            },\n        ],\n        bootstrapNodes: [\n            {\n                ip: '51.141.78.53',\n                port: 30303,\n                id: '011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a',\n                location: '',\n                comment: 'Upstream bootnode 1',\n            },\n            {\n                ip: '13.93.54.137',\n                port: 30303,\n                id: '176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b',\n                location: '',\n                comment: 'Upstream bootnode 2',\n            },\n            {\n                ip: '94.237.54.114',\n                port: 30313,\n                id: '46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291',\n                location: '',\n                comment: 'Upstream bootnode 3',\n            },\n            {\n                ip: '18.218.250.66',\n                port: 30313,\n                id: 'b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949',\n                location: '',\n                comment: 'Upstream bootnode 4',\n            },\n            {\n                ip: '3.11.147.67',\n                port: 30303,\n                id: 'a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91',\n                location: '',\n                comment: 'Ethereum Foundation bootnode',\n            },\n            {\n                ip: '51.15.116.226',\n                port: 30303,\n                id: 'a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd',\n                location: '',\n                comment: 'Goerli Initiative bootnode',\n            },\n            {\n                ip: '51.15.119.157',\n                port: 30303,\n                id: '807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33',\n                location: '',\n                comment: 'Goerli Initiative bootnode',\n            },\n            {\n                ip: '51.15.119.157',\n                port: 40303,\n                id: 'a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd',\n                location: '',\n                comment: 'Goerli Initiative bootnode',\n            },\n        ],\n        dnsNetworks: [\n            'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',\n        ],\n    },\n    sepolia: {\n        name: 'sepolia',\n        chainId: 11155111,\n        networkId: 11155111,\n        defaultHardfork: 'shanghai',\n        consensus: {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n        },\n        comment: 'PoW test network to replace Ropsten',\n        url: 'https://github.com/ethereum/go-ethereum/pull/23730',\n        genesis: {\n            timestamp: '0x6159af19',\n            gasLimit: 30000000,\n            difficulty: 131072,\n            nonce: '0x0000000000000000',\n            extraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',\n        },\n        hardforks: [\n            {\n                name: 'chainstart',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'homestead',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'tangerineWhistle',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'spuriousDragon',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'byzantium',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'constantinople',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'petersburg',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'istanbul',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'muirGlacier',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'berlin',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'london',\n                block: 0,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                // The forkHash will remain same as mergeForkIdTransition is post merge,\n                // terminal block: https://sepolia.etherscan.io/block/1450408\n                name: 'paris',\n                ttd: '17000000000000000',\n                block: 1450409,\n                forkHash: '0xfe3366e7',\n            },\n            {\n                name: 'mergeForkIdTransition',\n                block: 1735371,\n                forkHash: '0xb96cbd13',\n            },\n            {\n                name: 'shanghai',\n                block: null,\n                timestamp: '1677557088',\n                forkHash: '0xf7f9bc08',\n            },\n            {\n                name: 'cancun',\n                block: null,\n                timestamp: '1706655072',\n                forkHash: '0x88cf81d9',\n            },\n        ],\n        bootstrapNodes: [\n            {\n                ip: '18.168.182.86',\n                port: 30303,\n                id: '9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066',\n                location: '',\n                comment: 'geth',\n            },\n            {\n                ip: '52.14.151.177',\n                port: 30303,\n                id: 'ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7',\n                location: '',\n                comment: 'besu',\n            },\n            {\n                ip: '165.22.196.173',\n                port: 30303,\n                id: 'ce970ad2e9daa9e14593de84a8b49da3d54ccfdf83cbc4fe519cb8b36b5918ed4eab087dedd4a62479b8d50756b492d5f762367c8d20329a7854ec01547568a6',\n                location: '',\n                comment: 'EF',\n            },\n            {\n                ip: '65.108.95.67',\n                port: 30303,\n                id: '075503b13ed736244896efcde2a992ec0b451357d46cb7a8132c0384721742597fc8f0d91bbb40bb52e7d6e66728d36a1fda09176294e4a30cfac55dcce26bc6',\n                location: '',\n                comment: 'lodestar',\n            },\n        ],\n        dnsNetworks: [\n            'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',\n        ],\n    },\n    holesky: {\n        name: 'holesky',\n        chainId: 17000,\n        networkId: 17000,\n        defaultHardfork: 'paris',\n        consensus: {\n            type: 'pos',\n            algorithm: 'casper',\n        },\n        comment: 'PoS test network to replace Goerli',\n        url: 'https://github.com/eth-clients/holesky/',\n        genesis: {\n            baseFeePerGas: '0x3B9ACA00',\n            difficulty: '0x01',\n            extraData: '0x',\n            gasLimit: '0x17D7840',\n            nonce: '0x0000000000001234',\n            timestamp: '0x65156994',\n        },\n        hardforks: [\n            {\n                name: 'chainstart',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'homestead',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'tangerineWhistle',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'spuriousDragon',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'byzantium',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'constantinople',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'petersburg',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'istanbul',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'muirGlacier',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'berlin',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'london',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'paris',\n                ttd: '0',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'mergeForkIdTransition',\n                block: 0,\n                forkHash: '0xc61a6098',\n            },\n            {\n                name: 'shanghai',\n                block: null,\n                timestamp: '1696000704',\n                forkHash: '0xfd4f016b',\n            },\n            {\n                name: 'cancun',\n                block: null,\n                timestamp: '1707305664',\n                forkHash: '0x9b192ad0',\n            },\n        ],\n        bootstrapNodes: [\n            {\n                ip: '146.190.13.128',\n                port: 30303,\n                id: 'ac906289e4b7f12df423d654c5a962b6ebe5b3a74cc9e06292a85221f9a64a6f1cfdd6b714ed6dacef51578f92b34c60ee91e9ede9c7f8fadc4d347326d95e2b',\n                location: '',\n                comment: 'bootnode 1',\n            },\n            {\n                ip: '178.128.136.233',\n                port: 30303,\n                id: 'a3435a0155a3e837c02f5e7f5662a2f1fbc25b48e4dc232016e1c51b544cb5b4510ef633ea3278c0e970fa8ad8141e2d4d0f9f95456c537ff05fdf9b31c15072',\n                location: '',\n                comment: 'bootnode 2',\n            },\n        ],\n        dnsNetworks: [\n            'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.holesky.ethdisco.net',\n        ],\n    },\n    kaustinen: {\n        name: 'kaustinen',\n        chainId: 69420,\n        networkId: 69420,\n        defaultHardfork: 'prague',\n        consensus: {\n            type: 'pos',\n            algorithm: 'casper',\n        },\n        comment: 'Verkle kaustinen testnet 2 (likely temporary, do not hard-wire into production code)',\n        url: 'https://github.com/eth-clients/kaustinen/',\n        genesis: {\n            difficulty: '0x01',\n            extraData: '0x',\n            gasLimit: '0x17D7840',\n            nonce: '0x0000000000001234',\n            timestamp: '0x65608a64',\n        },\n        hardforks: [\n            {\n                name: 'chainstart',\n                block: 0,\n            },\n            {\n                name: 'homestead',\n                block: 0,\n            },\n            {\n                name: 'tangerineWhistle',\n                block: 0,\n            },\n            {\n                name: 'spuriousDragon',\n                block: 0,\n            },\n            {\n                name: 'byzantium',\n                block: 0,\n            },\n            {\n                name: 'constantinople',\n                block: 0,\n            },\n            {\n                name: 'petersburg',\n                block: 0,\n            },\n            {\n                name: 'istanbul',\n                block: 0,\n            },\n            {\n                name: 'berlin',\n                block: 0,\n            },\n            {\n                name: 'london',\n                block: 0,\n            },\n            {\n                name: 'paris',\n                ttd: '0',\n                block: 0,\n            },\n            {\n                name: 'mergeForkIdTransition',\n                block: 0,\n            },\n            {\n                name: 'shanghai',\n                block: null,\n                timestamp: '0',\n            },\n            {\n                name: 'prague',\n                block: null,\n                timestamp: '1700825700',\n            },\n        ],\n        bootstrapNodes: [],\n        dnsNetworks: [],\n    },\n};\n//# sourceMappingURL=chains.js.map","/**\n * This code was duplicated from https://github.com/alexgorbatchev/crc/ under MIT license.\n * The code below is copied largely unmodified from the below file\n * https://github.com/alexgorbatchev/crc/blob/31fc3853e417b5fb5ec83335428805842575f699/src/calculators/crc32.ts\n */\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc = (current, previous) => {\n    let crc = previous === 0 ? 0 : ~~previous ^ -1;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n};\nexport const crc32 = (current, previous) => {\n    return crc(current, previous) >>> 0;\n};\n//# sourceMappingURL=crc.js.map","import { BIGINT_0, hexToBytes } from '@ethereumjs/util';\nexport var Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n    Chain[Chain[\"Holesky\"] = 17000] = \"Holesky\";\n    Chain[Chain[\"Kaustinen\"] = 69420] = \"Kaustinen\";\n})(Chain || (Chain = {}));\n// Having this info as record will force typescript to make sure no chain is missed\n/**\n * GenesisState info about well known ethereum chains\n */\nexport const ChainGenesis = {\n    [Chain.Mainnet]: {\n        name: 'mainnet',\n        blockNumber: BIGINT_0,\n        stateRoot: hexToBytes('0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544'),\n    },\n    [Chain.Goerli]: {\n        name: 'goerli',\n        blockNumber: BIGINT_0,\n        stateRoot: hexToBytes('0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008'),\n    },\n    [Chain.Sepolia]: {\n        name: 'sepolia',\n        blockNumber: BIGINT_0,\n        stateRoot: hexToBytes('0x5eb6e371a698b8d68f665192350ffcecbbbf322916f4b51bd79bb6887da3f494'),\n    },\n    [Chain.Holesky]: {\n        name: 'holesky',\n        blockNumber: BIGINT_0,\n        stateRoot: hexToBytes('0x69d8c9d72f6fa4ad42d4702b433707212f90db395eb54dc20bc85de253788783'),\n    },\n    [Chain.Kaustinen]: {\n        name: 'kaustinen',\n        blockNumber: BIGINT_0,\n        stateRoot: hexToBytes('0x5e8519756841faf0b2c28951c451b61a4b407b70a5ce5b57992f4bec973173ff'),\n    },\n};\nexport var Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Paris\"] = \"paris\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"Cancun\"] = \"cancun\";\n    Hardfork[\"Prague\"] = \"prague\";\n})(Hardfork || (Hardfork = {}));\nexport var ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType || (ConsensusType = {}));\nexport var ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm || (ConsensusAlgorithm = {}));\nexport var CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum One - mainnet for Arbitrum roll-up\n     *\n     * - [Documentation](https://developer.offchainlabs.com/public-chains)\n     */\n    CustomChain[\"ArbitrumOne\"] = \"arbitrum-one\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain || (CustomChain = {}));\n//# sourceMappingURL=enums.js.map","import { Hardfork } from './enums.js';\nvar Status;\n(function (Status) {\n    Status[\"Stagnant\"] = \"stagnant\";\n    Status[\"Draft\"] = \"draft\";\n    Status[\"Review\"] = \"review\";\n    Status[\"Final\"] = \"final\";\n})(Status || (Status = {}));\nexport const EIPs = {\n    1153: {\n        comment: 'Transient storage opcodes',\n        url: 'https://eips.ethereum.org/EIPS/eip-1153',\n        status: Status.Review,\n        minimumHardfork: Hardfork.Chainstart,\n        requiredEIPs: [],\n        gasPrices: {\n            tstore: {\n                v: 100,\n                d: 'Base fee of the TSTORE opcode',\n            },\n            tload: {\n                v: 100,\n                d: 'Base fee of the TLOAD opcode',\n            },\n        },\n    },\n    1559: {\n        comment: 'Fee market change for ETH 1.0 chain',\n        url: 'https://eips.ethereum.org/EIPS/eip-1559',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Berlin,\n        requiredEIPs: [2930],\n        gasConfig: {\n            baseFeeMaxChangeDenominator: {\n                v: 8,\n                d: 'Maximum base fee change denominator',\n            },\n            elasticityMultiplier: {\n                v: 2,\n                d: 'Maximum block gas target elasticity',\n            },\n            initialBaseFee: {\n                v: 1000000000,\n                d: 'Initial base fee on first EIP1559 block',\n            },\n        },\n    },\n    2315: {\n        comment: 'Simple subroutines for the EVM',\n        url: 'https://eips.ethereum.org/EIPS/eip-2315',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.Istanbul,\n        requiredEIPs: [],\n        gasPrices: {\n            beginsub: {\n                v: 2,\n                d: 'Base fee of the BEGINSUB opcode',\n            },\n            returnsub: {\n                v: 5,\n                d: 'Base fee of the RETURNSUB opcode',\n            },\n            jumpsub: {\n                v: 10,\n                d: 'Base fee of the JUMPSUB opcode',\n            },\n        },\n    },\n    2565: {\n        comment: 'ModExp gas cost',\n        url: 'https://eips.ethereum.org/EIPS/eip-2565',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Byzantium,\n        requiredEIPs: [],\n        gasPrices: {\n            modexpGquaddivisor: {\n                v: 3,\n                d: 'Gquaddivisor from modexp precompile for gas calculation',\n            },\n        },\n    },\n    2718: {\n        comment: 'Typed Transaction Envelope',\n        url: 'https://eips.ethereum.org/EIPS/eip-2718',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Chainstart,\n        requiredEIPs: [],\n    },\n    2929: {\n        comment: 'Gas cost increases for state access opcodes',\n        url: 'https://eips.ethereum.org/EIPS/eip-2929',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Chainstart,\n        requiredEIPs: [],\n        gasPrices: {\n            coldsload: {\n                v: 2100,\n                d: 'Gas cost of the first read of storage from a given location (per transaction)',\n            },\n            coldaccountaccess: {\n                v: 2600,\n                d: 'Gas cost of the first read of a given address (per transaction)',\n            },\n            warmstorageread: {\n                v: 100,\n                d: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n            },\n            sstoreCleanGasEIP2200: {\n                v: 2900,\n                d: 'Once per SSTORE operation from clean non-zero to something else',\n            },\n            sstoreNoopGasEIP2200: {\n                v: 100,\n                d: \"Once per SSTORE operation if the value doesn't change\",\n            },\n            sstoreDirtyGasEIP2200: {\n                v: 100,\n                d: 'Once per SSTORE operation if a dirty value is changed',\n            },\n            sstoreInitRefundEIP2200: {\n                v: 19900,\n                d: 'Once per SSTORE operation for resetting to the original zero value',\n            },\n            sstoreCleanRefundEIP2200: {\n                v: 4900,\n                d: 'Once per SSTORE operation for resetting to the original non-zero value',\n            },\n            call: {\n                v: 0,\n                d: 'Base fee of the CALL opcode',\n            },\n            callcode: {\n                v: 0,\n                d: 'Base fee of the CALLCODE opcode',\n            },\n            delegatecall: {\n                v: 0,\n                d: 'Base fee of the DELEGATECALL opcode',\n            },\n            staticcall: {\n                v: 0,\n                d: 'Base fee of the STATICCALL opcode',\n            },\n            balance: {\n                v: 0,\n                d: 'Base fee of the BALANCE opcode',\n            },\n            extcodesize: {\n                v: 0,\n                d: 'Base fee of the EXTCODESIZE opcode',\n            },\n            extcodecopy: {\n                v: 0,\n                d: 'Base fee of the EXTCODECOPY opcode',\n            },\n            extcodehash: {\n                v: 0,\n                d: 'Base fee of the EXTCODEHASH opcode',\n            },\n            sload: {\n                v: 0,\n                d: 'Base fee of the SLOAD opcode',\n            },\n            sstore: {\n                v: 0,\n                d: 'Base fee of the SSTORE opcode',\n            },\n        },\n    },\n    2930: {\n        comment: 'Optional access lists',\n        url: 'https://eips.ethereum.org/EIPS/eip-2930',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Istanbul,\n        requiredEIPs: [2718, 2929],\n        gasPrices: {\n            accessListStorageKeyCost: {\n                v: 1900,\n                d: 'Gas cost per storage key in an Access List transaction',\n            },\n            accessListAddressCost: {\n                v: 2400,\n                d: 'Gas cost per storage key in an Access List transaction',\n            },\n        },\n    },\n    2935: {\n        comment: 'Save historical block hashes in state (Verkle related usage, UNSTABLE)',\n        url: 'https://github.com/gballet/EIPs/pull/3/commits/2e9ac09a142b0d9fb4db0b8d4609f92e5d9990c5',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.Chainstart,\n        requiredEIPs: [],\n        vm: {\n            historyStorageAddress: {\n                v: BigInt('0xfffffffffffffffffffffffffffffffffffffffe'),\n                d: 'The address where the historical blockhashes are stored',\n            },\n            historyServeWindow: {\n                v: BigInt(256),\n                d: 'The amount of blocks to be served by the historical blockhash contract',\n            },\n        },\n    },\n    3074: {\n        comment: 'AUTH and AUTHCALL opcodes',\n        url: 'https://eips.ethereum.org/EIPS/eip-3074',\n        status: Status.Review,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n        gasPrices: {\n            auth: {\n                v: 3100,\n                d: 'Gas cost of the AUTH opcode',\n            },\n            authcall: {\n                v: 0,\n                d: 'Gas cost of the AUTHCALL opcode',\n            },\n            authcallValueTransfer: {\n                v: 6700,\n                d: 'Paid for CALL when the value transfer is non-zero',\n            },\n        },\n    },\n    3198: {\n        comment: 'BASEFEE opcode',\n        url: 'https://eips.ethereum.org/EIPS/eip-3198',\n        status: Status.Final,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n        gasPrices: {\n            basefee: {\n                v: 2,\n                d: 'Gas cost of the BASEFEE opcode',\n            },\n        },\n    },\n    3529: {\n        comment: 'Reduction in refunds',\n        url: 'https://eips.ethereum.org/EIPS/eip-3529',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Berlin,\n        requiredEIPs: [2929],\n        gasConfig: {\n            maxRefundQuotient: {\n                v: 5,\n                d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n            },\n        },\n        gasPrices: {\n            selfdestructRefund: {\n                v: 0,\n                d: 'Refunded following a selfdestruct operation',\n            },\n            sstoreClearRefundEIP2200: {\n                v: 4800,\n                d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n            },\n        },\n    },\n    3540: {\n        comment: 'EVM Object Format (EOF) v1',\n        url: 'https://eips.ethereum.org/EIPS/eip-3540',\n        status: Status.Review,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [3541],\n    },\n    3541: {\n        comment: 'Reject new contracts starting with the 0xEF byte',\n        url: 'https://eips.ethereum.org/EIPS/eip-3541',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Berlin,\n        requiredEIPs: [],\n    },\n    3554: {\n        comment: 'Difficulty Bomb Delay to December 1st 2021',\n        url: 'https://eips.ethereum.org/EIPS/eip-3554',\n        status: Status.Final,\n        minimumHardfork: Hardfork.MuirGlacier,\n        requiredEIPs: [],\n        pow: {\n            difficultyBombDelay: {\n                v: 9500000,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    3607: {\n        comment: 'Reject transactions from senders with deployed code',\n        url: 'https://eips.ethereum.org/EIPS/eip-3607',\n        status: Status.Final,\n        minimumHardfork: Hardfork.Chainstart,\n        requiredEIPs: [],\n    },\n    3651: {\n        comment: 'Warm COINBASE',\n        url: 'https://eips.ethereum.org/EIPS/eip-3651',\n        status: Status.Review,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [2929],\n    },\n    3670: {\n        comment: 'EOF - Code Validation',\n        url: 'https://eips.ethereum.org/EIPS/eip-3670',\n        status: 'Review',\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [3540],\n        gasConfig: {},\n        gasPrices: {},\n        vm: {},\n        pow: {},\n    },\n    3675: {\n        comment: 'Upgrade consensus to Proof-of-Stake',\n        url: 'https://eips.ethereum.org/EIPS/eip-3675',\n        status: Status.Final,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n    },\n    3855: {\n        comment: 'PUSH0 instruction',\n        url: 'https://eips.ethereum.org/EIPS/eip-3855',\n        status: Status.Review,\n        minimumHardfork: Hardfork.Chainstart,\n        requiredEIPs: [],\n        gasPrices: {\n            push0: {\n                v: 2,\n                d: 'Base fee of the PUSH0 opcode',\n            },\n        },\n    },\n    3860: {\n        comment: 'Limit and meter initcode',\n        url: 'https://eips.ethereum.org/EIPS/eip-3860',\n        status: Status.Review,\n        minimumHardfork: Hardfork.SpuriousDragon,\n        requiredEIPs: [],\n        gasPrices: {\n            initCodeWordCost: {\n                v: 2,\n                d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n            },\n        },\n        vm: {\n            maxInitCodeSize: {\n                v: 49152,\n                d: 'Maximum length of initialization code when creating a contract',\n            },\n        },\n    },\n    4345: {\n        comment: 'Difficulty Bomb Delay to June 2022',\n        url: 'https://eips.ethereum.org/EIPS/eip-4345',\n        status: Status.Final,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n        pow: {\n            difficultyBombDelay: {\n                v: 10700000,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    4399: {\n        comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n        url: 'https://eips.ethereum.org/EIPS/eip-4399',\n        status: Status.Review,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n        gasPrices: {\n            prevrandao: {\n                v: 2,\n                d: 'Base fee of the PREVRANDAO opcode (previously DIFFICULTY)',\n            },\n        },\n    },\n    4788: {\n        comment: 'Beacon block root in the EVM',\n        url: 'https://eips.ethereum.org/EIPS/eip-4788',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.Cancun,\n        requiredEIPs: [],\n        gasPrices: {},\n        vm: {\n            historicalRootsLength: {\n                v: 8191,\n                d: 'The modulo parameter of the beaconroot ring buffer in the beaconroot statefull precompile',\n            },\n        },\n    },\n    4844: {\n        comment: 'Shard Blob Transactions',\n        url: 'https://eips.ethereum.org/EIPS/eip-4844',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.Paris,\n        requiredEIPs: [1559, 2718, 2930, 4895],\n        gasConfig: {\n            blobGasPerBlob: {\n                v: 131072,\n                d: 'The base fee for blob gas per blob',\n            },\n            targetBlobGasPerBlock: {\n                v: 393216,\n                d: 'The target blob gas consumed per block',\n            },\n            maxblobGasPerBlock: {\n                v: 786432,\n                d: 'The max blob gas allowable per block',\n            },\n            blobGasPriceUpdateFraction: {\n                v: 3338477,\n                d: 'The denominator used in the exponential when calculating a blob gas price',\n            },\n        },\n        gasPrices: {\n            simpleGasPerBlob: {\n                v: 12000,\n                d: 'The basic gas fee for each blob',\n            },\n            minBlobGasPrice: {\n                v: 1,\n                d: 'The minimum fee per blob gas',\n            },\n            kzgPointEvaluationGasPrecompilePrice: {\n                v: 50000,\n                d: 'The fee associated with the point evaluation precompile',\n            },\n            blobhash: {\n                v: 3,\n                d: 'Base fee of the BLOBHASH opcode',\n            },\n        },\n        sharding: {\n            blobCommitmentVersionKzg: {\n                v: 1,\n                d: 'The number indicated a versioned hash is a KZG commitment',\n            },\n            fieldElementsPerBlob: {\n                v: 4096,\n                d: 'The number of field elements allowed per blob',\n            },\n        },\n    },\n    4895: {\n        comment: 'Beacon chain push withdrawals as operations',\n        url: 'https://eips.ethereum.org/EIPS/eip-4895',\n        status: Status.Review,\n        minimumHardfork: Hardfork.Paris,\n        requiredEIPs: [],\n    },\n    5133: {\n        comment: 'Delaying Difficulty Bomb to mid-September 2022',\n        url: 'https://eips.ethereum.org/EIPS/eip-5133',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.GrayGlacier,\n        requiredEIPs: [],\n        pow: {\n            difficultyBombDelay: {\n                v: 11400000,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    5656: {\n        comment: 'MCOPY - Memory copying instruction',\n        url: 'https://eips.ethereum.org/EIPS/eip-5656',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.Shanghai,\n        requiredEIPs: [],\n        gasPrices: {\n            mcopy: {\n                v: 3,\n                d: 'Base fee of the MCOPY opcode',\n            },\n        },\n    },\n    6780: {\n        comment: 'SELFDESTRUCT only in same transaction',\n        url: 'https://eips.ethereum.org/EIPS/eip-6780',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n    },\n    6800: {\n        comment: 'Ethereum state using a unified verkle tree (experimental)',\n        url: 'https://github.com/ethereum/EIPs/pull/6800',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.London,\n        requiredEIPs: [],\n    },\n    7516: {\n        comment: 'BLOBBASEFEE opcode',\n        url: 'https://eips.ethereum.org/EIPS/eip-7516',\n        status: Status.Draft,\n        minimumHardfork: Hardfork.Paris,\n        requiredEIPs: [4844],\n        gasPrices: {\n            blobbasefee: {\n                v: 2,\n                d: 'Gas cost of the BLOBBASEFEE opcode',\n            },\n        },\n    },\n};\n//# sourceMappingURL=eips.js.map","export var Status;\n(function (Status) {\n    Status[\"Draft\"] = \"draft\";\n    Status[\"Review\"] = \"review\";\n    Status[\"Final\"] = \"final\";\n})(Status || (Status = {}));\nexport const hardforks = {\n    chainstart: {\n        name: 'chainstart',\n        comment: 'Start of the Ethereum main chain',\n        url: '',\n        status: Status.Final,\n        gasConfig: {\n            minGasLimit: {\n                v: 5000,\n                d: 'Minimum the gas limit may ever be',\n            },\n            gasLimitBoundDivisor: {\n                v: 1024,\n                d: 'The bound divisor of the gas limit, used in update calculations',\n            },\n            maxRefundQuotient: {\n                v: 2,\n                d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n            },\n        },\n        gasPrices: {\n            base: {\n                v: 2,\n                d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n            },\n            exp: {\n                v: 10,\n                d: 'Base fee of the EXP opcode',\n            },\n            expByte: {\n                v: 10,\n                d: 'Times ceil(log256(exponent)) for the EXP instruction',\n            },\n            keccak256: {\n                v: 30,\n                d: 'Base fee of the SHA3 opcode',\n            },\n            keccak256Word: {\n                v: 6,\n                d: \"Once per word of the SHA3 operation's data\",\n            },\n            sload: {\n                v: 50,\n                d: 'Base fee of the SLOAD opcode',\n            },\n            sstoreSet: {\n                v: 20000,\n                d: 'Once per SSTORE operation if the zeroness changes from zero',\n            },\n            sstoreReset: {\n                v: 5000,\n                d: 'Once per SSTORE operation if the zeroness does not change from zero',\n            },\n            sstoreRefund: {\n                v: 15000,\n                d: 'Once per SSTORE operation if the zeroness changes to zero',\n            },\n            jumpdest: {\n                v: 1,\n                d: 'Base fee of the JUMPDEST opcode',\n            },\n            log: {\n                v: 375,\n                d: 'Base fee of the LOG opcode',\n            },\n            logData: {\n                v: 8,\n                d: \"Per byte in a LOG* operation's data\",\n            },\n            logTopic: {\n                v: 375,\n                d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n            },\n            create: {\n                v: 32000,\n                d: 'Base fee of the CREATE opcode',\n            },\n            call: {\n                v: 40,\n                d: 'Base fee of the CALL opcode',\n            },\n            callStipend: {\n                v: 2300,\n                d: 'Free gas given at beginning of call',\n            },\n            callValueTransfer: {\n                v: 9000,\n                d: 'Paid for CALL when the value transfor is non-zero',\n            },\n            callNewAccount: {\n                v: 25000,\n                d: \"Paid for CALL when the destination address didn't exist prior\",\n            },\n            selfdestructRefund: {\n                v: 24000,\n                d: 'Refunded following a selfdestruct operation',\n            },\n            memory: {\n                v: 3,\n                d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n            },\n            quadCoeffDiv: {\n                v: 512,\n                d: 'Divisor for the quadratic particle of the memory cost equation',\n            },\n            createData: {\n                v: 200,\n                d: '',\n            },\n            tx: {\n                v: 21000,\n                d: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n            },\n            txCreation: {\n                v: 32000,\n                d: 'The cost of creating a contract via tx',\n            },\n            txDataZero: {\n                v: 4,\n                d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n            },\n            txDataNonZero: {\n                v: 68,\n                d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n            },\n            copy: {\n                v: 3,\n                d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n            },\n            ecRecover: {\n                v: 3000,\n                d: '',\n            },\n            sha256: {\n                v: 60,\n                d: '',\n            },\n            sha256Word: {\n                v: 12,\n                d: '',\n            },\n            ripemd160: {\n                v: 600,\n                d: '',\n            },\n            ripemd160Word: {\n                v: 120,\n                d: '',\n            },\n            identity: {\n                v: 15,\n                d: '',\n            },\n            identityWord: {\n                v: 3,\n                d: '',\n            },\n            stop: {\n                v: 0,\n                d: 'Base fee of the STOP opcode',\n            },\n            add: {\n                v: 3,\n                d: 'Base fee of the ADD opcode',\n            },\n            mul: {\n                v: 5,\n                d: 'Base fee of the MUL opcode',\n            },\n            sub: {\n                v: 3,\n                d: 'Base fee of the SUB opcode',\n            },\n            div: {\n                v: 5,\n                d: 'Base fee of the DIV opcode',\n            },\n            sdiv: {\n                v: 5,\n                d: 'Base fee of the SDIV opcode',\n            },\n            mod: {\n                v: 5,\n                d: 'Base fee of the MOD opcode',\n            },\n            smod: {\n                v: 5,\n                d: 'Base fee of the SMOD opcode',\n            },\n            addmod: {\n                v: 8,\n                d: 'Base fee of the ADDMOD opcode',\n            },\n            mulmod: {\n                v: 8,\n                d: 'Base fee of the MULMOD opcode',\n            },\n            signextend: {\n                v: 5,\n                d: 'Base fee of the SIGNEXTEND opcode',\n            },\n            lt: {\n                v: 3,\n                d: 'Base fee of the LT opcode',\n            },\n            gt: {\n                v: 3,\n                d: 'Base fee of the GT opcode',\n            },\n            slt: {\n                v: 3,\n                d: 'Base fee of the SLT opcode',\n            },\n            sgt: {\n                v: 3,\n                d: 'Base fee of the SGT opcode',\n            },\n            eq: {\n                v: 3,\n                d: 'Base fee of the EQ opcode',\n            },\n            iszero: {\n                v: 3,\n                d: 'Base fee of the ISZERO opcode',\n            },\n            and: {\n                v: 3,\n                d: 'Base fee of the AND opcode',\n            },\n            or: {\n                v: 3,\n                d: 'Base fee of the OR opcode',\n            },\n            xor: {\n                v: 3,\n                d: 'Base fee of the XOR opcode',\n            },\n            not: {\n                v: 3,\n                d: 'Base fee of the NOT opcode',\n            },\n            byte: {\n                v: 3,\n                d: 'Base fee of the BYTE opcode',\n            },\n            address: {\n                v: 2,\n                d: 'Base fee of the ADDRESS opcode',\n            },\n            balance: {\n                v: 20,\n                d: 'Base fee of the BALANCE opcode',\n            },\n            origin: {\n                v: 2,\n                d: 'Base fee of the ORIGIN opcode',\n            },\n            caller: {\n                v: 2,\n                d: 'Base fee of the CALLER opcode',\n            },\n            callvalue: {\n                v: 2,\n                d: 'Base fee of the CALLVALUE opcode',\n            },\n            calldataload: {\n                v: 3,\n                d: 'Base fee of the CALLDATALOAD opcode',\n            },\n            calldatasize: {\n                v: 2,\n                d: 'Base fee of the CALLDATASIZE opcode',\n            },\n            calldatacopy: {\n                v: 3,\n                d: 'Base fee of the CALLDATACOPY opcode',\n            },\n            codesize: {\n                v: 2,\n                d: 'Base fee of the CODESIZE opcode',\n            },\n            codecopy: {\n                v: 3,\n                d: 'Base fee of the CODECOPY opcode',\n            },\n            gasprice: {\n                v: 2,\n                d: 'Base fee of the GASPRICE opcode',\n            },\n            extcodesize: {\n                v: 20,\n                d: 'Base fee of the EXTCODESIZE opcode',\n            },\n            extcodecopy: {\n                v: 20,\n                d: 'Base fee of the EXTCODECOPY opcode',\n            },\n            blockhash: {\n                v: 20,\n                d: 'Base fee of the BLOCKHASH opcode',\n            },\n            coinbase: {\n                v: 2,\n                d: 'Base fee of the COINBASE opcode',\n            },\n            timestamp: {\n                v: 2,\n                d: 'Base fee of the TIMESTAMP opcode',\n            },\n            number: {\n                v: 2,\n                d: 'Base fee of the NUMBER opcode',\n            },\n            difficulty: {\n                v: 2,\n                d: 'Base fee of the DIFFICULTY opcode',\n            },\n            gaslimit: {\n                v: 2,\n                d: 'Base fee of the GASLIMIT opcode',\n            },\n            pop: {\n                v: 2,\n                d: 'Base fee of the POP opcode',\n            },\n            mload: {\n                v: 3,\n                d: 'Base fee of the MLOAD opcode',\n            },\n            mstore: {\n                v: 3,\n                d: 'Base fee of the MSTORE opcode',\n            },\n            mstore8: {\n                v: 3,\n                d: 'Base fee of the MSTORE8 opcode',\n            },\n            sstore: {\n                v: 0,\n                d: 'Base fee of the SSTORE opcode',\n            },\n            jump: {\n                v: 8,\n                d: 'Base fee of the JUMP opcode',\n            },\n            jumpi: {\n                v: 10,\n                d: 'Base fee of the JUMPI opcode',\n            },\n            pc: {\n                v: 2,\n                d: 'Base fee of the PC opcode',\n            },\n            msize: {\n                v: 2,\n                d: 'Base fee of the MSIZE opcode',\n            },\n            gas: {\n                v: 2,\n                d: 'Base fee of the GAS opcode',\n            },\n            push: {\n                v: 3,\n                d: 'Base fee of the PUSH opcode',\n            },\n            dup: {\n                v: 3,\n                d: 'Base fee of the DUP opcode',\n            },\n            swap: {\n                v: 3,\n                d: 'Base fee of the SWAP opcode',\n            },\n            callcode: {\n                v: 40,\n                d: 'Base fee of the CALLCODE opcode',\n            },\n            return: {\n                v: 0,\n                d: 'Base fee of the RETURN opcode',\n            },\n            invalid: {\n                v: 0,\n                d: 'Base fee of the INVALID opcode',\n            },\n            selfdestruct: {\n                v: 0,\n                d: 'Base fee of the SELFDESTRUCT opcode',\n            },\n        },\n        vm: {\n            stackLimit: {\n                v: 1024,\n                d: 'Maximum size of VM stack allowed',\n            },\n            callCreateDepth: {\n                v: 1024,\n                d: 'Maximum depth of call/create stack',\n            },\n            maxExtraDataSize: {\n                v: 32,\n                d: 'Maximum size extra data may be after Genesis',\n            },\n        },\n        pow: {\n            minimumDifficulty: {\n                v: 131072,\n                d: 'The minimum that the difficulty may ever be',\n            },\n            difficultyBoundDivisor: {\n                v: 2048,\n                d: 'The bound divisor of the difficulty, used in the update calculations',\n            },\n            durationLimit: {\n                v: 13,\n                d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n            },\n            epochDuration: {\n                v: 30000,\n                d: 'Duration between proof-of-work epochs',\n            },\n            timebombPeriod: {\n                v: 100000,\n                d: 'Exponential difficulty timebomb period',\n            },\n            minerReward: {\n                v: BigInt('5000000000000000000'),\n                d: 'the amount a miner get rewarded for mining a block',\n            },\n            difficultyBombDelay: {\n                v: 0,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    homestead: {\n        name: 'homestead',\n        comment: 'Homestead hardfork with protocol and network changes',\n        url: 'https://eips.ethereum.org/EIPS/eip-606',\n        status: Status.Final,\n        gasPrices: {\n            delegatecall: {\n                v: 40,\n                d: 'Base fee of the DELEGATECALL opcode',\n            },\n        },\n    },\n    dao: {\n        name: 'dao',\n        comment: 'DAO rescue hardfork',\n        url: 'https://eips.ethereum.org/EIPS/eip-779',\n        status: Status.Final,\n    },\n    tangerineWhistle: {\n        name: 'tangerineWhistle',\n        comment: 'Hardfork with gas cost changes for IO-heavy operations',\n        url: 'https://eips.ethereum.org/EIPS/eip-608',\n        status: Status.Final,\n        gasPrices: {\n            sload: {\n                v: 200,\n                d: 'Once per SLOAD operation',\n            },\n            call: {\n                v: 700,\n                d: 'Once per CALL operation & message call transaction',\n            },\n            extcodesize: {\n                v: 700,\n                d: 'Base fee of the EXTCODESIZE opcode',\n            },\n            extcodecopy: {\n                v: 700,\n                d: 'Base fee of the EXTCODECOPY opcode',\n            },\n            balance: {\n                v: 400,\n                d: 'Base fee of the BALANCE opcode',\n            },\n            delegatecall: {\n                v: 700,\n                d: 'Base fee of the DELEGATECALL opcode',\n            },\n            callcode: {\n                v: 700,\n                d: 'Base fee of the CALLCODE opcode',\n            },\n            selfdestruct: {\n                v: 5000,\n                d: 'Base fee of the SELFDESTRUCT opcode',\n            },\n        },\n    },\n    spuriousDragon: {\n        name: 'spuriousDragon',\n        comment: 'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',\n        url: 'https://eips.ethereum.org/EIPS/eip-607',\n        status: Status.Final,\n        gasPrices: {\n            expByte: {\n                v: 50,\n                d: 'Times ceil(log256(exponent)) for the EXP instruction',\n            },\n        },\n        vm: {\n            maxCodeSize: {\n                v: 24576,\n                d: 'Maximum length of contract code',\n            },\n        },\n    },\n    byzantium: {\n        name: 'byzantium',\n        comment: 'Hardfork with new precompiles, instructions and other protocol changes',\n        url: 'https://eips.ethereum.org/EIPS/eip-609',\n        status: Status.Final,\n        gasPrices: {\n            modexpGquaddivisor: {\n                v: 20,\n                d: 'Gquaddivisor from modexp precompile for gas calculation',\n            },\n            ecAdd: {\n                v: 500,\n                d: 'Gas costs for curve addition precompile',\n            },\n            ecMul: {\n                v: 40000,\n                d: 'Gas costs for curve multiplication precompile',\n            },\n            ecPairing: {\n                v: 100000,\n                d: 'Base gas costs for curve pairing precompile',\n            },\n            ecPairingWord: {\n                v: 80000,\n                d: 'Gas costs regarding curve pairing precompile input length',\n            },\n            revert: {\n                v: 0,\n                d: 'Base fee of the REVERT opcode',\n            },\n            staticcall: {\n                v: 700,\n                d: 'Base fee of the STATICCALL opcode',\n            },\n            returndatasize: {\n                v: 2,\n                d: 'Base fee of the RETURNDATASIZE opcode',\n            },\n            returndatacopy: {\n                v: 3,\n                d: 'Base fee of the RETURNDATACOPY opcode',\n            },\n        },\n        pow: {\n            minerReward: {\n                v: BigInt('3000000000000000000'),\n                d: 'the amount a miner get rewarded for mining a block',\n            },\n            difficultyBombDelay: {\n                v: 3000000,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    constantinople: {\n        name: 'constantinople',\n        comment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',\n        url: 'https://eips.ethereum.org/EIPS/eip-1013',\n        status: Status.Final,\n        gasPrices: {\n            netSstoreNoopGas: {\n                v: 200,\n                d: \"Once per SSTORE operation if the value doesn't change\",\n            },\n            netSstoreInitGas: {\n                v: 20000,\n                d: 'Once per SSTORE operation from clean zero',\n            },\n            netSstoreCleanGas: {\n                v: 5000,\n                d: 'Once per SSTORE operation from clean non-zero',\n            },\n            netSstoreDirtyGas: {\n                v: 200,\n                d: 'Once per SSTORE operation from dirty',\n            },\n            netSstoreClearRefund: {\n                v: 15000,\n                d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n            },\n            netSstoreResetRefund: {\n                v: 4800,\n                d: 'Once per SSTORE operation for resetting to the original non-zero value',\n            },\n            netSstoreResetClearRefund: {\n                v: 19800,\n                d: 'Once per SSTORE operation for resetting to the original zero value',\n            },\n            shl: {\n                v: 3,\n                d: 'Base fee of the SHL opcode',\n            },\n            shr: {\n                v: 3,\n                d: 'Base fee of the SHR opcode',\n            },\n            sar: {\n                v: 3,\n                d: 'Base fee of the SAR opcode',\n            },\n            extcodehash: {\n                v: 400,\n                d: 'Base fee of the EXTCODEHASH opcode',\n            },\n            create2: {\n                v: 32000,\n                d: 'Base fee of the CREATE2 opcode',\n            },\n        },\n        pow: {\n            minerReward: {\n                v: BigInt('2000000000000000000'),\n                d: 'The amount a miner gets rewarded for mining a block',\n            },\n            difficultyBombDelay: {\n                v: 5000000,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    petersburg: {\n        name: 'petersburg',\n        comment: 'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',\n        url: 'https://eips.ethereum.org/EIPS/eip-1716',\n        status: Status.Final,\n        gasPrices: {\n            netSstoreNoopGas: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n            netSstoreInitGas: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n            netSstoreCleanGas: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n            netSstoreDirtyGas: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n            netSstoreClearRefund: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n            netSstoreResetRefund: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n            netSstoreResetClearRefund: {\n                v: null,\n                d: 'Removed along EIP-1283',\n            },\n        },\n    },\n    istanbul: {\n        name: 'istanbul',\n        comment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',\n        url: 'https://eips.ethereum.org/EIPS/eip-1679',\n        status: Status.Final,\n        gasConfig: {},\n        gasPrices: {\n            blake2Round: {\n                v: 1,\n                d: 'Gas cost per round for the Blake2 F precompile',\n            },\n            ecAdd: {\n                v: 150,\n                d: 'Gas costs for curve addition precompile',\n            },\n            ecMul: {\n                v: 6000,\n                d: 'Gas costs for curve multiplication precompile',\n            },\n            ecPairing: {\n                v: 45000,\n                d: 'Base gas costs for curve pairing precompile',\n            },\n            ecPairingWord: {\n                v: 34000,\n                d: 'Gas costs regarding curve pairing precompile input length',\n            },\n            txDataNonZero: {\n                v: 16,\n                d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n            },\n            sstoreSentryGasEIP2200: {\n                v: 2300,\n                d: 'Minimum gas required to be present for an SSTORE call, not consumed',\n            },\n            sstoreNoopGasEIP2200: {\n                v: 800,\n                d: \"Once per SSTORE operation if the value doesn't change\",\n            },\n            sstoreDirtyGasEIP2200: {\n                v: 800,\n                d: 'Once per SSTORE operation if a dirty value is changed',\n            },\n            sstoreInitGasEIP2200: {\n                v: 20000,\n                d: 'Once per SSTORE operation from clean zero to non-zero',\n            },\n            sstoreInitRefundEIP2200: {\n                v: 19200,\n                d: 'Once per SSTORE operation for resetting to the original zero value',\n            },\n            sstoreCleanGasEIP2200: {\n                v: 5000,\n                d: 'Once per SSTORE operation from clean non-zero to something else',\n            },\n            sstoreCleanRefundEIP2200: {\n                v: 4200,\n                d: 'Once per SSTORE operation for resetting to the original non-zero value',\n            },\n            sstoreClearRefundEIP2200: {\n                v: 15000,\n                d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n            },\n            balance: {\n                v: 700,\n                d: 'Base fee of the BALANCE opcode',\n            },\n            extcodehash: {\n                v: 700,\n                d: 'Base fee of the EXTCODEHASH opcode',\n            },\n            chainid: {\n                v: 2,\n                d: 'Base fee of the CHAINID opcode',\n            },\n            selfbalance: {\n                v: 5,\n                d: 'Base fee of the SELFBALANCE opcode',\n            },\n            sload: {\n                v: 800,\n                d: 'Base fee of the SLOAD opcode',\n            },\n        },\n    },\n    muirGlacier: {\n        name: 'muirGlacier',\n        comment: 'HF to delay the difficulty bomb',\n        url: 'https://eips.ethereum.org/EIPS/eip-2384',\n        status: Status.Final,\n        pow: {\n            difficultyBombDelay: {\n                v: 9000000,\n                d: 'the amount of blocks to delay the difficulty bomb with',\n            },\n        },\n    },\n    berlin: {\n        name: 'berlin',\n        comment: 'HF targeted for July 2020 following the Muir Glacier HF',\n        url: 'https://eips.ethereum.org/EIPS/eip-2070',\n        status: Status.Final,\n        eips: [2565, 2929, 2718, 2930],\n    },\n    london: {\n        name: 'london',\n        comment: 'HF targeted for July 2021 following the Berlin fork',\n        url: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',\n        status: Status.Final,\n        eips: [1559, 3198, 3529, 3541],\n    },\n    arrowGlacier: {\n        name: 'arrowGlacier',\n        comment: 'HF to delay the difficulty bomb',\n        url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',\n        status: Status.Final,\n        eips: [4345],\n    },\n    grayGlacier: {\n        name: 'grayGlacier',\n        comment: 'Delaying the difficulty bomb to Mid September 2022',\n        url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',\n        status: Status.Final,\n        eips: [5133],\n    },\n    paris: {\n        name: 'paris',\n        comment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',\n        url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',\n        status: Status.Final,\n        consensus: {\n            type: 'pos',\n            algorithm: 'casper',\n            casper: {},\n        },\n        eips: [3675, 4399],\n    },\n    mergeForkIdTransition: {\n        name: 'mergeForkIdTransition',\n        comment: 'Pre-merge hardfork to fork off non-upgraded clients',\n        url: 'https://eips.ethereum.org/EIPS/eip-3675',\n        status: Status.Final,\n        eips: [],\n    },\n    shanghai: {\n        name: 'shanghai',\n        comment: 'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',\n        url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',\n        status: Status.Final,\n        eips: [3651, 3855, 3860, 4895],\n    },\n    cancun: {\n        name: 'cancun',\n        comment: 'Next feature hardfork after shanghai, includes proto-danksharding EIP 4844 blobs (still WIP hence not for production use), transient storage opcodes, parent beacon block root availability in EVM, selfdestruct only in same transaction, and blob base fee opcode',\n        url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/cancun.md',\n        status: Status.Final,\n        eips: [1153, 4844, 4788, 5656, 6780, 7516],\n    },\n    prague: {\n        name: 'prague',\n        comment: 'Next feature hardfork after cancun, internally used for verkle testing/implementation (incomplete/experimental)',\n        url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/prague.md',\n        status: Status.Draft,\n        eips: [6800],\n    },\n};\n//# sourceMappingURL=hardforks.js.map","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util';\nimport { Hardfork } from './enums.js';\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce) {\n    if (!nonce || nonce === '0x0') {\n        return '0x0000000000000000';\n    }\n    if (isHexPrefixed(nonce)) {\n        return '0x' + stripHexPrefix(nonce).padStart(16, '0');\n    }\n    return '0x' + nonce.padStart(16, '0');\n}\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json, mergeForkIdPostMerge = true) {\n    const { name, config, difficulty, mixHash, gasLimit, coinbase, baseFeePerGas, excessBlobGas, } = json;\n    let { extraData, timestamp, nonce } = json;\n    const genesisTimestamp = Number(timestamp);\n    const { chainId } = config;\n    // geth is not strictly putting empty fields with a 0x prefix\n    if (extraData === '') {\n        extraData = '0x';\n    }\n    // geth may use number for timestamp\n    if (!isHexPrefixed(timestamp)) {\n        timestamp = intToHex(parseInt(timestamp));\n    }\n    // geth may not give us a nonce strictly formatted to an 8 byte hex string\n    if (nonce.length !== 18) {\n        nonce = formatNonce(nonce);\n    }\n    // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n    // but have different configuration parameters in geth genesis parameters\n    if (config.eip155Block !== config.eip158Block) {\n        throw new Error('EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork');\n    }\n    const params = {\n        name,\n        chainId,\n        networkId: chainId,\n        genesis: {\n            timestamp,\n            gasLimit,\n            difficulty,\n            nonce,\n            extraData,\n            mixHash,\n            coinbase,\n            baseFeePerGas,\n            excessBlobGas,\n        },\n        hardfork: undefined,\n        hardforks: [],\n        bootstrapNodes: [],\n        consensus: config.clique !== undefined\n            ? {\n                type: 'poa',\n                algorithm: 'clique',\n                clique: {\n                    // The recent geth genesis seems to be using blockperiodseconds\n                    // and epochlength for clique specification\n                    // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n                    period: config.clique.period ?? config.clique.blockperiodseconds,\n                    epoch: config.clique.epoch ?? config.clique.epochlength,\n                },\n            }\n            : {\n                type: 'pow',\n                algorithm: 'ethash',\n                ethash: {},\n            },\n    };\n    const forkMap = {\n        [Hardfork.Homestead]: { name: 'homesteadBlock' },\n        [Hardfork.Dao]: { name: 'daoForkBlock' },\n        [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n        [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n        [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n        [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n        [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n        [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n        [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n        [Hardfork.Berlin]: { name: 'berlinBlock' },\n        [Hardfork.London]: { name: 'londonBlock' },\n        [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n        [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n        [Hardfork.Cancun]: { name: 'cancunTime', postMerge: true, isTimestamp: true },\n        [Hardfork.Prague]: { name: 'pragueTime', postMerge: true, isTimestamp: true },\n    };\n    // forkMapRev is the map from config field name to Hardfork\n    const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n        acc[forkMap[elem].name] = elem;\n        return acc;\n    }, {});\n    const configHardforkNames = Object.keys(config).filter((key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null);\n    params.hardforks = configHardforkNames\n        .map((nameBlock) => ({\n        name: forkMapRev[nameBlock],\n        block: forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n            ? null\n            : config[nameBlock],\n        timestamp: forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n            ? config[nameBlock]\n            : undefined,\n    }))\n        .filter((fork) => fork.block !== null || fork.timestamp !== undefined);\n    params.hardforks.sort(function (a, b) {\n        return (a.block ?? Infinity) - (b.block ?? Infinity);\n    });\n    params.hardforks.sort(function (a, b) {\n        // non timestamp forks come before any timestamp forks\n        return (a.timestamp ?? 0) - (b.timestamp ?? 0);\n    });\n    // only set the genesis timestamp forks to zero post the above sort has happended\n    // to get the correct sorting\n    for (const hf of params.hardforks) {\n        if (hf.timestamp === genesisTimestamp) {\n            hf.timestamp = 0;\n        }\n    }\n    if (config.terminalTotalDifficulty !== undefined) {\n        // Following points need to be considered for placement of merge hf\n        // - Merge hardfork can't be placed at genesis\n        // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n        // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n        //   necessary for e.g. withdrawals\n        const mergeConfig = {\n            name: Hardfork.Paris,\n            ttd: config.terminalTotalDifficulty,\n            block: null,\n        };\n        // Merge hardfork has to be placed before first hardfork that is dependent on merge\n        const postMergeIndex = params.hardforks.findIndex((hf) => forkMap[hf.name]?.postMerge === true);\n        if (postMergeIndex !== -1) {\n            params.hardforks.splice(postMergeIndex, 0, mergeConfig);\n        }\n        else {\n            params.hardforks.push(mergeConfig);\n        }\n    }\n    const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;\n    params.hardfork = latestHardfork?.name;\n    params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 });\n    return params;\n}\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json, name, mergeForkIdPostMerge) {\n    try {\n        const required = ['config', 'difficulty', 'gasLimit', 'nonce', 'alloc'];\n        if (required.some((field) => !(field in json))) {\n            const missingField = required.filter((field) => !(field in json));\n            throw new Error(`Invalid format, expected geth genesis field \"${missingField}\" missing`);\n        }\n        if (name !== undefined) {\n            json.name = name;\n        }\n        return parseGethParams(json, mergeForkIdPostMerge);\n    }\n    catch (e) {\n        throw new Error(`Error parsing parameters file: ${e.message}`);\n    }\n}\n//# sourceMappingURL=utils.js.map","import { BIGINT_0, TypeOutput, bytesToHex, concatBytes, hexToBytes, intToBytes, toType, } from '@ethereumjs/util';\nimport { EventEmitter } from 'events';\nimport { chains as CHAIN_SPECS } from './chains.js';\nimport { crc32 } from './crc.js';\nimport { EIPs } from './eips.js';\nimport { Chain, CustomChain, Hardfork } from './enums.js';\nimport { hardforks as HARDFORK_SPECS } from './hardforks.js';\nimport { parseGethGenesis } from './utils.js';\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common {\n    constructor(opts) {\n        this._eips = [];\n        this._paramsCache = {};\n        this._activatedEIPsCache = [];\n        this.events = new EventEmitter();\n        this._customChains = opts.customChains ?? [];\n        this._chainParams = this.setChain(opts.chain);\n        this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Shanghai;\n        // Assign hardfork changes in the sequence of the applied hardforks\n        this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n            hf.name,\n            HARDFORK_SPECS[hf.name] ??\n                (this._chainParams.customHardforks && this._chainParams.customHardforks[hf.name]),\n        ]);\n        this._hardfork = this.DEFAULT_HARDFORK;\n        if (opts.hardfork !== undefined) {\n            this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            this.setEIPs(opts.eips);\n        }\n        this.customCrypto = opts.customCrypto ?? {};\n        if (Object.keys(this._paramsCache).length === 0) {\n            this._buildParamsCache();\n            this._buildActivatedEIPsCache();\n        }\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    static custom(chainParamsOrName, opts = {}) {\n        const baseChain = opts.baseChain ?? 'mainnet';\n        const standardChainParams = { ...Common._getChainParams(baseChain) };\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common({\n                chain: {\n                    ...standardChainParams,\n                    ...chainParamsOrName,\n                },\n                ...opts,\n            });\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumOne) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumOne,\n                    chainId: 42161,\n                    networkId: 42161,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, \n                // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n                { hardfork: Hardfork.Berlin, ...opts });\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, \n                // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n                { hardfork: Hardfork.Berlin, ...opts });\n            }\n            throw new Error(`Custom chain ${chainParamsOrName} not supported`);\n        }\n    }\n    /**\n     * Static method to load and set common from a geth genesis json\n     * @param genesisJson json of geth configuration\n     * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n     * @returns Common\n     */\n    static fromGethGenesis(genesisJson, { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge, customCrypto }) {\n        const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge);\n        const common = new Common({\n            chain: genesisParams.name ?? 'custom',\n            customChains: [genesisParams],\n            eips,\n            hardfork: hardfork ?? genesisParams.hardfork,\n            customCrypto,\n        });\n        if (genesisHash !== undefined) {\n            common.setForkHashes(genesisHash);\n        }\n        return common;\n    }\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId bigint id (`1`) of a standard chain\n     * @returns boolean\n     */\n    static isSupportedChainId(chainId) {\n        const initializedChains = this.getInitializedChains();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    }\n    static _getChainParams(chain, customChains) {\n        const initializedChains = this.getInitializedChains(customChains);\n        if (typeof chain === 'number' || typeof chain === 'bigint') {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                const name = initializedChains['names'][chain];\n                return initializedChains[name];\n            }\n            throw new Error(`Chain with ID ${chain} not supported`);\n        }\n        if (initializedChains[chain] !== undefined) {\n            return initializedChains[chain];\n        }\n        throw new Error(`Chain with name ${chain} not supported`);\n    }\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain representation.\n     *              Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    setChain(chain) {\n        if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain, this._customChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or bigint when initialized with customChains passed in');\n            }\n            const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (const param of required) {\n                if (!(param in chain)) {\n                    throw new Error(`Missing required chain parameter: ${param}`);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        for (const hf of this.hardforks()) {\n            if (hf.block === undefined) {\n                throw new Error(`Hardfork cannot have undefined block number`);\n            }\n        }\n        return this._chainParams;\n    }\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    setHardfork(hardfork) {\n        let existing = false;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if (hfChanges[0] === hardfork) {\n                if (this._hardfork !== hardfork) {\n                    this._hardfork = hardfork;\n                    this._buildParamsCache();\n                    this._buildActivatedEIPsCache();\n                    this.events.emit('hardforkChanged', hardfork);\n                }\n                existing = true;\n            }\n        }\n        if (!existing) {\n            throw new Error(`Hardfork with name ${hardfork} not supported`);\n        }\n    }\n    /**\n     * Returns the hardfork either based on block numer (older HFs) or\n     * timestamp (Shanghai upwards).\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param Opts Block number, timestamp or TD (all optional)\n     * @returns The name of the HF\n     */\n    getHardforkBy(opts) {\n        const blockNumber = toType(opts.blockNumber, TypeOutput.BigInt);\n        const td = toType(opts.td, TypeOutput.BigInt);\n        const timestamp = toType(opts.timestamp, TypeOutput.BigInt);\n        // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n        const hfs = this.hardforks().filter((hf) => hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined);\n        const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined);\n        const doubleTTDHF = hfs\n            .slice(mergeIndex + 1)\n            .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined);\n        if (doubleTTDHF >= 0) {\n            throw Error(`More than one merge hardforks found with ttd specified`);\n        }\n        // Find the first hardfork that has a block number greater than `blockNumber`\n        // (skips the merge hardfork since it cannot have a block number specified).\n        // If timestamp is not provided, it also skips timestamps hardforks to continue\n        // discovering/checking number hardforks.\n        let hfIndex = hfs.findIndex((hf) => (blockNumber !== undefined && hf.block !== null && BigInt(hf.block) > blockNumber) ||\n            (timestamp !== undefined && hf.timestamp !== undefined && BigInt(hf.timestamp) > timestamp));\n        if (hfIndex === -1) {\n            // all hardforks apply, set hfIndex to the last one as that's the candidate\n            hfIndex = hfs.length;\n        }\n        else if (hfIndex === 0) {\n            // cannot have a case where a block number is before all applied hardforks\n            // since the chain has to start with a hardfork\n            throw Error('Must have at least one hardfork at block 0');\n        }\n        // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n        if (timestamp === undefined) {\n            const stepBack = hfs\n                .slice(0, hfIndex)\n                .reverse()\n                .findIndex((hf) => hf.block !== null || hf.ttd !== undefined);\n            hfIndex = hfIndex - stepBack;\n        }\n        // Move hfIndex one back to arrive at candidate hardfork\n        hfIndex = hfIndex - 1;\n        // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n        // hardforks. so it will now be needed to rollback\n        if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n            // We're on the merge hardfork.  Let's check the TTD\n            if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd) > td) {\n                // Merge ttd greater than current td so we're on hardfork before merge\n                hfIndex -= 1;\n            }\n        }\n        else {\n            if (mergeIndex >= 0 && td !== undefined && td !== null) {\n                if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd) > td) {\n                    throw Error('Maximum HF determined by total difficulty is lower than the block number HF');\n                }\n                else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd) < td) {\n                    throw Error('HF determined by block number is lower than the minimum total difficulty HF');\n                }\n            }\n        }\n        const hfStartIndex = hfIndex;\n        // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n        // This won't anyway be the case with Merge hfs\n        for (; hfIndex < hfs.length - 1; hfIndex++) {\n            // break out if hfIndex + 1 is not scheduled at hfIndex\n            if (hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n                hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp) {\n                break;\n            }\n        }\n        if (timestamp !== undefined) {\n            const minTimeStamp = hfs\n                .slice(0, hfStartIndex)\n                .reduce((acc, hf) => Math.max(Number(hf.timestamp ?? '0'), acc), 0);\n            if (minTimeStamp > timestamp) {\n                throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`);\n            }\n            const maxTimeStamp = hfs\n                .slice(hfIndex + 1)\n                .reduce((acc, hf) => Math.min(Number(hf.timestamp ?? timestamp), acc), Number(timestamp));\n            if (maxTimeStamp < timestamp) {\n                throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n            }\n        }\n        const hardfork = hfs[hfIndex];\n        return hardfork.name;\n    }\n    /**\n     * Sets a new hardfork either based on block numer (older HFs) or\n     * timestamp (Shanghai upwards).\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param Opts Block number, timestamp or TD (all optional)\n     * @returns The name of the HF set\n     */\n    setHardforkBy(opts) {\n        const hardfork = this.getHardforkBy(opts);\n        this.setHardfork(hardfork);\n        return hardfork;\n    }\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params or null if hardfork not on chain\n     */\n    _getHardfork(hardfork) {\n        const hfs = this.hardforks();\n        for (const hf of hfs) {\n            if (hf['name'] === hardfork)\n                return hf;\n        }\n        return null;\n    }\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    setEIPs(eips = []) {\n        for (const eip of eips) {\n            if (!(eip in EIPs)) {\n                throw new Error(`${eip} not supported`);\n            }\n            const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(`${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`);\n            }\n        }\n        this._eips = eips;\n        this._buildParamsCache();\n        this._buildActivatedEIPsCache();\n        for (const eip of eips) {\n            if (EIPs[eip].requiredEIPs !== undefined) {\n                for (const elem of EIPs[eip].requiredEIPs) {\n                    if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n                        throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Internal helper for _buildParamsCache()\n     */\n    _mergeWithParamsCache(params) {\n        this._paramsCache['gasConfig'] = {\n            ...this._paramsCache['gasConfig'],\n            ...params['gasConfig'],\n        };\n        this._paramsCache['gasPrices'] = {\n            ...this._paramsCache['gasPrices'],\n            ...params['gasPrices'],\n        };\n        this._paramsCache['pow'] = {\n            ...this._paramsCache['pow'],\n            ...params['pow'],\n        };\n        this._paramsCache['sharding'] = {\n            ...this._paramsCache['sharding'],\n            ...params['sharding'],\n        };\n        this._paramsCache['vm'] = {\n            ...this._paramsCache['vm'],\n            ...params['vm'],\n        };\n    }\n    /**\n     * Build up a cache for all parameter values for the current HF and all activated EIPs\n     */\n    _buildParamsCache() {\n        this._paramsCache = {};\n        // Iterate through all hardforks up to hardfork set\n        const hardfork = this.hardfork();\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // EIP-referencing HF config (e.g. for berlin)\n            if ('eips' in hfChanges[1]) {\n                const hfEIPs = hfChanges[1]['eips'];\n                for (const eip of hfEIPs) {\n                    if (!(eip in EIPs)) {\n                        throw new Error(`${eip} not supported`);\n                    }\n                    this._mergeWithParamsCache(EIPs[eip]);\n                }\n                // Parameter-inlining HF config (e.g. for istanbul)\n            }\n            else {\n                this._mergeWithParamsCache(hfChanges[1]);\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // Iterate through all additionally activated EIPs\n        for (const eip of this._eips) {\n            if (!(eip in EIPs)) {\n                throw new Error(`${eip} not supported`);\n            }\n            this._mergeWithParamsCache(EIPs[eip]);\n        }\n    }\n    _buildActivatedEIPsCache() {\n        this._activatedEIPsCache = [];\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            const hf = hfChanges[1];\n            if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                this._activatedEIPsCache = this._activatedEIPsCache.concat(hf['eips']);\n            }\n        }\n        this._activatedEIPsCache = this._activatedEIPsCache.concat(this._eips);\n    }\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precedence.\n     * Otherwise the parameter is taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `BigInt(0)` if not found\n     */\n    param(topic, name) {\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        let value = null;\n        if (this._paramsCache[topic] !== undefined &&\n            this._paramsCache[topic][name] !== undefined) {\n            value = this._paramsCache[topic][name].v;\n        }\n        return BigInt(value ?? 0);\n    }\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `BigInt(0)` if not found\n     */\n    paramByHardfork(topic, name, hardfork) {\n        let value = null;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // EIP-referencing HF config (e.g. for berlin)\n            if ('eips' in hfChanges[1]) {\n                const hfEIPs = hfChanges[1]['eips'];\n                for (const eip of hfEIPs) {\n                    const valueEIP = this.paramByEIP(topic, name, eip);\n                    value = typeof valueEIP === 'bigint' ? valueEIP : value;\n                }\n                // Parameter-inlining HF config (e.g. for istanbul)\n            }\n            else {\n                if (hfChanges[1][topic] !== undefined &&\n                    hfChanges[1][topic][name] !== undefined) {\n                    value = hfChanges[1][topic][name].v;\n                }\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        return BigInt(value ?? 0);\n    }\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `undefined` if not found\n     */\n    paramByEIP(topic, name, eip) {\n        if (!(eip in EIPs)) {\n            throw new Error(`${eip} not supported`);\n        }\n        const eipParams = EIPs[eip];\n        if (!(topic in eipParams)) {\n            return undefined;\n        }\n        if (eipParams[topic][name] === undefined) {\n            return undefined;\n        }\n        const value = eipParams[topic][name].v;\n        return BigInt(value);\n    }\n    /**\n     * Returns a parameter for the hardfork active on block number or\n     * optional provided total difficulty (Merge HF)\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     * @param td Total difficulty\n     *    * @returns The value requested or `BigInt(0)` if not found\n     */\n    paramByBlock(topic, name, blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkBy({ blockNumber, td, timestamp });\n        return this.paramByHardfork(topic, name, hardfork);\n    }\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    isActivatedEIP(eip) {\n        if (this._activatedEIPsCache.includes(eip)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */\n    hardforkIsActiveOnBlock(hardfork, blockNumber) {\n        blockNumber = toType(blockNumber, TypeOutput.BigInt);\n        hardfork = hardfork ?? this._hardfork;\n        const hfBlock = this.hardforkBlock(hardfork);\n        if (typeof hfBlock === 'bigint' && hfBlock !== BIGINT_0 && blockNumber >= hfBlock) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */\n    activeOnBlock(blockNumber) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber);\n    }\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    hardforkGteHardfork(hardfork1, hardfork2) {\n        hardfork1 = hardfork1 ?? this._hardfork;\n        const hardforks = this.hardforks();\n        let posHf1 = -1, posHf2 = -1;\n        let index = 0;\n        for (const hf of hardforks) {\n            if (hf['name'] === hardfork1)\n                posHf1 = index;\n            if (hf['name'] === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    }\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    gteHardfork(hardfork) {\n        return this.hardforkGteHardfork(null, hardfork);\n    }\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    hardforkBlock(hardfork) {\n        hardfork = hardfork ?? this._hardfork;\n        const block = this._getHardfork(hardfork)?.['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return BigInt(block);\n    }\n    hardforkTimestamp(hardfork) {\n        hardfork = hardfork ?? this._hardfork;\n        const timestamp = this._getHardfork(hardfork)?.['timestamp'];\n        if (timestamp === undefined || timestamp === null) {\n            return null;\n        }\n        return BigInt(timestamp);\n    }\n    /**\n     * Returns the hardfork change block for eip\n     * @param eip EIP number\n     * @returns Block number or null if unscheduled\n     */\n    eipBlock(eip) {\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            const hf = hfChanges[1];\n            if ('eips' in hf) {\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                if (hf['eips'].includes(eip)) {\n                    return this.hardforkBlock(hfChanges[0]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the scheduled timestamp of the EIP (if scheduled and scheduled by timestamp)\n     * @param eip EIP number\n     * @returns Scheduled timestamp. If this EIP is unscheduled, or the EIP is scheduled by block number or ttd, then it returns `null`.\n     */\n    eipTimestamp(eip) {\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            const hf = hfChanges[1];\n            if ('eips' in hf) {\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                if (hf['eips'].includes(eip)) {\n                    return this.hardforkTimestamp(hfChanges[0]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    hardforkTTD(hardfork) {\n        hardfork = hardfork ?? this._hardfork;\n        const ttd = this._getHardfork(hardfork)?.['ttd'];\n        if (ttd === undefined || ttd === null) {\n            return null;\n        }\n        return BigInt(ttd);\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block timestamp, number or null if not available\n     */\n    nextHardforkBlockOrTimestamp(hardfork) {\n        hardfork = hardfork ?? this._hardfork;\n        const hfs = this.hardforks();\n        let hfIndex = hfs.findIndex((hf) => hf.name === hardfork);\n        // If the current hardfork is merge, go one behind as merge hf is not part of these\n        // calcs even if the merge hf block is set\n        if (hardfork === Hardfork.Paris) {\n            hfIndex -= 1;\n        }\n        // Hardfork not found\n        if (hfIndex < 0) {\n            return null;\n        }\n        let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block;\n        currHfTimeOrBlock =\n            currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n                ? Number(currHfTimeOrBlock)\n                : null;\n        const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n            let hfTimeOrBlock = hf.timestamp ?? hf.block;\n            hfTimeOrBlock =\n                hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null;\n            return (hf.name !== Hardfork.Paris &&\n                hfTimeOrBlock !== null &&\n                hfTimeOrBlock !== undefined &&\n                hfTimeOrBlock !== currHfTimeOrBlock);\n        });\n        // If no next hf found with valid block or timestamp return null\n        if (nextHf === undefined) {\n            return null;\n        }\n        const nextHfBlock = nextHf.timestamp ?? nextHf.block;\n        if (nextHfBlock === null || nextHfBlock === undefined) {\n            return null;\n        }\n        return BigInt(nextHfBlock);\n    }\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @param genesisHash Genesis block hash of the chain\n     * @returns Fork hash as hex string\n     */\n    _calcForkHash(hardfork, genesisHash) {\n        let hfBytes = new Uint8Array(0);\n        let prevBlockOrTime = 0;\n        for (const hf of this.hardforks()) {\n            const { block, timestamp, name } = hf;\n            // Timestamp to be used for timestamp based hfs even if we may bundle\n            // block number with them retrospectively\n            let blockOrTime = timestamp ?? block;\n            blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n            // Skip for chainstart (0), not applied HFs (null) and\n            // when already applied on same blockOrTime HFs\n            // and on the merge since forkhash doesn't change on merge hf\n            if (typeof blockOrTime === 'number' &&\n                blockOrTime !== 0 &&\n                blockOrTime !== prevBlockOrTime &&\n                name !== Hardfork.Paris) {\n                const hfBlockBytes = hexToBytes('0x' + blockOrTime.toString(16).padStart(16, '0'));\n                hfBytes = concatBytes(hfBytes, hfBlockBytes);\n                prevBlockOrTime = blockOrTime;\n            }\n            if (hf.name === hardfork)\n                break;\n        }\n        const inputBytes = concatBytes(genesisHash, hfBytes);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        const forkhash = bytesToHex(intToBytes(crc32(inputBytes) >>> 0));\n        return forkhash;\n    }\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n     */\n    forkHash(hardfork, genesisHash) {\n        hardfork = hardfork ?? this._hardfork;\n        const data = this._getHardfork(hardfork);\n        if (data === null ||\n            (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)) {\n            const msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data?.forkHash !== null && data?.forkHash !== undefined) {\n            return data.forkHash;\n        }\n        if (!genesisHash)\n            throw new Error('genesisHash required for forkHash calculation');\n        return this._calcForkHash(hardfork, genesisHash);\n    }\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    hardforkForForkHash(forkHash) {\n        const resArray = this.hardforks().filter((hf) => {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    }\n    /**\n     * Sets any missing forkHashes on the passed-in {@link Common} instance\n     * @param common The {@link Common} to set the forkHashes for\n     * @param genesisHash The genesis block hash\n     */\n    setForkHashes(genesisHash) {\n        for (const hf of this.hardforks()) {\n            const blockOrTime = hf.timestamp ?? hf.block;\n            if ((hf.forkHash === null || hf.forkHash === undefined) &&\n                ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')) {\n                hf.forkHash = this.forkHash(hf.name, genesisHash);\n            }\n        }\n    }\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    genesis() {\n        return this._chainParams.genesis;\n    }\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    hardforks() {\n        const hfs = this._chainParams.hardforks;\n        if (this._chainParams.customHardforks !== undefined) {\n            this._chainParams.customHardforks;\n        }\n        return hfs;\n    }\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    bootstrapNodes() {\n        return this._chainParams.bootstrapNodes;\n    }\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    dnsNetworks() {\n        return this._chainParams.dnsNetworks;\n    }\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    hardfork() {\n        return this._hardfork;\n    }\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    chainId() {\n        return BigInt(this._chainParams.chainId);\n    }\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    chainName() {\n        return this._chainParams.name;\n    }\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    networkId() {\n        return BigInt(this._chainParams.networkId);\n    }\n    /**\n     * Returns the additionally activated EIPs\n     * (by using the `eips` constructor option)\n     * @returns List of EIPs\n     */\n    eips() {\n        return this._eips;\n    }\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusType() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                value = hfChanges[1]['consensus']['type'];\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        return value ?? this._chainParams['consensus']['type'];\n    }\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusAlgorithm() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                value = hfChanges[1]['consensus']['algorithm'];\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        return value ?? this._chainParams['consensus']['algorithm'];\n    }\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: empty object\n     * clique: period, epoch\n     * casper: empty object\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusConfig() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // The config parameter is named after the respective consensus algorithm\n                const config = hfChanges[1];\n                const algorithm = config['consensus']['algorithm'];\n                value = config['consensus'][algorithm];\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        return (value ?? this._chainParams['consensus'][this.consensusAlgorithm()] ?? {});\n    }\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    copy() {\n        const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.events = new EventEmitter();\n        return copy;\n    }\n    static getInitializedChains(customChains) {\n        const names = {};\n        for (const [name, id] of Object.entries(Chain)) {\n            names[id] = name.toLowerCase();\n        }\n        const chains = { ...CHAIN_SPECS };\n        if (customChains) {\n            for (const chain of customChains) {\n                const { name } = chain;\n                names[chain.chainId.toString()] = name;\n                chains[name] = chain;\n            }\n        }\n        chains.names = names;\n        return chains;\n    }\n}\n//# sourceMappingURL=common.js.map","import { bytesToBigInt, toBytes } from '@ethereumjs/util';\n/**\n * Can be used in conjunction with {@link Transaction[TransactionType].supports}\n * to query on tx capabilities\n */\nexport var Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechanism\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability || (Capability = {}));\nexport function isAccessListBytes(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    const firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexport function isAccessList(input) {\n    return !isAccessListBytes(input); // This is exactly the same method, except the output is negated.\n}\n/**\n * Encompassing type for all transaction types.\n */\nexport var TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"AccessListEIP2930\"] = 1] = \"AccessListEIP2930\";\n    TransactionType[TransactionType[\"FeeMarketEIP1559\"] = 2] = \"FeeMarketEIP1559\";\n    TransactionType[TransactionType[\"BlobEIP4844\"] = 3] = \"BlobEIP4844\";\n})(TransactionType || (TransactionType = {}));\nexport function isLegacyTx(tx) {\n    return tx.type === TransactionType.Legacy;\n}\nexport function isAccessListEIP2930Tx(tx) {\n    return tx.type === TransactionType.AccessListEIP2930;\n}\nexport function isFeeMarketEIP1559Tx(tx) {\n    return tx.type === TransactionType.FeeMarketEIP1559;\n}\nexport function isBlobEIP4844Tx(tx) {\n    return tx.type === TransactionType.BlobEIP4844;\n}\nexport function isLegacyTxData(txData) {\n    const txType = Number(bytesToBigInt(toBytes(txData.type)));\n    return txType === TransactionType.Legacy;\n}\nexport function isAccessListEIP2930TxData(txData) {\n    const txType = Number(bytesToBigInt(toBytes(txData.type)));\n    return txType === TransactionType.AccessListEIP2930;\n}\nexport function isFeeMarketEIP1559TxData(txData) {\n    const txType = Number(bytesToBigInt(toBytes(txData.type)));\n    return txType === TransactionType.FeeMarketEIP1559;\n}\nexport function isBlobEIP4844TxData(txData) {\n    const txType = Number(bytesToBigInt(toBytes(txData.type)));\n    return txType === TransactionType.BlobEIP4844;\n}\n//# sourceMappingURL=types.js.map","import { bytesToHex, hexToBytes, setLengthLeft } from '@ethereumjs/util';\nimport { isAccessList } from './types.js';\nexport function checkMaxInitCodeSize(common, length) {\n    const maxInitCodeSize = common.param('vm', 'maxInitCodeSize');\n    if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n        throw new Error(`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param('vm', 'maxInitCodeSize')}`);\n    }\n}\nexport class AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        if (isAccessList(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBytes = hexToBytes(item.address);\n                const storageItems = [];\n                for (let index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push(hexToBytes(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBytes, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ?? [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = bytesToHex(data[0]);\n                const storageKeys = [];\n                for (let item = 0; item < data[1].length; item++) {\n                    storageKeys.push(bytesToHex(data[1][item]));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    }\n    static verifyAccessList(accessList) {\n        for (let key = 0; key < accessList.length; key++) {\n            const accessListItem = accessList[key];\n            const address = accessListItem[0];\n            const storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length !== 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length !== 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    }\n    static getAccessListJSON(accessList) {\n        const accessListJSON = [];\n        for (let index = 0; index < accessList.length; index++) {\n            const item = accessList[index];\n            const JSONItem = {\n                address: bytesToHex(setLengthLeft(item[0], 20)),\n                storageKeys: [],\n            };\n            const storageSlots = item[1];\n            for (let slot = 0; slot < storageSlots.length; slot++) {\n                const storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push(bytesToHex(setLengthLeft(storageSlot, 32)));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    }\n    static getDataFeeEIP2930(accessList, common) {\n        const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        let slots = 0;\n        for (let index = 0; index < accessList.length; index++) {\n            const item = accessList[index];\n            const storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        const addresses = accessList.length;\n        return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n    }\n}\nexport function txTypeBytes(txType) {\n    return hexToBytes('0x' + txType.toString(16).padStart(2, '0'));\n}\n//# sourceMappingURL=util.js.map","import { Chain, Common } from '@ethereumjs/common';\nimport { Address, BIGINT_0, MAX_INTEGER, MAX_UINT64, bigIntToHex, bytesToBigInt, bytesToHex, ecsign, publicToAddress, toBytes, unpadBytes, } from '@ethereumjs/util';\nimport { Capability, TransactionType } from './types.js';\nimport { checkMaxInitCodeSize } from './util.js';\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport class BaseTransaction {\n    constructor(txData, opts) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n            senderPubKey: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = Chain.Mainnet;\n        const { nonce, gasLimit, to, value, data, v, r, s, type } = txData;\n        this._type = Number(bytesToBigInt(toBytes(type)));\n        this.txOptions = opts;\n        const toB = toBytes(to === '' ? '0x' : to);\n        const vB = toBytes(v === '' ? '0x' : v);\n        const rB = toBytes(r === '' ? '0x' : r);\n        const sB = toBytes(s === '' ? '0x' : s);\n        this.nonce = bytesToBigInt(toBytes(nonce === '' ? '0x' : nonce));\n        this.gasLimit = bytesToBigInt(toBytes(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new Address(toB) : undefined;\n        this.value = bytesToBigInt(toBytes(value === '' ? '0x' : value));\n        this.data = toBytes(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? bytesToBigInt(vB) : undefined;\n        this.r = rB.length > 0 ? bytesToBigInt(rB) : undefined;\n        this.s = sB.length > 0 ? bytesToBigInt(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n        const createContract = this.to === undefined || this.to === null;\n        const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false;\n        const common = opts.common ?? this._getCommon();\n        if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n            checkMaxInitCodeSize(common, this.data.length);\n        }\n    }\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilities` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    supports(capability) {\n        return this.activeCapabilities.includes(capability);\n    }\n    /**\n     * Validates the transaction signature and minimum gas requirements.\n     * @returns {string[]} an array of error strings\n     */\n    getValidationErrors() {\n        const errors = [];\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        if (this.getBaseFee() > this.gasLimit) {\n            errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`);\n        }\n        return errors;\n    }\n    /**\n     * Validates the transaction signature and minimum gas requirements.\n     * @returns {boolean} true if the transaction is valid, false otherwise\n     */\n    isValid() {\n        const errors = this.getValidationErrors();\n        return errors.length === 0;\n    }\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    getBaseFee() {\n        const txFee = this.common.param('gasPrices', 'tx');\n        let fee = this.getDataFee();\n        if (txFee)\n            fee += txFee;\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            const txCreationFee = this.common.param('gasPrices', 'txCreation');\n            if (txCreationFee)\n                fee += txCreationFee;\n        }\n        return fee;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        const txDataZero = this.common.param('gasPrices', 'txDataZero');\n        const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        let cost = BIGINT_0;\n        for (let i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            const dataLength = BigInt(Math.ceil(this.data.length / 32));\n            const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength;\n            cost += initCodeCost;\n        }\n        return cost;\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    toCreationAddress() {\n        return this.to === undefined || this.to.bytes.length === 0;\n    }\n    isSigned() {\n        const { v, r, s } = this;\n        if (v === undefined || r === undefined || s === undefined) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Determines if the signature is valid\n     */\n    verifySignature() {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            const publicKey = this.getSenderPublicKey();\n            return unpadBytes(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Returns the sender's address\n     */\n    getSenderAddress() {\n        return new Address(publicToAddress(this.getSenderPublicKey()));\n    }\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    sign(privateKey) {\n        if (privateKey.length !== 32) {\n            const msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        let hackApplied = false;\n        if (this.type === TransactionType.Legacy &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        const msgHash = this.getHashedMessageToSign();\n        const ecSignFunction = this.common.customCrypto?.ecsign ?? ecsign;\n        const { v, r, s } = ecSignFunction(msgHash, privateKey);\n        const tx = this.addSignature(v, r, s, true);\n        // Hack part 2\n        if (hackApplied) {\n            const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        return {\n            type: bigIntToHex(BigInt(this.type)),\n            nonce: bigIntToHex(this.nonce),\n            gasLimit: bigIntToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: bigIntToHex(this.value),\n            data: bytesToHex(this.data),\n            v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n            r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n            s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n        };\n    }\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    _getCommon(common, chainId) {\n        // Chain ID provided\n        if (chainId !== undefined) {\n            const chainIdBigInt = bytesToBigInt(toBytes(chainId));\n            if (common) {\n                if (common.chainId() !== chainIdBigInt) {\n                    const msg = this._errorMsg(`The chain ID does not match the chain ID of Common. Got: ${chainIdBigInt}, expected: ${common.chainId}`);\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (Common.isSupportedChainId(chainIdBigInt)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new Common({ chain: chainIdBigInt });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return Common.custom({\n                        name: 'custom-chain',\n                        networkId: chainIdBigInt,\n                        chainId: chainIdBigInt,\n                    }, { baseChain: this.DEFAULT_CHAIN });\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN });\n        }\n    }\n    /**\n     * Validates that an object with BigInt values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BigInt values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    _validateCannotExceedMaxInteger(values, bits = 256, cannotEqual = false) {\n        for (const [key, value] of Object.entries(values)) {\n            switch (bits) {\n                case 64:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= MAX_UINT64) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    else {\n                        if (value !== undefined && value > MAX_UINT64) {\n                            const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    break;\n                case 256:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= MAX_INTEGER) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    else {\n                        if (value !== undefined && value > MAX_INTEGER) {\n                            const msg = this._errorMsg(`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    break;\n                default: {\n                    const msg = this._errorMsg('unimplemented bits value');\n                    throw new Error(msg);\n                }\n            }\n        }\n    }\n    static _validateNotArray(values) {\n        const txDataKeys = [\n            'nonce',\n            'gasPrice',\n            'gasLimit',\n            'to',\n            'value',\n            'data',\n            'v',\n            'r',\n            's',\n            'type',\n            'baseFee',\n            'maxFeePerGas',\n            'chainId',\n        ];\n        for (const [key, value] of Object.entries(values)) {\n            if (txDataKeys.includes(key)) {\n                if (Array.isArray(value)) {\n                    throw new Error(`${key} cannot be an array`);\n                }\n            }\n        }\n    }\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    _getSharedErrorPostfix() {\n        let hash = '';\n        try {\n            hash = this.isSigned() ? bytesToHex(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;\n        postfix += `signed=${isSigned} hf=${hf}`;\n        return postfix;\n    }\n}\n//# sourceMappingURL=baseTransaction.js.map","export function getUpfrontCost(tx, baseFee) {\n    const prio = tx.maxPriorityFeePerGas;\n    const maxBase = tx.maxFeePerGas - baseFee;\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n    const gasPrice = inclusionFeePerGas + baseFee;\n    return tx.gasLimit * gasPrice + tx.value;\n}\nexport function getEffectivePriorityFee(tx, baseFee) {\n    if (baseFee === undefined || baseFee > tx.maxFeePerGas) {\n        throw new Error('Tx cannot pay baseFee');\n    }\n    // The remaining fee for the coinbase, which can take up to this value, capped at `maxPriorityFeePerGas`\n    const remainingFee = tx.maxFeePerGas - baseFee;\n    return tx.maxPriorityFeePerGas < remainingFee ? tx.maxPriorityFeePerGas : remainingFee;\n}\n//# sourceMappingURL=eip1559.js.map","import { SECP256K1_ORDER_DIV_2, bigIntToUnpaddedBytes, ecrecover } from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { BaseTransaction } from '../baseTransaction.js';\nimport { Capability } from '../types.js';\nexport function errorMsg(tx, msg) {\n    return `${msg} (${tx.errorStr()})`;\n}\nexport function isSigned(tx) {\n    const { v, r, s } = tx;\n    if (v === undefined || r === undefined || s === undefined) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n/**\n * The amount of gas paid for the data in this tx\n */\nexport function getDataFee(tx, extraCost) {\n    if (tx.cache.dataFee && tx.cache.dataFee.hardfork === tx.common.hardfork()) {\n        return tx.cache.dataFee.value;\n    }\n    const cost = BaseTransaction.prototype.getDataFee.bind(tx)() + (extraCost ?? 0n);\n    if (Object.isFrozen(tx)) {\n        tx.cache.dataFee = {\n            value: cost,\n            hardfork: tx.common.hardfork(),\n        };\n    }\n    return cost;\n}\nexport function hash(tx) {\n    if (!tx.isSigned()) {\n        const msg = errorMsg(tx, 'Cannot call hash method if transaction is not signed');\n        throw new Error(msg);\n    }\n    const keccakFunction = tx.common.customCrypto.keccak256 ?? keccak256;\n    if (Object.isFrozen(tx)) {\n        if (!tx.cache.hash) {\n            tx.cache.hash = keccakFunction(tx.serialize());\n        }\n        return tx.cache.hash;\n    }\n    return keccakFunction(tx.serialize());\n}\n/**\n * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n * Reasoning: https://ethereum.stackexchange.com/a/55728\n */\nexport function validateHighS(tx) {\n    const { s } = tx;\n    if (tx.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n        const msg = errorMsg(tx, 'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n        throw new Error(msg);\n    }\n}\nexport function getSenderPublicKey(tx) {\n    if (tx.cache.senderPubKey !== undefined) {\n        return tx.cache.senderPubKey;\n    }\n    const msgHash = tx.getMessageToVerifySignature();\n    const { v, r, s } = tx;\n    validateHighS(tx);\n    try {\n        const ecrecoverFunction = tx.common.customCrypto.ecrecover ?? ecrecover;\n        const sender = ecrecoverFunction(msgHash, v, bigIntToUnpaddedBytes(r), bigIntToUnpaddedBytes(s), tx.supports(Capability.EIP155ReplayProtection) ? tx.common.chainId() : undefined);\n        if (Object.isFrozen(tx)) {\n            tx.cache.senderPubKey = sender;\n        }\n        return sender;\n    }\n    catch (e) {\n        const msg = errorMsg(tx, 'Invalid Signature');\n        throw new Error(msg);\n    }\n}\nexport function getEffectivePriorityFee(gasPrice, baseFee) {\n    if (baseFee !== undefined && baseFee > gasPrice) {\n        throw new Error('Tx cannot pay baseFee');\n    }\n    if (baseFee === undefined) {\n        return gasPrice;\n    }\n    return gasPrice - baseFee;\n}\n//# sourceMappingURL=legacy.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { BIGINT_0, BIGINT_1, concatBytes } from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { txTypeBytes } from '../util.js';\nimport { errorMsg } from './legacy.js';\nexport function getHashedMessageToSign(tx) {\n    const keccakFunction = tx.common.customCrypto.keccak256 ?? keccak256;\n    return keccakFunction(tx.getMessageToSign());\n}\nexport function serialize(tx, base) {\n    return concatBytes(txTypeBytes(tx.type), RLP.encode(base ?? tx.raw()));\n}\nexport function validateYParity(tx) {\n    const { v } = tx;\n    if (v !== undefined && v !== BIGINT_0 && v !== BIGINT_1) {\n        const msg = errorMsg(tx, 'The y-parity of the transaction should either be 0 or 1');\n        throw new Error(msg);\n    }\n}\n//# sourceMappingURL=eip2718.js.map","import { AccessLists } from '../util.js';\nimport * as Legacy from './legacy.js';\n/**\n * The amount of gas paid for the data in this tx\n */\nexport function getDataFee(tx) {\n    return Legacy.getDataFee(tx, BigInt(AccessLists.getDataFeeEIP2930(tx.accessList, tx.common)));\n}\n//# sourceMappingURL=eip2930.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { BIGINT_0, BIGINT_27, MAX_INTEGER, bigIntToHex, bigIntToUnpaddedBytes, bytesToBigInt, bytesToHex, equalsBytes, toBytes, validateNoLeadingZeroes, } from '@ethereumjs/util';\nimport { BaseTransaction } from './baseTransaction.js';\nimport * as EIP1559 from './capabilities/eip1559.js';\nimport * as EIP2718 from './capabilities/eip2718.js';\nimport * as EIP2930 from './capabilities/eip2930.js';\nimport * as Legacy from './capabilities/legacy.js';\nimport { TransactionType } from './types.js';\nimport { AccessLists, txTypeBytes } from './util.js';\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        super({ ...txData, type: TransactionType.FeeMarketEIP1559 }, opts);\n        const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        if (this.common.isActivatedEIP(1559) === false) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        const accessListData = AccessLists.getAccessListData(accessList ?? []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        AccessLists.verifyAccessList(this.accessList);\n        this.maxFeePerGas = bytesToBigInt(toBytes(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        this.maxPriorityFeePerGas = bytesToBigInt(toBytes(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        this._validateCannotExceedMaxInteger({\n            maxFeePerGas: this.maxFeePerGas,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        });\n        BaseTransaction._validateNotArray(txData);\n        if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n            const msg = this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        EIP2718.validateYParity(this);\n        Legacy.validateHighS(this);\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.FeeMarketEIP1559)) ===\n            false) {\n            throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TransactionType.FeeMarketEIP1559}, received: ${bytesToHex(serialized.subarray(0, 1))}`);\n        }\n        const values = RLP.decode(serialized.subarray(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data, accessList, v, r, s,] = values;\n        this._validateNotArray({ chainId, v });\n        validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: bytesToBigInt(chainId),\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList ?? [],\n            v: v !== undefined ? bytesToBigInt(v) : undefined,\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        return EIP2930.getDataFee(this);\n    }\n    /**\n     * Returns the minimum of calculated priority fee (from maxFeePerGas and baseFee) and maxPriorityFeePerGas\n     * @param baseFee Base fee retrieved from block\n     */\n    getEffectivePriorityFee(baseFee) {\n        return EIP1559.getEffectivePriorityFee(this, baseFee);\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    getUpfrontCost(baseFee = BIGINT_0) {\n        return EIP1559.getUpfrontCost(this, baseFee);\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Bytes of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Bytes values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedBytes(this.chainId),\n            bigIntToUnpaddedBytes(this.nonce),\n            bigIntToUnpaddedBytes(this.maxPriorityFeePerGas),\n            bigIntToUnpaddedBytes(this.maxFeePerGas),\n            bigIntToUnpaddedBytes(this.gasLimit),\n            this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n            bigIntToUnpaddedBytes(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n            this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n            this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        return EIP2718.serialize(this);\n    }\n    /**\n     * Returns the raw serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n     * ```\n     */\n    getMessageToSign() {\n        return EIP2718.serialize(this, this.raw().slice(0, 9));\n    }\n    /**\n     * Returns the hashed serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     */\n    getHashedMessageToSign() {\n        return EIP2718.getHashedMessageToSign(this);\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        return Legacy.hash(this);\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        return this.getHashedMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        return Legacy.getSenderPublicKey(this);\n    }\n    addSignature(v, r, s, convertV = false) {\n        r = toBytes(r);\n        s = toBytes(s);\n        const opts = { ...this.txOptions, common: this.common };\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: convertV ? v - BIGINT_27 : v,\n            r: bytesToBigInt(r),\n            s: bytesToBigInt(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        const accessListJSON = AccessLists.getAccessListJSON(this.accessList);\n        const baseJson = super.toJSON();\n        return {\n            ...baseJson,\n            chainId: bigIntToHex(this.chainId),\n            maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n            maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n            accessList: accessListJSON,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return Legacy.errorMsg(this, msg);\n    }\n}\n//# sourceMappingURL=eip1559Transaction.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { BIGINT_27, MAX_INTEGER, bigIntToHex, bigIntToUnpaddedBytes, bytesToBigInt, bytesToHex, equalsBytes, toBytes, validateNoLeadingZeroes, } from '@ethereumjs/util';\nimport { BaseTransaction } from './baseTransaction.js';\nimport * as EIP2718 from './capabilities/eip2718.js';\nimport * as EIP2930 from './capabilities/eip2930.js';\nimport * as Legacy from './capabilities/legacy.js';\nimport { TransactionType } from './types.js';\nimport { AccessLists, txTypeBytes } from './util.js';\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        super({ ...txData, type: TransactionType.AccessListEIP2930 }, opts);\n        const { chainId, accessList, gasPrice } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        // EIP-2718 check is done in Common\n        if (!this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        const accessListData = AccessLists.getAccessListData(accessList ?? []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        AccessLists.verifyAccessList(this.accessList);\n        this.gasPrice = bytesToBigInt(toBytes(gasPrice === '' ? '0x' : gasPrice));\n        this._validateCannotExceedMaxInteger({\n            gasPrice: this.gasPrice,\n        });\n        BaseTransaction._validateNotArray(txData);\n        if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        EIP2718.validateYParity(this);\n        Legacy.validateHighS(this);\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new AccessListEIP2930Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.AccessListEIP2930)) ===\n            false) {\n            throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TransactionType.AccessListEIP2930}, received: ${bytesToHex(serialized.subarray(0, 1))}`);\n        }\n        const values = RLP.decode(Uint8Array.from(serialized.subarray(1)));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;\n        this._validateNotArray({ chainId, v });\n        validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n        const emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: bytesToBigInt(chainId),\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList ?? emptyAccessList,\n            v: v !== undefined ? bytesToBigInt(v) : undefined,\n            r,\n            s,\n        }, opts);\n    }\n    getEffectivePriorityFee(baseFee) {\n        return Legacy.getEffectivePriorityFee(this.gasPrice, baseFee);\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        return EIP2930.getDataFee(this);\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Bytess of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Bytes values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedBytes(this.chainId),\n            bigIntToUnpaddedBytes(this.nonce),\n            bigIntToUnpaddedBytes(this.gasPrice),\n            bigIntToUnpaddedBytes(this.gasLimit),\n            this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n            bigIntToUnpaddedBytes(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n            this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n            this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        return EIP2718.serialize(this);\n    }\n    /**\n     * Returns the raw serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n     * ```\n     */\n    getMessageToSign() {\n        return EIP2718.serialize(this, this.raw().slice(0, 8));\n    }\n    /**\n     * Returns the hashed serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     */\n    getHashedMessageToSign() {\n        return EIP2718.getHashedMessageToSign(this);\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        return Legacy.hash(this);\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        return this.getHashedMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        return Legacy.getSenderPublicKey(this);\n    }\n    addSignature(v, r, s, convertV = false) {\n        r = toBytes(r);\n        s = toBytes(s);\n        const opts = { ...this.txOptions, common: this.common };\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: convertV ? v - BIGINT_27 : v,\n            r: bytesToBigInt(r),\n            s: bytesToBigInt(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        const accessListJSON = AccessLists.getAccessListJSON(this.accessList);\n        const baseJson = super.toJSON();\n        return {\n            ...baseJson,\n            chainId: bigIntToHex(this.chainId),\n            gasPrice: bigIntToHex(this.gasPrice),\n            accessList: accessListJSON,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return Legacy.errorMsg(this, msg);\n    }\n}\n//# sourceMappingURL=eip2930Transaction.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { BIGINT_0, BIGINT_27, MAX_INTEGER, bigIntToHex, bigIntToUnpaddedBytes, blobsToCommitments, blobsToProofs, bytesToBigInt, bytesToHex, commitmentsToVersionedHashes, computeVersionedHash, equalsBytes, getBlobs, toBytes, validateNoLeadingZeroes, } from '@ethereumjs/util';\nimport { BaseTransaction } from './baseTransaction.js';\nimport * as EIP1559 from './capabilities/eip1559.js';\nimport * as EIP2718 from './capabilities/eip2718.js';\nimport * as EIP2930 from './capabilities/eip2930.js';\nimport * as Legacy from './capabilities/legacy.js';\nimport { LIMIT_BLOBS_PER_TX } from './constants.js';\nimport { TransactionType } from './types.js';\nimport { AccessLists, txTypeBytes } from './util.js';\nconst validateBlobTransactionNetworkWrapper = (blobVersionedHashes, blobs, commitments, kzgProofs, version, kzg) => {\n    if (!(blobVersionedHashes.length === blobs.length && blobs.length === commitments.length)) {\n        throw new Error('Number of blobVersionedHashes, blobs, and commitments not all equal');\n    }\n    if (blobVersionedHashes.length === 0) {\n        throw new Error('Invalid transaction with empty blobs');\n    }\n    let isValid;\n    try {\n        isValid = kzg.verifyBlobKzgProofBatch(blobs, commitments, kzgProofs);\n    }\n    catch (error) {\n        throw new Error(`KZG verification of blobs fail with error=${error}`);\n    }\n    if (!isValid) {\n        throw new Error('KZG proof cannot be verified from blobs/commitments');\n    }\n    for (let x = 0; x < blobVersionedHashes.length; x++) {\n        const computedVersionedHash = computeVersionedHash(commitments[x], version);\n        if (!equalsBytes(computedVersionedHash, blobVersionedHashes[x])) {\n            throw new Error(`commitment for blob at index ${x} does not match versionedHash`);\n        }\n    }\n};\n/**\n * Typed transaction with a new gas fee market mechanism for transactions that include \"blobs\" of data\n *\n * - TransactionType: 3\n * - EIP: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n */\nexport class BlobEIP4844Transaction extends BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static constructors or factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        super({ ...txData, type: TransactionType.BlobEIP4844 }, opts);\n        const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas, maxFeePerBlobGas } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        if (this.common.isActivatedEIP(1559) === false) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        if (this.common.isActivatedEIP(4844) === false) {\n            throw new Error('EIP-4844 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        const accessListData = AccessLists.getAccessListData(accessList ?? []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        AccessLists.verifyAccessList(this.accessList);\n        this.maxFeePerGas = bytesToBigInt(toBytes(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        this.maxPriorityFeePerGas = bytesToBigInt(toBytes(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        this._validateCannotExceedMaxInteger({\n            maxFeePerGas: this.maxFeePerGas,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        });\n        BaseTransaction._validateNotArray(txData);\n        if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n            const msg = this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        this.maxFeePerBlobGas = bytesToBigInt(toBytes((maxFeePerBlobGas ?? '') === '' ? '0x' : maxFeePerBlobGas));\n        this.blobVersionedHashes = (txData.blobVersionedHashes ?? []).map((vh) => toBytes(vh));\n        EIP2718.validateYParity(this);\n        Legacy.validateHighS(this);\n        for (const hash of this.blobVersionedHashes) {\n            if (hash.length !== 32) {\n                const msg = this._errorMsg('versioned hash is invalid length');\n                throw new Error(msg);\n            }\n            if (BigInt(hash[0]) !== this.common.param('sharding', 'blobCommitmentVersionKzg')) {\n                const msg = this._errorMsg('versioned hash does not start with KZG commitment version');\n                throw new Error(msg);\n            }\n        }\n        if (this.blobVersionedHashes.length > LIMIT_BLOBS_PER_TX) {\n            const msg = this._errorMsg(`tx can contain at most ${LIMIT_BLOBS_PER_TX} blobs`);\n            throw new Error(msg);\n        }\n        else if (this.blobVersionedHashes.length === 0) {\n            const msg = this._errorMsg(`tx should contain at least one blob`);\n            throw new Error(msg);\n        }\n        if (this.to === undefined) {\n            const msg = this._errorMsg(`tx should have a \"to\" field and cannot be used to create contracts`);\n            throw new Error(msg);\n        }\n        this.blobs = txData.blobs?.map((blob) => toBytes(blob));\n        this.kzgCommitments = txData.kzgCommitments?.map((commitment) => toBytes(commitment));\n        this.kzgProofs = txData.kzgProofs?.map((proof) => toBytes(proof));\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    static fromTxData(txData, opts) {\n        if (opts?.common?.customCrypto?.kzg === undefined) {\n            throw new Error('A common object with customCrypto.kzg initialized required to instantiate a 4844 blob tx');\n        }\n        const kzg = opts.common.customCrypto.kzg;\n        if (txData.blobsData !== undefined) {\n            if (txData.blobs !== undefined) {\n                throw new Error('cannot have both raw blobs data and encoded blobs in constructor');\n            }\n            if (txData.kzgCommitments !== undefined) {\n                throw new Error('cannot have both raw blobs data and KZG commitments in constructor');\n            }\n            if (txData.blobVersionedHashes !== undefined) {\n                throw new Error('cannot have both raw blobs data and versioned hashes in constructor');\n            }\n            if (txData.kzgProofs !== undefined) {\n                throw new Error('cannot have both raw blobs data and KZG proofs in constructor');\n            }\n            txData.blobs = getBlobs(txData.blobsData.reduce((acc, cur) => acc + cur));\n            txData.kzgCommitments = blobsToCommitments(kzg, txData.blobs);\n            txData.blobVersionedHashes = commitmentsToVersionedHashes(txData.kzgCommitments);\n            txData.kzgProofs = blobsToProofs(kzg, txData.blobs, txData.kzgCommitments);\n        }\n        return new BlobEIP4844Transaction(txData, opts);\n    }\n    /**\n     * Returns the minimum of calculated priority fee (from maxFeePerGas and baseFee) and maxPriorityFeePerGas\n     * @param baseFee Base fee retrieved from block\n     */\n    getEffectivePriorityFee(baseFee) {\n        return EIP1559.getEffectivePriorityFee(this, baseFee);\n    }\n    /**\n     * Creates the minimal representation of a blob transaction from the network wrapper version.\n     * The minimal representation is used when adding transactions to an execution payload/block\n     * @param txData a {@link BlobEIP4844Transaction} containing optional blobs/kzg commitments\n     * @param opts - dictionary of {@link TxOptions}\n     * @returns the \"minimal\" representation of a BlobEIP4844Transaction (i.e. transaction object minus blobs and kzg commitments)\n     */\n    static minimalFromNetworkWrapper(txData, opts) {\n        if (opts?.common?.customCrypto?.kzg === undefined) {\n            throw new Error('A common object with customCrypto.kzg initialized required to instantiate a 4844 blob tx');\n        }\n        const tx = BlobEIP4844Transaction.fromTxData({\n            ...txData,\n            ...{ blobs: undefined, kzgCommitments: undefined, kzgProofs: undefined },\n        }, opts);\n        return tx;\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x03 || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, to, value, data,\n     * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (opts.common?.customCrypto?.kzg === undefined) {\n            throw new Error('A common object with customCrypto.kzg initialized required to instantiate a 4844 blob tx');\n        }\n        if (equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.BlobEIP4844)) === false) {\n            throw new Error(`Invalid serialized tx input: not an EIP-4844 transaction (wrong tx type, expected: ${TransactionType.BlobEIP4844}, received: ${bytesToHex(serialized.subarray(0, 1))}`);\n        }\n        const values = RLP.decode(serialized.subarray(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return BlobEIP4844Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (opts.common?.customCrypto?.kzg === undefined) {\n            throw new Error('A common object with customCrypto.kzg initialized required to instantiate a 4844 blob tx');\n        }\n        if (values.length !== 11 && values.length !== 14) {\n            throw new Error('Invalid EIP-4844 transaction. Only expecting 11 values (for unsigned tx) or 14 values (for signed tx).');\n        }\n        const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data, accessList, maxFeePerBlobGas, blobVersionedHashes, v, r, s,] = values;\n        this._validateNotArray({ chainId, v });\n        validateNoLeadingZeroes({\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            value,\n            maxFeePerBlobGas,\n            v,\n            r,\n            s,\n        });\n        return new BlobEIP4844Transaction({\n            chainId: bytesToBigInt(chainId),\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList ?? [],\n            maxFeePerBlobGas,\n            blobVersionedHashes,\n            v: v !== undefined ? bytesToBigInt(v) : undefined,\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * Creates a transaction from the network encoding of a blob transaction (with blobs/commitments/proof)\n     * @param serialized a buffer representing a serialized BlobTransactionNetworkWrapper\n     * @param opts any TxOptions defined\n     * @returns a BlobEIP4844Transaction\n     */\n    static fromSerializedBlobTxNetworkWrapper(serialized, opts) {\n        if (!opts || !opts.common) {\n            throw new Error('common instance required to validate versioned hashes');\n        }\n        if (opts.common?.customCrypto?.kzg === undefined) {\n            throw new Error('A common object with customCrypto.kzg initialized required to instantiate a 4844 blob tx');\n        }\n        if (equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.BlobEIP4844)) === false) {\n            throw new Error(`Invalid serialized tx input: not an EIP-4844 transaction (wrong tx type, expected: ${TransactionType.BlobEIP4844}, received: ${bytesToHex(serialized.subarray(0, 1))}`);\n        }\n        // Validate network wrapper\n        const networkTxValues = RLP.decode(serialized.subarray(1));\n        if (networkTxValues.length !== 4) {\n            throw Error(`Expected 4 values in the deserialized network transaction`);\n        }\n        const [txValues, blobs, kzgCommitments, kzgProofs] = networkTxValues;\n        // Construct the tx but don't freeze yet, we will assign blobs etc once validated\n        const decodedTx = BlobEIP4844Transaction.fromValuesArray(txValues, { ...opts, freeze: false });\n        if (decodedTx.to === undefined) {\n            throw Error('BlobEIP4844Transaction can not be send without a valid `to`');\n        }\n        const version = Number(opts.common.param('sharding', 'blobCommitmentVersionKzg'));\n        validateBlobTransactionNetworkWrapper(decodedTx.blobVersionedHashes, blobs, kzgCommitments, kzgProofs, version, opts.common.customCrypto.kzg);\n        // set the network blob data on the tx\n        decodedTx.blobs = blobs;\n        decodedTx.kzgCommitments = kzgCommitments;\n        decodedTx.kzgProofs = kzgProofs;\n        // freeze the tx\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(decodedTx);\n        }\n        return decodedTx;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        return EIP2930.getDataFee(this);\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    getUpfrontCost(baseFee = BIGINT_0) {\n        return EIP1559.getUpfrontCost(this, baseFee);\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Bytes of the EIP-4844 transaction, in order.\n     *\n     * Format: [chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, to, value, data,\n     * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s]`.\n     *\n     * Use {@link BlobEIP4844Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Bytes values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link BlobEIP4844Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedBytes(this.chainId),\n            bigIntToUnpaddedBytes(this.nonce),\n            bigIntToUnpaddedBytes(this.maxPriorityFeePerGas),\n            bigIntToUnpaddedBytes(this.maxFeePerGas),\n            bigIntToUnpaddedBytes(this.gasLimit),\n            this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n            bigIntToUnpaddedBytes(this.value),\n            this.data,\n            this.accessList,\n            bigIntToUnpaddedBytes(this.maxFeePerBlobGas),\n            this.blobVersionedHashes,\n            this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n            this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n            this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-4844 transaction.\n     *\n     * Format: `0x03 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s])`.\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        return EIP2718.serialize(this);\n    }\n    /**\n     * @returns the serialized form of a blob transaction in the network wrapper format (used for gossipping mempool transactions over devp2p)\n     */\n    serializeNetworkWrapper() {\n        if (this.blobs === undefined ||\n            this.kzgCommitments === undefined ||\n            this.kzgProofs === undefined) {\n            throw new Error('cannot serialize network wrapper without blobs, KZG commitments and KZG proofs provided');\n        }\n        return EIP2718.serialize(this, [this.raw(), this.blobs, this.kzgCommitments, this.kzgProofs]);\n    }\n    /**\n     * Returns the raw serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n     * ```\n     */\n    getMessageToSign() {\n        return EIP2718.serialize(this, this.raw().slice(0, 11));\n    }\n    /**\n     * Returns the hashed serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     */\n    getHashedMessageToSign() {\n        return EIP2718.getHashedMessageToSign(this);\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link BlobEIP4844Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        return Legacy.hash(this);\n    }\n    getMessageToVerifySignature() {\n        return this.getHashedMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        return Legacy.getSenderPublicKey(this);\n    }\n    toJSON() {\n        const accessListJSON = AccessLists.getAccessListJSON(this.accessList);\n        const baseJson = super.toJSON();\n        return {\n            ...baseJson,\n            chainId: bigIntToHex(this.chainId),\n            maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n            maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n            accessList: accessListJSON,\n            maxFeePerBlobGas: bigIntToHex(this.maxFeePerBlobGas),\n            blobVersionedHashes: this.blobVersionedHashes.map((hash) => bytesToHex(hash)),\n        };\n    }\n    addSignature(v, r, s, convertV = false) {\n        r = toBytes(r);\n        s = toBytes(s);\n        const opts = { ...this.txOptions, common: this.common };\n        return BlobEIP4844Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: convertV ? v - BIGINT_27 : v,\n            r: bytesToBigInt(r),\n            s: bytesToBigInt(s),\n            maxFeePerBlobGas: this.maxFeePerBlobGas,\n            blobVersionedHashes: this.blobVersionedHashes,\n            blobs: this.blobs,\n            kzgCommitments: this.kzgCommitments,\n            kzgProofs: this.kzgProofs,\n        }, opts);\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return Legacy.errorMsg(this, msg);\n    }\n    /**\n     * @returns the number of blobs included with this transaction\n     */\n    numBlobs() {\n        return this.blobVersionedHashes.length;\n    }\n}\n//# sourceMappingURL=eip4844Transaction.js.map","/** EIP4844 constants */\nexport const MAX_CALLDATA_SIZE = 16777216; // 2 ** 24\nexport const MAX_ACCESS_LIST_SIZE = 16777216; // 2 ** 24\nexport const MAX_VERSIONED_HASHES_LIST_SIZE = 16777216; // 2 ** 24\nexport const LIMIT_BLOBS_PER_TX = 6; // 786432 / 2^17 (`MAX_BLOB_GAS_PER_BLOCK` / `GAS_PER_BLOB`)\nexport const MAX_TX_WRAP_KZG_COMMITMENTS = 16777216; // 2 ** 24\nexport const FIELD_ELEMENTS_PER_BLOB = 4096; // This is also in the Common 4844 parameters but needed here since types can't access Common params\nexport const BYTES_PER_FIELD_ELEMENT = 32;\n//# sourceMappingURL=constants.js.map","import { RLP } from '@ethereumjs/rlp';\nimport { BIGINT_2, BIGINT_8, MAX_INTEGER, bigIntToHex, bigIntToUnpaddedBytes, bytesToBigInt, toBytes, unpadBytes, validateNoLeadingZeroes, } from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport * as Legacy from './capabilities/legacy.js';\nimport { Capability, TransactionType } from './types.js';\nfunction meetsEIP155(_v, chainId) {\n    const v = Number(_v);\n    const chainIdDoubled = Number(chainId) * 2;\n    return v === chainIdDoubled + 35 || v === chainIdDoubled + 36;\n}\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class LegacyTransaction extends BaseTransaction {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        super({ ...txData, type: TransactionType.Legacy }, opts);\n        this.common = this._validateTxV(this.v, opts.common);\n        this.keccakFunction = this.common.customCrypto.keccak256 ?? keccak256;\n        this.gasPrice = bytesToBigInt(toBytes(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n            const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice });\n        BaseTransaction._validateNotArray(txData);\n        if (this.common.gteHardfork('spuriousDragon')) {\n            if (!this.isSigned()) {\n                this.activeCapabilities.push(Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                // v and chain ID meet EIP-155 conditions\n                if (meetsEIP155(this.v, this.common.chainId())) {\n                    this.activeCapabilities.push(Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new LegacyTransaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        const values = RLP.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        // If length is not 6, it has length 9. If v/r/s are empty Uint8Arrays, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;\n        validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n        return new LegacyTransaction({\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            v,\n            r,\n            s,\n        }, opts);\n    }\n    getEffectivePriorityFee(baseFee) {\n        return Legacy.getEffectivePriorityFee(this.gasPrice, baseFee);\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Bytes of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Bytes values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            bigIntToUnpaddedBytes(this.nonce),\n            bigIntToUnpaddedBytes(this.gasPrice),\n            bigIntToUnpaddedBytes(this.gasLimit),\n            this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n            bigIntToUnpaddedBytes(this.value),\n            this.data,\n            this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n            this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n            this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n    /**\n     * Returns the raw unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: the raw message message format for the legacy tx is not RLP encoded\n     * and you might need to do yourself with:\n     *\n     * ```javascript\n     * import { RLP } from '@ethereumjs/rlp'\n     * const message = tx.getMessageToSign()\n     * const serializedMessage = RLP.encode(message)) // use this for the HW wallet input\n     * ```\n     */\n    getMessageToSign() {\n        const message = [\n            bigIntToUnpaddedBytes(this.nonce),\n            bigIntToUnpaddedBytes(this.gasPrice),\n            bigIntToUnpaddedBytes(this.gasLimit),\n            this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n            bigIntToUnpaddedBytes(this.value),\n            this.data,\n        ];\n        if (this.supports(Capability.EIP155ReplayProtection)) {\n            message.push(bigIntToUnpaddedBytes(this.common.chainId()));\n            message.push(unpadBytes(toBytes(0)));\n            message.push(unpadBytes(toBytes(0)));\n        }\n        return message;\n    }\n    /**\n     * Returns the hashed serialized unsigned tx, which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     */\n    getHashedMessageToSign() {\n        const message = this.getMessageToSign();\n        return this.keccakFunction(RLP.encode(message));\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        return Legacy.getDataFee(this);\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        return Legacy.hash(this);\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        return this.getHashedMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        return Legacy.getSenderPublicKey(this);\n    }\n    addSignature(v, r, s, convertV = false) {\n        r = toBytes(r);\n        s = toBytes(s);\n        if (convertV && this.supports(Capability.EIP155ReplayProtection)) {\n            v += this.common.chainId() * BIGINT_2 + BIGINT_8;\n        }\n        const opts = { ...this.txOptions, common: this.common };\n        return LegacyTransaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v,\n            r: bytesToBigInt(r),\n            s: bytesToBigInt(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    toJSON() {\n        const baseJson = super.toJSON();\n        return {\n            ...baseJson,\n            gasPrice: bigIntToHex(this.gasPrice),\n        };\n    }\n    /**\n     * Validates tx's `v` value\n     */\n    _validateTxV(_v, common) {\n        let chainIdBigInt;\n        const v = _v !== undefined ? Number(_v) : undefined;\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v < 37 && v !== 27 && v !== 28) {\n                throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`);\n            }\n        }\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            v !== 0 &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            v !== 27 &&\n            v !== 28) {\n            if (common) {\n                if (!meetsEIP155(BigInt(v), common.chainId())) {\n                    throw new Error(`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`);\n                }\n            }\n            else {\n                // Derive the original chain ID\n                let numSub;\n                if ((v - 35) % 2 === 0) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBigInt = BigInt(v - numSub) / BIGINT_2;\n            }\n        }\n        return this._getCommon(common, chainIdBigInt);\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` gasPrice=${this.gasPrice}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return Legacy.errorMsg(this, msg);\n    }\n}\n//# sourceMappingURL=legacyTransaction.js.map","import { fetchFromProvider, getProvider } from '@ethereumjs/util';\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js';\nimport { AccessListEIP2930Transaction } from './eip2930Transaction.js';\nimport { BlobEIP4844Transaction } from './eip4844Transaction.js';\nimport { normalizeTxParams } from './fromRpc.js';\nimport { LegacyTransaction } from './legacyTransaction.js';\nimport { TransactionType, isAccessListEIP2930TxData, isBlobEIP4844TxData, isFeeMarketEIP1559TxData, isLegacyTxData, } from './types.js';\nexport class TransactionFactory {\n    // It is not possible to instantiate a TransactionFactory object.\n    constructor() { }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    static fromTxData(txData, txOptions = {}) {\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return LegacyTransaction.fromTxData(txData, txOptions);\n        }\n        else {\n            if (isLegacyTxData(txData)) {\n                return LegacyTransaction.fromTxData(txData, txOptions);\n            }\n            else if (isAccessListEIP2930TxData(txData)) {\n                return AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (isFeeMarketEIP1559TxData(txData)) {\n                return FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else if (isBlobEIP4844TxData(txData)) {\n                return BlobEIP4844Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(`Tx instantiation with type ${txData?.type} not supported`);\n            }\n        }\n    }\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Uint8Array\n     * @param txOptions - The transaction options\n     */\n    static fromSerializedData(data, txOptions = {}) {\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            switch (data[0]) {\n                case TransactionType.AccessListEIP2930:\n                    return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n                case TransactionType.FeeMarketEIP1559:\n                    return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n                case TransactionType.BlobEIP4844:\n                    return BlobEIP4844Transaction.fromSerializedTx(data, txOptions);\n                default:\n                    throw new Error(`TypedTransaction with ID ${data[0]} unknown`);\n            }\n        }\n        else {\n            return LegacyTransaction.fromSerializedTx(data, txOptions);\n        }\n    }\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Uint8Array[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Uint8Array or Uint8Array[]\n     * @param txOptions - The transaction options\n     */\n    static fromBlockBodyData(data, txOptions = {}) {\n        if (data instanceof Uint8Array) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return LegacyTransaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    }\n    /**\n     *  Method to retrieve a transaction from the provider\n     * @param provider - a url string for a JSON-RPC provider or an Ethers JsonRPCProvider object\n     * @param txHash - Transaction hash\n     * @param txOptions - The transaction options\n     * @returns the transaction specified by `txHash`\n     */\n    static async fromJsonRpcProvider(provider, txHash, txOptions) {\n        const prov = getProvider(provider);\n        const txData = await fetchFromProvider(prov, {\n            method: 'eth_getTransactionByHash',\n            params: [txHash],\n        });\n        if (txData === null) {\n            throw new Error('No data returned from provider');\n        }\n        return TransactionFactory.fromRPC(txData, txOptions);\n    }\n    /**\n     * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n     * Note that this normalizes some of the parameters\n     * @param txData The RPC-encoded data\n     * @param txOptions The transaction options\n     * @returns\n     */\n    static async fromRPC(txData, txOptions = {}) {\n        return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions);\n    }\n}\n//# sourceMappingURL=transactionFactory.js.map","import { TypeOutput, setLengthLeft, toBytes, toType } from '@ethereumjs/util';\nexport const normalizeTxParams = (_txParams) => {\n    const txParams = Object.assign({}, _txParams);\n    txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt);\n    txParams.data = txParams.data === undefined ? txParams.input : txParams.data;\n    // check and convert gasPrice and value params\n    txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined;\n    txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined;\n    // strict byte length checking\n    txParams.to =\n        txParams.to !== null && txParams.to !== undefined\n            ? setLengthLeft(toBytes(txParams.to), 20)\n            : null;\n    // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n    // If this is not done, then the transaction creation will throw, because `v` is `0`.\n    // Note: this still means that `isSigned` will return `false`.\n    // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n    // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n    txParams.v = txParams.v === '0x0' ? '0x' : txParams.v;\n    txParams.r = txParams.r === '0x0' ? '0x' : txParams.r;\n    txParams.s = txParams.s === '0x0' ? '0x' : txParams.s;\n    if (txParams.v !== '0x' || txParams.r !== '0x' || txParams.s !== '0x') {\n        txParams.v = toType(txParams.v, TypeOutput.BigInt);\n    }\n    return txParams;\n};\n//# sourceMappingURL=fromRpc.js.map","// Fixed number of extra-data prefix bytes reserved for signer vanity\nexport const CLIQUE_EXTRA_VANITY = 32;\n// Fixed number of extra-data suffix bytes reserved for signer seal\nexport const CLIQUE_EXTRA_SEAL = 65;\n//# sourceMappingURL=clique.js.map","import { BlobEIP4844Transaction } from '@ethereumjs/tx';\nimport { BIGINT_0, BIGINT_1, TypeOutput, isHexString, toType } from '@ethereumjs/util';\n/**\n * Returns a 0x-prefixed hex number string from a hex string or string integer.\n * @param {string} input string to check, convert, and return\n */\nexport const numberToHex = function (input) {\n    if (input === undefined)\n        return undefined;\n    if (!isHexString(input)) {\n        const regex = new RegExp(/^\\d+$/); // test to make sure input contains only digits\n        if (!regex.test(input)) {\n            const msg = `Cannot convert string to hex string. numberToHex only supports 0x-prefixed hex or integer strings but the given string was: ${input}`;\n            throw new Error(msg);\n        }\n        return '0x' + parseInt(input, 10).toString(16);\n    }\n    return input;\n};\nexport function valuesArrayToHeaderData(values) {\n    const [parentHash, uncleHash, coinbase, stateRoot, transactionsTrie, receiptTrie, logsBloom, difficulty, number, gasLimit, gasUsed, timestamp, extraData, mixHash, nonce, baseFeePerGas, withdrawalsRoot, blobGasUsed, excessBlobGas, parentBeaconBlockRoot,] = values;\n    if (values.length > 20) {\n        throw new Error(`invalid header. More values than expected were received. Max: 20, got: ${values.length}`);\n    }\n    if (values.length < 15) {\n        throw new Error(`invalid header. Less values than expected were received. Min: 15, got: ${values.length}`);\n    }\n    return {\n        parentHash,\n        uncleHash,\n        coinbase,\n        stateRoot,\n        transactionsTrie,\n        receiptTrie,\n        logsBloom,\n        difficulty,\n        number,\n        gasLimit,\n        gasUsed,\n        timestamp,\n        extraData,\n        mixHash,\n        nonce,\n        baseFeePerGas,\n        withdrawalsRoot,\n        blobGasUsed,\n        excessBlobGas,\n        parentBeaconBlockRoot,\n    };\n}\nexport function getDifficulty(headerData) {\n    const { difficulty } = headerData;\n    if (difficulty !== undefined) {\n        return toType(difficulty, TypeOutput.BigInt);\n    }\n    return null;\n}\nexport const getNumBlobs = (transactions) => {\n    let numBlobs = 0;\n    for (const tx of transactions) {\n        if (tx instanceof BlobEIP4844Transaction) {\n            numBlobs += tx.blobVersionedHashes.length;\n        }\n    }\n    return numBlobs;\n};\n/**\n * Approximates `factor * e ** (numerator / denominator)` using Taylor expansion\n */\nexport const fakeExponential = (factor, numerator, denominator) => {\n    let i = BIGINT_1;\n    let output = BIGINT_0;\n    let numerator_accum = factor * denominator;\n    while (numerator_accum > BIGINT_0) {\n        output += numerator_accum;\n        numerator_accum = (numerator_accum * numerator) / (denominator * i);\n        i++;\n    }\n    return output / denominator;\n};\n//# sourceMappingURL=helpers.js.map","import { Chain, Common, ConsensusAlgorithm, ConsensusType, Hardfork } from '@ethereumjs/common';\nimport { RLP } from '@ethereumjs/rlp';\nimport { Address, BIGINT_0, BIGINT_1, BIGINT_2, BIGINT_27, BIGINT_7, KECCAK256_RLP, KECCAK256_RLP_ARRAY, TypeOutput, bigIntToBytes, bigIntToHex, bigIntToUnpaddedBytes, bytesToBigInt, bytesToHex, bytesToUtf8, concatBytes, ecrecover, ecsign, equalsBytes, hexToBytes, toType, zeros, } from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { CLIQUE_EXTRA_SEAL, CLIQUE_EXTRA_VANITY } from './clique.js';\nimport { fakeExponential, valuesArrayToHeaderData } from './helpers.js';\nconst DEFAULT_GAS_LIMIT = BigInt('0xffffffffffffff');\n/**\n * An object that represents the block header.\n */\nexport class BlockHeader {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * @deprecated Use the public static factory methods to assist in creating a Header object from\n     * varying data types. For a default empty header, use {@link BlockHeader.fromHeaderData}.\n     *\n     */\n    constructor(headerData, opts = {}) {\n        this.cache = {\n            hash: undefined,\n        };\n        if (opts.common) {\n            this.common = opts.common.copy();\n        }\n        else {\n            this.common = new Common({\n                chain: Chain.Mainnet, // default\n            });\n        }\n        this.keccakFunction = this.common.customCrypto.keccak256 ?? keccak256;\n        const skipValidateConsensusFormat = opts.skipConsensusFormatValidation ?? false;\n        const defaults = {\n            parentHash: zeros(32),\n            uncleHash: KECCAK256_RLP_ARRAY,\n            coinbase: Address.zero(),\n            stateRoot: zeros(32),\n            transactionsTrie: KECCAK256_RLP,\n            receiptTrie: KECCAK256_RLP,\n            logsBloom: zeros(256),\n            difficulty: BIGINT_0,\n            number: BIGINT_0,\n            gasLimit: DEFAULT_GAS_LIMIT,\n            gasUsed: BIGINT_0,\n            timestamp: BIGINT_0,\n            extraData: new Uint8Array(0),\n            mixHash: zeros(32),\n            nonce: zeros(8),\n        };\n        const parentHash = toType(headerData.parentHash, TypeOutput.Uint8Array) ?? defaults.parentHash;\n        const uncleHash = toType(headerData.uncleHash, TypeOutput.Uint8Array) ?? defaults.uncleHash;\n        const coinbase = new Address(toType(headerData.coinbase ?? defaults.coinbase, TypeOutput.Uint8Array));\n        const stateRoot = toType(headerData.stateRoot, TypeOutput.Uint8Array) ?? defaults.stateRoot;\n        const transactionsTrie = toType(headerData.transactionsTrie, TypeOutput.Uint8Array) ?? defaults.transactionsTrie;\n        const receiptTrie = toType(headerData.receiptTrie, TypeOutput.Uint8Array) ?? defaults.receiptTrie;\n        const logsBloom = toType(headerData.logsBloom, TypeOutput.Uint8Array) ?? defaults.logsBloom;\n        const difficulty = toType(headerData.difficulty, TypeOutput.BigInt) ?? defaults.difficulty;\n        const number = toType(headerData.number, TypeOutput.BigInt) ?? defaults.number;\n        const gasLimit = toType(headerData.gasLimit, TypeOutput.BigInt) ?? defaults.gasLimit;\n        const gasUsed = toType(headerData.gasUsed, TypeOutput.BigInt) ?? defaults.gasUsed;\n        const timestamp = toType(headerData.timestamp, TypeOutput.BigInt) ?? defaults.timestamp;\n        const extraData = toType(headerData.extraData, TypeOutput.Uint8Array) ?? defaults.extraData;\n        const mixHash = toType(headerData.mixHash, TypeOutput.Uint8Array) ?? defaults.mixHash;\n        const nonce = toType(headerData.nonce, TypeOutput.Uint8Array) ?? defaults.nonce;\n        const setHardfork = opts.setHardfork ?? false;\n        if (setHardfork === true) {\n            this.common.setHardforkBy({\n                blockNumber: number,\n                timestamp,\n            });\n        }\n        else if (typeof setHardfork !== 'boolean') {\n            this.common.setHardforkBy({\n                blockNumber: number,\n                td: setHardfork,\n                timestamp,\n            });\n        }\n        // Hardfork defaults which couldn't be paired with earlier defaults\n        const hardforkDefaults = {\n            baseFeePerGas: this.common.isActivatedEIP(1559)\n                ? number === this.common.hardforkBlock(Hardfork.London)\n                    ? this.common.param('gasConfig', 'initialBaseFee')\n                    : BIGINT_7\n                : undefined,\n            withdrawalsRoot: this.common.isActivatedEIP(4895) ? KECCAK256_RLP : undefined,\n            blobGasUsed: this.common.isActivatedEIP(4844) ? BIGINT_0 : undefined,\n            excessBlobGas: this.common.isActivatedEIP(4844) ? BIGINT_0 : undefined,\n            parentBeaconBlockRoot: this.common.isActivatedEIP(4788) ? zeros(32) : undefined,\n        };\n        const baseFeePerGas = toType(headerData.baseFeePerGas, TypeOutput.BigInt) ?? hardforkDefaults.baseFeePerGas;\n        const withdrawalsRoot = toType(headerData.withdrawalsRoot, TypeOutput.Uint8Array) ?? hardforkDefaults.withdrawalsRoot;\n        const blobGasUsed = toType(headerData.blobGasUsed, TypeOutput.BigInt) ?? hardforkDefaults.blobGasUsed;\n        const excessBlobGas = toType(headerData.excessBlobGas, TypeOutput.BigInt) ?? hardforkDefaults.excessBlobGas;\n        const parentBeaconBlockRoot = toType(headerData.parentBeaconBlockRoot, TypeOutput.Uint8Array) ??\n            hardforkDefaults.parentBeaconBlockRoot;\n        if (!this.common.isActivatedEIP(1559) && baseFeePerGas !== undefined) {\n            throw new Error('A base fee for a block can only be set with EIP1559 being activated');\n        }\n        if (!this.common.isActivatedEIP(4895) && withdrawalsRoot !== undefined) {\n            throw new Error('A withdrawalsRoot for a header can only be provided with EIP4895 being activated');\n        }\n        if (!this.common.isActivatedEIP(4844)) {\n            if (blobGasUsed !== undefined) {\n                throw new Error('blob gas used can only be provided with EIP4844 activated');\n            }\n            if (excessBlobGas !== undefined) {\n                throw new Error('excess blob gas can only be provided with EIP4844 activated');\n            }\n        }\n        if (!this.common.isActivatedEIP(4788) && parentBeaconBlockRoot !== undefined) {\n            throw new Error('A parentBeaconBlockRoot for a header can only be provided with EIP4788 being activated');\n        }\n        this.parentHash = parentHash;\n        this.uncleHash = uncleHash;\n        this.coinbase = coinbase;\n        this.stateRoot = stateRoot;\n        this.transactionsTrie = transactionsTrie;\n        this.receiptTrie = receiptTrie;\n        this.logsBloom = logsBloom;\n        this.difficulty = difficulty;\n        this.number = number;\n        this.gasLimit = gasLimit;\n        this.gasUsed = gasUsed;\n        this.timestamp = timestamp;\n        this.extraData = extraData;\n        this.mixHash = mixHash;\n        this.nonce = nonce;\n        this.baseFeePerGas = baseFeePerGas;\n        this.withdrawalsRoot = withdrawalsRoot;\n        this.blobGasUsed = blobGasUsed;\n        this.excessBlobGas = excessBlobGas;\n        this.parentBeaconBlockRoot = parentBeaconBlockRoot;\n        this._genericFormatValidation();\n        this._validateDAOExtraData();\n        // Now we have set all the values of this Header, we possibly have set a dummy\n        // `difficulty` value (defaults to 0). If we have a `calcDifficultyFromHeader`\n        // block option parameter, we instead set difficulty to this value.\n        if (opts.calcDifficultyFromHeader &&\n            this.common.consensusAlgorithm() === ConsensusAlgorithm.Ethash) {\n            this.difficulty = this.ethashCanonicalDifficulty(opts.calcDifficultyFromHeader);\n        }\n        // If cliqueSigner is provided, seal block with provided privateKey.\n        if (opts.cliqueSigner) {\n            // Ensure extraData is at least length CLIQUE_EXTRA_VANITY + CLIQUE_EXTRA_SEAL\n            const minExtraDataLength = CLIQUE_EXTRA_VANITY + CLIQUE_EXTRA_SEAL;\n            if (this.extraData.length < minExtraDataLength) {\n                const remainingLength = minExtraDataLength - this.extraData.length;\n                this.extraData = concatBytes(this.extraData, new Uint8Array(remainingLength));\n            }\n            this.extraData = this.cliqueSealBlock(opts.cliqueSigner);\n        }\n        // Validate consensus format after block is sealed (if applicable) so extraData checks will pass\n        if (skipValidateConsensusFormat === false)\n            this._consensusFormatValidation();\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * EIP-4399: After merge to PoS, `mixHash` supplanted as `prevRandao`\n     */\n    get prevRandao() {\n        if (this.common.isActivatedEIP(4399) === false) {\n            const msg = this._errorMsg('The prevRandao parameter can only be accessed when EIP-4399 is activated');\n            throw new Error(msg);\n        }\n        return this.mixHash;\n    }\n    /**\n     * Static constructor to create a block header from a header data dictionary\n     *\n     * @param headerData\n     * @param opts\n     */\n    static fromHeaderData(headerData = {}, opts = {}) {\n        return new BlockHeader(headerData, opts);\n    }\n    /**\n     * Static constructor to create a block header from a RLP-serialized header\n     *\n     * @param serializedHeaderData\n     * @param opts\n     */\n    static fromRLPSerializedHeader(serializedHeaderData, opts = {}) {\n        const values = RLP.decode(serializedHeaderData);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized header input. Must be array');\n        }\n        return BlockHeader.fromValuesArray(values, opts);\n    }\n    /**\n     * Static constructor to create a block header from an array of Bytes values\n     *\n     * @param values\n     * @param opts\n     */\n    static fromValuesArray(values, opts = {}) {\n        const headerData = valuesArrayToHeaderData(values);\n        const { number, baseFeePerGas, excessBlobGas, blobGasUsed, parentBeaconBlockRoot } = headerData;\n        const header = BlockHeader.fromHeaderData(headerData, opts);\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (header.common.isActivatedEIP(1559) && baseFeePerGas === undefined) {\n            const eip1559ActivationBlock = bigIntToBytes(header.common.eipBlock(1559));\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (eip1559ActivationBlock && equalsBytes(eip1559ActivationBlock, number)) {\n                throw new Error('invalid header. baseFeePerGas should be provided');\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (header.common.isActivatedEIP(4844)) {\n            if (excessBlobGas === undefined) {\n                throw new Error('invalid header. excessBlobGas should be provided');\n            }\n            else if (blobGasUsed === undefined) {\n                throw new Error('invalid header. blobGasUsed should be provided');\n            }\n        }\n        if (header.common.isActivatedEIP(4788) && parentBeaconBlockRoot === undefined) {\n            throw new Error('invalid header. parentBeaconBlockRoot should be provided');\n        }\n        return header;\n    }\n    /**\n     * Validates correct buffer lengths, throws if invalid.\n     */\n    _genericFormatValidation() {\n        const { parentHash, stateRoot, transactionsTrie, receiptTrie, mixHash, nonce } = this;\n        if (parentHash.length !== 32) {\n            const msg = this._errorMsg(`parentHash must be 32 bytes, received ${parentHash.length} bytes`);\n            throw new Error(msg);\n        }\n        if (stateRoot.length !== 32) {\n            const msg = this._errorMsg(`stateRoot must be 32 bytes, received ${stateRoot.length} bytes`);\n            throw new Error(msg);\n        }\n        if (transactionsTrie.length !== 32) {\n            const msg = this._errorMsg(`transactionsTrie must be 32 bytes, received ${transactionsTrie.length} bytes`);\n            throw new Error(msg);\n        }\n        if (receiptTrie.length !== 32) {\n            const msg = this._errorMsg(`receiptTrie must be 32 bytes, received ${receiptTrie.length} bytes`);\n            throw new Error(msg);\n        }\n        if (mixHash.length !== 32) {\n            const msg = this._errorMsg(`mixHash must be 32 bytes, received ${mixHash.length} bytes`);\n            throw new Error(msg);\n        }\n        if (nonce.length !== 8) {\n            const msg = this._errorMsg(`nonce must be 8 bytes, received ${nonce.length} bytes`);\n            throw new Error(msg);\n        }\n        // check if the block used too much gas\n        if (this.gasUsed > this.gasLimit) {\n            const msg = this._errorMsg(`Invalid block: too much gas used. Used: ${this.gasUsed}, gas limit: ${this.gasLimit}`);\n            throw new Error(msg);\n        }\n        // Validation for EIP-1559 blocks\n        if (this.common.isActivatedEIP(1559) === true) {\n            if (typeof this.baseFeePerGas !== 'bigint') {\n                const msg = this._errorMsg('EIP1559 block has no base fee field');\n                throw new Error(msg);\n            }\n            const londonHfBlock = this.common.hardforkBlock(Hardfork.London);\n            if (typeof londonHfBlock === 'bigint' &&\n                londonHfBlock !== BIGINT_0 &&\n                this.number === londonHfBlock) {\n                const initialBaseFee = this.common.param('gasConfig', 'initialBaseFee');\n                if (this.baseFeePerGas !== initialBaseFee) {\n                    const msg = this._errorMsg('Initial EIP1559 block does not have initial base fee');\n                    throw new Error(msg);\n                }\n            }\n        }\n        if (this.common.isActivatedEIP(4895) === true) {\n            if (this.withdrawalsRoot === undefined) {\n                const msg = this._errorMsg('EIP4895 block has no withdrawalsRoot field');\n                throw new Error(msg);\n            }\n            if (this.withdrawalsRoot?.length !== 32) {\n                const msg = this._errorMsg(`withdrawalsRoot must be 32 bytes, received ${this.withdrawalsRoot.length} bytes`);\n                throw new Error(msg);\n            }\n        }\n        if (this.common.isActivatedEIP(4788) === true) {\n            if (this.parentBeaconBlockRoot === undefined) {\n                const msg = this._errorMsg('EIP4788 block has no parentBeaconBlockRoot field');\n                throw new Error(msg);\n            }\n            if (this.parentBeaconBlockRoot?.length !== 32) {\n                const msg = this._errorMsg(`parentBeaconBlockRoot must be 32 bytes, received ${this.parentBeaconBlockRoot.length} bytes`);\n                throw new Error(msg);\n            }\n        }\n    }\n    /**\n     * Checks static parameters related to consensus algorithm\n     * @throws if any check fails\n     */\n    _consensusFormatValidation() {\n        const { nonce, uncleHash, difficulty, extraData, number } = this;\n        // Consensus type dependent checks\n        if (this.common.consensusAlgorithm() === ConsensusAlgorithm.Ethash) {\n            // PoW/Ethash\n            if (number > BIGINT_0 &&\n                this.extraData.length > this.common.param('vm', 'maxExtraDataSize')) {\n                // Check length of data on all post-genesis blocks\n                const msg = this._errorMsg('invalid amount of extra data');\n                throw new Error(msg);\n            }\n        }\n        if (this.common.consensusAlgorithm() === ConsensusAlgorithm.Clique) {\n            // PoA/Clique\n            const minLength = CLIQUE_EXTRA_VANITY + CLIQUE_EXTRA_SEAL;\n            if (!this.cliqueIsEpochTransition()) {\n                // ExtraData length on epoch transition\n                if (this.extraData.length !== minLength) {\n                    const msg = this._errorMsg(`extraData must be ${minLength} bytes on non-epoch transition blocks, received ${this.extraData.length} bytes`);\n                    throw new Error(msg);\n                }\n            }\n            else {\n                const signerLength = this.extraData.length - minLength;\n                if (signerLength % 20 !== 0) {\n                    const msg = this._errorMsg(`invalid signer list length in extraData, received signer length of ${signerLength} (not divisible by 20)`);\n                    throw new Error(msg);\n                }\n                // coinbase (beneficiary) on epoch transition\n                if (!this.coinbase.isZero()) {\n                    const msg = this._errorMsg(`coinbase must be filled with zeros on epoch transition blocks, received ${this.coinbase}`);\n                    throw new Error(msg);\n                }\n            }\n            // MixHash format\n            if (!equalsBytes(this.mixHash, new Uint8Array(32))) {\n                const msg = this._errorMsg(`mixHash must be filled with zeros, received ${this.mixHash}`);\n                throw new Error(msg);\n            }\n        }\n        // Validation for PoS blocks (EIP-3675)\n        if (this.common.consensusType() === ConsensusType.ProofOfStake) {\n            let error = false;\n            let errorMsg = '';\n            if (!equalsBytes(uncleHash, KECCAK256_RLP_ARRAY)) {\n                errorMsg += `, uncleHash: ${bytesToHex(uncleHash)} (expected: ${bytesToHex(KECCAK256_RLP_ARRAY)})`;\n                error = true;\n            }\n            if (number !== BIGINT_0) {\n                // Skip difficulty, nonce, and extraData check for PoS genesis block as genesis block may have non-zero difficulty (if TD is > 0)\n                if (difficulty !== BIGINT_0) {\n                    errorMsg += `, difficulty: ${difficulty} (expected: 0)`;\n                    error = true;\n                }\n                if (extraData.length > 32) {\n                    errorMsg += `, extraData: ${bytesToHex(extraData)} (cannot exceed 32 bytes length, received ${extraData.length} bytes)`;\n                    error = true;\n                }\n                if (!equalsBytes(nonce, zeros(8))) {\n                    errorMsg += `, nonce: ${bytesToHex(nonce)} (expected: ${bytesToHex(zeros(8))})`;\n                    error = true;\n                }\n            }\n            if (error) {\n                const msg = this._errorMsg(`Invalid PoS block: ${errorMsg}`);\n                throw new Error(msg);\n            }\n        }\n    }\n    /**\n     * Validates if the block gasLimit remains in the boundaries set by the protocol.\n     * Throws if out of bounds.\n     *\n     * @param parentBlockHeader - the header from the parent `Block` of this header\n     */\n    validateGasLimit(parentBlockHeader) {\n        let parentGasLimit = parentBlockHeader.gasLimit;\n        // EIP-1559: assume double the parent gas limit on fork block\n        // to adopt to the new gas target centered logic\n        const londonHardforkBlock = this.common.hardforkBlock(Hardfork.London);\n        if (typeof londonHardforkBlock === 'bigint' &&\n            londonHardforkBlock !== BIGINT_0 &&\n            this.number === londonHardforkBlock) {\n            const elasticity = this.common.param('gasConfig', 'elasticityMultiplier');\n            parentGasLimit = parentGasLimit * elasticity;\n        }\n        const gasLimit = this.gasLimit;\n        const a = parentGasLimit / this.common.param('gasConfig', 'gasLimitBoundDivisor');\n        const maxGasLimit = parentGasLimit + a;\n        const minGasLimit = parentGasLimit - a;\n        if (gasLimit >= maxGasLimit) {\n            const msg = this._errorMsg(`gas limit increased too much. Gas limit: ${gasLimit}, max gas limit: ${maxGasLimit}`);\n            throw new Error(msg);\n        }\n        if (gasLimit <= minGasLimit) {\n            const msg = this._errorMsg(`gas limit decreased too much. Gas limit: ${gasLimit}, min gas limit: ${minGasLimit}`);\n            throw new Error(msg);\n        }\n        if (gasLimit < this.common.param('gasConfig', 'minGasLimit')) {\n            const msg = this._errorMsg(`gas limit decreased below minimum gas limit. Gas limit: ${gasLimit}, minimum gas limit: ${this.common.param('gasConfig', 'minGasLimit')}`);\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Calculates the base fee for a potential next block\n     */\n    calcNextBaseFee() {\n        if (this.common.isActivatedEIP(1559) === false) {\n            const msg = this._errorMsg('calcNextBaseFee() can only be called with EIP1559 being activated');\n            throw new Error(msg);\n        }\n        let nextBaseFee;\n        const elasticity = this.common.param('gasConfig', 'elasticityMultiplier');\n        const parentGasTarget = this.gasLimit / elasticity;\n        if (parentGasTarget === this.gasUsed) {\n            nextBaseFee = this.baseFeePerGas;\n        }\n        else if (this.gasUsed > parentGasTarget) {\n            const gasUsedDelta = this.gasUsed - parentGasTarget;\n            const baseFeeMaxChangeDenominator = this.common.param('gasConfig', 'baseFeeMaxChangeDenominator');\n            const calculatedDelta = (this.baseFeePerGas * gasUsedDelta) / parentGasTarget / baseFeeMaxChangeDenominator;\n            nextBaseFee = (calculatedDelta > BIGINT_1 ? calculatedDelta : BIGINT_1) + this.baseFeePerGas;\n        }\n        else {\n            const gasUsedDelta = parentGasTarget - this.gasUsed;\n            const baseFeeMaxChangeDenominator = this.common.param('gasConfig', 'baseFeeMaxChangeDenominator');\n            const calculatedDelta = (this.baseFeePerGas * gasUsedDelta) / parentGasTarget / baseFeeMaxChangeDenominator;\n            nextBaseFee =\n                this.baseFeePerGas - calculatedDelta > BIGINT_0\n                    ? this.baseFeePerGas - calculatedDelta\n                    : BIGINT_0;\n        }\n        return nextBaseFee;\n    }\n    /**\n     * Returns the price per unit of blob gas for a blob transaction in the current/pending block\n     * @returns the price in gwei per unit of blob gas spent\n     */\n    getBlobGasPrice() {\n        if (this.excessBlobGas === undefined) {\n            throw new Error('header must have excessBlobGas field populated');\n        }\n        return this._getBlobGasPrice(this.excessBlobGas);\n    }\n    /**\n     * Returns the blob gas price depending upon the `excessBlobGas` value\n     * @param excessBlobGas\n     */\n    _getBlobGasPrice(excessBlobGas) {\n        return fakeExponential(this.common.param('gasPrices', 'minBlobGasPrice'), excessBlobGas, this.common.param('gasConfig', 'blobGasPriceUpdateFraction'));\n    }\n    /**\n     * Returns the total fee for blob gas spent for including blobs in block.\n     *\n     * @param numBlobs number of blobs in the transaction/block\n     * @returns the total blob gas fee for numBlobs blobs\n     */\n    calcDataFee(numBlobs) {\n        const blobGasPerBlob = this.common.param('gasConfig', 'blobGasPerBlob');\n        const blobGasUsed = blobGasPerBlob * BigInt(numBlobs);\n        const blobGasPrice = this.getBlobGasPrice();\n        return blobGasUsed * blobGasPrice;\n    }\n    /**\n     * Calculates the excess blob gas for next (hopefully) post EIP 4844 block.\n     */\n    calcNextExcessBlobGas() {\n        // The validation of the fields and 4844 activation is already taken care in BlockHeader constructor\n        const targetGasConsumed = (this.excessBlobGas ?? BIGINT_0) + (this.blobGasUsed ?? BIGINT_0);\n        const targetBlobGasPerBlock = this.common.param('gasConfig', 'targetBlobGasPerBlock');\n        if (targetGasConsumed <= targetBlobGasPerBlock) {\n            return BIGINT_0;\n        }\n        else {\n            return targetGasConsumed - targetBlobGasPerBlock;\n        }\n    }\n    /**\n     * Calculate the blob gas price of the block built on top of this one\n     * @returns The blob gas price\n     */\n    calcNextBlobGasPrice() {\n        return this._getBlobGasPrice(this.calcNextExcessBlobGas());\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Bytes in this header, in order.\n     */\n    raw() {\n        const rawItems = [\n            this.parentHash,\n            this.uncleHash,\n            this.coinbase.bytes,\n            this.stateRoot,\n            this.transactionsTrie,\n            this.receiptTrie,\n            this.logsBloom,\n            bigIntToUnpaddedBytes(this.difficulty),\n            bigIntToUnpaddedBytes(this.number),\n            bigIntToUnpaddedBytes(this.gasLimit),\n            bigIntToUnpaddedBytes(this.gasUsed),\n            bigIntToUnpaddedBytes(this.timestamp ?? BIGINT_0),\n            this.extraData,\n            this.mixHash,\n            this.nonce,\n        ];\n        if (this.common.isActivatedEIP(1559) === true) {\n            rawItems.push(bigIntToUnpaddedBytes(this.baseFeePerGas));\n        }\n        if (this.common.isActivatedEIP(4895) === true) {\n            rawItems.push(this.withdrawalsRoot);\n        }\n        // in kaunstinen 2 verkle is scheduled after withdrawals, will eventually be post deneb hopefully\n        if (this.common.isActivatedEIP(6800) === true) {\n            // execution witness is not mandatory part of the the block so nothing to push here\n            // but keep this comment segment for clarity regarding the same and move it according as per the\n            // HF sequence eventually planned\n        }\n        if (this.common.isActivatedEIP(4844) === true) {\n            rawItems.push(bigIntToUnpaddedBytes(this.blobGasUsed));\n            rawItems.push(bigIntToUnpaddedBytes(this.excessBlobGas));\n        }\n        if (this.common.isActivatedEIP(4788) === true) {\n            rawItems.push(this.parentBeaconBlockRoot);\n        }\n        return rawItems;\n    }\n    /**\n     * Returns the hash of the block header.\n     */\n    hash() {\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = this.keccakFunction(RLP.encode(this.raw()));\n            }\n            return this.cache.hash;\n        }\n        return this.keccakFunction(RLP.encode(this.raw()));\n    }\n    /**\n     * Checks if the block header is a genesis header.\n     */\n    isGenesis() {\n        return this.number === BIGINT_0;\n    }\n    _requireClique(name) {\n        if (this.common.consensusAlgorithm() !== ConsensusAlgorithm.Clique) {\n            const msg = this._errorMsg(`BlockHeader.${name}() call only supported for clique PoA networks`);\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Returns the canonical difficulty for this block.\n     *\n     * @param parentBlockHeader - the header from the parent `Block` of this header\n     */\n    ethashCanonicalDifficulty(parentBlockHeader) {\n        if (this.common.consensusType() !== ConsensusType.ProofOfWork) {\n            const msg = this._errorMsg('difficulty calculation is only supported on PoW chains');\n            throw new Error(msg);\n        }\n        if (this.common.consensusAlgorithm() !== ConsensusAlgorithm.Ethash) {\n            const msg = this._errorMsg('difficulty calculation currently only supports the ethash algorithm');\n            throw new Error(msg);\n        }\n        const blockTs = this.timestamp;\n        const { timestamp: parentTs, difficulty: parentDif } = parentBlockHeader;\n        const minimumDifficulty = this.common.param('pow', 'minimumDifficulty');\n        const offset = parentDif / this.common.param('pow', 'difficultyBoundDivisor');\n        let num = this.number;\n        // We use a ! here as TS cannot follow this hardfork-dependent logic, but it always gets assigned\n        let dif;\n        if (this.common.gteHardfork(Hardfork.Byzantium) === true) {\n            // max((2 if len(parent.uncles) else 1) - ((timestamp - parent.timestamp) // 9), -99) (EIP100)\n            const uncleAddend = equalsBytes(parentBlockHeader.uncleHash, KECCAK256_RLP_ARRAY) ? 1 : 2;\n            let a = BigInt(uncleAddend) - (blockTs - parentTs) / BigInt(9);\n            const cutoff = BigInt(-99);\n            // MAX(cutoff, a)\n            if (cutoff > a) {\n                a = cutoff;\n            }\n            dif = parentDif + offset * a;\n        }\n        if (this.common.gteHardfork(Hardfork.Byzantium) === true) {\n            // Get delay as parameter from common\n            num = num - this.common.param('pow', 'difficultyBombDelay');\n            if (num < BIGINT_0) {\n                num = BIGINT_0;\n            }\n        }\n        else if (this.common.gteHardfork(Hardfork.Homestead) === true) {\n            // 1 - (block_timestamp - parent_timestamp) // 10\n            let a = BIGINT_1 - (blockTs - parentTs) / BigInt(10);\n            const cutoff = BigInt(-99);\n            // MAX(cutoff, a)\n            if (cutoff > a) {\n                a = cutoff;\n            }\n            dif = parentDif + offset * a;\n        }\n        else {\n            // pre-homestead\n            if (parentTs + this.common.param('pow', 'durationLimit') > blockTs) {\n                dif = offset + parentDif;\n            }\n            else {\n                dif = parentDif - offset;\n            }\n        }\n        const exp = num / BigInt(100000) - BIGINT_2;\n        if (exp >= 0) {\n            dif = dif + BIGINT_2 ** exp;\n        }\n        if (dif < minimumDifficulty) {\n            dif = minimumDifficulty;\n        }\n        return dif;\n    }\n    /**\n     * PoA clique signature hash without the seal.\n     */\n    cliqueSigHash() {\n        this._requireClique('cliqueSigHash');\n        const raw = this.raw();\n        raw[12] = this.extraData.subarray(0, this.extraData.length - CLIQUE_EXTRA_SEAL);\n        return this.keccakFunction(RLP.encode(raw));\n    }\n    /**\n     * Checks if the block header is an epoch transition\n     * header (only clique PoA, throws otherwise)\n     */\n    cliqueIsEpochTransition() {\n        this._requireClique('cliqueIsEpochTransition');\n        const epoch = BigInt(this.common.consensusConfig().epoch);\n        // Epoch transition block if the block number has no\n        // remainder on the division by the epoch length\n        return this.number % epoch === BIGINT_0;\n    }\n    /**\n     * Returns extra vanity data\n     * (only clique PoA, throws otherwise)\n     */\n    cliqueExtraVanity() {\n        this._requireClique('cliqueExtraVanity');\n        return this.extraData.subarray(0, CLIQUE_EXTRA_VANITY);\n    }\n    /**\n     * Returns extra seal data\n     * (only clique PoA, throws otherwise)\n     */\n    cliqueExtraSeal() {\n        this._requireClique('cliqueExtraSeal');\n        return this.extraData.subarray(-CLIQUE_EXTRA_SEAL);\n    }\n    /**\n     * Seal block with the provided signer.\n     * Returns the final extraData field to be assigned to `this.extraData`.\n     * @hidden\n     */\n    cliqueSealBlock(privateKey) {\n        this._requireClique('cliqueSealBlock');\n        const ecSignFunction = this.common.customCrypto?.ecsign ?? ecsign;\n        const signature = ecSignFunction(this.cliqueSigHash(), privateKey);\n        const signatureB = concatBytes(signature.r, signature.s, bigIntToBytes(signature.v - BIGINT_27));\n        const extraDataWithoutSeal = this.extraData.subarray(0, this.extraData.length - CLIQUE_EXTRA_SEAL);\n        const extraData = concatBytes(extraDataWithoutSeal, signatureB);\n        return extraData;\n    }\n    /**\n     * Returns a list of signers\n     * (only clique PoA, throws otherwise)\n     *\n     * This function throws if not called on an epoch\n     * transition block and should therefore be used\n     * in conjunction with {@link BlockHeader.cliqueIsEpochTransition}\n     */\n    cliqueEpochTransitionSigners() {\n        this._requireClique('cliqueEpochTransitionSigners');\n        if (!this.cliqueIsEpochTransition()) {\n            const msg = this._errorMsg('Signers are only included in epoch transition blocks (clique)');\n            throw new Error(msg);\n        }\n        const start = CLIQUE_EXTRA_VANITY;\n        const end = this.extraData.length - CLIQUE_EXTRA_SEAL;\n        const signerBytes = this.extraData.subarray(start, end);\n        const signerList = [];\n        const signerLength = 20;\n        for (let start = 0; start <= signerBytes.length - signerLength; start += signerLength) {\n            signerList.push(signerBytes.subarray(start, start + signerLength));\n        }\n        return signerList.map((buf) => new Address(buf));\n    }\n    /**\n     * Verifies the signature of the block (last 65 bytes of extraData field)\n     * (only clique PoA, throws otherwise)\n     *\n     *  Method throws if signature is invalid\n     */\n    cliqueVerifySignature(signerList) {\n        this._requireClique('cliqueVerifySignature');\n        const signerAddress = this.cliqueSigner();\n        const signerFound = signerList.find((signer) => {\n            return signer.equals(signerAddress);\n        });\n        return !!signerFound;\n    }\n    /**\n     * Returns the signer address\n     */\n    cliqueSigner() {\n        this._requireClique('cliqueSigner');\n        const extraSeal = this.cliqueExtraSeal();\n        // Reasonable default for default blocks\n        if (extraSeal.length === 0 || equalsBytes(extraSeal, new Uint8Array(65))) {\n            return Address.zero();\n        }\n        const r = extraSeal.subarray(0, 32);\n        const s = extraSeal.subarray(32, 64);\n        const v = bytesToBigInt(extraSeal.subarray(64, 65)) + BIGINT_27;\n        const pubKey = ecrecover(this.cliqueSigHash(), v, r, s);\n        return Address.fromPublicKey(pubKey);\n    }\n    /**\n     * Returns the rlp encoding of the block header.\n     */\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n    /**\n     * Returns the block header in JSON format.\n     */\n    toJSON() {\n        const withdrawalAttr = this.withdrawalsRoot\n            ? { withdrawalsRoot: bytesToHex(this.withdrawalsRoot) }\n            : {};\n        const jsonDict = {\n            parentHash: bytesToHex(this.parentHash),\n            uncleHash: bytesToHex(this.uncleHash),\n            coinbase: this.coinbase.toString(),\n            stateRoot: bytesToHex(this.stateRoot),\n            transactionsTrie: bytesToHex(this.transactionsTrie),\n            ...withdrawalAttr,\n            receiptTrie: bytesToHex(this.receiptTrie),\n            logsBloom: bytesToHex(this.logsBloom),\n            difficulty: bigIntToHex(this.difficulty),\n            number: bigIntToHex(this.number),\n            gasLimit: bigIntToHex(this.gasLimit),\n            gasUsed: bigIntToHex(this.gasUsed),\n            timestamp: bigIntToHex(this.timestamp),\n            extraData: bytesToHex(this.extraData),\n            mixHash: bytesToHex(this.mixHash),\n            nonce: bytesToHex(this.nonce),\n        };\n        if (this.common.isActivatedEIP(1559) === true) {\n            jsonDict.baseFeePerGas = bigIntToHex(this.baseFeePerGas);\n        }\n        if (this.common.isActivatedEIP(4844) === true) {\n            jsonDict.blobGasUsed = bigIntToHex(this.blobGasUsed);\n            jsonDict.excessBlobGas = bigIntToHex(this.excessBlobGas);\n        }\n        if (this.common.isActivatedEIP(4788) === true) {\n            jsonDict.parentBeaconBlockRoot = bytesToHex(this.parentBeaconBlockRoot);\n        }\n        return jsonDict;\n    }\n    /**\n     * Validates extra data is DAO_ExtraData for DAO_ForceExtraDataRange blocks after DAO\n     * activation block (see: https://blog.slock.it/hard-fork-specification-24b889e70703)\n     */\n    _validateDAOExtraData() {\n        if (this.common.hardforkIsActiveOnBlock(Hardfork.Dao, this.number) === false) {\n            return;\n        }\n        const DAOActivationBlock = this.common.hardforkBlock(Hardfork.Dao);\n        if (DAOActivationBlock === null || this.number < DAOActivationBlock) {\n            return;\n        }\n        const DAO_ExtraData = hexToBytes('0x64616f2d686172642d666f726b');\n        const DAO_ForceExtraDataRange = BigInt(9);\n        const drift = this.number - DAOActivationBlock;\n        if (drift <= DAO_ForceExtraDataRange && !equalsBytes(this.extraData, DAO_ExtraData)) {\n            const msg = this._errorMsg(`extraData should be 'dao-hard-fork', got ${bytesToUtf8(this.extraData)} (hex: ${bytesToHex(this.extraData)})`);\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let hash = '';\n        try {\n            hash = bytesToHex(this.hash());\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        let errorStr = `block header number=${this.number} hash=${hash} `;\n        errorStr += `hf=${hf} baseFeePerGas=${this.baseFeePerGas ?? 'none'}`;\n        return errorStr;\n    }\n    /**\n     * Helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=header.js.map","import { BlockHeader } from './header.js';\nimport { numberToHex } from './helpers.js';\n/**\n * Creates a new block header object from Ethereum JSON RPC.\n *\n * @param blockParams - Ethereum JSON RPC of block (eth_getBlockByNumber)\n * @param options - An object describing the blockchain\n */\nexport function blockHeaderFromRpc(blockParams, options) {\n    const { parentHash, sha3Uncles, miner, stateRoot, transactionsRoot, receiptsRoot, logsBloom, difficulty, number, gasLimit, gasUsed, timestamp, extraData, mixHash, nonce, baseFeePerGas, withdrawalsRoot, blobGasUsed, excessBlobGas, parentBeaconBlockRoot, } = blockParams;\n    const blockHeader = BlockHeader.fromHeaderData({\n        parentHash,\n        uncleHash: sha3Uncles,\n        coinbase: miner,\n        stateRoot,\n        transactionsTrie: transactionsRoot,\n        receiptTrie: receiptsRoot,\n        logsBloom,\n        difficulty: numberToHex(difficulty),\n        number,\n        gasLimit,\n        gasUsed,\n        timestamp,\n        extraData,\n        mixHash,\n        nonce,\n        baseFeePerGas,\n        withdrawalsRoot,\n        blobGasUsed,\n        excessBlobGas,\n        parentBeaconBlockRoot,\n    }, options);\n    return blockHeader;\n}\n//# sourceMappingURL=header-from-rpc.js.map","import { TransactionFactory } from '@ethereumjs/tx';\nimport { TypeOutput, setLengthLeft, toBytes, toType } from '@ethereumjs/util';\nimport { blockHeaderFromRpc } from './header-from-rpc.js';\nimport { Block } from './index.js';\nfunction normalizeTxParams(_txParams) {\n    const txParams = Object.assign({}, _txParams);\n    txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt);\n    txParams.data = txParams.data === undefined ? txParams.input : txParams.data;\n    // check and convert gasPrice and value params\n    txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined;\n    txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined;\n    // strict byte length checking\n    txParams.to =\n        txParams.to !== null && txParams.to !== undefined\n            ? setLengthLeft(toBytes(txParams.to), 20)\n            : null;\n    txParams.v = toType(txParams.v, TypeOutput.BigInt);\n    return txParams;\n}\n/**\n * Creates a new block object from Ethereum JSON RPC.\n *\n * @param blockParams - Ethereum JSON RPC of block (eth_getBlockByNumber)\n * @param uncles - Optional list of Ethereum JSON RPC of uncles (eth_getUncleByBlockHashAndIndex)\n * @param options - An object describing the blockchain\n * @deprecated\n */\nexport function blockFromRpc(blockParams, uncles = [], options) {\n    const header = blockHeaderFromRpc(blockParams, options);\n    const transactions = [];\n    const opts = { common: header.common };\n    for (const _txParams of blockParams.transactions ?? []) {\n        const txParams = normalizeTxParams(_txParams);\n        const tx = TransactionFactory.fromTxData(txParams, opts);\n        transactions.push(tx);\n    }\n    const uncleHeaders = uncles.map((uh) => blockHeaderFromRpc(uh, options));\n    return Block.fromBlockData({ header, transactions, uncleHeaders, withdrawals: blockParams.withdrawals }, options);\n}\n//# sourceMappingURL=from-rpc.js.map","var _a;\nimport { ConsensusType } from '@ethereumjs/common';\nimport { RLP } from '@ethereumjs/rlp';\nimport { Trie } from '@ethereumjs/trie';\nimport { BlobEIP4844Transaction, Capability, TransactionFactory } from '@ethereumjs/tx';\nimport { BIGINT_0, KECCAK256_RLP, Withdrawal, bigIntToHex, bytesToHex, bytesToUtf8, equalsBytes, fetchFromProvider, getProvider, hexToBytes, intToHex, isHexPrefixed, } from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { executionPayloadFromBeaconPayload } from './from-beacon-payload.js';\nimport { blockFromRpc } from './from-rpc.js';\nimport { BlockHeader } from './header.js';\n/**\n * An object that represents the block.\n */\nexport class Block {\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     * Use the static factory methods to assist in creating a Block object from varying data types and options.\n     */\n    constructor(header, transactions = [], uncleHeaders = [], withdrawals, opts = {}, executionWitness) {\n        this.transactions = [];\n        this.uncleHeaders = [];\n        this.cache = {};\n        this.header = header ?? BlockHeader.fromHeaderData({}, opts);\n        this.common = this.header.common;\n        this.keccakFunction = this.common.customCrypto.keccak256 ?? keccak256;\n        this.transactions = transactions;\n        this.withdrawals = withdrawals ?? (this.common.isActivatedEIP(4895) ? [] : undefined);\n        this.executionWitness = executionWitness;\n        // null indicates an intentional absence of value or unavailability\n        // undefined indicates that the executionWitness should be initialized with the default state\n        if (this.common.isActivatedEIP(6800) && this.executionWitness === undefined) {\n            this.executionWitness = {\n                stateDiff: [],\n                verkleProof: {\n                    commitmentsByPath: [],\n                    d: '0x',\n                    depthExtensionPresent: '0x',\n                    ipaProof: {\n                        cl: [],\n                        cr: [],\n                        finalEvaluation: '0x',\n                    },\n                    otherStems: [],\n                },\n            };\n        }\n        this.uncleHeaders = uncleHeaders;\n        if (uncleHeaders.length > 0) {\n            this.validateUncles();\n            if (this.common.consensusType() === ConsensusType.ProofOfAuthority) {\n                const msg = this._errorMsg('Block initialization with uncleHeaders on a PoA network is not allowed');\n                throw new Error(msg);\n            }\n            if (this.common.consensusType() === ConsensusType.ProofOfStake) {\n                const msg = this._errorMsg('Block initialization with uncleHeaders on a PoS network is not allowed');\n                throw new Error(msg);\n            }\n        }\n        if (!this.common.isActivatedEIP(4895) && withdrawals !== undefined) {\n            throw new Error('Cannot have a withdrawals field if EIP 4895 is not active');\n        }\n        if (!this.common.isActivatedEIP(6800) &&\n            executionWitness !== undefined &&\n            executionWitness !== null) {\n            throw new Error(`Cannot have executionWitness field if EIP 6800 is not active `);\n        }\n        const freeze = opts?.freeze ?? true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Returns the withdrawals trie root for array of Withdrawal.\n     * @param wts array of Withdrawal to compute the root of\n     * @param optional emptyTrie to use to generate the root\n     */\n    static async genWithdrawalsTrieRoot(wts, emptyTrie) {\n        const trie = emptyTrie ?? new Trie();\n        for (const [i, wt] of wts.entries()) {\n            await trie.put(RLP.encode(i), RLP.encode(wt.raw()));\n        }\n        return trie.root();\n    }\n    /**\n     * Returns the txs trie root for array of TypedTransaction\n     * @param txs array of TypedTransaction to compute the root of\n     * @param optional emptyTrie to use to generate the root\n     */\n    static async genTransactionsTrieRoot(txs, emptyTrie) {\n        const trie = emptyTrie ?? new Trie();\n        for (const [i, tx] of txs.entries()) {\n            await trie.put(RLP.encode(i), tx.serialize());\n        }\n        return trie.root();\n    }\n    /**\n     * Static constructor to create a block from a block data dictionary\n     *\n     * @param blockData\n     * @param opts\n     */\n    static fromBlockData(blockData = {}, opts) {\n        const { header: headerData, transactions: txsData, uncleHeaders: uhsData, withdrawals: withdrawalsData, executionWitness: executionWitnessData, } = blockData;\n        const header = BlockHeader.fromHeaderData(headerData, opts);\n        // parse transactions\n        const transactions = [];\n        for (const txData of txsData ?? []) {\n            const tx = TransactionFactory.fromTxData(txData, {\n                ...opts,\n                // Use header common in case of setHardfork being activated\n                common: header.common,\n            });\n            transactions.push(tx);\n        }\n        // parse uncle headers\n        const uncleHeaders = [];\n        const uncleOpts = {\n            ...opts,\n            // Use header common in case of setHardfork being activated\n            common: header.common,\n            // Disable this option here (all other options carried over), since this overwrites the provided Difficulty to an incorrect value\n            calcDifficultyFromHeader: undefined,\n        };\n        // Uncles are obsolete post-merge, any hardfork by option implies setHardfork\n        if (opts?.setHardfork !== undefined) {\n            uncleOpts.setHardfork = true;\n        }\n        for (const uhData of uhsData ?? []) {\n            const uh = BlockHeader.fromHeaderData(uhData, uncleOpts);\n            uncleHeaders.push(uh);\n        }\n        const withdrawals = withdrawalsData?.map(Withdrawal.fromWithdrawalData);\n        // The witness data is planned to come in rlp serialized bytes so leave this\n        // stub till that time\n        const executionWitness = executionWitnessData;\n        return new Block(header, transactions, uncleHeaders, withdrawals, opts, executionWitness);\n    }\n    /**\n     * Static constructor to create a block from a RLP-serialized block\n     *\n     * @param serialized\n     * @param opts\n     */\n    static fromRLPSerializedBlock(serialized, opts) {\n        const values = RLP.decode(Uint8Array.from(serialized));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized block input. Must be array');\n        }\n        return Block.fromValuesArray(values, opts);\n    }\n    /**\n     * Static constructor to create a block from an array of Bytes values\n     *\n     * @param values\n     * @param opts\n     */\n    static fromValuesArray(values, opts) {\n        if (values.length > 5) {\n            throw new Error(`invalid block. More values=${values.length} than expected were received (at most 5)`);\n        }\n        // First try to load header so that we can use its common (in case of setHardfork being activated)\n        // to correctly make checks on the hardforks\n        const [headerData, txsData, uhsData, withdrawalBytes, executionWitnessBytes] = values;\n        const header = BlockHeader.fromValuesArray(headerData, opts);\n        if (header.common.isActivatedEIP(4895) &&\n            (withdrawalBytes === undefined || !Array.isArray(withdrawalBytes))) {\n            throw new Error('Invalid serialized block input: EIP-4895 is active, and no withdrawals were provided as array');\n        }\n        // parse transactions\n        const transactions = [];\n        for (const txData of txsData ?? []) {\n            transactions.push(TransactionFactory.fromBlockBodyData(txData, {\n                ...opts,\n                // Use header common in case of setHardfork being activated\n                common: header.common,\n            }));\n        }\n        // parse uncle headers\n        const uncleHeaders = [];\n        const uncleOpts = {\n            ...opts,\n            // Use header common in case of setHardfork being activated\n            common: header.common,\n            // Disable this option here (all other options carried over), since this overwrites the provided Difficulty to an incorrect value\n            calcDifficultyFromHeader: undefined,\n        };\n        // Uncles are obsolete post-merge, any hardfork by option implies setHardfork\n        if (opts?.setHardfork !== undefined) {\n            uncleOpts.setHardfork = true;\n        }\n        for (const uncleHeaderData of uhsData ?? []) {\n            uncleHeaders.push(BlockHeader.fromValuesArray(uncleHeaderData, uncleOpts));\n        }\n        const withdrawals = withdrawalBytes\n            ?.map(([index, validatorIndex, address, amount]) => ({\n            index,\n            validatorIndex,\n            address,\n            amount,\n        }))\n            ?.map(Withdrawal.fromWithdrawalData);\n        // executionWitness are not part of the EL fetched blocks via eth_ bodies method\n        // they are currently only available via the engine api constructed blocks\n        let executionWitness;\n        if (header.common.isActivatedEIP(6800) && executionWitnessBytes !== undefined) {\n            executionWitness = JSON.parse(bytesToUtf8(RLP.decode(executionWitnessBytes)));\n        }\n        else {\n            // don't assign default witness if eip 6800 is implemented as it leads to incorrect\n            // assumptions while executing the block. if not present in input implies its unavailable\n            executionWitness = null;\n        }\n        return new Block(header, transactions, uncleHeaders, withdrawals, opts, executionWitness);\n    }\n    /**\n     * Creates a new block object from Ethereum JSON RPC.\n     *\n     * @param blockParams - Ethereum JSON RPC of block (eth_getBlockByNumber)\n     * @param uncles - Optional list of Ethereum JSON RPC of uncles (eth_getUncleByBlockHashAndIndex)\n     * @param opts - An object describing the blockchain\n     */\n    static fromRPC(blockData, uncles, opts) {\n        return blockFromRpc(blockData, uncles, opts);\n    }\n    /**\n     *  Method to retrieve a block from an execution payload\n     * @param execution payload constructed from beacon payload\n     * @param opts {@link BlockOptions}\n     * @returns the block constructed block\n     */\n    static async fromExecutionPayload(payload, opts) {\n        const { blockNumber: number, receiptsRoot: receiptTrie, prevRandao: mixHash, feeRecipient: coinbase, transactions, withdrawals: withdrawalsData, executionWitness, } = payload;\n        const txs = [];\n        for (const [index, serializedTx] of transactions.entries()) {\n            try {\n                const tx = TransactionFactory.fromSerializedData(hexToBytes(serializedTx), {\n                    common: opts?.common,\n                });\n                txs.push(tx);\n            }\n            catch (error) {\n                const validationError = `Invalid tx at index ${index}: ${error}`;\n                throw validationError;\n            }\n        }\n        const transactionsTrie = await Block.genTransactionsTrieRoot(txs, new Trie({ common: opts?.common }));\n        const withdrawals = withdrawalsData?.map((wData) => Withdrawal.fromWithdrawalData(wData));\n        const withdrawalsRoot = withdrawals\n            ? await Block.genWithdrawalsTrieRoot(withdrawals, new Trie({ common: opts?.common }))\n            : undefined;\n        const header = {\n            ...payload,\n            number,\n            receiptTrie,\n            transactionsTrie,\n            withdrawalsRoot,\n            mixHash,\n            coinbase,\n        };\n        // we are not setting setHardfork as common is already set to the correct hf\n        const block = Block.fromBlockData({ header, transactions: txs, withdrawals, executionWitness }, opts);\n        if (block.common.isActivatedEIP(6800) &&\n            (executionWitness === undefined || executionWitness === null)) {\n            throw Error('Missing executionWitness for EIP-6800 activated executionPayload');\n        }\n        // Verify blockHash matches payload\n        if (!equalsBytes(block.hash(), hexToBytes(payload.blockHash))) {\n            const validationError = `Invalid blockHash, expected: ${payload.blockHash}, received: ${bytesToHex(block.hash())}`;\n            throw Error(validationError);\n        }\n        return block;\n    }\n    /**\n     *  Method to retrieve a block from a beacon payload json\n     * @param payload json of a beacon beacon fetched from beacon apis\n     * @param opts {@link BlockOptions}\n     * @returns the block constructed block\n     */\n    static async fromBeaconPayloadJson(payload, opts) {\n        const executionPayload = executionPayloadFromBeaconPayload(payload);\n        return Block.fromExecutionPayload(executionPayload, opts);\n    }\n    /**\n     * Returns a Array of the raw Bytes Arrays of this block, in order.\n     */\n    raw() {\n        const bytesArray = [\n            this.header.raw(),\n            this.transactions.map((tx) => tx.supports(Capability.EIP2718TypedTransaction) ? tx.serialize() : tx.raw()),\n            this.uncleHeaders.map((uh) => uh.raw()),\n        ];\n        const withdrawalsRaw = this.withdrawals?.map((wt) => wt.raw());\n        if (withdrawalsRaw) {\n            bytesArray.push(withdrawalsRaw);\n        }\n        if (this.executionWitness !== undefined && this.executionWitness !== null) {\n            const executionWitnessBytes = RLP.encode(JSON.stringify(this.executionWitness));\n            bytesArray.push(executionWitnessBytes);\n        }\n        return bytesArray;\n    }\n    /**\n     * Returns the hash of the block.\n     */\n    hash() {\n        return this.header.hash();\n    }\n    /**\n     * Determines if this block is the genesis block.\n     */\n    isGenesis() {\n        return this.header.isGenesis();\n    }\n    /**\n     * Returns the rlp encoding of the block.\n     */\n    serialize() {\n        return RLP.encode(this.raw());\n    }\n    /**\n     * Generates transaction trie for validation.\n     */\n    async genTxTrie() {\n        return Block.genTransactionsTrieRoot(this.transactions, new Trie({ common: this.common }));\n    }\n    /**\n     * Validates the transaction trie by generating a trie\n     * and do a check on the root hash.\n     * @returns True if the transaction trie is valid, false otherwise\n     */\n    async transactionsTrieIsValid() {\n        let result;\n        if (this.transactions.length === 0) {\n            result = equalsBytes(this.header.transactionsTrie, KECCAK256_RLP);\n            return result;\n        }\n        if (this.cache.txTrieRoot === undefined) {\n            this.cache.txTrieRoot = await this.genTxTrie();\n        }\n        result = equalsBytes(this.cache.txTrieRoot, this.header.transactionsTrie);\n        return result;\n    }\n    /**\n     * Validates transaction signatures and minimum gas requirements.\n     * @returns {string[]} an array of error strings\n     */\n    getTransactionsValidationErrors() {\n        const errors = [];\n        let blobGasUsed = BIGINT_0;\n        const blobGasLimit = this.common.param('gasConfig', 'maxblobGasPerBlock');\n        const blobGasPerBlob = this.common.param('gasConfig', 'blobGasPerBlob');\n        // eslint-disable-next-line prefer-const\n        for (let [i, tx] of this.transactions.entries()) {\n            const errs = tx.getValidationErrors();\n            if (this.common.isActivatedEIP(1559) === true) {\n                if (tx.supports(Capability.EIP1559FeeMarket)) {\n                    tx = tx;\n                    if (tx.maxFeePerGas < this.header.baseFeePerGas) {\n                        errs.push('tx unable to pay base fee (EIP-1559 tx)');\n                    }\n                }\n                else {\n                    tx = tx;\n                    if (tx.gasPrice < this.header.baseFeePerGas) {\n                        errs.push('tx unable to pay base fee (non EIP-1559 tx)');\n                    }\n                }\n            }\n            if (this.common.isActivatedEIP(4844) === true) {\n                if (tx instanceof BlobEIP4844Transaction) {\n                    blobGasUsed += BigInt(tx.numBlobs()) * blobGasPerBlob;\n                    if (blobGasUsed > blobGasLimit) {\n                        errs.push(`tx causes total blob gas of ${blobGasUsed} to exceed maximum blob gas per block of ${blobGasLimit}`);\n                    }\n                }\n            }\n            if (errs.length > 0) {\n                errors.push(`errors at tx ${i}: ${errs.join(', ')}`);\n            }\n        }\n        if (this.common.isActivatedEIP(4844) === true) {\n            if (blobGasUsed !== this.header.blobGasUsed) {\n                errors.push(`invalid blobGasUsed expected=${this.header.blobGasUsed} actual=${blobGasUsed}`);\n            }\n        }\n        return errors;\n    }\n    /**\n     * Validates transaction signatures and minimum gas requirements.\n     * @returns True if all transactions are valid, false otherwise\n     */\n    transactionsAreValid() {\n        const errors = this.getTransactionsValidationErrors();\n        return errors.length === 0;\n    }\n    /**\n     * Validates the block data, throwing if invalid.\n     * This can be checked on the Block itself without needing access to any parent block\n     * It checks:\n     * - All transactions are valid\n     * - The transactions trie is valid\n     * - The uncle hash is valid\n     * @param onlyHeader if only passed the header, skip validating txTrie and unclesHash (default: false)\n     * @param verifyTxs if set to `false`, will not check for transaction validation errors (default: true)\n     */\n    async validateData(onlyHeader = false, verifyTxs = true) {\n        if (verifyTxs) {\n            const txErrors = this.getTransactionsValidationErrors();\n            if (txErrors.length > 0) {\n                const msg = this._errorMsg(`invalid transactions: ${txErrors.join(' ')}`);\n                throw new Error(msg);\n            }\n        }\n        if (onlyHeader) {\n            return;\n        }\n        if (verifyTxs) {\n            for (const [index, tx] of this.transactions.entries()) {\n                if (!tx.isSigned()) {\n                    const msg = this._errorMsg(`invalid transactions: transaction at index ${index} is unsigned`);\n                    throw new Error(msg);\n                }\n            }\n        }\n        if (!(await this.transactionsTrieIsValid())) {\n            const msg = this._errorMsg('invalid transaction trie');\n            throw new Error(msg);\n        }\n        if (!this.uncleHashIsValid()) {\n            const msg = this._errorMsg('invalid uncle hash');\n            throw new Error(msg);\n        }\n        if (this.common.isActivatedEIP(4895) && !(await this.withdrawalsTrieIsValid())) {\n            const msg = this._errorMsg('invalid withdrawals trie');\n            throw new Error(msg);\n        }\n        // Validation for Verkle blocks\n        // Unnecessary in this implementation since we're providing defaults if those fields are undefined\n        if (this.common.isActivatedEIP(6800)) {\n            if (this.executionWitness === undefined) {\n                throw new Error(`Invalid block: missing executionWitness`);\n            }\n            if (this.executionWitness === null) {\n                throw new Error(`Invalid block: ethereumjs stateless client needs executionWitness`);\n            }\n        }\n    }\n    /**\n     * Validates that blob gas fee for each transaction is greater than or equal to the\n     * blobGasPrice for the block and that total blob gas in block is less than maximum\n     * blob gas per block\n     * @param parentHeader header of parent block\n     */\n    validateBlobTransactions(parentHeader) {\n        if (this.common.isActivatedEIP(4844)) {\n            const blobGasLimit = this.common.param('gasConfig', 'maxblobGasPerBlock');\n            const blobGasPerBlob = this.common.param('gasConfig', 'blobGasPerBlob');\n            let blobGasUsed = BIGINT_0;\n            const expectedExcessBlobGas = parentHeader.calcNextExcessBlobGas();\n            if (this.header.excessBlobGas !== expectedExcessBlobGas) {\n                throw new Error(`block excessBlobGas mismatch: have ${this.header.excessBlobGas}, want ${expectedExcessBlobGas}`);\n            }\n            let blobGasPrice;\n            for (const tx of this.transactions) {\n                if (tx instanceof BlobEIP4844Transaction) {\n                    blobGasPrice = blobGasPrice ?? this.header.getBlobGasPrice();\n                    if (tx.maxFeePerBlobGas < blobGasPrice) {\n                        throw new Error(`blob transaction maxFeePerBlobGas ${tx.maxFeePerBlobGas} < than block blob gas price ${blobGasPrice} - ${this.errorStr()}`);\n                    }\n                    blobGasUsed += BigInt(tx.blobVersionedHashes.length) * blobGasPerBlob;\n                    if (blobGasUsed > blobGasLimit) {\n                        throw new Error(`tx causes total blob gas of ${blobGasUsed} to exceed maximum blob gas per block of ${blobGasLimit}`);\n                    }\n                }\n            }\n            if (this.header.blobGasUsed !== blobGasUsed) {\n                throw new Error(`block blobGasUsed mismatch: have ${this.header.blobGasUsed}, want ${blobGasUsed}`);\n            }\n        }\n    }\n    /**\n     * Validates the uncle's hash.\n     * @returns true if the uncle's hash is valid, false otherwise.\n     */\n    uncleHashIsValid() {\n        const uncles = this.uncleHeaders.map((uh) => uh.raw());\n        const raw = RLP.encode(uncles);\n        return equalsBytes(this.keccakFunction(raw), this.header.uncleHash);\n    }\n    /**\n     * Validates the withdrawal root\n     * @returns true if the withdrawals trie root is valid, false otherwise\n     */\n    async withdrawalsTrieIsValid() {\n        if (!this.common.isActivatedEIP(4895)) {\n            throw new Error('EIP 4895 is not activated');\n        }\n        const withdrawalsRoot = await Block.genWithdrawalsTrieRoot(this.withdrawals, new Trie({ common: this.common }));\n        return equalsBytes(withdrawalsRoot, this.header.withdrawalsRoot);\n    }\n    /**\n     * Consistency checks for uncles included in the block, if any.\n     *\n     * Throws if invalid.\n     *\n     * The rules for uncles checked are the following:\n     * Header has at most 2 uncles.\n     * Header does not count an uncle twice.\n     */\n    validateUncles() {\n        if (this.isGenesis()) {\n            return;\n        }\n        // Header has at most 2 uncles\n        if (this.uncleHeaders.length > 2) {\n            const msg = this._errorMsg('too many uncle headers');\n            throw new Error(msg);\n        }\n        // Header does not count an uncle twice.\n        const uncleHashes = this.uncleHeaders.map((header) => bytesToHex(header.hash()));\n        if (!(new Set(uncleHashes).size === uncleHashes.length)) {\n            const msg = this._errorMsg('duplicate uncles');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Returns the canonical difficulty for this block.\n     *\n     * @param parentBlock - the parent of this `Block`\n     */\n    ethashCanonicalDifficulty(parentBlock) {\n        return this.header.ethashCanonicalDifficulty(parentBlock.header);\n    }\n    /**\n     * Validates if the block gasLimit remains in the boundaries set by the protocol.\n     * Throws if invalid\n     *\n     * @param parentBlock - the parent of this `Block`\n     */\n    validateGasLimit(parentBlock) {\n        return this.header.validateGasLimit(parentBlock.header);\n    }\n    /**\n     * Returns the block in JSON format.\n     */\n    toJSON() {\n        const withdrawalsAttr = this.withdrawals\n            ? {\n                withdrawals: this.withdrawals.map((wt) => wt.toJSON()),\n            }\n            : {};\n        return {\n            header: this.header.toJSON(),\n            transactions: this.transactions.map((tx) => tx.toJSON()),\n            uncleHeaders: this.uncleHeaders.map((uh) => uh.toJSON()),\n            ...withdrawalsAttr,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let hash = '';\n        try {\n            hash = bytesToHex(this.hash());\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        let errorStr = `block number=${this.header.number} hash=${hash} `;\n        errorStr += `hf=${hf} baseFeePerGas=${this.header.baseFeePerGas ?? 'none'} `;\n        errorStr += `txs=${this.transactions.length} uncles=${this.uncleHeaders.length}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n_a = Block;\n/**\n *  Method to retrieve a block from a JSON-RPC provider and format as a {@link Block}\n * @param provider either a url for a remote provider or an Ethers JsonRpcProvider object\n * @param blockTag block hash or block number to be run\n * @param opts {@link BlockOptions}\n * @returns the block specified by `blockTag`\n */\nBlock.fromJsonRpcProvider = async (provider, blockTag, opts) => {\n    let blockData;\n    const providerUrl = getProvider(provider);\n    if (typeof blockTag === 'string' && blockTag.length === 66) {\n        blockData = await fetchFromProvider(providerUrl, {\n            method: 'eth_getBlockByHash',\n            params: [blockTag, true],\n        });\n    }\n    else if (typeof blockTag === 'bigint') {\n        blockData = await fetchFromProvider(providerUrl, {\n            method: 'eth_getBlockByNumber',\n            params: [bigIntToHex(blockTag), true],\n        });\n    }\n    else if (isHexPrefixed(blockTag) ||\n        blockTag === 'latest' ||\n        blockTag === 'earliest' ||\n        blockTag === 'pending' ||\n        blockTag === 'finalized' ||\n        blockTag === 'safe') {\n        blockData = await fetchFromProvider(providerUrl, {\n            method: 'eth_getBlockByNumber',\n            params: [blockTag, true],\n        });\n    }\n    else {\n        throw new Error(`expected blockTag to be block hash, bigint, hex prefixed string, or earliest/latest/pending; got ${blockTag}`);\n    }\n    if (blockData === null) {\n        throw new Error('No block data returned from provider');\n    }\n    const uncleHeaders = [];\n    if (blockData.uncles.length > 0) {\n        for (let x = 0; x < blockData.uncles.length; x++) {\n            const headerData = await fetchFromProvider(providerUrl, {\n                method: 'eth_getUncleByBlockHashAndIndex',\n                params: [blockData.hash, intToHex(x)],\n            });\n            uncleHeaders.push(headerData);\n        }\n    }\n    return blockFromRpc(blockData, uncleHeaders, opts);\n};\n//# sourceMappingURL=block.js.map","import { bigIntToHex } from '@ethereumjs/util';\n/**\n * Converts a beacon block execution payload JSON object {@link BeaconPayloadJson} to the {@link ExecutionPayload} data needed to construct a {@link Block}.\n * The JSON data can be retrieved from a consensus layer (CL) client on this Beacon API `/eth/v2/beacon/blocks/[block number]`\n */\nexport function executionPayloadFromBeaconPayload(payload) {\n    const executionPayload = {\n        parentHash: payload.parent_hash,\n        feeRecipient: payload.fee_recipient,\n        stateRoot: payload.state_root,\n        receiptsRoot: payload.receipts_root,\n        logsBloom: payload.logs_bloom,\n        prevRandao: payload.prev_randao,\n        blockNumber: bigIntToHex(BigInt(payload.block_number)),\n        gasLimit: bigIntToHex(BigInt(payload.gas_limit)),\n        gasUsed: bigIntToHex(BigInt(payload.gas_used)),\n        timestamp: bigIntToHex(BigInt(payload.timestamp)),\n        extraData: payload.extra_data,\n        baseFeePerGas: bigIntToHex(BigInt(payload.base_fee_per_gas)),\n        blockHash: payload.block_hash,\n        transactions: payload.transactions,\n    };\n    if (payload.withdrawals !== undefined && payload.withdrawals !== null) {\n        executionPayload.withdrawals = payload.withdrawals.map((wd) => ({\n            index: bigIntToHex(BigInt(wd.index)),\n            validatorIndex: bigIntToHex(BigInt(wd.validator_index)),\n            address: wd.address,\n            amount: bigIntToHex(BigInt(wd.amount)),\n        }));\n    }\n    if (payload.blob_gas_used !== undefined && payload.blob_gas_used !== null) {\n        executionPayload.blobGasUsed = bigIntToHex(BigInt(payload.blob_gas_used));\n    }\n    if (payload.excess_blob_gas !== undefined && payload.excess_blob_gas !== null) {\n        executionPayload.excessBlobGas = bigIntToHex(BigInt(payload.excess_blob_gas));\n    }\n    if (payload.parent_beacon_block_root !== undefined && payload.parent_beacon_block_root !== null) {\n        executionPayload.parentBeaconBlockRoot = payload.parent_beacon_block_root;\n    }\n    if (payload.execution_witness !== undefined && payload.execution_witness !== null) {\n        // the casing structure in payload is already camel case, might be updated in\n        // kaustinen relaunch\n        executionPayload.executionWitness = payload.execution_witness;\n    }\n    return executionPayload;\n}\n//# sourceMappingURL=from-beacon-payload.js.map","export const MAX_AMOUNT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nexport const DAI_PERMIT_TYPEHASH = \"0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb\";\nexport const EIP_2612_PERMIT_TYPEHASH = \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\";\nexport const EIP_2612_DOMAIN_TYPEHASH = \"0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\";\nexport const UNISWAP_DOMAIN_TYPEHASH = \"0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\";\nexport const _GLOBAL_INDEX_MAINNET_FLAG = BigInt(2 ** 64);\nexport enum Permit {\n    DAI = \"DAI\",\n    EIP_2612 = \"EIP_2612\",\n    UNISWAP = \"UNISWAP\",\n}\n","import { BaseWeb3Client } from \"../abstracts\";\nimport { MerkleTree } from \"./merkle_tree\";\nimport { setLengthLeft } from \"@ethereumjs/util\";\nimport { Keccak } from \"./keccak\";\nimport { BufferUtil } from \"./buffer-utils\";\nimport rlp from \"rlp\";\nimport { ITransactionReceipt, IBlock, IBlockWithTransaction } from \"../interfaces\";\nimport { mapPromise } from \"./map_promise\";\nimport { Trie as TRIE } from '@ethereumjs/trie';\nimport { BlockHeader } from '@ethereumjs/block';\nimport { Converter, promiseResolve, utils } from \"..\";\nimport { Common, Chain, Hardfork } from '@ethereumjs/common';\n\n// Implementation adapted from Tom French's `matic-proofs` library used under MIT License\n// https://github.com/TomAFrench/matic-proofs\n\nexport class ProofUtil {\n\n    static async getFastMerkleProof(\n        web3: BaseWeb3Client,\n        blockNumber: number,\n        startBlock: number,\n        endBlock: number\n    ): Promise<string[]> {\n        const merkleTreeDepth = Math.ceil(Math.log2(endBlock - startBlock + 1));\n\n        // We generate the proof root down, whereas we need from leaf up\n        const reversedProof: string[] = [];\n\n        const offset = startBlock;\n        const targetIndex = blockNumber - offset;\n        let leftBound = 0;\n        let rightBound = endBlock - offset;\n        //   console.log(\"Searching for\", targetIndex);\n        for (let depth = 0; depth < merkleTreeDepth; depth += 1) {\n            const nLeaves = 2 ** (merkleTreeDepth - depth);\n\n            // The pivot leaf is the last leaf which is included in the left subtree\n            const pivotLeaf = leftBound + nLeaves / 2 - 1;\n\n            if (targetIndex > pivotLeaf) {\n                // Get the root hash to the merkle subtree to the left\n                const newLeftBound = pivotLeaf + 1;\n                // eslint-disable-next-line no-await-in-loop\n                const subTreeMerkleRoot = await this.queryRootHash(web3, offset + leftBound, offset + pivotLeaf);\n                reversedProof.push(subTreeMerkleRoot);\n                leftBound = newLeftBound;\n            } else {\n                // Things are more complex when querying to the right.\n                // Root hash may come some layers down so we need to build a full tree by padding with zeros\n                // Some trees may be completely empty\n\n                const newRightBound = Math.min(rightBound, pivotLeaf);\n\n                // Expect the merkle tree to have a height one less than the current layer\n                const expectedHeight = merkleTreeDepth - (depth + 1);\n                if (rightBound <= pivotLeaf) {\n                    // Tree is empty so we repeatedly hash zero to correct height\n                    const subTreeMerkleRoot = this.recursiveZeroHash(expectedHeight, web3);\n                    reversedProof.push(subTreeMerkleRoot);\n                } else {\n                    // Height of tree given by RPC node\n                    const subTreeHeight = Math.ceil(Math.log2(rightBound - pivotLeaf));\n\n                    // Find the difference in height between this and the subtree we want\n                    const heightDifference = expectedHeight - subTreeHeight;\n\n                    // For every extra layer we need to fill 2*n leaves filled with the merkle root of a zero-filled Merkle tree\n                    // We need to build a tree which has heightDifference layers\n\n                    // The first leaf will hold the root hash as returned by the RPC\n                    // eslint-disable-next-line no-await-in-loop\n                    const remainingNodesHash = await this.queryRootHash(web3, offset + pivotLeaf + 1, offset + rightBound);\n\n                    // The remaining leaves will hold the merkle root of a zero-filled tree of height subTreeHeight\n                    const leafRoots = this.recursiveZeroHash(subTreeHeight, web3);\n\n                    // Build a merkle tree of correct size for the subtree using these merkle roots\n                    const leaves = Array.from({ length: 2 ** heightDifference }, () => BufferUtil.toBuffer(leafRoots));\n                    leaves[0] = remainingNodesHash;\n                    const subTreeMerkleRoot = new MerkleTree(leaves).getRoot();\n                    reversedProof.push(subTreeMerkleRoot);\n                }\n                rightBound = newRightBound;\n            }\n        }\n\n        return reversedProof.reverse();\n    }\n\n    static buildBlockProof(maticWeb3: BaseWeb3Client, startBlock: number, endBlock: number, blockNumber: number) {\n        return ProofUtil.getFastMerkleProof(\n            maticWeb3, blockNumber, startBlock, endBlock\n        ).then(proof => {\n            return BufferUtil.bufferToHex(\n                Buffer.concat(\n                    proof.map(p => {\n                        return BufferUtil.toBuffer(p);\n                    })\n                )\n            );\n        });\n    }\n\n    static queryRootHash(client: BaseWeb3Client, startBlock: number, endBlock: number) {\n        return client.getRootHash(startBlock, endBlock).then(rootHash => {\n            return BufferUtil.toBuffer(`0x${rootHash}`);\n        }).catch(_ => {\n            return null;\n        });\n    }\n\n    static recursiveZeroHash(n: number, client: BaseWeb3Client) {\n        if (n === 0) return '0x0000000000000000000000000000000000000000000000000000000000000000';\n        const subHash = this.recursiveZeroHash(n - 1, client);\n        return Keccak.keccak256(\n            BufferUtil.toBuffer(client.encodeParameters([subHash, subHash], ['bytes32', 'bytes32'],))\n        );\n    }\n\n    static getReceiptProof(receipt: ITransactionReceipt, block: IBlockWithTransaction, web3: BaseWeb3Client, requestConcurrency = Infinity, receiptsVal?: ITransactionReceipt[]) {\n        const stateSyncTxHash = BufferUtil.bufferToHex(ProofUtil.getStateSyncTxHash(block));\n        const receiptsTrie = new TRIE();\n        let receiptPromise: Promise<ITransactionReceipt[]>;\n        if (!receiptsVal) {\n            const receiptPromises = [];\n            block.transactions.forEach(tx => {\n                if (tx.transactionHash === stateSyncTxHash) {\n                    // ignore if tx hash is bor state-sync tx\n                    return;\n                }\n                receiptPromises.push(\n                    web3.getTransactionReceipt(tx.transactionHash)\n                );\n            });\n            receiptPromise = mapPromise(\n                receiptPromises,\n                val => {\n                    return val;\n                },\n                {\n                    concurrency: requestConcurrency,\n                }\n            );\n        }\n        else {\n            receiptPromise = promiseResolve(receiptsVal);\n        }\n\n        return receiptPromise.then(receipts => {\n            return Promise.all(\n                receipts.map(siblingReceipt => {\n                    const path = rlp.encode(siblingReceipt.transactionIndex);\n                    const rawReceipt = ProofUtil.getReceiptBytes(siblingReceipt);\n                    return receiptsTrie.put(path, rawReceipt);\n                })\n            );\n        }).then(_ => {\n            return receiptsTrie.findPath(rlp.encode(receipt.transactionIndex), true);\n        }).then(result => {\n            if (result.remaining.length > 0) {\n                throw new Error('Node does not contain the key');\n            }\n            // result.node.value\n            const prf = {\n                blockHash: BufferUtil.toBuffer(receipt.blockHash),\n                parentNodes: result.stack.map(s => s.raw()),\n                root: ProofUtil.getRawHeader(block).receiptTrie,\n                path: rlp.encode(receipt.transactionIndex),\n                value: ProofUtil.isTypedReceipt(receipt) ? result.node.value : rlp.decode(result.node.value.toString())\n            };\n            return prf;\n        });\n    }\n\n    static isTypedReceipt(receipt: ITransactionReceipt) {\n        const hexType = Converter.toHex(receipt.type);\n        return receipt.status != null && hexType !== \"0x0\" && hexType !== \"0x\";\n    }\n\n    // getStateSyncTxHash returns block's tx hash for state-sync receipt\n    // Bor blockchain includes extra receipt/tx for state-sync logs,\n    // but it is not included in transactionRoot or receiptRoot.\n    // So, while calculating proof, we have to exclude them.\n    //\n    // This is derived from block's hash and number\n    // state-sync tx hash = keccak256(\"matic-bor-receipt-\" + block.number + block.hash)\n    static getStateSyncTxHash(block): Buffer {\n        return Keccak.keccak256(\n            Buffer.concat([\n                // prefix for bor receipt\n                Buffer.from('matic-bor-receipt-', 'utf-8'),\n                setLengthLeft(BufferUtil.toBuffer(block.number), 8), // 8 bytes of block number (BigEndian)\n                BufferUtil.toBuffer(block.hash), // block hash\n            ])\n        );\n    }\n\n    static getReceiptBytes(receipt: ITransactionReceipt) {\n        let encodedData = rlp.encode([\n            BufferUtil.toBuffer(\n                receipt.status !== undefined && receipt.status != null ? (receipt.status ? '0x1' : '0x') : receipt.root\n            ),\n            BufferUtil.toBuffer(receipt.cumulativeGasUsed),\n            BufferUtil.toBuffer(receipt.logsBloom),\n            // encoded log array\n            receipt.logs.map(l => {\n                // [address, [topics array], data]\n                return [\n                    BufferUtil.toBuffer(l.address), // convert address to buffer\n                    l.topics.map(BufferUtil.toBuffer), // convert topics to buffer\n                    BufferUtil.toBuffer(l.data), // convert data to buffer\n                ];\n            }),\n        ]);\n        if (ProofUtil.isTypedReceipt(receipt)) {\n            encodedData = Buffer.concat([BufferUtil.toBuffer(receipt.type), encodedData]);\n        }\n        return encodedData;\n    }\n\n    static getRawHeader(_block) {\n        _block.difficulty = Converter.toHex(_block.difficulty) as any;\n        const common = new Common({\n            chain: Chain.Mainnet, hardfork: Hardfork.London\n        });\n        const rawHeader = BlockHeader.fromHeaderData(_block, {\n            common: common,\n            skipConsensusFormatValidation: true\n        });\n        return rawHeader;\n    }\n}\n","const fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response> =\n    (() => {\n        if (process.env.BUILD_ENV === \"node\") {\n            return require('node-fetch').default;\n        }\n        return window.fetch;\n    })();\n\n\nexport class HttpRequest {\n    baseUrl = \"\";\n\n    constructor(option: { baseUrl: string } | string = {} as any) {\n        option = typeof option === \"string\" ? {\n            baseUrl: option\n        } : option;\n\n        if (option.baseUrl) {\n            this.baseUrl = option.baseUrl;\n        }\n    }\n\n    get<T>(url = \"\", query = {}): Promise<T> {\n        url = this.baseUrl + url + Object.keys(query).\n            map(key => `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`).join('&');\n\n        return fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(res => {\n            return res.json();\n        });\n    }\n\n    post(url = \"\", body) {\n        url = this.baseUrl + url;\n\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: body ? JSON.stringify(body) : null\n        }).then(res => {\n            return res.json();\n        });\n    }\n}","import { IBaseClientConfig } from \"../interfaces\";\nimport { BaseWeb3Client } from \"../abstracts\";\nimport { ABIManager } from \"../utils\";\nimport { Logger } from \"./logger\";\nimport { utils } from \"..\";\n\nconst chainIdToConfigPath = {\n    1: 'Main',\n    5: 'Main',\n    11155111: 'Main',\n    137: 'Matic',\n    80001: 'Matic',\n    80002: 'Matic',\n    1442: 'zkEVM',\n    2442: 'zkEVM',\n    1101: 'zkEVM'\n};\n\nexport class Web3SideChainClient<T_CONFIG> {\n    parent: BaseWeb3Client;\n    child: BaseWeb3Client;\n\n    config: T_CONFIG;\n\n    abiManager: ABIManager;\n\n    logger = new Logger();\n    resolution: {};\n\n    init(config: IBaseClientConfig) {\n        config = config || {} as any;\n        config.parent.defaultConfig = config.parent.defaultConfig || {} as any;\n        config.child.defaultConfig = config.child.defaultConfig || {} as any;\n        this.config = config as any;\n\n        // tslint:disable-next-line\n        const Web3Client = utils.Web3Client;\n\n        if (!Web3Client) {\n            throw new Error(\"Web3Client is not set\");\n        }\n\n        if (utils.UnstoppableDomains) {\n            this.resolution = utils.UnstoppableDomains;\n        }\n\n        this.parent = new (Web3Client as any)(config.parent.provider, this.logger);\n        this.child = new (Web3Client as any)(config.child.provider, this.logger);\n\n        this.logger.enableLog(config.log);\n\n        const network = config.network;\n        const version = config.version;\n        const abiManager = this.abiManager =\n            new ABIManager(network, version);\n        this.logger.log(\"init called\", abiManager);\n        return abiManager.init().catch(err => {\n            throw new Error(`network ${network} - ${version} is not supported`);\n        });\n    }\n\n    getABI(name: string, type?: string) {\n        return this.abiManager.getABI(name, type);\n    }\n\n    getConfig(path: string) {\n        return this.abiManager.getConfig(path);\n    }\n\n    get mainPlasmaContracts() {\n        return this.getConfig(\"Main.Contracts\");\n    }\n\n    get mainPOSContracts() {\n        return this.getConfig(\"Main.POSContracts\");\n    }\n\n    get mainZkEvmContracts() {\n        return this.getConfig(\"Main.Contracts\");\n    }\n\n    get zkEvmContracts() {\n        return this.getConfig(\"zkEVM.Contracts\");\n    }\n\n    isEIP1559Supported(chainId: number): boolean {\n        return this.getConfig(`${chainIdToConfigPath[chainId]}.SupportsEIP1559`);\n    }\n\n}\n","export const promiseResolve = <T>(value?) => {\n    return Promise.resolve<T>(value);\n};\n\nexport const promiseAny = (promisesArray) => {\n    const promiseErrors = new Array(promisesArray.length);\n    let counter = 0;\n\n    //return a new promise\n    return new Promise((resolve, reject) => {\n        promisesArray.forEach((promise) => {\n            Promise.resolve(promise)\n                .then(resolve) // resolve, when any of the input promise resolves\n                .catch((error) => {\n                    promiseErrors[counter] = error;\n                    counter = counter + 1;\n                    if (counter === promisesArray.length) {\n                        // all promises rejected, reject outer promise\n                        reject(promiseErrors);\n                    }\n                }); // reject, when any of the input promise rejects\n        });\n    });\n};\n","import { Web3SideChainClient } from \"./web3_side_chain_client\";\nimport { ITransactionRequestConfig, ITransactionOption, IContractInitParam, IBaseClientConfig, ITransactionWriteResult } from \"../interfaces\";\nimport { BaseContractMethod, BaseContract } from \"../abstracts\";\nimport { Converter, merge, utils } from \"../utils\";\nimport { promiseResolve } from \"./promise_resolve\";\nimport { ERROR_TYPE } from \"../enums\";\nimport { POSERC1155TransferParam, TYPE_AMOUNT } from \"../types\";\nimport { ErrorHelper } from \"./error_helper\";\nimport { ADDRESS_ZERO } from '../constant';\n\nexport interface ITransactionConfigParam {\n    txConfig: ITransactionRequestConfig;\n    method?: BaseContractMethod;\n    isWrite?: boolean;\n    isParent?: boolean;\n}\n\nexport class BaseToken<T_CLIENT_CONFIG> {\n\n    private contract_: BaseContract;\n    private chainId_: number;\n\n    constructor(\n        protected contractParam: IContractInitParam,\n        protected client: Web3SideChainClient<T_CLIENT_CONFIG>,\n    ) {\n    }\n\n    get contractAddress() {\n        return this.contractParam.address;\n    }\n\n    getContract(): Promise<BaseContract> {\n        if (this.contract_) {\n            return promiseResolve<BaseContract>(this.contract_ as any);\n        }\n        const contractParam = this.contractParam;\n        return this.client.getABI(\n            contractParam.name,\n            contractParam.bridgeType,\n        ).then(abi => {\n            this.contract_ = this.getContract_({\n                abi,\n                isParent: contractParam.isParent,\n                tokenAddress: contractParam.address\n            });\n            return this.contract_;\n        });\n    }\n\n    getChainId(): Promise<number> {\n        if (this.chainId_) {\n            return promiseResolve<number>(this.chainId_ as any);\n        }\n        const client = this.getClient(this.contractParam.isParent);\n        return client.getChainId().then(chainId => {\n            this.chainId_ = chainId;\n            return this.chainId_;\n        });\n    }\n\n    protected processWrite(method: BaseContractMethod, option: ITransactionOption = {}): Promise<ITransactionWriteResult> {\n        this.validateTxOption_(option);\n\n        this.client.logger.log(\"process write\");\n        return this.createTransactionConfig(\n            {\n                txConfig: option,\n                isWrite: true,\n                method,\n                isParent: this.contractParam.isParent\n            }).then(config => {\n                this.client.logger.log(\"process write config\");\n                if (option.returnTransaction) {\n                    return merge(config, {\n                        data: method.encodeABI(),\n                        to: method.address\n                    } as ITransactionRequestConfig);\n                }\n                const methodResult = method.write(\n                    config,\n                );\n                return methodResult;\n            });\n    }\n\n    protected sendTransaction(option: ITransactionOption = {}): Promise<ITransactionWriteResult> {\n        this.validateTxOption_(option);\n\n        const isParent = this.contractParam.isParent;\n        const client = this.getClient(isParent);\n        client.logger.log(\"process write\");\n\n        return this.createTransactionConfig(\n            {\n                txConfig: option,\n                isWrite: true,\n                method: null as any,\n                isParent: this.contractParam.isParent\n            }).then(config => {\n                client.logger.log(\"process write config\");\n                if (option.returnTransaction) {\n                    return config as any;\n                }\n                const methodResult = client.write(\n                    config,\n                );\n                return methodResult;\n            });\n    }\n\n    protected readTransaction(option: ITransactionOption = {}): Promise<ITransactionWriteResult> {\n        this.validateTxOption_(option);\n        const isParent = this.contractParam.isParent;\n        const client = this.getClient(isParent);\n        client.logger.log(\"process read\");\n        return this.createTransactionConfig(\n            {\n                txConfig: option,\n                isWrite: true,\n                method: null as any,\n                isParent: this.contractParam.isParent\n            }).then(config => {\n                client.logger.log(\"write tx config created\");\n                if (option.returnTransaction) {\n                    return config as any;\n                }\n                return client.read(\n                    config,\n                );\n            });\n    }\n\n    private validateTxOption_(option: ITransactionOption) {\n        if (typeof option !== 'object' || Array.isArray(option)) {\n            new ErrorHelper(ERROR_TYPE.TransactionOptionNotObject).throw();\n        }\n    }\n\n    protected processRead<T>(method: BaseContractMethod, option: ITransactionOption = {}): Promise<T> {\n        this.validateTxOption_(option);\n        this.client.logger.log(\"process read\");\n        return this.createTransactionConfig(\n            {\n                txConfig: option,\n                isWrite: false,\n                method,\n                isParent: this.contractParam.isParent\n            }).then(config => {\n                this.client.logger.log(\"read tx config created\");\n                if (option.returnTransaction) {\n                    return merge(config, {\n                        data: method.encodeABI(),\n                        to: this.contract_.address\n                    } as ITransactionRequestConfig);\n                }\n                return method.read(\n                    config,\n                );\n            });\n    }\n\n    protected getClient(isParent) {\n        return isParent ? this.client.parent :\n            this.client.child;\n    }\n\n    private getContract_({ isParent, tokenAddress, abi }) {\n        const client = this.getClient(isParent);\n        return client.getContract(tokenAddress, abi);\n    }\n\n    protected get parentDefaultConfig() {\n        const config: IBaseClientConfig = this.client.config as any;\n        return config.parent.defaultConfig;\n    }\n\n    protected get childDefaultConfig() {\n        const config: IBaseClientConfig = this.client.config as any;\n        return config.child.defaultConfig;\n    }\n\n    protected createTransactionConfig({ txConfig, method, isParent, isWrite }: ITransactionConfigParam) {\n        const defaultConfig = isParent ? this.parentDefaultConfig : this.childDefaultConfig;\n        txConfig = merge(defaultConfig, (txConfig || {}));\n        const client = isParent ? this.client.parent :\n            this.client.child;\n        client.logger.log(\"txConfig\", txConfig, \"onRoot\", isParent, \"isWrite\", isWrite);\n        const estimateGas = async (config: ITransactionRequestConfig) => {\n            const result = method ? await method.estimateGas(config) : await client.estimateGas(config);\n            return new utils.BN(Math.trunc(Number(result) * 1.15)).toString();\n        };\n        // txConfig.chainId = Converter.toHex(txConfig.chainId) as any;\n        if (isWrite) {\n            return this.getChainId().then(clientChainId => {\n                const { maxFeePerGas, maxPriorityFeePerGas } = txConfig;\n\n                const isEIP1559Supported = this.client.isEIP1559Supported(clientChainId);\n                const isMaxFeeProvided = (maxFeePerGas || maxPriorityFeePerGas);\n                txConfig.chainId = txConfig.chainId || clientChainId;\n\n                if (!isEIP1559Supported && isMaxFeeProvided) {\n                    client.logger.error(ERROR_TYPE.EIP1559NotSupported, isParent).throw();\n                }\n                // const [gasLimit, nonce] = \n                return Promise.all([\n                    !(txConfig.gasLimit)\n                        ? estimateGas({\n                            from: txConfig.from, value: txConfig.value, to: txConfig.to\n                        })\n                        : txConfig.gasLimit,\n                    !txConfig.nonce ?\n                        client.getTransactionCount(txConfig.from, 'pending')\n                        : txConfig.nonce\n                ]).then(result => {\n                    const [gasLimit, nonce] = result;\n                    client.logger.log(\"options filled\");\n\n                    txConfig.gasLimit = Number(gasLimit);\n                    txConfig.nonce = nonce;\n                    return txConfig;\n                });\n            });\n        }\n        return promiseResolve<ITransactionRequestConfig>(txConfig);\n    }\n\n    protected transferERC20(to: string, amount: TYPE_AMOUNT, option?: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"transfer\",\n                to,\n                Converter.toHex(amount)\n            );\n            return this.processWrite(\n                method, option\n            );\n        });\n    }\n\n    protected transferERC721(from: string, to: string, tokenId: string, option: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"transferFrom\",\n                from,\n                to,\n                tokenId\n            );\n            return this.processWrite(\n                method, option\n            );\n        });\n    }\n\n    protected checkForNonNative(methodName) {\n        if (this.contractParam.address === ADDRESS_ZERO) {\n            this.client.logger.error(ERROR_TYPE.AllowedOnNonNativeTokens, methodName).throw();\n        }\n    }\n\n    protected checkForRoot(methodName) {\n        if (!this.contractParam.isParent) {\n            this.client.logger.error(ERROR_TYPE.AllowedOnRoot, methodName).throw();\n        }\n    }\n\n    protected checkForChild(methodName) {\n        if (this.contractParam.isParent) {\n            this.client.logger.error(ERROR_TYPE.AllowedOnChild, methodName).throw();\n        }\n    }\n\n    protected checkAdapterPresent(methodName) {\n        if (!this.contractParam.bridgeAdapterAddress) {\n            this.client.logger.error(ERROR_TYPE.BridgeAdapterNotFound, methodName).throw();\n        }\n    }\n\n    protected transferERC1155(param: POSERC1155TransferParam, option: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"safeTransferFrom\",\n                param.from,\n                param.to,\n                Converter.toHex(param.tokenId),\n                Converter.toHex(param.amount),\n                param.data || '0x'\n            );\n            return this.processWrite(\n                method, option\n            );\n        });\n    }\n\n}\n","import { HttpRequest } from \"../utils\";\n\nexport class ABIService {\n    httpRequest: HttpRequest;\n\n    constructor(baseUrl: string) {\n        this.httpRequest = new HttpRequest(baseUrl);\n    }\n\n    getABI(network: string, version: string, bridgeType: string, contractName: string) {\n        const url = `${network}/${version}/artifacts/${bridgeType}/${contractName}.json`;\n        return this.httpRequest.get(url).then((result: any) => {\n            return result.abi;\n        });\n    }\n\n    getAddress(network: string, version: string) {\n        const url = `${network}/${version}/index.json`;\n        return this.httpRequest.get(url);\n    }\n}\n","export const config = {\n  abiStoreUrl: 'https://static.polygon.technology/network/',\n  zkEvmBridgeService: 'https://proof-generator.polygon.technology/',\n}\n","import { BaseBigNumber, utils } from \"..\";\nimport { HttpRequest } from \"../utils\";\n\nexport class NetworkService {\n    httpRequest: HttpRequest;\n\n    constructor(baseUrl: string) {\n        this.httpRequest = new HttpRequest(baseUrl);\n    }\n\n    private createUrlForPos(version: string, url: string) {\n        return `${version === 'v1' ? 'matic' : version}${url}`;\n    }\n\n    private createUrlForZkEvm(version: string, url: string) {\n        return `${version}/${url}`;\n    }\n\n    getBlockIncluded(version: string, blockNumber: number) {\n        const url = this.createUrlForPos(version, `/block-included/${blockNumber}`);\n        return this.httpRequest.get<{\n            start: string;\n            end: string;\n            headerBlockNumber: BaseBigNumber;\n        }>(url).then(result => {\n            const headerBlockNumber = result.headerBlockNumber as any as string;\n            const decimalHeaderBlockNumber = headerBlockNumber.slice(0, 2) === '0x' ? parseInt(\n                headerBlockNumber, 16\n            ) : headerBlockNumber;\n            result.headerBlockNumber = new utils.BN(decimalHeaderBlockNumber);\n            return result;\n        });\n    }\n\n    getExitProof(version: string, burnTxHash: string, eventSignature: string) {\n        const url = this.createUrlForPos(version, `/exit-payload/${burnTxHash}?eventSignature=${eventSignature}`);\n        return this.httpRequest.get<any>(url).then(result => {\n            return result.result;\n        });\n    }\n\n    getProof(version: string, start, end, blockNumber) {\n        const url = this.createUrlForPos(version, `/fast-merkle-proof?start=${start}&end=${end}&number=${blockNumber}`);\n        return this.httpRequest.get<any>(url).then(result => {\n            return result.proof;\n        });\n    }\n\n    getMerkleProofForZkEvm(version: string, networkID: number, depositCount: number) {\n        const url = this.createUrlForZkEvm(version, `merkle-proof?net_id=${networkID}&deposit_cnt=${depositCount}`);\n        return this.httpRequest.get<any>(url).then(result => {\n            return result.proof;\n        });\n    }\n\n    getBridgeTransactionDetails(version: string, networkID: number, depositCount: number) {\n        const url = this.createUrlForZkEvm(version, `bridge?net_id=${networkID}&deposit_cnt=${depositCount}`);\n        return this.httpRequest.get<any>(url).then(result => {\n            return result.deposit;\n        });\n    }\n}\n","import { ABIService } from \"./abi_service\";\nimport { config } from \"../config\";\nimport { NetworkService } from \"./network_service\";\n\nexport * from \"./network_service\";\n\nclass Service {\n    network: NetworkService;\n    zkEvmNetwork: NetworkService;\n    abi: ABIService;\n}\n\nexport const service = new Service();\nservice.abi = new ABIService(config.abiStoreUrl);\n\n\n\n","import { service, NetworkService } from \"../services\";\n\nexport const setProofApi = (url: string) => {\n    const urlLength = url.length;\n    if (url[urlLength - 1] !== '/') {\n        url += '/';\n    }\n    url += 'api/v1/';\n    service.network = new NetworkService(url);\n};\n\nexport const setZkEvmProofApi = (url: string) => {\n    const urlLength = url.length;\n    if (url[urlLength - 1] !== '/') {\n        url += '/';\n    }\n    url += 'api/zkevm/';\n    service.zkEvmNetwork = new NetworkService(url);\n};\n","export function resolve(obj, path) {\n    const properties = Array.isArray(path) ? path : path.split(\".\");\n    return properties.reduce((prev, curr) => prev && prev[curr], obj);\n}","import { Web3SideChainClient } from \"../utils\";\nimport { ExitUtil } from \"../pos\";\nimport { BaseToken, utils } from \"..\";\n\nexport class BridgeClient<T> {\n\n    client: Web3SideChainClient<T> = new Web3SideChainClient();\n\n    exitUtil: ExitUtil;\n\n    /**\n     * check whether a txHash is checkPointed \n     *\n     * @param {string} txHash\n     * @returns\n     * @memberof BridgeClient\n     */\n    isCheckPointed(txHash: string) {\n        return this.exitUtil.isCheckPointed(\n            txHash\n        );\n    }\n\n    isDeposited(depositTxHash: string) {\n        const client = this.client;\n\n        const token = new BaseToken({\n            address: client.abiManager.getConfig(\"Matic.GenesisContracts.StateReceiver\"),\n            isParent: false,\n            name: 'StateReceiver',\n            bridgeType: 'genesis'\n        }, client);\n\n        return token.getContract().then(contract => {\n            return Promise.all([\n                client.parent.getTransactionReceipt(depositTxHash),\n                token['processRead']<string>(\n                    contract.method(\"lastStateId\")\n                )\n            ]);\n        }).then(result => {\n            const [receipt, lastStateId] = result;\n            const eventSignature = `0x103fed9db65eac19c4d870f49ab7520fe03b99f1838e5996caf47e9e43308392`;\n            const targetLog = receipt.logs.find(q => q.topics[0] === eventSignature);\n            if (!targetLog) {\n                throw new Error(\"StateSynced event not found\");\n            }\n            const rootStateId = client.child.decodeParameters(targetLog.topics[1], ['uint256'])[0];\n            const rootStateIdBN = utils.BN.isBN(rootStateId) ? rootStateId : new utils.BN(rootStateId);\n            return new utils.BN(lastStateId).gte(\n                rootStateIdBN\n            );\n        });\n    }\n\n}","import { service } from \"../services\";\nimport { resolve, promiseResolve } from \".\";\n\ntype T_ABI_CACHE = {\n    [networkName: string]: {\n        [version: string]: {\n            address: any,\n            abi: {\n                [bridgeType: string]: {\n                    [contractName: string]: any\n                }\n            }\n        }\n    }\n};\n\nconst cache: T_ABI_CACHE = {};\n\nexport class ABIManager {\n    constructor(public networkName: string, public version: string) {\n\n    }\n\n    init() {\n        return service.abi.getAddress(\n            this.networkName, this.version\n        ).then(result => {\n            cache[this.networkName] = {\n                [this.version]: {\n                    address: result,\n                    abi: {}\n                }\n            };\n        });\n    }\n\n    getConfig(path: string) {\n        return resolve(\n            cache[this.networkName][this.version].address,\n            path\n        );\n    }\n\n    getABI(contractName: string, bridgeType = 'plasma'): Promise<any> {\n        let targetBridgeABICache;\n\n        if (\n            cache[this.networkName] && cache[this.networkName][this.version] &&\n            cache[this.networkName][this.version].abi\n        ) {\n            targetBridgeABICache = cache[this.networkName][this.version].abi[bridgeType];\n        }\n\n\n        if (targetBridgeABICache) {\n            const abiForContract = targetBridgeABICache[contractName];\n            if (abiForContract) {\n                return promiseResolve<any>(abiForContract);\n            }\n        }\n        return service.abi.getABI(\n            this.networkName,\n            this.version,\n            bridgeType,\n            contractName\n        ).then(result => {\n            this.setABI(contractName, bridgeType, result);\n            return result;\n        });\n    }\n\n    setABI(contractName: string, bridgeType: string, abi: any) {\n        const abiStore = cache[this.networkName][this.version].abi;\n        if (!abiStore[bridgeType]) {\n            abiStore[bridgeType] = {};\n        }\n        abiStore[bridgeType][contractName] = abi;\n    }\n}","export const throwNotImplemented = <T>() => {\n    throw new Error(\"not implemented\");\n    return '' as any as T;\n};","import { Web3SideChainClient } from \".\";\nimport { BridgeUtil, ZkEvmBridge } from \"../zkevm\";\nimport { service } from \"../services\";\nimport { IBaseClientConfig } from \"..\";\n\nexport class ZkEvmBridgeClient {\n\n    client: Web3SideChainClient<IBaseClientConfig> = new Web3SideChainClient();\n    bridgeUtil: BridgeUtil;\n    rootChainBridge: ZkEvmBridge;\n    childChainBridge: ZkEvmBridge;\n\n    /**\n     * check whether a txHash is synced with child chain\n     *\n     * @param {string} txHash\n     * @returns\n     * @memberof ZkEvmBridgeClient\n     */\n    isDepositClaimable(txHash: string) {\n        return Promise.all([this.rootChainBridge.networkID(), this.bridgeUtil.getBridgeLogData(\n            txHash, true\n        )]).then(result => {\n            return service.zkEvmNetwork.getBridgeTransactionDetails(\n                this.client.config.version,\n                result[0],\n                result[1].depositCount\n            );\n        }).then(details => {\n            return details.ready_for_claim;\n        });\n    }\n\n    /**\n     * check whether proof is submitted on parent chain\n     *\n     * @param {string} txHash\n     * @returns\n     * @memberof ZkEvmBridgeClient\n     */\n    isWithdrawExitable(txHash: string) {\n        return Promise.all([this.childChainBridge.networkID(), this.bridgeUtil.getBridgeLogData(\n            txHash, false\n        )]).then(result => {\n            return service.zkEvmNetwork.getBridgeTransactionDetails(\n                this.client.config.version,\n                result[0],\n                result[1].depositCount\n            );\n        }).then(details => {\n            return details.ready_for_claim;\n        });\n    }\n\n    /**\n     * check whether deposit is completed\n     *\n     * @param {string} txHash\n     * @returns\n     * @memberof ZkEvmBridgeClient\n     */\n    isDeposited(txHash: string) {\n        return this.bridgeUtil.getBridgeLogData(\n            txHash, true\n        ).then(result => {\n            return this.childChainBridge.isClaimed(result.depositCount, 0);\n        });\n    }\n\n    /**\n     * check whether deposit is completed\n     *\n     * @param {string} txHash\n     * @returns\n     * @memberof ZkEvmBridgeClient\n     */\n    isExited(txHash: string) {\n        return this.bridgeUtil.getBridgeLogData(\n            txHash, false\n        ).then(result => {\n            return this.rootChainBridge.isClaimed(result.depositCount, 1);\n        });\n    }\n\n}\n","import { BaseWeb3Client } from \"../abstracts\";\nimport { EmptyBigNumber } from \"../implementation\";\nimport { Converter } from \"./converter\";\n\nexport * from \"./use\";\nexport * from \"./event_bus\";\nexport * from \"./logger\";\nexport * from \"./merge\";\nexport * from \"./map_promise\";\nexport * from \"./proof_util\";\nexport * from \"./http_request\";\nexport * from \"./converter\";\nexport * from \"./web3_side_chain_client\";\nexport * from \"./base_token\";\nexport * from \"./set_proof_api_url\";\nexport * from \"./resolve\";\nexport * from \"./promise_resolve\";\nexport * from \"./bridge_client\";\nexport * from \"./abi_manager\";\nexport * from \"./not_implemented\";\nexport * from \"./zkevm_bridge_client\";\nexport * from \"./buffer-utils\";\nexport * from \"./keccak\";\nexport * from \"./types\";\n\nexport const utils = {\n    converter: Converter,\n    Web3Client: BaseWeb3Client,\n    BN: EmptyBigNumber,\n    UnstoppableDomains: Object\n};\n","import { BaseToken, Web3SideChainClient, promiseResolve } from \"../utils\";\nimport { IContractInitParam, IPOSClientConfig, ITransactionOption } from \"../interfaces\";\nimport { IPOSContracts } from \"../interfaces\";\n\nexport class POSToken extends BaseToken<IPOSClientConfig> {\n\n    private predicateAddress: string;\n\n    constructor(\n        contractParam: IContractInitParam,\n        client: Web3SideChainClient<IPOSClientConfig>,\n        protected getPOSContracts: () => IPOSContracts\n    ) {\n        super(contractParam, client);\n    }\n\n    protected get rootChainManager() {\n        return this.getPOSContracts().rootChainManager;\n    }\n\n    protected get gasSwapper() {\n        return this.getPOSContracts().gasSwapper;\n    }\n\n    protected get exitUtil() {\n        return this.getPOSContracts().exitUtil;\n    }\n\n\n    getPredicateAddress(): Promise<string> {\n        if (this.predicateAddress) {\n            return promiseResolve(this.predicateAddress);\n        }\n        return this.rootChainManager.method(\n            \"tokenToType\",\n            this.contractParam.address\n        ).then(method => {\n            return method.read();\n        }).then(tokenType => {\n            if (!tokenType) {\n                throw new Error('Invalid Token Type');\n            }\n            return this.rootChainManager.method(\n                \"typeToPredicate\", tokenType\n            );\n        }).then(typeToPredicateMethod => {\n            return typeToPredicateMethod.read<string>();\n        }).then(predicateAddress => {\n            this.predicateAddress = predicateAddress;\n            return predicateAddress;\n        });\n    }\n\n    protected isWithdrawn(txHash: string, eventSignature: string) {\n        if (!txHash) {\n            throw new Error(`txHash not provided`);\n        }\n        return this.exitUtil.getExitHash(\n            txHash, 0, eventSignature\n        ).then(exitHash => {\n            return this.rootChainManager.isExitProcessed(\n                exitHash\n            );\n        });\n    }\n\n    protected isWithdrawnOnIndex(txHash: string, index: number, eventSignature: string) {\n      if (!txHash) {\n          throw new Error(`txHash not provided`);\n      }\n      return this.exitUtil.getExitHash(\n          txHash, index, eventSignature\n      ).then(exitHash => {\n          return this.rootChainManager.isExitProcessed(\n              exitHash\n          );\n      });\n  }\n\n    protected withdrawExitPOS(burnTxHash: string, eventSignature: string, isFast: boolean, option: ITransactionOption) {\n        return this.exitUtil.buildPayloadForExit(\n            burnTxHash,\n            eventSignature,\n            isFast\n        ).then(payload => {\n            return this.rootChainManager.exit(\n                payload, option\n            );\n        });\n    }\n}\n","import { ITransactionOption } from \"../interfaces\";\nimport { Converter, Web3SideChainClient } from \"../utils\";\nimport { POSToken } from \"./pos_token\";\nimport { TYPE_AMOUNT } from \"../types\";\nimport { ERROR_TYPE, Log_Event_Signature } from \"../enums\";\nimport { MAX_AMOUNT, promiseResolve } from \"..\";\nimport { IAllowanceTransactionOption, IApproveTransactionOption, IExitTransactionOption, IPOSClientConfig, IPOSContracts } from \"../interfaces\";\n\nexport class ERC20 extends POSToken {\n\n    constructor(\n        tokenAddress: string,\n        isParent: boolean,\n        client: Web3SideChainClient<IPOSClientConfig>,\n        getContracts: () => IPOSContracts\n    ) {\n        super({\n            isParent,\n            address: tokenAddress,\n            name: 'ChildERC20',\n            bridgeType: 'pos'\n        }, client, getContracts);\n    }\n\n    getBalance(userAddress: string, option?: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"balanceOf\",\n                userAddress\n            );\n            return this.processRead<string>(method, option);\n        });\n    }\n\n    /**\n     * get allowance of user\n     *\n     * @param {string} userAddress\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    getAllowance(userAddress: string, option: IAllowanceTransactionOption = {}) {\n        const spenderAddress = option.spenderAddress;\n\n        const predicatePromise = spenderAddress ? promiseResolve(spenderAddress) : this.getPredicateAddress();\n\n        return Promise.all([predicatePromise, this.getContract()]).then(result => {\n            const [predicateAddress, contract] = result;\n            const method = contract.method(\n                \"allowance\",\n                userAddress,\n                predicateAddress,\n            );\n            return this.processRead<string>(method, option);\n        });\n    }\n\n    approve(amount: TYPE_AMOUNT, option: IApproveTransactionOption = {}) {\n        const spenderAddress = option.spenderAddress;\n\n        if (!spenderAddress && !this.contractParam.isParent) {\n            this.client.logger.error(ERROR_TYPE.NullSpenderAddress).throw();\n        }\n\n        const predicatePromise = spenderAddress ? promiseResolve(spenderAddress) : this.getPredicateAddress();\n\n        return Promise.all([predicatePromise, this.getContract()]).then(result => {\n            const [predicateAddress, contract] = result;\n            const method = contract.method(\n                \"approve\",\n                predicateAddress,\n                Converter.toHex(amount)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    approveMax(option: IApproveTransactionOption = {}) {\n        return this.approve(\n            MAX_AMOUNT\n            , option\n        );\n    }\n\n    /**\n     * Deposit given amount of token for user\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    deposit(amount: TYPE_AMOUNT, userAddress: string, option?: ITransactionOption) {\n        this.checkForRoot(\"deposit\");\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n        return this.rootChainManager.deposit(\n            userAddress,\n            this.contractParam.address,\n            amountInABI,\n            option\n        );\n    }\n\n    /**\n     * Deposit given amount of token for user along with ETHER for gas token\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    depositWithGas(amount: TYPE_AMOUNT, userAddress: string, swapEthAmount: TYPE_AMOUNT, swapCallData: string, option?: ITransactionOption) {\n        this.checkForRoot(\"deposit\");\n\n        return this.getChainId().then((chainId: number) => {\n            if (chainId !== 1) {\n                this.client.logger.error(ERROR_TYPE.AllowedOnMainnet).throw();\n            }\n            const amountInABI = this.client.parent.encodeParameters(\n                [Converter.toHex(amount)],\n                ['uint256'],\n            );\n\n            option.value = Converter.toHex(swapEthAmount);\n\n            return this.gasSwapper.depositWithGas(\n                this.contractParam.address,\n                amountInABI,\n                userAddress,\n                swapCallData,\n                option\n            );\n        });\n\n    }\n\n    private depositEther_(amount: TYPE_AMOUNT, userAddress: string, option: ITransactionOption = {}) {\n        this.checkForRoot(\"depositEther\");\n\n\n        option.value = Converter.toHex(amount);\n        return this.rootChainManager.method(\"depositEtherFor\", userAddress).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n    private depositEtherWithGas_(amount: TYPE_AMOUNT, userAddress: string, swapEthAmount: TYPE_AMOUNT, swapCallData: string, option: ITransactionOption = {}) {\n        this.checkForRoot(\"depositEtherWithGas\");\n\n        return this.getChainId().then((chainId: number) => {\n            if (chainId !== 1) {\n                this.client.logger.error(ERROR_TYPE.AllowedOnMainnet).throw();\n            }\n            const amountInABI = this.client.parent.encodeParameters(\n                [Converter.toHex(amount)],\n                ['uint256'],\n            );\n\n            option.value = Converter.toHex(\n                Converter.toBN(amount).add(\n                    Converter.toBN(swapEthAmount)\n                )\n            );\n\n            return this.gasSwapper.depositWithGas(\n                \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\",\n                amountInABI,\n                userAddress,\n                swapCallData,\n                option\n            );\n        });\n    }\n\n    /**\n     * initiate withdraw by burning provided amount\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    withdrawStart(amount: TYPE_AMOUNT, option?: ITransactionOption) {\n        this.checkForChild(\"withdrawStart\");\n\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"withdraw\",\n                Converter.toHex(amount)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    private withdrawExit_(burnTransactionHash: string, isFast: boolean, option: IExitTransactionOption = {}) {\n        const eventSignature = option.burnEventSignature ?\n            option.burnEventSignature : Log_Event_Signature.Erc20Transfer;\n\n        return this.exitUtil.buildPayloadForExit(\n            burnTransactionHash,\n            eventSignature,\n            isFast\n        ).then(payload => {\n            return this.rootChainManager.exit(\n                payload, option\n            );\n        });\n    }\n\n    /**\n     * complete withdraw process after checkpoint has been submitted for the block containing burn tx.\n     *\n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    withdrawExit(burnTransactionHash: string, option?: IExitTransactionOption) {\n        this.checkForRoot(\"withdrawExit\");\n\n        return this.withdrawExit_(burnTransactionHash, false, option);\n    }\n\n    /**\n     * complete withdraw process after checkpoint has been submitted for the block containing burn tx.\n     *\n     *  Note:- It create the proof in api call for fast exit.\n     * \n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    withdrawExitFaster(burnTransactionHash: string, option?: IExitTransactionOption) {\n        this.checkForRoot(\"withdrawExitFaster\");\n\n        return this.withdrawExit_(burnTransactionHash, true, option);\n    }\n\n    /**\n     * check if exit has been completed for a transaction hash\n     *\n     * @param {string} burnTxHash\n     * @returns\n     * @memberof ERC20\n     */\n    isWithdrawExited(burnTxHash: string) {\n        return this.isWithdrawn(burnTxHash, Log_Event_Signature.Erc20Transfer);\n    }\n\n    /**\n     * transfer amount to another user\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} to\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    transfer(amount: TYPE_AMOUNT, to: string, option?: ITransactionOption) {\n        return this.transferERC20(to, amount, option);\n    }\n\n}\n","import { BaseToken, Web3SideChainClient } from \"../utils\";\nimport { IPOSClientConfig, ITransactionOption } from \"../interfaces\";\n\nexport class RootChainManager extends BaseToken<IPOSClientConfig> {\n\n    constructor(client_: Web3SideChainClient<IPOSClientConfig>, address: string) {\n        super({\n            address: address,\n            name: 'RootChainManager',\n            bridgeType: 'pos',\n            isParent: true\n        }, client_);\n    }\n\n    method(methodName: string, ...args) {\n        return this.getContract().then(contract => {\n            return contract.method(methodName, ...args);\n        });\n    }\n\n    deposit(userAddress: string, tokenAddress: string, depositData: string, option?: ITransactionOption) {\n        return this.method(\n            \"depositFor\",\n            userAddress,\n            tokenAddress,\n            depositData\n        ).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n    exit(exitPayload: string, option: ITransactionOption) {\n        return this.method(\"exit\", exitPayload).then(method => {\n            return this.processWrite(\n                method,\n                option\n            );\n        });\n    }\n\n    isExitProcessed(exitHash: string) {\n        return this.method(\n            \"processedExits\", exitHash\n        ).then(method => {\n            return this.processRead<boolean>(method);\n        });\n    }\n\n}\n","import { RootChain } from \"./root_chain\";\nimport { Converter, ProofUtil, Web3SideChainClient } from \"../utils\";\nimport { BufferUtil } from \"../utils/buffer-utils\";\nimport rlp from \"rlp\";\nimport { IBlockWithTransaction, ITransactionReceipt } from \"../interfaces\";\nimport { service } from \"../services\";\nimport { BaseBigNumber, BaseWeb3Client } from \"../abstracts\";\nimport { ErrorHelper } from \"../utils/error_helper\";\nimport { ERROR_TYPE, IBaseClientConfig, IRootBlockInfo, utils } from \"..\";\n\ninterface IChainBlockInfo {\n    lastChildBlock: string;\n    txBlockNumber: number;\n}\n\n\n\nexport class ExitUtil {\n    private maticClient_: BaseWeb3Client;\n\n    rootChain: RootChain;\n\n    requestConcurrency: number;\n    config: IBaseClientConfig;\n\n    constructor(client: Web3SideChainClient<IBaseClientConfig>, rootChain: RootChain) {\n        this.maticClient_ = client.child;\n        this.rootChain = rootChain;\n        const config = client.config;\n        this.config = config;\n        this.requestConcurrency = config.requestConcurrency;\n    }\n\n    private getLogIndex_(logEventSig: string, receipt: ITransactionReceipt) {\n        let logIndex = -1;\n\n        switch (logEventSig) {\n            case '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef':\n            case '0xf94915c6d1fd521cee85359239227480c7e8776d7caf1fc3bacad5c269b66a14':\n                logIndex = receipt.logs.findIndex(\n                    log =>\n                        log.topics[0].toLowerCase() === logEventSig.toLowerCase() &&\n                        log.topics[2].toLowerCase() === '0x0000000000000000000000000000000000000000000000000000000000000000'\n                );\n                break;\n\n            case '0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62':\n            case '0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb':\n                logIndex = receipt.logs.findIndex(\n                    log =>\n                        log.topics[0].toLowerCase() === logEventSig.toLowerCase() &&\n                        log.topics[3].toLowerCase() === '0x0000000000000000000000000000000000000000000000000000000000000000'\n                );\n                break;\n\n            default:\n                logIndex = receipt.logs.findIndex(log => log.topics[0].toLowerCase() === logEventSig.toLowerCase());\n        }\n        if (logIndex < 0) {\n            throw new Error(\"Log not found in receipt\");\n        }\n        return logIndex;\n    }\n\n    private getAllLogIndices_(logEventSig: string, receipt: ITransactionReceipt) {\n        let logIndices = [];\n\n        switch (logEventSig) {\n            case '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef':\n            case '0xf94915c6d1fd521cee85359239227480c7e8776d7caf1fc3bacad5c269b66a14':\n                logIndices = receipt.logs.reduce(\n                    (_, log, index) =>\n                    ((log.topics[0].toLowerCase() === logEventSig.toLowerCase() &&\n                        log.topics[2].toLowerCase() === '0x0000000000000000000000000000000000000000000000000000000000000000') &&\n                        logIndices.push(index), logIndices), []\n                );\n                break;\n\n            case '0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62':\n            case '0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb':\n                logIndices = receipt.logs.reduce(\n                    (_, log, index) =>\n                    ((log.topics[0].toLowerCase() === logEventSig.toLowerCase() &&\n                        log.topics[3].toLowerCase() === '0x0000000000000000000000000000000000000000000000000000000000000000') &&\n                        logIndices.push(index), logIndices), []\n                );\n                break;\n\n            case '0xf871896b17e9cb7a64941c62c188a4f5c621b86800e3d15452ece01ce56073df':\n                logIndices = receipt.logs.reduce(\n                    (_, log, index) =>\n                    ((log.topics[0].toLowerCase() === '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef' &&\n                        log.topics[2].toLowerCase() === '0x0000000000000000000000000000000000000000000000000000000000000000') &&\n                        logIndices.push(index), logIndices), []\n                );\n                break;\n\n            default:\n                logIndices = receipt.logs.reduce(\n                    (_, log, index) =>\n                    ((log.topics[0].toLowerCase() === logEventSig.toLowerCase()) &&\n                        logIndices.push(index), logIndices), []\n                );\n        }\n        if (logIndices.length === 0) {\n            throw new Error(\"Log not found in receipt\");\n        }\n        return logIndices;\n    }\n\n    getChainBlockInfo(burnTxHash: string) {\n        return Promise.all([\n            this.rootChain.getLastChildBlock(),\n            this.maticClient_.getTransaction(burnTxHash),\n        ]).then(result => {\n            return {\n                lastChildBlock: result[0],\n                txBlockNumber: result[1].blockNumber\n            } as IChainBlockInfo;\n        });\n    }\n\n    private isCheckPointed_(data: IChainBlockInfo) {\n        // lastchild block is greater equal to transaction block number; \n        return new utils.BN(data.lastChildBlock).gte(\n            new utils.BN(data.txBlockNumber)\n        );\n    }\n\n    isCheckPointed(burnTxHash: string) {\n        return this.getChainBlockInfo(\n            burnTxHash\n        ).then(result => {\n            return this.isCheckPointed_(\n                result\n            );\n        });\n    }\n\n    /**\n     * returns info about block number existence on parent chain\n     * 1. root block number, \n     * 2. start block number, \n     * 3. end block number \n     *\n     * @private\n     * @param {number} txBlockNumber - transaction block number on child chain\n     * @return {*} \n     * @memberof ExitUtil\n     */\n    private getRootBlockInfo(txBlockNumber: number) {\n        // find in which block child was included in parent\n        let rootBlockNumber: BaseBigNumber;\n        return this.rootChain.findRootBlockFromChild(\n            txBlockNumber\n        ).then(blockNumber => {\n            rootBlockNumber = blockNumber;\n            return this.rootChain.method(\n                \"headerBlocks\",\n                Converter.toHex(blockNumber)\n            );\n        }).then(method => {\n            return method.read<IRootBlockInfo>();\n        }).then(rootBlockInfo => {\n            return {\n                // header block number - root block number in which child block exist \n                headerBlockNumber: rootBlockNumber,\n                // range of block\n                // end - block end number\n                end: rootBlockInfo.end.toString(),\n                // start - block start number\n                start: rootBlockInfo.start.toString(),\n            } as IRootBlockInfo;\n        });\n\n    }\n\n    private getRootBlockInfoFromAPI(txBlockNumber: number) {\n        this.maticClient_.logger.log(\"block info from API 1\");\n        return service.network.getBlockIncluded(\n            this.config.version,\n            txBlockNumber\n        ).then(headerBlock => {\n            this.maticClient_.logger.log(\"block info from API 2\", headerBlock);\n            if (!headerBlock || !headerBlock.start || !headerBlock.end || !headerBlock.headerBlockNumber) {\n                throw Error('Network API Error');\n            }\n            return headerBlock;\n        }).catch(err => {\n            this.maticClient_.logger.log(\"block info from API\", err);\n            return this.getRootBlockInfo(txBlockNumber);\n        });\n    }\n\n    private getBlockProof(txBlockNumber: number, rootBlockInfo: { start, end }) {\n        return ProofUtil.buildBlockProof(\n            this.maticClient_,\n            parseInt(rootBlockInfo.start, 10),\n            parseInt(rootBlockInfo.end, 10),\n            parseInt(txBlockNumber + '', 10)\n        );\n    }\n\n    private getBlockProofFromAPI(txBlockNumber: number, rootBlockInfo: { start, end }) {\n\n        return service.network.getProof(\n            this.config.version,\n            rootBlockInfo.start,\n            rootBlockInfo.end,\n            txBlockNumber\n        ).then(blockProof => {\n            if (!blockProof) {\n                throw Error('Network API Error');\n            }\n            this.maticClient_.logger.log(\"block proof from API 1\");\n            return blockProof;\n        }).catch(_ => {\n            return this.getBlockProof(txBlockNumber, rootBlockInfo);\n        });\n    }\n\n    private getExitProofFromAPI(burnHash: string, eventSignature: string) {\n\n        return service.network.getExitProof(\n            this.config.version, burnHash, eventSignature\n        ).then(exitProof => {\n            if (!exitProof) {\n                throw Error('Network API Error');\n            }\n            this.maticClient_.logger.log(\"exit proof from API 1\");\n            return exitProof;\n        }).catch(_ => {\n            return this.buildPayloadForExit(burnHash, eventSignature, false);\n        });\n    }\n\n    buildPayloadForExit(burnTxHash: string, logEventSig: string, isFast: boolean, index = 0) {\n\n        if (isFast && !service.network) {\n            new ErrorHelper(ERROR_TYPE.ProofAPINotSet).throw();\n        }\n\n        if (index < 0) {\n            throw new Error('Index must not be a negative integer');\n        }\n\n        let txBlockNumber: number,\n            rootBlockInfo: IRootBlockInfo,\n            receipt: ITransactionReceipt,\n            block: IBlockWithTransaction,\n            blockProof;\n\n        if (isFast) {\n            return this.getExitProofFromAPI(burnTxHash, logEventSig);\n        }\n\n        return this.getChainBlockInfo(\n            burnTxHash\n        ).then(blockInfo => {\n            if (!this.isCheckPointed_(blockInfo)) {\n                throw new Error(\n                    'Burn transaction has not been checkpointed as yet'\n                );\n            }\n\n            // step 1 - Get Block number from transaction hash\n            txBlockNumber = blockInfo.txBlockNumber;\n            // step 2-  get transaction receipt from txhash and \n            // block information from block number\n            return Promise.all([\n                this.maticClient_.getTransactionReceipt(burnTxHash),\n                this.maticClient_.getBlockWithTransaction(txBlockNumber)\n            ]);\n        }).then(result => {\n            [receipt, block] = result;\n            // step  3 - get information about block saved in parent chain \n            return this.getRootBlockInfo(txBlockNumber);\n        }).then(rootBlockInfoResult => {\n            rootBlockInfo = rootBlockInfoResult;\n            // step 4 - build block proof\n            return this.getBlockProof(txBlockNumber, rootBlockInfo);\n        }).then(blockProofResult => {\n            blockProof = blockProofResult;\n            // step 5- create receipt proof\n            return ProofUtil.getReceiptProof(\n                receipt,\n                block,\n                this.maticClient_,\n                this.requestConcurrency\n            );\n        }).then((receiptProof: any) => {\n            // step 6 - encode payload, convert into hex\n\n            // when token index is not 0\n            if (index > 0) {\n                const logIndices = this.getAllLogIndices_(\n                    logEventSig, receipt\n                );\n\n                if (index >= logIndices.length) {\n                    throw new Error('Index is greater than the number of tokens in this transaction');\n                }\n\n                return this.encodePayload_(\n                    rootBlockInfo.headerBlockNumber.toNumber(),\n                    blockProof,\n                    txBlockNumber,\n                    block.timestamp,\n                    Buffer.from(block.transactionsRoot.slice(2), 'hex'),\n                    Buffer.from(block.receiptsRoot.slice(2), 'hex'),\n                    ProofUtil.getReceiptBytes(receipt), // rlp encoded\n                    receiptProof.parentNodes,\n                    receiptProof.path,\n                    logIndices[index]\n                );\n            }\n\n            // when token index is 0\n            const logIndex = this.getLogIndex_(\n                logEventSig, receipt\n            );\n\n            return this.encodePayload_(\n                rootBlockInfo.headerBlockNumber.toNumber(),\n                blockProof,\n                txBlockNumber,\n                block.timestamp,\n                Buffer.from(block.transactionsRoot.slice(2), 'hex'),\n                Buffer.from(block.receiptsRoot.slice(2), 'hex'),\n                ProofUtil.getReceiptBytes(receipt), // rlp encoded\n                receiptProof.parentNodes,\n                receiptProof.path,\n                logIndex\n            );\n        });\n    }\n\n    buildMultiplePayloadsForExit(burnTxHash: string, logEventSig: string, isFast: boolean) {\n\n        if (isFast && !service.network) {\n            new ErrorHelper(ERROR_TYPE.ProofAPINotSet).throw();\n        }\n\n        let txBlockNumber: number,\n            rootBlockInfo: IRootBlockInfo,\n            receipt: ITransactionReceipt,\n            block: IBlockWithTransaction,\n            blockProof;\n\n        return this.getChainBlockInfo(\n            burnTxHash\n        ).then(blockInfo => {\n            if (!isFast && !this.isCheckPointed_(blockInfo)) {\n                throw new Error(\n                    'Burn transaction has not been checkpointed as yet'\n                );\n            }\n\n            // step 1 - Get Block number from transaction hash\n            txBlockNumber = blockInfo.txBlockNumber;\n            // step 2-  get transaction receipt from txhash and \n            // block information from block number\n            return Promise.all([\n                this.maticClient_.getTransactionReceipt(burnTxHash),\n                this.maticClient_.getBlockWithTransaction(txBlockNumber)\n            ]);\n        }).then(result => {\n            [receipt, block] = result;\n            // step  3 - get information about block saved in parent chain \n            return (\n                isFast ? this.getRootBlockInfoFromAPI(txBlockNumber) :\n                    this.getRootBlockInfo(txBlockNumber)\n            );\n        }).then(rootBlockInfoResult => {\n            rootBlockInfo = rootBlockInfoResult;\n            // step 4 - build block proof\n            return (\n                isFast ? this.getBlockProofFromAPI(txBlockNumber, rootBlockInfo) :\n                    this.getBlockProof(txBlockNumber, rootBlockInfo)\n            );\n        }).then(blockProofResult => {\n            blockProof = blockProofResult;\n            // step 5- create receipt proof\n            return ProofUtil.getReceiptProof(\n                receipt,\n                block,\n                this.maticClient_,\n                this.requestConcurrency\n            );\n        }).then((receiptProof: any) => {\n            const logIndices = this.getAllLogIndices_(\n                logEventSig, receipt\n            );\n            const payloads: string[] = [];\n\n            // step 6 - encode payloads, convert into hex\n            for (const logIndex of logIndices) {\n                payloads.push(\n                    this.encodePayload_(\n                        rootBlockInfo.headerBlockNumber.toNumber(),\n                        blockProof,\n                        txBlockNumber,\n                        block.timestamp,\n                        Buffer.from(block.transactionsRoot.slice(2), 'hex'),\n                        Buffer.from(block.receiptsRoot.slice(2), 'hex'),\n                        ProofUtil.getReceiptBytes(receipt), // rlp encoded\n                        receiptProof.parentNodes,\n                        receiptProof.path,\n                        logIndex\n                    )\n                );\n            }\n\n            return payloads;\n        });\n    }\n\n    private encodePayload_(\n        headerNumber,\n        buildBlockProof,\n        blockNumber,\n        timestamp,\n        transactionsRoot,\n        receiptsRoot,\n        receipt,\n        receiptParentNodes,\n        path,\n        logIndex\n    ) {\n        return BufferUtil.bufferToHex(\n            rlp.encode([\n                headerNumber,\n                buildBlockProof,\n                blockNumber,\n                timestamp,\n                BufferUtil.bufferToHex(transactionsRoot),\n                BufferUtil.bufferToHex(receiptsRoot),\n                BufferUtil.bufferToHex(receipt),\n                BufferUtil.bufferToHex(rlp.encode(receiptParentNodes) as Buffer),\n                BufferUtil.bufferToHex(Buffer.concat([Buffer.from('00', 'hex'), path])),\n                logIndex,\n            ]) as Buffer\n        );\n    }\n\n    getExitHash(burnTxHash, index, logEventSig) {\n        let lastChildBlock: string,\n            receipt: ITransactionReceipt,\n            block: IBlockWithTransaction;\n\n        return Promise.all([\n            this.rootChain.getLastChildBlock(),\n            this.maticClient_.getTransactionReceipt(burnTxHash)\n        ]).then(result => {\n            lastChildBlock = result[0];\n            receipt = result[1];\n            return this.maticClient_.getBlockWithTransaction(\n                receipt.blockNumber\n            );\n        }).then(blockResult => {\n            block = blockResult;\n            if (!this.isCheckPointed_({ lastChildBlock: lastChildBlock, txBlockNumber: receipt.blockNumber })) {\n                this.maticClient_.logger.error(ERROR_TYPE.BurnTxNotCheckPointed).throw();\n            }\n            return ProofUtil.getReceiptProof(\n                receipt,\n                block,\n                this.maticClient_,\n                this.requestConcurrency\n            );\n        }).then((receiptProof: any) => {\n            let logIndex;\n            const nibbleArr = [];\n            receiptProof.path.forEach(byte => {\n                nibbleArr.push(Buffer.from('0' + (byte / 0x10).toString(16), 'hex'));\n                nibbleArr.push(Buffer.from('0' + (byte % 0x10).toString(16), 'hex'));\n            });\n\n            if (index > 0) {\n                const logIndices = this.getAllLogIndices_(logEventSig, receipt);\n                logIndex = logIndices[index];\n            }\n\n            logIndex = this.getLogIndex_(logEventSig, receipt);\n\n            return this.maticClient_.etheriumSha3(\n                receipt.blockNumber, BufferUtil.bufferToHex(Buffer.concat(nibbleArr)), logIndex\n            );\n        });\n    }\n}\n","import { BaseToken, utils, Web3SideChainClient } from \"../utils\";\nimport { TYPE_AMOUNT } from \"../types\";\nimport { IPOSClientConfig, ITransactionOption } from \"../interfaces\";\nimport { BaseBigNumber } from \"..\";\n\nexport class RootChain extends BaseToken<IPOSClientConfig> {\n\n    constructor(client_: Web3SideChainClient<IPOSClientConfig>, address: string) {\n        super({\n            address: address,\n            name: 'RootChain',\n            isParent: true\n        }, client_);\n    }\n\n    method(methodName: string, ...args) {\n        return this.getContract().then(contract => {\n            return contract.method(methodName, ...args);\n        });\n    }\n\n    getLastChildBlock() {\n        return this.method(\"getLastChildBlock\").then(method => {\n            return method.read<string>({}, this.client.config.rootChainDefaultBlock || 'safe');\n        });\n    }\n\n    async findRootBlockFromChild(childBlockNumber: TYPE_AMOUNT): Promise<BaseBigNumber> {\n        const bigOne = new utils.BN(1);\n        const bigtwo = new utils.BN(2);\n        const checkPointInterval = new utils.BN(10000);\n\n        childBlockNumber = new utils.BN(childBlockNumber);\n        // first checkpoint id = start * 10000\n        let start = bigOne;\n\n        // last checkpoint id = end * 10000\n        const method = await this.method(\"currentHeaderBlock\");\n        const currentHeaderBlock = await method.read<string>();\n        let end = new utils.BN(currentHeaderBlock).div(\n            checkPointInterval\n        );\n\n        // binary search on all the checkpoints to find the checkpoint that contains the childBlockNumber\n        let ans;\n        while (start.lte(end)) {\n            if (start.eq(end)) {\n                ans = start;\n                break;\n            }\n            const mid = start.add(end).div(bigtwo);\n            const headerBlocksMethod = await this.method(\n                \"headerBlocks\",\n                mid.mul(checkPointInterval).toString()\n            );\n            const headerBlock = await headerBlocksMethod.read<{ start: number, end: number }>();\n\n            const headerStart = new utils.BN(headerBlock.start);\n            const headerEnd = new utils.BN(headerBlock.end);\n\n            if (headerStart.lte(childBlockNumber) && childBlockNumber.lte(headerEnd)) {\n                // if childBlockNumber is between the upper and lower bounds of the headerBlock, we found our answer\n                ans = mid;\n                break;\n            } else if (headerStart.gt(childBlockNumber)) {\n                // childBlockNumber was checkpointed before this header\n                end = mid.sub(bigOne);\n            } else if (headerEnd.lt(childBlockNumber)) {\n                // childBlockNumber was checkpointed after this header\n                start = mid.add(bigOne);\n            }\n        }\n        return ans.mul(checkPointInterval);\n    }\n\n}\n","import { IPOSClientConfig, IPOSContracts, ITransactionOption } from \"../interfaces\";\nimport { RootChainManager } from \"./root_chain_manager\";\nimport { Converter, Web3SideChainClient } from \"../utils\";\nimport { POSToken } from \"./pos_token\";\nimport { TYPE_AMOUNT } from \"../types\";\nimport { ExitUtil } from \"./exit_util\";\nimport { Log_Event_Signature } from \"../enums\";\n\nexport class ERC721 extends POSToken {\n\n\n    constructor(\n        tokenAddress: string,\n        isParent: boolean,\n        client: Web3SideChainClient<IPOSClientConfig>,\n        getContracts: () => IPOSContracts\n    ) {\n        super({\n            isParent,\n            address: tokenAddress,\n            name: 'ChildERC721',\n            bridgeType: 'pos'\n        }, client, getContracts);\n    }\n\n    private validateMany_(tokenIds) {\n        if (tokenIds.length > 20) {\n            throw new Error('can not process more than 20 tokens');\n        }\n        return tokenIds.map(tokenId => {\n            return Converter.toHex(tokenId);\n        });\n    }\n\n    /**\n     * get tokens count for the user\n     *\n     * @param {string} userAddress\n     * @param {ITransactionOption} [options]\n     * @returns\n     * @memberof ERC721\n     */\n    getTokensCount(userAddress: string, options?: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"balanceOf\",\n                userAddress\n            );\n            return this.processRead<string>(method, options);\n        }).then(count => {\n            return Number(count);\n        });\n    }\n\n    /**\n     * returns token id on supplied index for user\n     *\n     * @param {number} index\n     * @param {string} userAddress\n     * @param {ITransactionOption} [options]\n     * @returns\n     * @memberof ERC721\n     */\n    getTokenIdAtIndexForUser(index: number, userAddress: string, options?: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"tokenOfOwnerByIndex\",\n                userAddress,\n                index\n            );\n\n            return this.processRead<string>(method, options);\n        });\n    }\n\n    /**\n     * get all tokens for user\n     *\n     * @param {string} userAddress\n     * @param {*} [limit=Infinity]\n     * @returns\n     * @memberof ERC721\n     */\n    getAllTokens(userAddress: string, limit = Infinity) {\n        return this.getTokensCount(userAddress).then(count => {\n            count = Number(count);\n            if (count > limit) {\n                count = limit;\n            }\n            const promises = [];\n            for (let i = 0; i < count; i++) {\n                promises.push(\n                    this.getTokenIdAtIndexForUser(i, userAddress)\n                );\n            }\n            return Promise.all(\n                promises\n            );\n        });\n    }\n\n    isApproved(tokenId: string, option?: ITransactionOption) {\n        this.checkForRoot(\"isApproved\");\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"getApproved\",\n                tokenId\n            );\n            return Promise.all([\n                this.processRead<string>(method, option),\n                this.getPredicateAddress()\n            ]).then(result => {\n                return result[0] === result[1];\n            });\n        });\n    }\n\n    isApprovedAll(userAddress: string, option?: ITransactionOption) {\n        this.checkForRoot(\"isApprovedAll\");\n\n        return Promise.all([this.getContract(), this.getPredicateAddress()]).then(result => {\n            const [contract, predicateAddress] = result;\n            const method = contract.method(\n                \"isApprovedForAll\",\n                userAddress,\n                predicateAddress\n            );\n            return this.processRead<boolean>(method, option);\n        });\n\n    }\n\n    approve(tokenId: TYPE_AMOUNT, option?: ITransactionOption) {\n        this.checkForRoot(\"approve\");\n\n        return Promise.all([this.getContract(), this.getPredicateAddress()]).then(result => {\n            const [contract, predicateAddress] = result;\n            const method = contract.method(\n                \"approve\",\n                predicateAddress,\n                Converter.toHex(tokenId)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    approveAll(option?: ITransactionOption) {\n        this.checkForRoot(\"approveAll\");\n\n        return Promise.all([this.getContract(), this.getPredicateAddress()]).then(result => {\n            const [contract, predicateAddress] = result;\n            const method = contract.method(\n                \"setApprovalForAll\",\n                predicateAddress,\n                true\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n\n    deposit(tokenId: TYPE_AMOUNT, userAddress: string, option?: ITransactionOption) {\n        this.checkForRoot(\"deposit\");\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(tokenId)],\n            ['uint256'],\n        );\n        return this.rootChainManager.deposit(\n            userAddress,\n            this.contractParam.address,\n            amountInABI,\n            option\n        );\n    }\n\n    depositMany(tokenIds: TYPE_AMOUNT[], userAddress: string, option?: ITransactionOption) {\n        this.checkForRoot(\"depositMany\");\n\n        const tokensInHex = this.validateMany_(tokenIds);\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [tokensInHex],\n            ['uint256[]'],\n        );\n        return this.rootChainManager.deposit(\n            userAddress,\n            this.contractParam.address,\n            amountInABI,\n            option\n        );\n    }\n\n    withdrawStart(tokenId: TYPE_AMOUNT, option?: ITransactionOption) {\n        this.checkForChild(\"withdrawStart\");\n\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"withdraw\",\n                Converter.toHex(tokenId)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    withdrawStartWithMetaData(tokenId: TYPE_AMOUNT, option?: ITransactionOption) {\n        this.checkForChild(\"withdrawStartWithMetaData\");\n\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"withdrawWithMetadata\",\n                Converter.toHex(tokenId)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    withdrawStartMany(tokenIds: TYPE_AMOUNT[], option?: ITransactionOption) {\n        this.checkForChild(\"withdrawStartMany\");\n\n        const tokensInHex = this.validateMany_(tokenIds);\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"withdrawBatch\",\n                tokensInHex\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    withdrawExit(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExit\");\n\n        return this.exitUtil.buildPayloadForExit(\n            burnTransactionHash,\n            Log_Event_Signature.Erc721Transfer,\n            false\n        ).then(payload => {\n            return this.rootChainManager.exit(\n                payload, option\n            );\n        });\n    }\n\n    withdrawExitOnIndex(burnTransactionHash: string, index: number, option?: ITransactionOption) {\n      this.checkForRoot(\"withdrawExit\");\n\n      return this.exitUtil.buildPayloadForExit(\n          burnTransactionHash,\n          Log_Event_Signature.Erc721Transfer,\n          false,\n          index\n      ).then(payload => {\n          return this.rootChainManager.exit(\n              payload, option\n          );\n      });\n    }\n\n    // async withdrawExitMany(burnTransactionHash: string, option?: ITransactionOption) {\n    //     this.checkForRoot(\"withdrawExitMany\");\n\n    //     return this.exitUtil.buildMultiplePayloadsForExit(\n    //         burnTransactionHash,\n    //         Log_Event_Signature.Erc721BatchTransfer,\n    //         false\n    //     ).then(async payloads => {\n    //         const exitTxs = [];\n    //         if()\n    //         for(const i in payloads) {\n    //           exitTxs.push(this.rootChainManager.exit(\n    //             payloads[i], option\n    //         ));\n    //         }\n    //         return Promise.all(exitTxs);\n    //         });\n    // }\n\n    withdrawExitFaster(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExitFaster\");\n\n        return this.exitUtil.buildPayloadForExit(\n            burnTransactionHash,\n            Log_Event_Signature.Erc721Transfer,\n            true\n        ).then(payload => {\n            return this.rootChainManager.exit(\n                payload, option\n            );\n        });\n    }\n\n    // withdrawExitFasterMany(burnTransactionHash: string, option?: ITransactionOption) {\n    //     this.checkForRoot(\"withdrawExitFasterMany\");\n\n\n    //     return this.exitUtil.buildPayloadForExit(\n    //         burnTransactionHash,\n    //         Log_Event_Signature.Erc721BatchTransfer,\n    //         true\n    //     ).then(payload => {\n    //         return this.rootChainManager.exit(\n    //             payload, option\n    //         );\n    //     });\n    // }\n\n    isWithdrawExited(txHash: string) {\n        return this.isWithdrawn(\n            txHash, Log_Event_Signature.Erc721Transfer\n        );\n    }\n\n    isWithdrawExitedMany(txHash: string) {\n        return this.isWithdrawn(\n            txHash, Log_Event_Signature.Erc721BatchTransfer\n        );\n    }\n\n    isWithdrawExitedOnIndex(txHash: string, index: number) {\n        return this.isWithdrawnOnIndex(\n            txHash, index, Log_Event_Signature.Erc721Transfer\n        );\n    }\n\n    /**\n     * transfer to another user\n     *\n     * @param {string} tokenId\n     * @param {string} from\n     * @param {string} to\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC721\n     */\n    transfer(tokenId: string, from: string, to: string, option?: ITransactionOption) {\n        return this.transferERC721(\n            from,\n            to,\n            tokenId,\n            option\n        );\n    }\n\n}\n","import { IPOSClientConfig, ITransactionOption } from \"../interfaces\";\nimport { Converter, promiseResolve, Web3SideChainClient } from \"../utils\";\nimport { POSToken } from \"./pos_token\";\nimport { Log_Event_Signature } from \"../enums\";\nimport { IPOSContracts, IPOSERC1155Address } from \"../interfaces\";\nimport { POSERC1155DepositBatchParam, POSERC1155DepositParam, POSERC1155TransferParam, TYPE_AMOUNT } from \"..\";\n\nexport class ERC1155 extends POSToken {\n\n    mintablePredicateAddress: string;\n\n    get addressConfig(): IPOSERC1155Address {\n        return this.client.config.erc1155 || {};\n    }\n\n    constructor(\n        tokenAddress: string,\n        isParent: boolean,\n        client: Web3SideChainClient<IPOSClientConfig>,\n        getContracts: () => IPOSContracts\n    ) {\n        super({\n            isParent,\n            address: tokenAddress,\n            name: 'ChildERC1155',\n            bridgeType: 'pos'\n        }, client, getContracts);\n\n    }\n\n    private getAddress_(value: string) {\n        const addresses = this.addressConfig;\n        if (addresses[value]) {\n            return promiseResolve(addresses[value]);\n        }\n\n        return this.client.getConfig(value);\n    }\n\n    /**\n     * get balance of a user for supplied token\n     *\n     * @param {string} userAddress\n     * @param {TYPE_AMOUNT} tokenId\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    getBalance(userAddress: string, tokenId: TYPE_AMOUNT, option?: ITransactionOption) {\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"balanceOf\",\n                userAddress,\n                Converter.toHex(tokenId)\n            );\n            return this.processRead<string>(method, option);\n        });\n    }\n\n    /**\n     * check if a user is approved for all tokens\n     *\n     * @param {string} userAddress\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    isApprovedAll(userAddress: string, option?: ITransactionOption) {\n        this.checkForRoot(\"isApprovedAll\");\n\n        return Promise.all([this.getContract(), this.getPredicateAddress()]).then(result => {\n            const [contract, predicateAddress] = result;\n            const method = contract.method(\n                \"isApprovedForAll\",\n                userAddress,\n                predicateAddress\n            );\n            return this.processRead<boolean>(method, option);\n        });\n\n    }\n\n    private approveAll_(predicateAddressPromise: Promise<string>, option: ITransactionOption) {\n        this.checkForRoot(\"approve\");\n\n        return Promise.all([this.getContract(), predicateAddressPromise]).then(result => {\n            const [contract, predicateAddress] = result;\n            const method = contract.method(\n                \"setApprovalForAll\",\n                predicateAddress,\n                true\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    /**\n     * approve all tokens \n     *\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    approveAll(option?: ITransactionOption) {\n        this.checkForRoot(\"approve\");\n\n        return this.approveAll_(\n            this.getPredicateAddress(), option\n        );\n    }\n\n    /**\n     * approve all tokens for mintable token\n     *\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    approveAllForMintable(option?: ITransactionOption) {\n        this.checkForRoot(\"approveForMintable\");\n        const addressPath = \"Main.POSContracts.MintableERC1155PredicateProxy\";\n        return this.approveAll_(\n            this.getAddress_(addressPath), option\n        );\n    }\n\n    /**\n     * deposit supplied amount of token for a user \n     *\n     * @param {POSERC1155DepositParam} param\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    deposit(param: POSERC1155DepositParam, option?: ITransactionOption) {\n        this.checkForRoot(\"deposit\");\n        return this.depositMany({\n            amounts: [param.amount],\n            tokenIds: [param.tokenId],\n            userAddress: param.userAddress,\n            data: param.data\n        }, option);\n    }\n\n    /**\n     * deposit supplied amount of multiple token for user\n     *\n     * @param {POSERC1155DepositBatchParam} param\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    depositMany(param: POSERC1155DepositBatchParam, option?: ITransactionOption) {\n        this.checkForRoot(\"depositMany\");\n\n        const { tokenIds, amounts, data, userAddress } = param;\n        const emptyHex = Converter.toHex(0);\n        const amountInABI = this.client.parent.encodeParameters(\n            [\n                tokenIds.map(t => Converter.toHex(t)),\n                amounts.map(a => Converter.toHex(a)),\n                data || emptyHex\n            ],\n            ['uint256[]', 'uint256[]', 'bytes'],\n        );\n\n        return this.rootChainManager.deposit(\n            userAddress,\n            this.contractParam.address,\n            amountInABI,\n            option\n        );\n\n    }\n\n    /**\n     * start withdraw process by burning the required amount for a token\n     *\n     * @param {string} tokenId\n     * @param {TYPE_AMOUNT} amount\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    withdrawStart(tokenId: TYPE_AMOUNT, amount: TYPE_AMOUNT, option?: ITransactionOption) {\n        this.checkForChild(\"withdrawStart\");\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"withdrawSingle\",\n                Converter.toHex(tokenId),\n                Converter.toHex(amount)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    /**\n     * start the withdraw process by burning the supplied amount of multiple token at a time\n     *\n     * @param {TYPE_AMOUNT[]} tokenIds\n     * @param {TYPE_AMOUNT[]} amounts\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    withdrawStartMany(tokenIds: TYPE_AMOUNT[], amounts: TYPE_AMOUNT[], option?: ITransactionOption) {\n        this.checkForChild(\"withdrawStartMany\");\n\n        const tokensInHex = tokenIds.map(t => {\n            return Converter.toHex(t);\n        });\n        const amountsInHex = amounts.map(t => {\n            return Converter.toHex(t);\n        });\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"withdrawBatch\",\n                tokensInHex,\n                amountsInHex\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    /**\n     * exit the withdraw process and get the burned amount on root chain\n     *\n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    withdrawExit(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExit\");\n\n        return this.withdrawExitPOS(\n            burnTransactionHash,\n            Log_Event_Signature.Erc1155Transfer,\n            false,\n            option\n        );\n    }\n\n    /**\n     * exit the withdraw process and get the burned amount on root chain\n     * \n     * the process is faster because it uses proof api\n     *\n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    withdrawExitFaster(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExitFaster\");\n\n        return this.withdrawExitPOS(\n            burnTransactionHash,\n            Log_Event_Signature.Erc1155Transfer,\n            true,\n            option\n        );\n    }\n\n    /**\n     * exit the withdraw process for many burned transaction and get the burned amount on root chain\n     *\n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    withdrawExitMany(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExitMany\");\n\n\n        return this.withdrawExitPOS(\n            burnTransactionHash,\n            Log_Event_Signature.Erc1155BatchTransfer,\n            false,\n            option\n        );\n    }\n\n    /**\n     * exit the withdraw process for many burned transaction and get the burned amount on root chain\n     *\n     * the process is faster because it uses proof api\n     * \n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    withdrawExitFasterMany(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExitFasterMany\");\n\n\n        return this.withdrawExitPOS(\n            burnTransactionHash,\n            Log_Event_Signature.Erc1155BatchTransfer,\n            true,\n            option\n        );\n    }\n\n    /**\n     * check if exit has been completed for a transaction hash\n     *\n     * @param {string} burnTxHash\n     * @return {*} \n     * @memberof ERC1155\n     */\n    isWithdrawExited(txHash: string) {\n        return this.isWithdrawn(\n            txHash, Log_Event_Signature.Erc1155Transfer\n        );\n    }\n\n    /**\n     * check if batch exit has been completed for a transaction hash\n     *\n     * @param {string} txHash\n     * @return {*} \n     * @memberof ERC1155\n     */\n    isWithdrawExitedMany(txHash: string) {\n        return this.isWithdrawn(\n            txHash, Log_Event_Signature.Erc1155BatchTransfer\n        );\n    }\n\n    /**\n     * transfer the required amount of a token to another user\n     *\n     * @param {POSERC1155TransferParam} param\n     * @param {ITransactionOption} [option]\n     * @return {*} \n     * @memberof ERC1155\n     */\n    transfer(param: POSERC1155TransferParam, option?: ITransactionOption) {\n        return this.transferERC1155(\n            param, option\n        );\n    }\n}","import { BaseToken, Web3SideChainClient } from \"../utils\";\nimport { IPOSClientConfig, ITransactionOption } from \"../interfaces\";\n\nexport class GasSwapper extends BaseToken<IPOSClientConfig> {\n\n    constructor(client_: Web3SideChainClient<IPOSClientConfig>, address: string) {\n        super({\n            address: address,\n            name: 'GasSwapper',\n            bridgeType: 'pos',\n            isParent: true\n        }, client_);\n    }\n\n    method(methodName: string, ...args) {\n        return this.getContract().then(contract => {\n            return contract.method(methodName, ...args);\n        });\n    }\n\n    depositWithGas(\n        tokenAddress: string,\n        depositAmount: string,\n        userAddress: string,\n        swapCallData: string,\n        option?: ITransactionOption\n    ) {\n        return this.method(\n            \"swapAndBridge\",\n            tokenAddress,\n            depositAmount,\n            userAddress,\n            swapCallData\n        ).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n}\n","import { ERC20 } from \"./erc20\";\nimport { RootChainManager } from \"./root_chain_manager\";\nimport { BridgeClient } from \"../utils\";\nimport { IPOSClientConfig, IPOSContracts, ITransactionOption } from \"../interfaces\";\nimport { ExitUtil } from \"./exit_util\";\nimport { RootChain } from \"./root_chain\";\nimport { ERC721 } from \"./erc721\";\nimport { TYPE_AMOUNT } from \"../types\";\nimport { ERC1155 } from \"./erc1155\";\nimport { GasSwapper } from \"./gas_swapper\";\n\nexport * from \"./exit_util\";\nexport * from \"./root_chain_manager\";\nexport * from \"./root_chain\";\nexport * from \"./gas_swapper\";\n\nexport class POSClient extends BridgeClient<IPOSClientConfig> {\n\n    rootChainManager: RootChainManager;\n    gasSwapper: GasSwapper;\n\n    init(config: IPOSClientConfig) {\n        const client = this.client;\n\n        return client.init(config).then(_ => {\n            const mainPOSContracts = client.mainPOSContracts;\n            client.config = config = Object.assign(\n                {\n                    rootChainManager: mainPOSContracts.RootChainManagerProxy,\n                    rootChain: client.mainPlasmaContracts.RootChainProxy,\n                    gasSwapper: mainPOSContracts.GasSwapper\n                } as IPOSClientConfig,\n                config\n            );\n\n            this.rootChainManager = new RootChainManager(\n                this.client,\n                config.rootChainManager,\n            );\n\n            const rootChain = new RootChain(\n                this.client,\n                config.rootChain,\n            );\n\n            this.exitUtil = new ExitUtil(\n                this.client,\n                rootChain\n            );\n\n            this.gasSwapper = new GasSwapper(\n                this.client,\n                config.gasSwapper\n            );\n\n            return this;\n        });\n    }\n\n    erc20(tokenAddress, isParent?: boolean) {\n        return new ERC20(\n            tokenAddress,\n            isParent,\n            this.client,\n            this.getContracts_.bind(this)\n        );\n    }\n\n    erc721(tokenAddress, isParent?: boolean) {\n        return new ERC721(\n            tokenAddress,\n            isParent,\n            this.client,\n            this.getContracts_.bind(this)\n        );\n    }\n\n    erc1155(tokenAddress, isParent?: boolean) {\n        return new ERC1155(\n            tokenAddress,\n            isParent,\n            this.client,\n            this.getContracts_.bind(this)\n        );\n    }\n\n    depositEther(amount: TYPE_AMOUNT, userAddress: string, option: ITransactionOption) {\n        return new ERC20(\n            '', true, this.client,\n            this.getContracts_.bind(this),\n        )['depositEther_'](amount, userAddress, option);\n    }\n\n    depositEtherWithGas(\n        amount: TYPE_AMOUNT,\n        userAddress: string,\n        swapEthAmount: TYPE_AMOUNT,\n        swapCallData: string,\n        option: ITransactionOption\n    ) {\n        return new ERC20(\n            '', true, this.client,\n            this.getContracts_.bind(this),\n        )['depositEtherWithGas_'](amount, userAddress, swapEthAmount, swapCallData, option);\n    }\n\n    private getContracts_() {\n        return {\n            exitUtil: this.exitUtil,\n            rootChainManager: this.rootChainManager,\n            gasSwapper: this.gasSwapper\n        } as IPOSContracts;\n    }\n}","import { POSClient } from \"./pos\";\nimport { use, utils } from \"./utils\";\n\nexport const defaultExport = {\n    utils: utils,\n    use,\n    POSClient,\n};","import { BaseToken, Web3SideChainClient } from \"../utils\";\nimport { IContractInitParam, IZkEvmClientConfig } from \"../interfaces\";\nimport { IZkEvmContracts } from \"../interfaces\";\n\nexport class ZkEvmToken extends BaseToken<IZkEvmClientConfig> {\n\n    constructor(\n        contractParam: IContractInitParam,\n        client: Web3SideChainClient<IZkEvmClientConfig>,\n        protected getZkEvmContracts: () => IZkEvmContracts\n    ) {\n        super(contractParam, client);\n    }\n\n    protected get parentBridge() {\n        return this.getZkEvmContracts().parentBridge;\n    }\n\n    protected get zkEVMWrapper() {\n        return this.getZkEvmContracts().zkEVMWrapper;\n    }\n\n    protected get childBridge() {\n        return this.getZkEvmContracts().childBridge;\n    }\n\n    protected get bridgeUtil() {\n        return this.getZkEvmContracts().bridgeUtil;\n    }\n\n}\n","import { ITransactionOption, IZkEvmClientConfig } from '../interfaces';\nimport { BaseToken, Converter, Web3SideChainClient } from '../utils';\nimport { TYPE_AMOUNT } from '../types';\n\n/**\n * ZkEVMBridgeAdapter used ZkEVMBridge to implement additional custom features\n * like bridging custom ERC20\n */\nexport class ZkEVMBridgeAdapter extends BaseToken<IZkEvmClientConfig> {\n\n  constructor(client_: Web3SideChainClient<IZkEvmClientConfig>, address: string, isParent: boolean) {\n    super(\n      {\n        address: address,\n        name: 'ZkEVMBridgeAdapter',\n        bridgeType: 'zkevm',\n        isParent: isParent, // decides if it's a child chain or a root chain adapter\n      },\n      client_,\n    );\n  }\n\n  method(methodName: string, ...args) {\n    return this.getContract().then(contract => {\n      return contract.method(methodName, ...args);\n    });\n  }\n\n  /**\n   * uses the bridge function present in the adapter contract\n   * @param recipient\n   * @param amount\n   * @param forceUpdateGlobalExitRoot\n   * @param option\n   *\n   * @returns\n   * @memberof ZkEvmCustomBridge\n   */\n  bridgeToken(\n    recipient: string,\n    amount: TYPE_AMOUNT,\n    forceUpdateGlobalExitRoot?: boolean,\n    option?: ITransactionOption,\n  ) {\n    return this.method('bridgeToken', recipient, Converter.toHex(amount), forceUpdateGlobalExitRoot).then(\n      method => {\n        return this.processWrite(method, option);\n      },\n    );\n  }\n}\n","import { isHexString } from '@ethereumjs/util';\nimport { ITransactionOption } from \"../interfaces\";\nimport { Converter, Web3SideChainClient, promiseAny } from \"../utils\";\nimport { ZkEvmToken } from \"./zkevm_token\";\nimport { TYPE_AMOUNT } from \"../types\";\nimport { BaseContractMethod } from \"../abstracts\";\nimport { MAX_AMOUNT, ADDRESS_ZERO, DAI_PERMIT_TYPEHASH, EIP_2612_PERMIT_TYPEHASH, UNISWAP_DOMAIN_TYPEHASH, EIP_2612_DOMAIN_TYPEHASH, Permit, BaseContract, BaseWeb3Client, ERROR_TYPE } from '..';\nimport { IAllowanceTransactionOption, IApproveTransactionOption, IBridgeTransactionOption, IZkEvmClientConfig, IZkEvmContracts } from \"../interfaces\";\nimport { ZkEVMBridgeAdapter } from './zkevm_custom_bridge';\n\nexport class ERC20 extends ZkEvmToken {\n    private bridgeAdapter: ZkEVMBridgeAdapter;\n    constructor(\n        tokenAddress: string,\n        isParent: boolean,\n        bridgeAdapterAddress,\n        client: Web3SideChainClient<IZkEvmClientConfig>,\n        getContracts: () => IZkEvmContracts\n    ) {\n        super({\n            isParent,\n            address: tokenAddress,\n            bridgeAdapterAddress,\n            name: 'ERC20',\n            bridgeType: 'zkevm'\n        }, client, getContracts);\n        if (bridgeAdapterAddress) {\n            this.bridgeAdapter = new ZkEVMBridgeAdapter(\n                this.client,\n                bridgeAdapterAddress,\n                isParent\n            );\n        }\n    }\n\n    /**\n     * get bridge for that token\n     *\n     * @returns\n     * @memberof ERC20\n     */\n    getBridgeAddress() {\n        const bridge = this.contractParam.isParent ? this.parentBridge : this.childBridge;\n        return bridge.contractAddress;\n    }\n\n    isEtherToken() {\n        return this.contractParam.address === ADDRESS_ZERO;\n    }\n\n    /**\n     * get token balance of user\n     *\n     * @param {string} userAddress\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    getBalance(userAddress: string, option?: ITransactionOption) {\n        if (this.isEtherToken()) {\n            const client = this.contractParam.isParent ? this.client.parent : this.client.child;\n            return client.getBalance(userAddress);\n        } else {\n            return this.getContract().then(contract => {\n                const method = contract.method(\n                    \"balanceOf\",\n                    userAddress\n                );\n                return this.processRead<string>(method, option);\n            });\n        }\n\n    }\n\n    /**\n     * is Approval needed to bridge tokens to other chains\n     *\n     * @returns\n     * @memberof ERC20\n     */\n    isApprovalNeeded() {\n        if (this.isEtherToken()) {\n            return false;\n        }\n\n        const bridge = this.contractParam.isParent ? this.parentBridge : this.childBridge;\n\n        return bridge.getOriginTokenInfo(this.contractParam.address)\n            .then(tokenInfo => {\n                return tokenInfo[1] === ADDRESS_ZERO;\n            });\n    }\n\n    /**\n     * get allowance of user\n     *\n     * @param {string} userAddress\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    getAllowance(userAddress: string, option: IAllowanceTransactionOption = {}) {\n        this.checkForNonNative(\"getAllowance\");\n        const spenderAddress = option.spenderAddress ? option.spenderAddress : this.getBridgeAddress();\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"allowance\",\n                userAddress,\n                spenderAddress,\n            );\n            return this.processRead<string>(method, option);\n        });\n    }\n\n    /**\n     * Approve given amount of tokens for user\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {IApproveTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    approve(amount: TYPE_AMOUNT, option: IApproveTransactionOption = {}) {\n        this.checkForNonNative(\"approve\");\n        const spenderAddress = option.spenderAddress ? option.spenderAddress : this.getBridgeAddress();\n\n        return this.getContract().then(contract => {\n            const method = contract.method(\n                \"approve\",\n                spenderAddress,\n                Converter.toHex(amount)\n            );\n            return this.processWrite(method, option);\n        });\n    }\n\n    /**\n     * Approve max amount of tokens for user\n     *\n     * @param {IApproveTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    approveMax(option: IApproveTransactionOption = {}) {\n        this.checkForNonNative(\"approveMax\");\n        return this.approve(\n            MAX_AMOUNT,\n            option\n        );\n    }\n\n    /**\n     * Deposit given amount of token for user\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {IBridgeTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    deposit(amount: TYPE_AMOUNT, userAddress: string, option: IBridgeTransactionOption = {}) {\n        this.checkForRoot(\"deposit\");\n        const permitData = option.permitData || '0x';\n        const forceUpdateGlobalExitRoot = option.forceUpdateGlobalExitRoot || true;\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        if (this.isEtherToken()) {\n            option.value = Converter.toHex(amount);\n        }\n\n        return this.childBridge.networkID().then(networkId => {\n            return this.parentBridge.bridgeAsset(\n                networkId,\n                userAddress,\n                amountInABI,\n                this.contractParam.address,\n                forceUpdateGlobalExitRoot,\n                permitData,\n                option\n            );\n        });\n    }\n\n    /**\n     * Deposit given amount of token for user along with ETH for gas token\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {IBridgeTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    depositWithGas(amount: TYPE_AMOUNT, userAddress: string, ethGasAmount: TYPE_AMOUNT, option: IBridgeTransactionOption = {}) {\n        this.checkForRoot(\"deposit\");\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        option.value = Converter.toHex(ethGasAmount);\n        if (option.v && option.r && option.s) {\n            return this.zkEVMWrapper.depositPermitWithGas(\n                this.contractParam.address,\n                amountInABI,\n                userAddress,\n                Math.floor((Date.now() + 3600000) / 1000).toString(),\n                option.v,\n                option.r,\n                option.s,\n                option\n            );\n        }\n        return this.zkEVMWrapper.depositWithGas(\n            this.contractParam.address,\n            amountInABI,\n            userAddress,\n            option\n        );\n    }\n\n    /**\n     * Deposit given amount of token for user along with ETH for gas token\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {IBridgeTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    depositPermitWithGas(amount: TYPE_AMOUNT, userAddress: string, ethGasAmount: TYPE_AMOUNT, option: IBridgeTransactionOption = {}) {\n        this.checkForRoot(\"deposit\");\n        this.checkForNonNative(\"getPermitData\");\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        option.value = Converter.toHex(ethGasAmount);\n\n        return this.getPermitSignatureParams_(amount, this.zkEVMWrapper.contractAddress).then(\n            signatureParams => {\n                return this.zkEVMWrapper.depositPermitWithGas(\n                    this.contractParam.address,\n                    amountInABI,\n                    userAddress,\n                    Math.floor((Date.now() + 3600000) / 1000).toString(),\n                    signatureParams.v,\n                    signatureParams.r,\n                    signatureParams.s,\n                    option\n                );\n            }\n        );\n    }\n\n    /**\n     * Deposit given amount of token for user with permit call\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {IBridgeTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    depositWithPermit(amount: TYPE_AMOUNT, userAddress: string, option: IApproveTransactionOption = {}) {\n        this.checkForRoot(\"deposit\");\n        this.checkForNonNative(\"depositWithPermit\");\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        const forceUpdateGlobalExitRoot = option.forceUpdateGlobalExitRoot || true;\n\n        return this.getPermitData(amountInABI, option).then(permitData => {\n            return this.childBridge.networkID().then(networkId => {\n                return this.parentBridge.bridgeAsset(\n                    networkId,\n                    userAddress,\n                    amountInABI,\n                    this.contractParam.address,\n                    forceUpdateGlobalExitRoot,\n                    permitData,\n                    option\n                );\n            });\n        });\n    }\n\n    /**\n     * Bridge asset to child chain using Custom ERC20 bridge Adapter\n     * @param amount\n     * @param userAddress\n     * @param forceUpdateGlobalExitRoot\n     * @returns\n     * @memberof ERC20\n     */\n    depositCustomERC20(amount: TYPE_AMOUNT, userAddress: string, forceUpdateGlobalExitRoot = true) {\n        // should be allowed to be used only in root chain\n        this.checkForRoot(\"depositCustomERC20\");\n        this.checkAdapterPresent(\"depositCustomERC20\");\n        // should not be allowed to use for native asset\n        this.checkForNonNative(\"depositCustomERC20\");\n        return this.bridgeAdapter.bridgeToken(userAddress, amount, forceUpdateGlobalExitRoot);\n    }\n\n    /**\n     * Claim asset on child chain bridged using custom bridge adapter on root chain\n     * @param transactionHash\n     * @param option\n     * @returns\n     * @memberof ERC20\n     */\n    customERC20DepositClaim(transactionHash: string, option?: ITransactionOption) {\n        this.checkForChild(\"customERC20DepositClaim\");\n        return this.parentBridge.networkID().then(networkId => {\n            return this.bridgeUtil.buildPayloadForClaim(\n                transactionHash, true, networkId\n            );\n        }).then(payload => {\n            return this.childBridge.claimMessage(\n                payload.smtProof,\n                payload.smtProofRollup,\n                payload.globalIndex,\n                payload.mainnetExitRoot,\n                payload.rollupExitRoot,\n                payload.originNetwork,\n                payload.originTokenAddress,\n                payload.destinationNetwork,\n                payload.destinationAddress,\n                payload.amount,\n                payload.metadata,\n                option\n            );\n        });\n    }\n\n\n    /**\n     * Complete deposit after GlobalExitRootManager is synced from Parent to root\n     *\n     * @param {string} transactionHash\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    depositClaim(transactionHash: string, option?: ITransactionOption) {\n        this.checkForChild(\"depositClaim\");\n        return this.parentBridge.networkID().then(networkId => {\n            return this.bridgeUtil.buildPayloadForClaim(\n                transactionHash, true, networkId\n            );\n        }).then(payload => {\n            return this.childBridge.claimAsset(\n                payload.smtProof,\n                payload.smtProofRollup,\n                payload.globalIndex,\n                payload.mainnetExitRoot,\n                payload.rollupExitRoot,\n                payload.originNetwork,\n                payload.originTokenAddress,\n                payload.destinationNetwork,\n                payload.destinationAddress,\n                payload.amount,\n                payload.metadata,\n                option\n            );\n        });\n    }\n\n    /**\n     * initiate withdraw by burning provided amount\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {IBridgeTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    withdraw(amount: TYPE_AMOUNT, userAddress: string, option: IBridgeTransactionOption = {}) {\n        this.checkForChild(\"withdraw\");\n        const permitData = option.permitData || '0x';\n        const forceUpdateGlobalExitRoot = option.forceUpdateGlobalExitRoot || true;\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        if (this.isEtherToken()) {\n            option.value = Converter.toHex(amount);\n        }\n\n        return this.parentBridge.networkID().then(networkId => {\n            return this.childBridge.bridgeAsset(\n                networkId,\n                userAddress,\n                amountInABI,\n                this.contractParam.address,\n                forceUpdateGlobalExitRoot,\n                permitData,\n                option\n            );\n        });\n    }\n\n    /**\n     * Bridge asset to root chain using Custom ERC20 bridge Adapter\n     * @param amount\n     * @param userAddress\n     * @param forceUpdateGlobalExitRoot\n     * @returns\n     * @memberof ERC20\n     */\n    withdrawCustomERC20(amount: TYPE_AMOUNT, userAddress: string, forceUpdateGlobalExitRoot = true) {\n        // should be allowed to be used only in root chain\n        this.checkForChild(\"withdrawCustomERC20\");\n        this.checkAdapterPresent(\"depositCustomERC20\");\n        // should not be allowed to use for native asset\n        this.checkForNonNative(\"withdrawCustomERC20\");\n        return this.bridgeAdapter.bridgeToken(userAddress, amount, forceUpdateGlobalExitRoot);\n    }\n\n    /**\n     * Claim asset on root chain bridged using custom bridge adapter on child chain\n     * @param burnTransactionHash\n     * @param option\n     * @returns\n     * @memberof ERC20\n     */\n    customERC20WithdrawExit(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"customERC20WithdrawExit\");\n        return this.childBridge.networkID().then(networkId => {\n            return this.bridgeUtil.buildPayloadForClaim(\n                burnTransactionHash, false, networkId\n            );\n        }).then(payload => {\n            return this.parentBridge.claimMessage(\n                payload.smtProof,\n                payload.smtProofRollup,\n                payload.globalIndex,\n                payload.mainnetExitRoot,\n                payload.rollupExitRoot,\n                payload.originNetwork,\n                payload.originTokenAddress,\n                payload.destinationNetwork,\n                payload.destinationAddress,\n                payload.amount,\n                payload.metadata,\n                option\n            );\n        });\n    }\n\n    /**\n     * initiate withdraw by transferring amount with PermitData for native tokens\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} userAddress\n     * @param {IBridgeTransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    withdrawWithPermit(amount: TYPE_AMOUNT, userAddress: string, option: IApproveTransactionOption = {}) {\n        this.checkForChild(\"withdraw\");\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        const forceUpdateGlobalExitRoot = option.forceUpdateGlobalExitRoot || true;\n\n        return this.getPermitData(amountInABI, option).then(permitData => {\n            return this.parentBridge.networkID().then(networkId => {\n                return this.childBridge.bridgeAsset(\n                    networkId,\n                    userAddress,\n                    amountInABI,\n                    this.contractParam.address,\n                    forceUpdateGlobalExitRoot,\n                    permitData,\n                    option\n                );\n            });\n        });\n    }\n\n    /**\n     * Complete deposit after GlobalExitRootManager is synced from Parent to root\n     *\n     * @param {string} burnTransactionHash\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    withdrawExit(burnTransactionHash: string, option?: ITransactionOption) {\n        this.checkForRoot(\"withdrawExit\");\n        return this.childBridge.networkID().then(networkId => {\n            return this.bridgeUtil.buildPayloadForClaim(\n                burnTransactionHash, false, networkId\n            );\n        }).then(payload => {\n            return this.parentBridge.claimAsset(\n                payload.smtProof,\n                payload.smtProofRollup,\n                payload.globalIndex,\n                payload.mainnetExitRoot,\n                payload.rollupExitRoot,\n                payload.originNetwork,\n                payload.originTokenAddress,\n                payload.destinationNetwork,\n                payload.destinationAddress,\n                payload.amount,\n                payload.metadata,\n                option\n            );\n        });\n    }\n\n    /**\n     * transfer amount to another user\n     *\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} to\n     * @param {ITransactionOption} [option]\n     * @returns\n     * @memberof ERC20\n     */\n    transfer(amount: TYPE_AMOUNT, to: string, option: ITransactionOption = {}) {\n        if (this.contractParam.address === ADDRESS_ZERO) {\n            option.to = to;\n            option.value = Converter.toHex(amount);\n            return this.sendTransaction(option);\n        }\n        return this.transferERC20(to, amount, option);\n    }\n\n    /**\n     * get permitType of the token\n     *\n     * @returns\n     * @memberof ERC20\n     */\n    private getPermit() {\n        let contract: BaseContract;\n        return this.getContract().then(contractInstance => {\n            contract = contractInstance;\n            const method = contract.method(\n                \"PERMIT_TYPEHASH\",\n            );\n            return this.processRead<string>(method);\n        }).then(permitTypehash => {\n            switch (permitTypehash) {\n                case DAI_PERMIT_TYPEHASH: {\n                    return Permit.DAI;\n                }\n                case EIP_2612_PERMIT_TYPEHASH: {\n                    const DOMAIN_TYPEHASH = contract.method(\"DOMAIN_TYPEHASH\");\n                    const EIP712DOMAIN_HASH = contract.method(\"EIP712DOMAIN_HASH\");\n                    return promiseAny([this.processRead<string>(DOMAIN_TYPEHASH), this.processRead<string>(EIP712DOMAIN_HASH)]).then(\n                        (domainTypehash) => {\n                            switch (domainTypehash) {\n                                case EIP_2612_DOMAIN_TYPEHASH: {\n                                    return Permit.EIP_2612;\n                                }\n                                case UNISWAP_DOMAIN_TYPEHASH: {\n                                    return Permit.UNISWAP;\n                                }\n                                default: {\n                                    return Promise.reject(new Error(`Unsupported domain typehash: ${domainTypehash}`));\n                                }\n                            }\n                        }\n                    );\n                }\n                default: {\n                    return Promise.reject(new Error(`Unsupported permit typehash: ${permitTypehash}`));\n                }\n            }\n        });\n    }\n\n    /**\n     * get typedData for signing\n     * @param {string} permitType\n     * @param {string} account\n     * @param {number} chainId\n     * @param {string} name\n     * @param {string} nonce\n     * @param {string} spenderAddress\n     * @param {string} amount\n     * \n     * @returns\n     * @memberof ERC20\n     */\n    private getTypedData_(permitType: string, account: string, chainId: number, name: string, nonce: string, spenderAddress: string, amount: string) {\n        const typedData = {\n            types: {\n                EIP712Domain: [\n                    { name: 'name', type: 'string' },\n                    { name: 'version', type: 'string' },\n                    { name: 'chainId', type: 'uint256' },\n                    { name: 'verifyingContract', type: 'address' }\n                ],\n                Permit: []\n            },\n            primaryType: \"Permit\",\n            domain: {\n                name,\n                version: \"1\",\n                chainId,\n                verifyingContract: this.contractParam.address,\n            },\n            message: {}\n        };\n        switch (permitType) {\n            case Permit.DAI:\n                typedData.types.Permit = [\n                    { name: \"holder\", type: \"address\" },\n                    { name: \"spender\", type: \"address\" },\n                    { name: \"nonce\", type: \"uint256\" },\n                    { name: \"expiry\", type: \"uint256\" },\n                    { name: \"allowed\", type: \"bool\" },\n                ];\n                typedData.message = {\n                    holder: account,\n                    spender: spenderAddress,\n                    nonce,\n                    expiry: Math.floor((Date.now() + 3600000) / 1000),\n                    allowed: true,\n                };\n            case Permit.EIP_2612:\n            case Permit.UNISWAP:\n\n                if (permitType === Permit.UNISWAP) {\n                    typedData.types.EIP712Domain = [\n                        { name: 'name', type: 'string' },\n                        { name: 'chainId', type: 'uint256' },\n                        { name: 'verifyingContract', type: 'address' }\n                    ];\n                    delete typedData.domain.version;\n                }\n                typedData.types.Permit = [\n                    { name: 'owner', type: 'address' },\n                    { name: 'spender', type: 'address' },\n                    { name: 'value', type: 'uint256' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'deadline', type: 'uint256' }\n                ];\n                typedData.message = {\n                    owner: account,\n                    spender: spenderAddress,\n                    value: amount,\n                    nonce: nonce,\n                    deadline: Math.floor((Date.now() + 3600000) / 1000),\n                };\n        }\n        return typedData;\n    }\n\n    /**\n     * get {r, s, v} from signature\n     * @param {BaseWeb3Client} client\n     * @param {string} signature\n     * \n     * @returns\n     * @memberof ERC20\n     */\n    private getSignatureParameters_(client: BaseWeb3Client, signature: string) {\n        if (!isHexString(signature)) {\n            throw new Error(\n                'Given value \"'.concat(signature, '\" is not a valid hex string.'),\n            );\n        }\n\n        if (signature.slice(0, 2) !== '0x') {\n            signature = '0x'.concat(signature);\n        }\n\n        const r = signature.slice(0, 66);\n        const s = '0x'.concat(signature.slice(66, 130));\n        let v = client.hexToNumber('0x'.concat(signature.slice(130, 132)));\n        if (![27, 28].includes(v as any)) {\n            v += 27;\n        }\n        return {\n            r: r,\n            s: s,\n            v: v,\n        };\n    }\n\n    /**\n     * encode permit function data\n     * @param {BaseContract} contract\n     * @param {string} permitType\n     * @param {any} signatureParams\n     * @param {string} spenderAddress\n     * @param {string} account\n     * @param {string} nonce\n     * @param {string} amount\n     * \n     * @returns\n     * @memberof ERC20\n     */\n    private encodePermitFunctionData_(contract: BaseContract, permitType: string, signatureParams: any, spenderAddress: string, account: string, nonce: string, amount: string) {\n        const { r, s, v } = signatureParams;\n        let method: BaseContractMethod;\n        switch (permitType) {\n            case Permit.DAI:\n                method = contract.method(\n                    \"permit\",\n                    account,\n                    spenderAddress,\n                    nonce,\n                    Math.floor((Date.now() + 3600000) / 1000),\n                    true,\n                    v,\n                    r,\n                    s,\n                );\n                break;\n\n            case Permit.EIP_2612:\n            case Permit.UNISWAP:\n                method = contract.method(\n                    \"permit\",\n                    account,\n                    spenderAddress,\n                    amount,\n                    Math.floor((Date.now() + 3600000) / 1000),\n                    v,\n                    r,\n                    s,\n                );\n                break;\n        }\n        return method.encodeABI();\n    }\n\n    private getPermitSignatureParams_(amount: TYPE_AMOUNT, spenderAddress: string) {\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        const client = this.contractParam.isParent ? this.client.parent : this.client.child;\n        let account: string;\n        let chainId: number;\n        let permitType: string;\n        let contract: BaseContract;\n        let nonce: string;\n\n        return Promise.all([client.name === 'WEB3' ? client.getAccountsUsingRPC_() : client.getAccounts(), this.getContract(), client.getChainId(), this.getPermit()]).then(result => {\n            account = result[0][0];\n            contract = result[1];\n            chainId = result[2];\n            permitType = result[3];\n            const nameMethod = contract.method(\"name\");\n            const nonceMethod = contract.method(\"nonces\", account);\n            return Promise.all([this.processRead<string>(nameMethod), this.processRead<string>(nonceMethod)]);\n        }).then(data => {\n            const name = data[0];\n            nonce = data[1];\n            return this.getTypedData_(permitType, account, chainId, name, nonce, spenderAddress, amountInABI);\n        }).then(typedData => {\n            return client.signTypedData(account, typedData);\n        }).then(signature => {\n            return this.getSignatureParameters_(client, signature);\n        });\n    }\n\n    /**\n     * Get permit data for given spender for given amount\n     * @param {TYPE_AMOUNT} amount\n     * @param {string} spenderAddress\n     * \n     * @returns\n     * @memberof ERC20\n     */\n    private getPermitData_(amount: TYPE_AMOUNT, spenderAddress: string) {\n\n        const amountInABI = this.client.parent.encodeParameters(\n            [Converter.toHex(amount)],\n            ['uint256'],\n        );\n\n        const client = this.contractParam.isParent ? this.client.parent : this.client.child;\n        let account: string;\n        let chainId: number;\n        let permitType: string;\n        let contract: BaseContract;\n        let nonce: string;\n\n        return Promise.all([client.name === 'WEB3' ? client.getAccountsUsingRPC_() : client.getAccounts(), this.getContract(), client.getChainId(), this.getPermit()]).then(result => {\n            account = result[0][0];\n            contract = result[1];\n            chainId = result[2];\n            permitType = result[3];\n            const nameMethod = contract.method(\"name\");\n            const nonceMethod = contract.method(\"nonces\", account);\n            return Promise.all([this.processRead<string>(nameMethod), this.processRead<string>(nonceMethod)]);\n        }).then(data => {\n            const name = data[0];\n            nonce = data[1];\n            return this.getTypedData_(permitType, account, chainId, name, nonce, spenderAddress, amountInABI);\n        }).then(typedData => {\n            return client.signTypedData(account, typedData);\n        }).then(signature => {\n            const signatureParameters = this.getSignatureParameters_(client, signature);\n            return this.encodePermitFunctionData_(\n                contract, permitType, signatureParameters, spenderAddress, account, nonce, amountInABI\n            );\n        });\n    }\n\n    /**\n     * Get permit data for given amount\n     * @param {TYPE_AMOUNT} amount\n     * @param {IApproveTransactionOption} option\n     * \n     * @returns\n     * @memberof ERC20\n     */\n    getPermitData(amount: TYPE_AMOUNT, option: IApproveTransactionOption = {}) {\n        this.checkForNonNative(\"getPermitData\");\n\n        const spenderAddress = option.spenderAddress ? option.spenderAddress : this.getBridgeAddress();\n\n        return this.getPermitData_(amount, spenderAddress);\n    }\n}\n","import { BaseToken, Web3SideChainClient, Converter, promiseResolve } from \"../utils\";\nimport { IZkEvmClientConfig, ITransactionOption } from \"../interfaces\";\nimport { TYPE_AMOUNT } from \"../types\";\n\nexport class ZkEvmBridge extends BaseToken<IZkEvmClientConfig> {\n\n    networkID_: number;\n\n    constructor(client_: Web3SideChainClient<IZkEvmClientConfig>, address: string, isParent: boolean) {\n        super({\n            address: address,\n            name: 'PolygonZkEVMBridge',\n            bridgeType: 'zkevm',\n            isParent: isParent\n        }, client_);\n    }\n\n    method(methodName: string, ...args) {\n        return this.getContract().then(contract => {\n            return contract.method(methodName, ...args);\n        });\n    }\n\n    /**\n     * bridge function to be called on that network from where token is to be transferred to a different network\n     *\n     * @param {string} token Token address\n     * @param {number} destinationNetwork Network at which tokens will be bridged\n     * @param {string} destinationAddress Address to which tokens will be bridged\n     * @param {TYPE_AMOUNT} amountamount amount of tokens\n     * @param {string} [permitData] Permit data to avoid approve call\n     * @param {ITransactionOption} [option] \n     * \n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    bridgeAsset(\n        destinationNetwork: number,\n        destinationAddress: string,\n        amount: TYPE_AMOUNT,\n        token: string,\n        forceUpdateGlobalExitRoot: boolean,\n        permitData = '0x',\n        option?: ITransactionOption\n    ) {\n        return this.method(\n            \"bridgeAsset\",\n            destinationNetwork,\n            destinationAddress,\n            Converter.toHex(amount),\n            token,\n            forceUpdateGlobalExitRoot,\n            permitData\n        ).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n    /**\n     * Claim function to be called on the destination network\n     *\n     * @param {string[]} smtProof Merkle Proof\n     * @param {string[]} smtProofRollup Roll up Merkle Proof\n     * @param {string} globalIndex Global Index\n     * @param {string} mainnetExitRoot Mainnet Exit Root\n     * @param {string} rollupExitRoot RollUP Exit Root\n     * @param {number} originNetwork Network at which token was initially deployed\n     * @param {string} originTokenAddress Address of token at network where token was initially deployed\n     * @param {string} destinationAddress Address to which tokens will be bridged\n     * @param {TYPE_AMOUNT} amount amount of tokens\n     * @param {string} [metadata] Metadata of token\n     * @param {ITransactionOption} [option]\n     * \n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    claimAsset(\n        smtProof: string[],\n        smtProofRollup: string[],\n        globalIndex: string,\n        mainnetExitRoot: string,\n        rollupExitRoot: string,\n        originNetwork: number,\n        originTokenAddress: string,\n        destinationNetwork: number,\n        destinationAddress: string,\n        amount: TYPE_AMOUNT,\n        metadata: string,\n        option: ITransactionOption\n    ) {\n        return this.method(\n            \"claimAsset\",\n            smtProof,\n            smtProofRollup,\n            globalIndex,\n            mainnetExitRoot,\n            rollupExitRoot,\n            originNetwork,\n            originTokenAddress,\n            destinationNetwork,\n            destinationAddress,\n            amount,\n            metadata\n        ).then(method => {\n            return this.processWrite(\n                method,\n                option\n            );\n        });\n    }\n\n    /**\n     * bridge function to be called on that network from where message is to be transferred to a different network\n     * @param {number} destinationNetwork Network at which tokens will be bridged\n     * @param {string} destinationAddress Address to which tokens will be bridged\n     * @param {boolean} forceUpdateGlobalExitRoot Indicates if the new global exit root is updated or not\n     * @param {string} [permitData] Permit data to avoid approve call\n     * @param {ITransactionOption} [option]\n     *\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    bridgeMessage(\n        destinationNetwork: number,\n        destinationAddress: string,\n        forceUpdateGlobalExitRoot: boolean,\n        permitData = '0x',\n        option?: ITransactionOption\n    ) {\n        return this.method(\n            \"bridgeMessage\",\n            destinationNetwork,\n            destinationAddress,\n            forceUpdateGlobalExitRoot,\n            permitData\n        ).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n    /**\n     * Claim Message new function to be called on the destination network\n     * If the receiving address is an EOA, the call will result as a success\n     * Which means that the amount of ether will be transferred correctly, but the message\n     * will not trigger any execution. this will work after Etrog changes\n     * @param {string[]} smtProof Merkle Proof\n     * @param {string[]} smtProofRollup Roll up Merkle Proof\n     * @param {string} globalIndex Global Index\n     * @param {string} mainnetExitRoot Mainnet Exit Root\n     * @param {string} rollupExitRoot RollUP Exit Root\n     * @param {number} originNetwork Network at which token was initially deployed\n     * @param {string} originTokenAddress Address of token at network where token was initially deployed\n     * @param {string} destinationAddress Address to which tokens will be bridged\n     * @param {TYPE_AMOUNT} amount amount of tokens\n     * @param {string} [metadata] Metadata of token\n     * @param {ITransactionOption} [option]\n     *\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    claimMessage(\n        smtProof: string[],\n        smtProofRollup: string[],\n        globalIndex: string,\n        mainnetExitRoot: string,\n        rollupExitRoot: string,\n        originNetwork: number,\n        originTokenAddress: string,\n        destinationNetwork: number,\n        destinationAddress: string,\n        amount: TYPE_AMOUNT,\n        metadata: string,\n        option: ITransactionOption) {\n        return this.method(\n            \"claimMessage\",\n            smtProof,\n            smtProofRollup,\n            globalIndex,\n            mainnetExitRoot,\n            rollupExitRoot,\n            originNetwork,\n            originTokenAddress,\n            destinationNetwork,\n            destinationAddress,\n            amount,\n            metadata\n        ).then(method => {\n            return this.processWrite(\n                method,\n                option\n            );\n        });\n    }\n\n    /**\n     * get the address of token which is created by the bridge contract on the non origin chain\n     *\n     * @param {number} originNetwork Network at which the token was initially deployed\n     * @param {string} originTokenAddress Address at the network where token was initially deployed\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    getMappedTokenInfo(\n        originNetwork: number,\n        originTokenAddress: string\n    ) {\n        return this.method(\n            \"getTokenWrappedAddress\", originNetwork, originTokenAddress\n        ).then(method => {\n            return this.processRead<string>(method);\n        });\n    }\n\n    /**\n     * Tells if claim has already happed or not based on the deposit index\n     *\n     * @param {number} index\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    isClaimed(\n        index: number,\n        sourceBridgeNetwork: number\n    ) {\n        return this.method(\n            \"isClaimed\", index, sourceBridgeNetwork\n        ).then(method => {\n            return this.processRead<string>(method);\n        });\n    }\n\n    /**\n     * Even if the wrapped contract is not deployed on the destination chain, it will tell us the address which is going to be.\n     *\n     * @param {number} originNetwork Network at which the token was initially deployed\n     * @param {string} originTokenAddress Address at the network where token was initially deployed\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    precalculatedMappedTokenInfo(\n        originNetwork: number,\n        originTokenAddress: string\n    ) {\n        return this.method(\n            \"precalculatedWrapperAddress\", originNetwork, originTokenAddress\n        ).then(method => {\n            return this.processRead<string>(method);\n        });\n    }\n\n    /**\n     * get the address and network of the wrapped token where it was emerged initially\n     *\n     * @param {number} wrappedToken\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    getOriginTokenInfo(wrappedToken: string) {\n        return this.method(\n            \"wrappedTokenToTokenInfo\", wrappedToken\n        ).then(method => {\n            return this.processRead<[number, string]>(method);\n        });\n    }\n\n    /**\n     * get the network ID for chain in which the bridge contract is deployed\n     *\n     * @returns\n     * @memberof ZkEvmBridge\n     */\n    networkID() {\n        if (this.networkID_) {\n            return promiseResolve<number>(this.networkID_ as any);\n        }\n        return this.method(\n            \"networkID\"\n        ).then(method => {\n            return this.processRead<number>(method).then((networkId) => {\n                this.networkID_ = networkId;\n                return networkId;\n            });\n        });\n    }\n\n}\n","import { Web3SideChainClient } from \"../utils\";\nimport { service } from \"../services\";\nimport { IBaseClientConfig, _GLOBAL_INDEX_MAINNET_FLAG } from \"..\";\nimport { TYPE_AMOUNT } from '../types';\n\ninterface IBridgeEventInfo {\n    originNetwork: number;\n    originTokenAddress: string;\n    destinationNetwork: number;\n    destinationAddress: string;\n    amount: TYPE_AMOUNT;\n    metadata: string;\n    depositCount: number;\n}\n\ninterface IMerkleProof {\n    merkle_proof: string[];\n    rollup_merkle_proof?: string[];\n    exit_root_num: string;\n    l2_exit_root_num: string;\n    main_exit_root: string;\n    rollup_exit_root: string;\n}\n\ninterface IClaimPayload {\n    smtProof: string[];\n    smtProofRollup: string[];\n    globalIndex: string;\n    mainnetExitRoot: string;\n    rollupExitRoot: string;\n    originNetwork: number;\n    originTokenAddress: string;\n    destinationNetwork: number;\n    destinationAddress: string;\n    amount: TYPE_AMOUNT;\n    metadata: string;\n}\n\nexport class BridgeUtil {\n    private client_: Web3SideChainClient<IBaseClientConfig>;\n    private BRIDGE_TOPIC = \"0x501781209a1f8899323b96b4ef08b168df93e0a90c673d1e4cce39366cb62f9b\";\n\n    constructor(client: Web3SideChainClient<IBaseClientConfig>) {\n        this.client_ = client;\n    }\n\n    private decodedBridgeData_(data: string, isParent: boolean) {\n        const client = isParent ? this.client_.parent : this.client_.child;\n        return this.client_.getABI(\"PolygonZkEVMBridge\", \"zkevm\").then(abi => {\n            const types = abi.filter(event => event.name === \"BridgeEvent\");\n            if (!types.length) {\n                throw new Error(\"Data not decoded\");\n            }\n            const decodedData = client.decodeParameters(data, types[0].inputs);\n            const [leafType, originNetwork, originTokenAddress, destinationNetwork, destinationAddress, amount, metadata, depositCount] = decodedData;\n            return {\n                leafType,\n                originNetwork,\n                originTokenAddress,\n                destinationNetwork,\n                destinationAddress,\n                amount,\n                metadata: metadata || '0x',\n                depositCount,\n            } as IBridgeEventInfo;\n        });\n    }\n\n    private getBridgeLogData_(transactionHash: string, isParent: boolean) {\n        const client = isParent ? this.client_.parent : this.client_.child;\n        return client.getTransactionReceipt(transactionHash)\n            .then(receipt => {\n                const logs = receipt.logs.filter(log => log.topics[0].toLowerCase() === this.BRIDGE_TOPIC);\n                if (!logs.length) {\n                    throw new Error(\"Log not found in receipt\");\n                }\n\n                const data = logs[0].data;\n                return this.decodedBridgeData_(data, isParent);\n            });\n    }\n\n    private getProof_(networkId: number, depositCount: number) {\n        return service.zkEvmNetwork.getMerkleProofForZkEvm(\n            this.client_.config.version,\n            networkId,\n            depositCount,\n        ).then(proof => {\n            return proof as IMerkleProof;\n        }).catch(_ => {\n            throw new Error(\"Error in creating proof\");\n        });\n    }\n\n    getBridgeLogData(transactionHash: string, isParent: boolean) {\n        return this.getBridgeLogData_(transactionHash, isParent);\n    }\n\n    computeGlobalIndex(indexLocal: number, indexRollup: number, sourceNetworkId: number) {\n        if (BigInt(sourceNetworkId) === BigInt(0)) {\n            return BigInt(indexLocal) + _GLOBAL_INDEX_MAINNET_FLAG;\n        } else {\n            return BigInt(indexLocal) + BigInt(indexRollup) * BigInt(2 ** 32);\n        }\n    }\n\n    buildPayloadForClaim(transactionHash: string, isParent: boolean, networkId: number) {\n        return this.getBridgeLogData_(transactionHash, isParent).then(data => {\n            const {\n                originNetwork,\n                originTokenAddress,\n                destinationNetwork,\n                destinationAddress,\n                amount,\n                metadata,\n                depositCount } = data;\n            return this.getProof_(networkId, depositCount).then(proof => {\n                const payload = {} as IClaimPayload;\n                payload.smtProof = proof.merkle_proof;\n                payload.smtProofRollup = proof.rollup_merkle_proof;\n                payload.globalIndex = this.computeGlobalIndex(depositCount, destinationNetwork, networkId).toString();\n                payload.mainnetExitRoot = proof.main_exit_root;\n                payload.rollupExitRoot = proof.rollup_exit_root;\n                payload.originNetwork = originNetwork;\n                payload.originTokenAddress = originTokenAddress;\n                payload.destinationNetwork = destinationNetwork;\n                payload.destinationAddress = destinationAddress;\n                payload.amount = amount;\n                payload.metadata = metadata;\n                return payload;\n            });\n        });\n    }\n}\n","import { BaseToken, Web3SideChainClient } from \"../utils\";\nimport { IZkEvmClientConfig, ITransactionOption } from \"../interfaces\";\n\nexport class ZkEVMWrapper extends BaseToken<IZkEvmClientConfig> {\n\n    constructor(client_: Web3SideChainClient<IZkEvmClientConfig>, address: string) {\n        super({\n            address: address,\n            name: 'ZkEVMWrapper',\n            bridgeType: 'zkevm',\n            isParent: true\n        }, client_);\n    }\n\n    method(methodName: string, ...args) {\n        return this.getContract().then(contract => {\n            return contract.method(methodName, ...args);\n        });\n    }\n\n    depositWithGas(\n        tokenAddress: string,\n        depositAmount: string,\n        userAddress: string,\n        option?: ITransactionOption\n    ) {\n        return this.method(\n            \"deposit\",\n            tokenAddress,\n            depositAmount,\n            userAddress,\n        ).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n    depositPermitWithGas(\n        tokenAddress: string,\n        depositAmount: string,\n        userAddress: string,\n        deadline: string,\n        v: number,\n        r: string,\n        s: string,\n        option?: ITransactionOption\n    ) {\n        return this.method(\n            \"deposit\",\n            tokenAddress,\n            depositAmount,\n            userAddress,\n            deadline,\n            v,\n            r,\n            s\n        ).then(method => {\n            return this.processWrite(method, option);\n        });\n    }\n\n}\n","import { ERC20 } from \"./erc20\";\nimport { ZkEvmBridge } from \"./zkevm_bridge\";\nimport { BridgeUtil } from \"./bridge_util\";\nimport { ZkEvmBridgeClient } from \"../utils\";\nimport { IZkEvmClientConfig, IZkEvmContracts } from \"../interfaces\";\nimport { config as urlConfig } from \"../config\";\nimport { service, NetworkService } from \"../services\";\nimport { ZkEVMWrapper } from \"./zkevm_wrapper\";\n\nexport * from \"./zkevm_bridge\";\nexport * from \"./bridge_util\";\nexport * from \"./zkevm_wrapper\";\n\nexport class ZkEvmClient extends ZkEvmBridgeClient {\n\n    zkEVMWrapper: ZkEVMWrapper;\n\n    init(config: IZkEvmClientConfig) {\n        const client = this.client;\n\n        return client.init(config).then(_ => {\n            const mainZkEvmContracts = client.mainZkEvmContracts;\n            const zkEvmContracts = client.zkEvmContracts;\n            client.config = config = Object.assign(\n                {\n                    parentBridge: mainZkEvmContracts.PolygonZkEVMBridgeProxy,\n                    childBridge: zkEvmContracts.PolygonZkEVMBridge,\n                    zkEVMWrapper: mainZkEvmContracts.ZkEVMWrapper\n                } as IZkEvmClientConfig,\n                config\n            );\n\n            this.rootChainBridge = new ZkEvmBridge(\n                this.client,\n                config.parentBridge,\n                true\n            );\n\n            this.childChainBridge = new ZkEvmBridge(\n                this.client,\n                config.childBridge,\n                false\n            );\n\n            this.zkEVMWrapper = new ZkEVMWrapper(\n                this.client,\n                config.zkEVMWrapper\n            );\n\n            this.bridgeUtil = new BridgeUtil(\n                this.client\n            );\n\n            if (!service.zkEvmNetwork) {\n                if (urlConfig.zkEvmBridgeService[urlConfig.zkEvmBridgeService.length - 1] !== '/') {\n                    urlConfig.zkEvmBridgeService += '/';\n                }\n                urlConfig.zkEvmBridgeService += 'api/zkevm/';\n                service.zkEvmNetwork = new NetworkService(urlConfig.zkEvmBridgeService);\n            }\n\n            return this;\n        });\n    }\n\n    /**\n     * creates instance of ERC20 token\n     *\n     * @param {string} tokenAddress\n     * @param {boolean} isParent\n     *\n     * @param bridgeAdapterAddress Needed if a custom erc20 token is being bridged\n     * @returns\n     * @memberof ERC20\n     */\n    erc20(tokenAddress: string, isParent?: boolean, bridgeAdapterAddress?: string) {\n        return new ERC20(\n            tokenAddress,\n            isParent,\n            bridgeAdapterAddress,\n            this.client,\n            this.getContracts_.bind(this)\n        );\n    }\n\n    private getContracts_() {\n        return {\n            parentBridge: this.rootChainBridge,\n            childBridge: this.childChainBridge,\n            bridgeUtil: this.bridgeUtil,\n            zkEVMWrapper: this.zkEVMWrapper\n        } as IZkEvmContracts;\n    }\n}\n","import { defaultExport } from \"./default\";\n\nexport * from \"./utils\";\nexport * from \"./enums\";\nexport * from \"./pos\";\nexport * from \"./interfaces\";\nexport * from \"./types\";\nexport * from \"./constant\";\nexport * from \"./abstracts\";\nexport * from \"./services\";\nexport * from \"./zkevm\";\n\nexport default defaultExport;\n"],"names":["root","factory","exports","module","define","amd","self","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","red","_init","Buffer","wordSize","window","e","parseHex4Bits","string","index","c","parseHexByte","lowerBound","r","parseBase","str","mul","b","Math","min","move","dest","src","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","smallMulTo","out","a","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","base64","ieee754","customInspectSymbol","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","arg","encodingOrOffset","TypeError","from","value","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","super","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","formatArgs","args","useColors","namespace","humanize","color","splice","lastC","match","save","namespaces","storage","setItem","removeItem","load","getItem","process","env","DEBUG","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","localStorage","localstorage","destroy","warned","warn","colors","log","debug","formatters","v","JSON","stringify","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","Date","ms","coerce","unshift","format","formatter","selectColor","extend","init","delimiter","newDebug","toNamespace","regexp","substring","default","disable","names","map","skips","enable","RegExp","test","keys","forEach","key","hash","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","EventEmitter","once","emitter","Promise","resolve","reject","errorListener","err","removeListener","resolver","eventTargetAgnosticAddListener","handler","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","create","newListener","emit","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","flags","addEventListener","wrapListener","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","listeners","addListener","prependListener","prependOnceListener","originalListener","pop","spliceOne","removeAllListeners","rawListeners","eventNames","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","LN2","plural","msAbs","isPlural","options","exec","parseFloat","parse","long","fmtShort","globalObject","getGlobal","fetch","Headers","Request","Response","codes","createErrorType","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","__proto__","oneOf","expected","thing","determiner","search","this_len","endsWith","objectKeys","Duplex","Readable","Writable","method","allowHalfOpen","readable","onend","_writableState","ended","nextTick","onEndNT","highWaterMark","getBuffer","_readableState","destroyed","PassThrough","Transform","_transform","chunk","cb","ReadableState","EElistenerCount","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","stream","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_read","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","enc","head","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","resume","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","finished","xs","nOrig","doRead","pipe","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","dests","ev","wrap","_this","asyncIterator","_fromList","iterable","opts","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","flush","_flush","prefinish","done","_write","err2","CorkedRequest","entry","finish","corkReq","callback","pendingcb","onCorkedFinish","corkedRequestsFree","WritableState","realHasInstance","internalUtil","deprecate","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","hasInstance","object","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","prim","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","then","wrapForNext","_this2","_Object$create","iterator","enumerableOnly","symbols","filter","getOwnPropertyDescriptor","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","tail","protoProps","hasStrings","_getString","_getBuffer","nb","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","noop","eos","called","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","req","setHeader","abort","isRequest","ERR_MISSING_ARGS","to","streams","popCallback","destroys","closed","destroyer","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","safeSlice","decodeLength","uint8a","hex","cachedHexes","bytesToHex","encodeLength","hexLength","numberToHex","hexToBytes","_decode","llength","innerRemainder","decoded","remainder","totalLength","_v","padStart","hexByte","byte","concatBytes","arrays","result","pad","integer","isHexPrefixed","toBytes","utf","TextEncoder","encode","RLP","inputBuf","decode","copyProps","SafeBuffer","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","utf8CheckExtraBytes","utf8CheckIncomplete","config","trace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","definition","globalThis","prop","hasOwnProperty","toStringTag","nmd","paths","children","Log_Event_Signature","ERROR_TYPE","logger","getRootHash","startBlock","endBlock","sendRPCRequest","jsonrpc","params","getTime","payload","getAccountsUsingRPC_","address","throwNotImplemented","BaseBigNumber","toHex","amount","dataType","toBN","use","plugin","pluginInstance","setup","defaultExport","eventBusPromise","executor","eventBus","EventBus","_ctx","all","info","getMsg_","throw","errMsg","AllowedOnChild","AllowedOnRoot","AllowedOnMainnet","ProofAPINotSet","BurnTxNotCheckPointed","EIP1559NotSupported","NullSpenderAddress","Unknown","enableLog","isEnabled","ErrorHelper","merge","assign","runPromises","promises","converter","maps","mapPromise","values","option","valuesLength","concurrency","limitPromiseRun","promiseResult","promiseResolve","isSafeInteger","lengths","outputLen","blockLen","exists","checkFinished","bool","crypto","createView","DataView","rotr","Uint32Array","byteSwap32","hexes","Hash","_cloneInto","hashCons","hashC","update","digest","bytesLength","getRandomValues","Maj","HashMD","padOffset","view","take","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","SHA256_K","SHA256_IV","SHA256_W","SHA256","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","HMAC","iHash","oHash","hmac","_1n","_2n","abytes","item","hexToNumber","_0","_9","_A","_F","_a","_f","char","hl","al","ai","n1","n2","reverse","numberToBytesLE","title","expectedLength","sum","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","gen","sl","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","getFieldBytesLength","fieldOrder","getMinHashLength","validateBasic","curve","ORDER","MASK","BYTES","BITS","Gx","Gy","freeze","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","rhl","rl","weierstrass","curveDef","CURVE","randomBytes","bits2int","bits2int_modN","lowS","validateOpts","compressedLen","uncompressedLen","modN","CURVE_ORDER","invN","ProjectivePoint","Point","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","fromBytes","endo","eql","ZERO","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","x3","assertGE","pointPrecomputes","Map","assertPrjPoint","other","px","py","pz","fromAffine","is0","ONE","normalizeZ","points","toInv","invertBatch","fromHex","P","assertValidity","fromPrivateKey","privateKey","BASE","multiply","_setWindowSize","windowSize","_WINDOW_SIZE","delete","hasEvenY","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","double","X3","Y3","Z3","t0","t1","t2","t3","t4","t5","subtract","wNAF","wnaf","wNAFCached","comp","multiplyUnsafe","I","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","Q","iz","ax","ay","zz","cofactor","toRawBytes","isCompressed","_bits","condition","W","windows","elm","precomputeWindow","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","precomputesMap","weierstrassPoints","cat","y2","sqrtError","suffix","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","ORDER_MASK","int2octets","defaultSigOpts","prehash","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","verify","signature","publicKey","sg","_sig","derError","is","getHash","msgs","secp256k1P","secp256k1N","divNearest","bitLen","redef","sqrtP","p1div4","c1","nv","legendreC","S","Z","Q1div2","ge","tonelliShanks","FpSqrt","lhs","rhs","FpPow","sqrN","addN","subN","mulN","lst","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","Field","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","defHash","createCurve","POW_2_128","c2","bytesToUtf8","TextDecoder","wrapHash","webCrypto","nodeRequire","require","padToEven","hexToBytesMapFirstKey","hexToBytesMapSecondKey","vSecondKey","vFirstKey","toUpperCase","_unprefixedHexToBytes","byteLen","inp","hexByByte","BIGINT_CACHE","intToHex","intToBytes","bigIntToBytes","setLength","stripZeros","validateNoLeadingZeroes","MAX_UINT64","MAX_INTEGER","KECCAK256_RLP_ARRAY","RLP_EMPTY_STRING","BIGINT_7","BIGINT_8","outputLength","encoded","U32_MASK64","fromBig","le","Ah","Al","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","writeInto","bufferOut","xofInto","xof","keccak_224","keccak_256","keccak_384","keccak_512","keccak224","keccak384","keccak512","pubToAddress","pubKey","sanitize","publicToAddress","Address","zero","hexAddress","isValidAddress","fromPublicKey","privateToPublic","privateToAddress","generate","nonce","generateAddress","generate2","salt","initCode","generateAddress2","isPrecompileOrSystemAddress","rangeMin","rangeMax","KeyEncoding","ValueEncoding","TypeOutput","outputType","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","Withdrawal","validatorIndex","fromWithdrawalData","withdrawalData","indexData","validatorIndexData","addressData","amountData","fromValuesArray","withdrawalArray","toBytesArray","withdrawal","raw","toValue","ecsign","chainId","ecrecover","calculateSigRecovery","isValidSigRecovery","USEFUL_BYTES_PER_BLOB","get_blob","blob","BYTES_PER_FIELD_ELEMENT","computeVersionedHash","commitment","blobCommitmentVersion","computedVersionedHash","Lock","permits","promiseResolverQueue","acquire","release","nextResolver","MapDB","database","_database","dbKey","put","del","batch","opStack","op","shallowCopy","open","fetchFromProvider","async","url","headers","body","ok","status","catch","json","getProvider","provider","_getConnection","assertIsBuffer","keccak256","sha3","leaves","layers","createHashes","nodes","treeLevel","getLeaves","getLayers","getRoot","getProof","leaf","proof","siblingIndex","node","isHexString","stripHexPrefix","BufferUtil","intToBuffer","bufferToHex","perf","performance","now","Set","PROCESS","emitWarning","AC","AbortController","AS","AbortSignal","onabort","_onabort","reason","aborted","warnACPolyfill","signal","printACPolyfillWarning","LRU_CACHE_IGNORE_AC_WARNING","isPosInt","getUintArray","Uint16Array","ZeroArray","Stack","heap","static","HeapCls","LRUCache","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","noDisposeOnSet","noUpdateTTL","maxEntrySize","sizeCalculation","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchAbort","allowStaleOnFetchRejection","ignoreFetchAbort","unsafeExposeInternals","starts","ttls","sizes","keyMap","keyList","valList","free","isBackgroundFetch","backgroundFetch","moveToTail","indexes","rindexes","isStale","maxSize","calculatedSize","fetchMethod","dispose","disposeAfter","UintArray","has","shouldWarn","getRemainingTTL","setTimeout","unref","cachedNow","getNow","age","remainingTTL","entrySize","totalCalculatedSize","_i","_s","_st","_k","rentries","rkeys","rvalues","find","getOptions","__staleWhileFetching","thisp","rforEach","purgeStale","deleted","remain","dump","setOptions","maxEntrySizeExceeded","oldVal","__abortController","oldValue","dt","task","hasOptions","peek","peekOptions","ac","fetchOpts","updateCache","ignoreAbort","fetchAborted","fetchError","fetchAbortIgnored","fetchResolved","fetchFail","bf","fetchUpdated","allowStaleAborted","noDelete","returnedStale","__returned","fetchDispatched","rej","fmp","fetchRejected","fetchOptions","forceRefresh","stale","staleVal","fetching","pi","ni","CheckpointDB","_stats","cache","reads","hits","writes","db","cacheSize","valueEncoding","checkpoints","_cache","setCheckpoints","keyValueMap","hasCheckpoints","checkpoint","commit","currentKeyValueMap","batchOp","revert","keyHex","keyEncoding","returnValue","valuePut","Bytes","convertedOps","convertedOp","stats","BranchNode","_branches","_value","fromArray","setBranch","serialize","getBranch","getChildren","terminator","bytesToNibbles","bkey","nibbles","nibblestoBytes","nibblesCompare","cmpLength","matchingNibbleLength","nib1","nib2","Node","_nibbles","_terminator","decodeKey","keyLength","encodedKey","ExtensionNode","encodeKey","LeafNode","decodeRawNode","isRawNode","ROOT_DB_KEY","_walkTrie","nodeHash","currentKey","onFound","_trieNode","visited","EMPTY_TRIE_ROOT","lookupNode","nibble","childNode","nextKey","_childNode","TrieReadStream","trie","_started","walkTrie","nodeRef","walkController","fullKey","allChildren","_findValueNodes","PrioritizedTaskExecutor","maxPoolSize","currentPoolSize","queue","executeOrQueue","priority","sort","WalkController","onNode","taskExecutor","newWalk","strategy","startWalk","processNode","child","keyExtension","childRef","childKey","pushNodeToQueue","taskFinishedCallback","onlyBranchIndex","childIndex","prio","_opts","useKeyHashing","useKeyHashingFunction","keyPrefix","useRootPersistence","useNodePruning","_lock","_debug","walkTrieIterable","common","customCrypto","_hashLen","_root","createFromProof","trieOpts","shouldVerifyRoot","updateFromProof","persistRoot","verifyProof","proofTrie","verifyRangeProof","rootHash","firstKey","lastKey","fromProof","appliedKey","createProof","findPath","stackElem","nodeValue","_db","rootKey","keccakFunction","checkRoot","throwIfMissing","skipKeyTransform","_createInitialNode","ops","_updateNode","_deleteNode","partialPath","targetKey","keyLen","progress","keyProgress","branchIndex","branchNode","_progress","startingNode","walkAllNodes","walkAllValueNodes","decodedNode","decodeNode","keyRemainder","toSave","lastNode","matchLeaf","newLeaf","matchingLength","newBranchNode","newKey","newExtNode","branchKey","formattedNode","_formatNode","newLeafNode","saveStack","parentNode","lastNodeKey","branchNodes","branchNodeKey","extensionNode","parentKey","processBranchNode","lastRoot","topLevel","remove","verifyPrunedIntegrity","roots","dbkey","controller","createReadStream","includeCheckpoints","_findDbNodes","flushCheckpoints","unset","parent","removeLeft","_child","hasRightElement","empty","shortForkLeft","shortForkRight","leftNode","rightNode","removeSelfFromParentAndSaveStack","endPos","_stack","unsetInternal","mainnet","networkId","defaultHardfork","consensus","algorithm","ethash","comment","genesis","gasLimit","difficulty","extraData","hardforks","block","forkHash","ttd","timestamp","bootstrapNodes","ip","port","location","dnsNetworks","goerli","clique","period","epoch","sepolia","holesky","baseFeePerGas","kaustinen","TABLE","Int32Array","Chain","Hardfork","ConsensusType","ConsensusAlgorithm","CustomChain","Status","Mainnet","Goerli","Sepolia","Holesky","Kaustinen","EIPs","Review","minimumHardfork","Chainstart","requiredEIPs","gasPrices","tstore","tload","Final","Berlin","gasConfig","baseFeeMaxChangeDenominator","elasticityMultiplier","initialBaseFee","Draft","Istanbul","beginsub","returnsub","jumpsub","Byzantium","modexpGquaddivisor","coldsload","coldaccountaccess","warmstorageread","sstoreCleanGasEIP2200","sstoreNoopGasEIP2200","sstoreDirtyGasEIP2200","sstoreInitRefundEIP2200","sstoreCleanRefundEIP2200","callcode","delegatecall","staticcall","balance","extcodesize","extcodecopy","extcodehash","sload","sstore","accessListStorageKeyCost","accessListAddressCost","vm","historyStorageAddress","historyServeWindow","London","auth","authcall","authcallValueTransfer","basefee","maxRefundQuotient","selfdestructRefund","sstoreClearRefundEIP2200","MuirGlacier","difficultyBombDelay","push0","SpuriousDragon","initCodeWordCost","maxInitCodeSize","prevrandao","Cancun","historicalRootsLength","Paris","blobGasPerBlob","targetBlobGasPerBlock","maxblobGasPerBlock","blobGasPriceUpdateFraction","simpleGasPerBlob","minBlobGasPrice","kzgPointEvaluationGasPrecompilePrice","blobhash","sharding","blobCommitmentVersionKzg","fieldElementsPerBlob","GrayGlacier","Shanghai","mcopy","blobbasefee","chainstart","minGasLimit","gasLimitBoundDivisor","exp","expByte","keccak256Word","sstoreSet","sstoreReset","sstoreRefund","jumpdest","logData","logTopic","callStipend","callValueTransfer","callNewAccount","memory","quadCoeffDiv","createData","tx","txCreation","txDataZero","txDataNonZero","ecRecover","sha256","sha256Word","ripemd160","ripemd160Word","identity","identityWord","stop","sdiv","smod","addmod","mulmod","signextend","slt","sgt","iszero","not","origin","caller","callvalue","calldataload","calldatasize","calldatacopy","codesize","codecopy","gasprice","blockhash","coinbase","gaslimit","mload","mstore","mstore8","jump","jumpi","pc","msize","gas","dup","return","invalid","selfdestruct","stackLimit","callCreateDepth","maxExtraDataSize","minimumDifficulty","difficultyBoundDivisor","durationLimit","epochDuration","timebombPeriod","minerReward","homestead","dao","tangerineWhistle","spuriousDragon","maxCodeSize","byzantium","ecAdd","ecMul","ecPairing","ecPairingWord","returndatasize","returndatacopy","constantinople","netSstoreNoopGas","netSstoreInitGas","netSstoreCleanGas","netSstoreDirtyGas","netSstoreClearRefund","netSstoreResetRefund","netSstoreResetClearRefund","shr","sar","create2","petersburg","istanbul","blake2Round","sstoreSentryGasEIP2200","sstoreInitGasEIP2200","chainid","selfbalance","muirGlacier","berlin","eips","london","arrowGlacier","grayGlacier","paris","casper","mergeForkIdTransition","shanghai","cancun","prague","parseGethParams","mergeForkIdPostMerge","mixHash","excessBlobGas","genesisTimestamp","formatNonce","eip155Block","eip158Block","hardfork","blockperiodseconds","epochlength","forkMap","Homestead","Dao","TangerineWhistle","Constantinople","Petersburg","MergeForkIdTransition","postMerge","isTimestamp","Prague","forkMapRev","elem","configHardforkNames","nameBlock","fork","hf","terminalTotalDifficulty","mergeConfig","postMergeIndex","findIndex","latestHardfork","Common","_eips","_paramsCache","_activatedEIPsCache","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","HARDFORK_CHANGES","customHardforks","_hardfork","setHardfork","setEIPs","_buildParamsCache","_buildActivatedEIPsCache","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","PolygonMumbai","ArbitrumOne","xDaiChain","OptimisticKovan","OptimisticEthereum","fromGethGenesis","genesisJson","genesisHash","genesisParams","required","missingField","parseGethGenesis","setForkHashes","isSupportedChainId","initializedChains","getInitializedChains","Boolean","param","hfChanges","getHardforkBy","blockNumber","td","hfs","mergeIndex","hfIndex","hfStartIndex","setHardforkBy","_getHardfork","eip","minHF","gteHardfork","isActivatedEIP","_mergeWithParamsCache","hfEIPs","topic","paramByHardfork","valueEIP","paramByEIP","eipParams","paramByBlock","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","posHf1","posHf2","hardforkTimestamp","eipBlock","eipTimestamp","hardforkTTD","nextHardforkBlockOrTimestamp","currHfTimeOrBlock","nextHf","hfTimeOrBlock","nextHfBlock","_calcForkHash","hfBytes","prevBlockOrTime","blockOrTime","hfBlockBytes","inputBytes","previous","crc","hardforkForForkHash","resArray","chainName","consensusType","consensusAlgorithm","consensusConfig","chains","Capability","TransactionType","AccessLists","getAccessListData","accessList","AccessListJSON","bufferAccessList","firstItem","isAccessListBytes","storageKeys","jsonItem","newAccessList","addressBytes","storageItems","verifyAccessList","accessListItem","storageSlots","storageSlot","getAccessListJSON","accessListJSON","JSONItem","slot","getDataFeeEIP2930","slots","txTypeBytes","txType","BaseTransaction","txData","dataFee","senderPubKey","activeCapabilities","DEFAULT_CHAIN","_type","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","createContract","allowUnlimitedInitCodeSize","_getCommon","checkMaxInitCodeSize","supports","capability","getValidationErrors","isSigned","verifySignature","getBaseFee","txFee","fee","getDataFee","toCreationAddress","txCreationFee","cost","dataLength","getSenderPublicKey","getSenderAddress","_errorMsg","hackApplied","Legacy","EIP155ReplayProtection","getHashedMessageToSign","ecSignFunction","addSignature","chainIdBigInt","cannotEqual","_validateNotArray","txDataKeys","_getSharedErrorPostfix","postfix","getUpfrontCost","baseFee","maxPriorityFeePerGas","maxBase","maxFeePerGas","gasPrice","getEffectivePriorityFee","remainingFee","errorMsg","errorStr","extraCost","isFrozen","validateHighS","getMessageToVerifySignature","sender","getMessageToSign","validateYParity","FeeMarketEIP1559Transaction","FeeMarketEIP1559","accessListData","fromTxData","fromSerializedTx","serialized","convertV","AccessListEIP2930Transaction","AccessListEIP2930","BlobEIP4844","maxFeePerBlobGas","blobVersionedHashes","vh","blobs","kzgCommitments","kzgProofs","kzg","blobsData","blobs_len","pdata","get_padded","getBlobs","cur","commitments","blobToKzgCommitment","blobsToCommitments","hashes","commitmentsToVersionedHashes","computeBlobKzgProof","blobsToProofs","minimalFromNetworkWrapper","fromSerializedBlobTxNetworkWrapper","networkTxValues","txValues","decodedTx","version","verifyBlobKzgProofBatch","validateBlobTransactionNetworkWrapper","serializeNetworkWrapper","numBlobs","meetsEIP155","chainIdDoubled","LegacyTransaction","_validateTxV","numSub","TransactionFactory","isLegacyTxData","isAccessListEIP2930TxData","isFeeMarketEIP1559TxData","isBlobEIP4844TxData","fromSerializedData","fromBlockBodyData","fromJsonRpcProvider","txHash","prov","fromRPC","_txParams","txParams","normalizeTxParams","DEFAULT_GAS_LIMIT","BlockHeader","headerData","skipValidateConsensusFormat","skipConsensusFormatValidation","defaults","parentHash","uncleHash","stateRoot","transactionsTrie","receiptTrie","logsBloom","gasUsed","hardforkDefaults","withdrawalsRoot","blobGasUsed","parentBeaconBlockRoot","_genericFormatValidation","_validateDAOExtraData","calcDifficultyFromHeader","Ethash","ethashCanonicalDifficulty","cliqueSigner","minExtraDataLength","CLIQUE_EXTRA_VANITY","remainingLength","cliqueSealBlock","_consensusFormatValidation","prevRandao","fromHeaderData","fromRLPSerializedHeader","serializedHeaderData","valuesArrayToHeaderData","header","eip1559ActivationBlock","londonHfBlock","Clique","minLength","cliqueIsEpochTransition","signerLength","ProofOfStake","validateGasLimit","parentBlockHeader","parentGasLimit","londonHardforkBlock","maxGasLimit","calcNextBaseFee","nextBaseFee","elasticity","parentGasTarget","gasUsedDelta","calculatedDelta","getBlobGasPrice","_getBlobGasPrice","factor","numerator","denominator","numerator_accum","fakeExponential","calcDataFee","calcNextExcessBlobGas","targetGasConsumed","calcNextBlobGasPrice","rawItems","isGenesis","_requireClique","ProofOfWork","blockTs","parentTs","parentDif","dif","uncleAddend","cutoff","cliqueSigHash","cliqueExtraVanity","cliqueExtraSeal","signatureB","extraDataWithoutSeal","cliqueEpochTransitionSigners","signerBytes","signerList","cliqueVerifySignature","signerAddress","signer","extraSeal","withdrawalAttr","jsonDict","DAOActivationBlock","DAO_ExtraData","DAO_ForceExtraDataRange","blockHeaderFromRpc","blockParams","sha3Uncles","miner","transactionsRoot","receiptsRoot","blockFromRpc","uncles","transactions","uncleHeaders","uh","Block","fromBlockData","withdrawals","executionWitness","stateDiff","verkleProof","commitmentsByPath","depthExtensionPresent","ipaProof","cl","cr","finalEvaluation","otherStems","validateUncles","ProofOfAuthority","genWithdrawalsTrieRoot","wts","emptyTrie","wt","genTransactionsTrieRoot","txs","blockData","txsData","uhsData","withdrawalsData","executionWitnessData","uncleOpts","uhData","fromRLPSerializedBlock","withdrawalBytes","executionWitnessBytes","uncleHeaderData","fromExecutionPayload","feeRecipient","serializedTx","wData","blockHash","validationError","fromBeaconPayloadJson","executionPayload","parent_hash","fee_recipient","state_root","receipts_root","logs_bloom","prev_randao","block_number","gas_limit","gas_used","extra_data","base_fee_per_gas","block_hash","wd","validator_index","blob_gas_used","excess_blob_gas","parent_beacon_block_root","execution_witness","executionPayloadFromBeaconPayload","bytesArray","EIP2718TypedTransaction","withdrawalsRaw","genTxTrie","transactionsTrieIsValid","txTrieRoot","getTransactionsValidationErrors","blobGasLimit","errs","EIP1559FeeMarket","transactionsAreValid","validateData","onlyHeader","verifyTxs","txErrors","uncleHashIsValid","withdrawalsTrieIsValid","validateBlobTransactions","parentHeader","expectedExcessBlobGas","blobGasPrice","uncleHashes","parentBlock","withdrawalsAttr","blockTag","providerUrl","Permit","getFastMerkleProof","web3","merkleTreeDepth","log2","reversedProof","targetIndex","leftBound","rightBound","nLeaves","pivotLeaf","newLeftBound","queryRootHash","subTreeMerkleRoot","newRightBound","expectedHeight","recursiveZeroHash","subTreeHeight","heightDifference","remainingNodesHash","MerkleTree","buildBlockProof","maticWeb3","ProofUtil","client","subHash","encodeParameters","getReceiptProof","receipt","requestConcurrency","receiptsVal","receiptPromise","stateSyncTxHash","getStateSyncTxHash","receiptsTrie","transactionHash","getTransactionReceipt","receipts","siblingReceipt","path","transactionIndex","rawReceipt","getReceiptBytes","parentNodes","getRawHeader","isTypedReceipt","hexType","Converter","encodedData","cumulativeGasUsed","logs","topics","_block","BUILD_ENV","baseUrl","query","encodeURIComponent","post","chainIdToConfigPath","Logger","defaultConfig","Web3Client","UnstoppableDomains","resolution","network","abiManager","ABIManager","getABI","getConfig","isEIP1559Supported","promiseAny","promisesArray","promiseErrors","counter","MAX_AMOUNT","ADDRESS_ZERO","DAI_PERMIT_TYPEHASH","EIP_2612_PERMIT_TYPEHASH","EIP_2612_DOMAIN_TYPEHASH","UNISWAP_DOMAIN_TYPEHASH","_GLOBAL_INDEX_MAINNET_FLAG","contractParam","getContract","contract_","bridgeType","abi","getContract_","isParent","tokenAddress","getChainId","chainId_","getClient","processWrite","validateTxOption_","createTransactionConfig","txConfig","isWrite","returnTransaction","encodeABI","sendTransaction","readTransaction","TransactionOptionNotObject","processRead","parentDefaultConfig","childDefaultConfig","clientChainId","isMaxFeeProvided","estimateGas","trunc","getTransactionCount","transferERC20","contract","transferERC721","tokenId","checkForNonNative","methodName","AllowedOnNonNativeTokens","checkForRoot","checkForChild","checkAdapterPresent","bridgeAdapterAddress","BridgeAdapterNotFound","transferERC1155","httpRequest","HttpRequest","contractName","getAddress","abiStoreUrl","zkEvmBridgeService","createUrlForPos","createUrlForZkEvm","getBlockIncluded","headerBlockNumber","decimalHeaderBlockNumber","getExitProof","burnTxHash","eventSignature","getMerkleProofForZkEvm","networkID","depositCount","getBridgeTransactionDetails","deposit","service","ABIService","setProofApi","NetworkService","setZkEvmProofApi","zkEvmNetwork","Web3SideChainClient","isCheckPointed","exitUtil","isDeposited","depositTxHash","token","BaseToken","lastStateId","targetLog","rootStateId","decodeParameters","rootStateIdBN","networkName","targetBridgeABICache","abiForContract","setABI","abiStore","isDepositClaimable","rootChainBridge","bridgeUtil","getBridgeLogData","details","ready_for_claim","isWithdrawExitable","childChainBridge","isClaimed","isExited","BaseWeb3Client","EmptyBigNumber","getPOSContracts","rootChainManager","gasSwapper","getPredicateAddress","predicateAddress","tokenType","typeToPredicateMethod","isWithdrawn","getExitHash","exitHash","isExitProcessed","isWithdrawnOnIndex","withdrawExitPOS","isFast","buildPayloadForExit","exit","getContracts","getBalance","userAddress","getAllowance","spenderAddress","predicatePromise","approve","approveMax","amountInABI","depositWithGas","swapEthAmount","swapCallData","depositEther_","depositEtherWithGas_","withdrawStart","withdrawExit_","burnTransactionHash","burnEventSignature","Erc20Transfer","withdrawExit","withdrawExitFaster","isWithdrawExited","transfer","POSToken","client_","depositData","exitPayload","rootChain","maticClient_","getLogIndex_","logEventSig","logIndex","getAllLogIndices_","logIndices","getChainBlockInfo","getLastChildBlock","getTransaction","lastChildBlock","txBlockNumber","isCheckPointed_","getRootBlockInfo","rootBlockNumber","findRootBlockFromChild","rootBlockInfo","getRootBlockInfoFromAPI","headerBlock","getBlockProof","getBlockProofFromAPI","blockProof","getExitProofFromAPI","burnHash","exitProof","blockInfo","getBlockWithTransaction","rootBlockInfoResult","blockProofResult","receiptProof","encodePayload_","buildMultiplePayloadsForExit","payloads","headerNumber","receiptParentNodes","blockResult","nibbleArr","etheriumSha3","rootChainDefaultBlock","childBlockNumber","bigOne","bigtwo","checkPointInterval","currentHeaderBlock","ans","headerStart","headerEnd","validateMany_","tokenIds","getTokensCount","getTokenIdAtIndexForUser","getAllTokens","isApproved","isApprovedAll","approveAll","depositMany","tokensInHex","withdrawStartWithMetaData","withdrawStartMany","Erc721Transfer","withdrawExitOnIndex","isWithdrawExitedMany","Erc721BatchTransfer","isWithdrawExitedOnIndex","erc1155","getAddress_","addresses","addressConfig","approveAll_","predicateAddressPromise","approveAllForMintable","amounts","emptyHex","amountsInHex","Erc1155Transfer","withdrawExitMany","Erc1155BatchTransfer","withdrawExitFasterMany","depositAmount","mainPOSContracts","RootChainManagerProxy","mainPlasmaContracts","RootChainProxy","GasSwapper","RootChainManager","RootChain","ExitUtil","erc20","ERC20","getContracts_","erc721","ERC721","ERC1155","depositEther","depositEtherWithGas","BridgeClient","POSClient","getZkEvmContracts","parentBridge","zkEVMWrapper","childBridge","bridgeToken","recipient","forceUpdateGlobalExitRoot","bridgeAdapter","ZkEVMBridgeAdapter","getBridgeAddress","contractAddress","isEtherToken","isApprovalNeeded","getOriginTokenInfo","tokenInfo","permitData","bridgeAsset","ethGasAmount","depositPermitWithGas","getPermitSignatureParams_","signatureParams","depositWithPermit","getPermitData","depositCustomERC20","customERC20DepositClaim","buildPayloadForClaim","claimMessage","smtProof","smtProofRollup","globalIndex","mainnetExitRoot","rollupExitRoot","originNetwork","originTokenAddress","destinationNetwork","destinationAddress","metadata","depositClaim","claimAsset","withdraw","withdrawCustomERC20","customERC20WithdrawExit","withdrawWithPermit","getPermit","contractInstance","permitTypehash","DAI","DOMAIN_TYPEHASH","EIP712DOMAIN_HASH","domainTypehash","EIP_2612","UNISWAP","getTypedData_","permitType","account","typedData","types","EIP712Domain","primaryType","domain","verifyingContract","spender","expiry","allowed","owner","deadline","getSignatureParameters_","encodePermitFunctionData_","getAccounts","nameMethod","nonceMethod","signTypedData","getPermitData_","signatureParameters","ZkEvmToken","bridgeMessage","getMappedTokenInfo","sourceBridgeNetwork","precalculatedMappedTokenInfo","wrappedToken","networkID_","BRIDGE_TOPIC","decodedBridgeData_","decodedData","inputs","leafType","getBridgeLogData_","getProof_","computeGlobalIndex","indexLocal","indexRollup","sourceNetworkId","merkle_proof","rollup_merkle_proof","main_exit_root","rollup_exit_root","mainZkEvmContracts","zkEvmContracts","PolygonZkEVMBridgeProxy","PolygonZkEVMBridge","ZkEVMWrapper","ZkEvmBridge","BridgeUtil","ZkEvmBridgeClient"],"sourceRoot":""}